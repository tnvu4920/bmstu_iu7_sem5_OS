Перевод компа в защищ режим и обратно в реальный режим
32х разрядные машины 
------------------------------------------------
х86(32)
3 режима работы
1) Реальный			   )
2) Защищённом			   )Legacy
3) Спец защищ режим - V86          )

В 64х

3 режима работы
1) Реальный			   
2) Защищённом			   
3) Спец защищ режим - V86          
4) System
5) Long

Реальный режим - 16(рязряд режим с 20 адресной памятью шины) режим 
2^20 = 1 МБ 1024 кб - доступный объем оперативной памяти
2^16 64кб - ffff максимально возможный размер сегмента
В этих процах İntel 80/86(также 8086) выполняется адресация смещение сегмента(специфическая 
и выполняется не стндартно ********** затем этот адрес сдвиг на 4е адреса - таким образом 
получается линейный физический адрес)

На них(интел процы устанавливали DOS (его самая последняя версия 6.82))

// самим чекнуть в инете регистры 64х регистра она так советует

Защищ режим - это 32х режим, многопроцессный(многозадачный multi task - когда в памяти находится большое кол-во программ),с поддержкой виртуальной памяти
здесь проц время квантуется

V86 Виртуальный режим - как задачи запускаются операционной сис-й реального режима, раньше в винде была VMM, они это декларировали. Щас хз

Буем рассматривать инфу с регистров защищенного режима - там она и лежит(инфа) (Книга двухтомник - Гажеев) (книга - источник знаний by fucking teacher)
____2й вариант с 32х разрядными операндами - книга Рудаков Финагенов - ящык ассемблера(Раздел защищ режим)
Зубков(какая-то книга с разделом защищ режима)
     ___Содержит 34 программно адресуемых регистра, с точки зрения прогера 24е 32х разрядных и 10 -16х  регистра(я хз вообще)
Первая группа РОНы(регистры общего назначения) они 32х битные.

EAX
EBX
ECX
EDX
(тут какая-то таблица из ассемблера)

(Ещё какая-то.....)


---------------------------------------------------
Сегметные регистры - тоже таблица 
CS	)
DS	)реальный
SS	)режим
ES	)
FS
GS

Регистры системных адресов:
32х разрядныe регистр
GDTR - Global descriptor table register
Начальныйй адрес таблицы глобальных дескрипторов *Base address*

16х регситры 
İDTR İnterrupt descriptor table register
LDTT Local descriptor table register не может содержать адрес ****
TR task register 



------------------------------
Управляющие регистры
Их 4е 32х разрядных
CR0 - регситр слово стостояние опред ***** 0й Protection Enabled 32й Pageing_ Enable
CR1 - не используется
CR2 - ошибки, обращения к страницам(страничная неудача)
CR3 - начального адреса каталога адреса страниц

Группа тестовых регистров
Отладочные регистры

И отдельно всегда рассматривается счётчик команд - EİP İnstruction pointer
И регистор флагов EFhAGS. Нас интересует 17й разряд VM 
*Если установлен PE то в защищ режиме, если сброшен то в реальном(Далее ещё что-то не успеваю, фигня про асм)
*Если PE and VM то комп работает в спец защищ режиме V86
----------------------------------------------

Таблица глобальных десткрипторов:
Начинается с 0го дескриптора, он обязательный, он пустой
Размер дескриптора 8 байт
Указывает на эту таблицу какой-то GFTR 
Доступ обеспечивается селектором, который является одним из ******* рестистров
	Младший 3бита, в адресации не учавствуют, то что учавствует - это индекс, для прогера это смещение


Запрошенный уровень привилегий - ****************************************
*************************************************************************
*************************************************************************

7	6	5	4	3	2	1	0
base    байты	      base      base limit	  limit
high	атрибутов    middle
	20 разрядов

//здесь вообще какая-то заебатая схема, но я на ноуте, мне пох :)

Бит гранулярности - если он установлен то память меряется страницами по 4е килобайта
Если это бит сброшен, то память меряется в байтах
---------------------------------------------
Digit - показывает какие используются операнды - 32х или 16 битные разряды

4й бит AVL
5й бит - пока не рассматриваем
0й бит - бит доступа к семгменту устанавливает аппаратно(автоматически), если было обращение к сегменту, используется схемами управления памятью

1й бит - для сегмента кода. Определяет если 0 то чтение из сегмента запрещено! Это не касается выборки команд. (Суп отдельно мухи отдельно - шутейка от Рязани...)
Если 1, чтение из сегмента кода разрешено, для сегмента данных, если 0 модификация зарещена, если 1 то модиф. рашрешена
2й бит - для сегмента кода это бит подчинения, если 0 то сегмент подчинённый, если 1 то обычный. Если 0 то это сегмент данных, если 1 то это сегмент стека.
3й бит - бит предназначения - определяет - если 0, то это сегмент данных либо стека, если 1а то это сегмента кода.
Эти 3 бита опредеояют тип сегмента и режим доступа к сегменту

4й бит - 0 то дескриптор опишет сис-й объект, если 1а то опишет обычный сегмент

5 и 6й биты -  DPL(**) 
7й бит описан выше.

4 кольца защиты, 4е уровня привилегий!!!
**Коллирирует с ОС Мультикс(что-то такое)
Приложение вып-ся в 3м уровне привилегий.

Лаба - написать прогу 0го уровня привилегий. Для её работы нужно создать сис-е таблица. Перейти можно с таблицей глобальных дескрипторов
Берем 2й варик теневых регистров.

Прога пишется на ассемблере! Нам тризда...((