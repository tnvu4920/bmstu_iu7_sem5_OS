            Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 1

020A:0746  E8 0070		;*		call	sub_2			; (07B9)
020A:0746  E8 70 00				db	0E8h, 70h, 00h
020A:0749  06					push	es
020A:074A  1E					push	ds
020A:074B  50					push	ax
020A:074C  52					push	dx
020A:074D  B8 0040				mov	ax,40h
020A:0750  8E D8				mov	ds,ax
020A:0752  33 C0				xor	ax,ax			; Zero register
020A:0754  8E C0				mov	es,ax
020A:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=635Dh)
020A:075A  75 04				jnz	loc_1			; Jump if not zero
020A:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=17h)
020A:0760			loc_1:
020A:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=17h)
020A:0765  75 15				jne	loc_2			; Jump if not equal
020A:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=635Dh)
020A:076D  75 0D				jne	loc_2			; Jump if not equal
020A:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=17h)
020A:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=635Dh)
020A:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020A:077A  0C 08				or	al,8
020A:077C			loc_2:
020A:077C  50					push	ax
020A:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=0AEh)
020A:0781  75 0B				jnz	loc_3			; Jump if not zero
020A:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
020A:0788  B0 0C				mov	al,0Ch
020A:078A  BA 03F2				mov	dx,3F2h
020A:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
020A:078E			loc_3:
020A:078E  58					pop	ax
020A:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020A:0795  75 0C				jnz	loc_4			; Jump if not zero
020A:0797  9F					lahf				; Load ah from flags
020A:0798  86 E0				xchg	ah,al
020A:079A  50					push	ax
020A:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020A:07A0  EB 03				jmp	short loc_5		; (07A5)
020A:07A2  90					nop
020A:07A3			loc_4:
020A:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020A:07A5			loc_5:
020A:07A5  E8 0011				call	sub_2			; (07B9)
020A:07A8  B0 20				mov	al,20h			; ' '
020A:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
020A:07AC  5A					pop	dx
020A:07AD  58					pop	ax
020A:07AE  1F					pop	ds
020A:07AF  07					pop	es
020A:07B0  E9 FE99				jmp	$-164h
020A:07B3  C4					db	0C4h
							                        ;* No entry point to code
020A:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0000:93E9=72CDh) Load 32 bit ptr
020A:07B8  FE					db	0FEh

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 2

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_2		proc	near
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
020A:07C0  9F					lahf				; Load ah from flags
020A:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_7			; Jump if not zero
020A:07C9  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_6:
020A:07D0  9E					sahf				; Store ah into flags
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_8		; (07D8)
020A:07D5			loc_7:
020A:07D5  FA					cli				; Disable interrupts
020A:07D6  EB F8				jmp	short loc_6		; (07D0)
020A:07D8			loc_8:
020A:07D8  C3					retn
				sub_2		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_3		proc	near
020A:07D9  1E					push	ds
020A:07DA  50					push	ax
020A:07DB  B8 0040				mov	ax,40h
020A:07DE  8E D8				mov	ds,ax
020A:07E0  9F					lahf				; Load ah from flags
020A:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:07E7  75 14				jnz	loc_10			; Jump if not zero
020A:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07EF  0C75			data_106	dw	0C75h
020A:07F1  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:07F8			loc_9:
020A:07F8  9E					sahf				; Store ah into flags
020A:07F9  58					pop	ax
020A:07FA  1F					pop	ds
020A:07FB  EB 03				jmp	short loc_11		; (0800)
020A:07FD			loc_10:
020A:07FD  FB					sti				; Enable interrupts
020A:07FE  EB F8				jmp	short loc_9		; (07F8)
020A:0800			loc_11:
020A:0800  C3					retn
				sub_3		endp

020A:0801  00					db	0
020A:0802  0000			data_107	dw	0
020A:0804  0000			data_108	dw	0

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 3

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_4		proc	near
020A:0806  2E: FF 06 0804			inc	cs:data_108		; (020A:0804=0)
020A:080B  3D 13FF				cmp	ax,13FFh
020A:080E  75 5B				jne	loc_14			; Jump if not equal
020A:0810  83 F9 01				cmp	cx,1
020A:0813  74 40				je	loc_12			; Jump if equal
020A:0815  56					push	si
020A:0816  BE 00A4				mov	si,0A4h
020A:0819  2E: 2B 36 0802			sub	si,cs:data_107		; (020A:0802=0)
020A:081E  3B CE				cmp	cx,si
020A:0820  73 3E				jae	loc_13			; Jump if above or =
020A:0822  57					push	di
020A:0823  51					push	cx
020A:0824  52					push	dx
020A:0825  1E					push	ds
020A:0826  06					push	es
020A:0827  8C C2				mov	dx,es
020A:0829  8E DA				mov	ds,dx
020A:082B  BA B000				mov	dx,0B000h
020A:082E  8E C2				mov	es,dx
020A:0830  8B D1				mov	dx,cx
020A:0832  8B F7				mov	si,di
020A:0834  2E: 8B 3E 0802			mov	di,cs:data_107		; (020A:0802=0)
020A:0839  FC					cld				; Clear direction
020A:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:083E  80 D1 00				adc	cl,0
020A:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:0843  2E: 01 16 0802			add	cs:data_107,dx		; (020A:0802=0)
020A:0848  07					pop	es
020A:0849  1F					pop	ds
020A:084A  5A					pop	dx
020A:084B  59					pop	cx
020A:084C  5F					pop	di
020A:084D  5E					pop	si
020A:084E  F9					stc				; Set carry flag
020A:084F  2E: FF 0E 0804			dec	cs:data_108		; (020A:0804=0)
020A:0854  C3					retn
020A:0855			loc_12:
020A:0855  50					push	ax
020A:0856  B4 0E				mov	ah,0Eh
020A:0858  26: 8A 05				mov	al,es:[di]
020A:085B  E8 0012				call	sub_5			; (0870)
020A:085E  58					pop	ax
020A:085F  C3					retn
020A:0860			loc_13:
020A:0860  5E					pop	si
020A:0861  2E: FF 0E 0804			dec	cs:data_108		; (020A:0804=0)
020A:0866  C4					db	0C4h
020A:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
020A:086A  C3					retn
020A:086B			loc_14:
020A:086B  80 FC 0E				cmp	ah,0Eh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 4

020A:086E  75 28				jne	loc_15			; Jump if not equal

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_5:
020A:0870  56					push	si
020A:0871  2E: 8B 36 0802			mov	si,cs:data_107		; (020A:0802=0)
020A:0876  81 FE 00A4				cmp	si,0A4h
020A:087A  73 E4				jae	loc_13			; Jump if above or =
020A:087C  1E					push	ds
020A:087D  BE B000				mov	si,0B000h
020A:0880  8E DE				mov	ds,si
020A:0882  2E: 8B 36 0802			mov	si,cs:data_107		; (020A:0802=0)
020A:0887  88 04				mov	[si],al
020A:0889  46					inc	si
020A:088A  2E: 89 36 0802			mov	cs:data_107,si		; (020A:0802=0)
020A:088F  1F					pop	ds
020A:0890  5E					pop	si
020A:0891  F9					stc				; Set carry flag
020A:0892  2E: FF 0E 0804			dec	cs:data_108		; (020A:0804=0)
020A:0897  C3					retn
020A:0898			loc_15:
020A:0898  50					push	ax
020A:0899  B8 13FE				mov	ax,13FEh
020A:089C  C4					db	0C4h
020A:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
020A:08A0  F8					clc				; Clear carry flag
020A:08A1  2E: FF 0E 0804			dec	cs:data_108		; (020A:0804=0)
020A:08A6  C3					retn
				sub_4		endp

020A:08A7  00			data_109	db	0
020A:08A8  00			data_110	db	0
020A:08A9  2E: 80 3E 08A7 02			cmp	cs:data_109,2		; (020A:08A7=0)
020A:08AF  75 05				jne	loc_16			; Jump if not equal
020A:08B1  E8 FF52				call	sub_4			; (0806)
020A:08B4  72 5F				jc	loc_22			; Jump if carry Set
020A:08B6			loc_16:
020A:08B6  2E: 80 3E 08A7 01			cmp	cs:data_109,1		; (020A:08A7=0)
020A:08BC  74 5D				je	loc_24			; Jump if equal
020A:08BE  80 FC 00				cmp	ah,0
020A:08C1  74 30				je	loc_20			; Jump if equal
020A:08C3  80 FC 1C				cmp	ah,1Ch
020A:08C6  77 0B				ja	loc_17			; Jump if above
020A:08C8  80 FC 04				cmp	ah,4
020A:08CB  74 20				je	loc_19			; Jump if equal
020A:08CD  C4					db	0C4h
020A:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:08D1  43					inc	bx
020A:08D2  90					nop
020A:08D3			loc_17:
020A:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:08D6  75 06				jne	loc_18			; Jump if not equal
020A:08D8  C4					db	0C4h
020A:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
020A:08DD  90					nop
020A:08DE			loc_18:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 5

020A:08DE  80 FC F0				cmp	ah,0F0h
020A:08E1  72 35				jb	loc_23			; Jump if below
020A:08E3  80 FC F7				cmp	ah,0F7h
020A:08E6  76 05				jbe	loc_19			; Jump if below or =
020A:08E8  80 FC FA				cmp	ah,0FAh
020A:08EB  75 2B				jne	loc_23			; Jump if not equal
020A:08ED			loc_19:
020A:08ED  C4					db	0C4h
020A:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
020A:08F2  90					nop
020A:08F3			loc_20:
020A:08F3  2E: C6 06 08A8 01			mov	cs:data_110,1		; (020A:08A8=0)
020A:08F9  C4					db	0C4h
020A:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
020A:08FE  50					push	ax
020A:08FF  25 007F				and	ax,7Fh
020A:0902  3C 03				cmp	al,3
020A:0904  76 08				jbe	loc_21			; Jump if below or =
020A:0906  3C			data_111	db	3Ch
020A:0907  07					pop	es
020A:0908  74 04				jz	loc_21			; Jump if zero
020A:090A  58					pop	ax
020A:090B  EB 0E				jmp	short loc_24		; (091B)
020A:090D  90					nop
020A:090E			loc_21:
020A:090E  58					pop	ax
020A:090F  2E: C6 06 08A8 00			mov	cs:data_110,0		; (020A:08A8=0)
020A:0915			loc_22:
020A:0915  E9 FD34				jmp	$-2C9h
020A:0918			loc_23:
020A:0918  F9					stc				; Set carry flag
020A:0919  EB FA				jmp	short loc_22		; (0915)
020A:091B			loc_24:
020A:091B  2E: C6 06 08A8 00			mov	cs:data_110,0		; (020A:08A8=0)
020A:0921  3D 13FF				cmp	ax,13FFh
020A:0924  74 2F				je	loc_28			; Jump if equal
020A:0926  80 FC F0				cmp	ah,0F0h
020A:0929  72 0D				jb	loc_25			; Jump if below
020A:092B  80 FC F7				cmp	ah,0F7h
020A:092E  76 BD				jbe	loc_19			; Jump if below or =
020A:0930  80 FC FA				cmp	ah,0FAh
020A:0933  74 B8				je	loc_19			; Jump if equal
020A:0935  EB 19				jmp	short loc_27		; (0950)
020A:0937  90					nop
020A:0938			loc_25:
020A:0938  80 FC 04				cmp	ah,4
020A:093B  74 B0				je	loc_19			; Jump if equal
020A:093D  80 FC 00				cmp	ah,0
020A:0940  75 06				jne	loc_26			; Jump if not equal
020A:0942  C4					db	0C4h
020A:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
020A:0947  90					nop
020A:0948			loc_26:
020A:0948  80 FC 11				cmp	ah,11h
020A:094B  75 03				jne	loc_27			; Jump if not equal
020A:094D  C4					db	0C4h
020A:094E  C4 BE 16EA				les	di,dword ptr [bp+16EAh]	; Load 32 bit ptr
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 6

020A:0952  0B 00				or	ax,[bx+si]
020A:0954  C0					db	0C0h
020A:0955			loc_28:
020A:0955  56					push	si
020A:0956  57					push	di
020A:0957  55					push	bp

020A:0958			locloop_29:
020A:0958  BA 0046				mov	dx,46h
020A:095B  52					push	dx
020A:095C  0E					push	cs
020A:095D  BB 096C				mov	bx,96Ch
020A:0960  53					push	bx
020A:0961  BB 0007				mov	bx,7
020A:0964  B4 0E				mov	ah,0Eh
020A:0966  26: 8A 05				mov	al,es:[di]
020A:0969  47					inc	di
020A:096A  EB E4		;*		jmp	short loc_27		;*(0950)
020A:096A  EB E4				db	0EBh,0E4h
							                        ;* No entry point to code
020A:096C  E2 EA				loop	locloop_29		; Loop if cx > 0

020A:096E  5D					pop	bp
020A:096F  5F					pop	di
020A:0970  5E					pop	si
020A:0971  B8 0001				mov	ax,1
020A:0974			loc_30:
020A:0974  EB 9F				jmp	short loc_22		; (0915)
							                        ;* No entry point to code
020A:0976  2E: 80 3E 08A7 02			cmp	cs:data_109,2		; (020A:08A7=0)
020A:097C  75 05				jne	loc_31			; Jump if not equal
020A:097E  E8 FE85				call	sub_4			; (0806)
020A:0981  72 F1				jc	loc_30			; Jump if carry Set
020A:0983			loc_31:
020A:0983  2E: 80 3E 08A7 01			cmp	cs:data_109,1		; (020A:08A7=0)
020A:0989  74 06				je	loc_32			; Jump if equal
020A:098B  C4					db	0C4h
020A:098C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
020A:098E  E9 FCBB				jmp	$-342h
020A:0991			loc_32:
020A:0991  80 FC 13				cmp	ah,13h
020A:0994  75 04				jne	loc_33			; Jump if not equal
020A:0996  3C FF				cmp	al,0FFh
020A:0998  74 BB				je	loc_28			; Jump if equal
020A:099A			loc_33:
020A:099A  EA F000:F065		;*		jmp	far ptr loc_2618	;*(F000:F065)
020A:099A  EA					db	0EAh
020A:099B  F065 F000				dw	0F065h, 0F000h
020A:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020A:09A1  C4					db	0C4h
020A:09A2  C4					db	0C4h
020A:09A3  FE C4				inc	ah
020A:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
020A:09A7  E9 FCA2				jmp	$-35Bh
020A:09AA  C4					db	0C4h
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 7

020A:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
020A:09AD  E9 FC9C				jmp	$-361h
020A:09B0  C4					db	0C4h
							                        ;* No entry point to code
020A:09B1  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
020A:09B3  E9 FC96				jmp	$-367h
020A:09B6  87 DB				xchg	bx,bx
020A:09B8  0000			data_112	dw	0
020A:09BA  00 00				add	[bx+si],al
020A:09BC  1E1C			data_113	dw	1E1Ch
020A:09BE  00 00				add	[bx+si],al
020A:09C0  0032			data_114	dw	32h
020A:09C2  00 00				add	[bx+si],al
020A:09C4  1E					push	ds
020A:09C5  53					push	bx
020A:09C6  BB 0040				mov	bx,40h
020A:09C9  8E DB				mov	ds,bx
020A:09CB  80 FC 10				cmp	ah,10h
020A:09CE  E8 FDE8				call	sub_2			; (07B9)
020A:09D1  72 03				jc	loc_34			; Jump if carry Set
020A:09D3  E9 00E0				jmp	loc_48			; (0AB6)
020A:09D6			loc_34:
020A:09D6  0A E4				or	ah,ah			; Zero ?
020A:09D8  74 3E				jz	loc_39			; Jump if zero
020A:09DA  FE CC				dec	ah
020A:09DC  74 74				jz	loc_43			; Jump if zero
020A:09DE  FE CC				dec	ah
020A:09E0  74 11				jz	loc_36			; Jump if zero
020A:09E2  FE CC				dec	ah
020A:09E4  74 08				jz	loc_35			; Jump if zero
020A:09E6  FE CC				dec	ah
020A:09E8  74 04				jz	loc_35			; Jump if zero
020A:09EA  FE CC				dec	ah
020A:09EC  74 0A				jz	loc_37			; Jump if zero
020A:09EE			loc_35:
020A:09EE  5B					pop	bx
020A:09EF  1F					pop	ds
020A:09F0  E9 FC59				jmp	$-3A4h
020A:09F3			loc_36:
020A:09F3  A0 0017				mov	al,byte ptr data_15+1	; (020A:0017=0)
020A:09F6  EB F6				jmp	short loc_35		; (09EE)
020A:09F8			loc_37:
020A:09F8  56					push	si
020A:09F9  8B 1E 001C				mov	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:09FD  8B F3				mov	si,bx
020A:09FF  E8 01B9				call	sub_10			; (0BBB)
020A:0A02  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A06  74			data_115	db	74h			; Data table (indexed access)
020A:0A07  0B 89 890C				or	cx,word ptr ds:[890Ch][bx+di]	; (020A:890C=0)
020A:0A0B  1E					push	ds
020A:0A0C  1C			data_116	db	1Ch			; Data table (indexed access)
020A:0A0D  00			data_117	db	0
020A:0A0E  B0 00				mov	al,0
020A:0A10  5E					pop	si
020A:0A11  EB DB				jmp	short loc_35		; (09EE)
020A:0A13			loc_38:
020A:0A13  B0 01				mov	al,1
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 8

020A:0A15  5E					pop	si
020A:0A16  EB D6				jmp	short loc_35		; (09EE)
020A:0A18			loc_39:
020A:0A18  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A1C  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A20  75 13				jne	loc_41			; Jump if not equal
020A:0A22  E8 FDB4				call	sub_3			; (07D9)
020A:0A25  B8 9002				mov	ax,9002h
020A:0A28  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0A2A			loc_40:
020A:0A2A  E8 FD8C				call	sub_2			; (07B9)
020A:0A2D  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A31  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A35			loc_41:
020A:0A35  E8 0190				call	sub_11			; (0BC8)
020A:0A38  75 05				jnz	loc_42			; Jump if not zero
020A:0A3A  E8 00E3				call	sub_6			; (0B20)
020A:0A3D  EB EB				jmp	short loc_40		; (0A2A)
020A:0A3F			loc_42:
020A:0A3F  8B 07				mov	ax,[bx]
020A:0A41  E8 0177				call	sub_10			; (0BBB)
020A:0A44  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A48  E8 0129				call	sub_9			; (0B74)
020A:0A4B  72 DD				jc	loc_40			; Jump if carry Set
020A:0A4D  E8 00FC				call	sub_7			; (0B4C)
020A:0A50  EB 9C				jmp	short loc_35		; (09EE)
020A:0A52			loc_43:
020A:0A52  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A56  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A5A  8B 07				mov	ax,[bx]
020A:0A5C  E8 0169				call	sub_11			; (0BC8)
020A:0A5F  74 2F				jz	loc_45			; Jump if zero
020A:0A61  E8 00E8				call	sub_7			; (0B4C)
020A:0A64  E8 010D				call	sub_9			; (0B74)
020A:0A67  E8 FD6F				call	sub_3			; (07D9)
020A:0A6A  73 45				jnc	loc_47			; Jump if carry=0
020A:0A6C  E8 014C				call	sub_10			; (0BBB)
020A:0A6F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A73  EB DD				jmp	short loc_43		; (0A52)
020A:0A75			loc_44:
020A:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A79  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A7D  8B 07				mov	ax,[bx]
020A:0A7F  E8 0146				call	sub_11			; (0BC8)
020A:0A82  74 0C				jz	loc_45			; Jump if zero
020A:0A84  E8 00C5				call	sub_7			; (0B4C)
020A:0A87  E8 00D1				call	sub_8			; (0B5B)
020A:0A8A  E8 FD4C				call	sub_3			; (07D9)
020A:0A8D  EB 22				jmp	short loc_47		; (0AB1)
020A:0A8F  90					nop
020A:0A90			loc_45:
020A:0A90  E8 FD46				call	sub_3			; (07D9)
020A:0A93  50					push	ax
020A:0A94  9F					lahf				; Load ah from flags
020A:0A95  50					push	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 9

020A:0A96  2E: A1 09B8				mov	ax,cs:data_112		; (020A:09B8=0)
020A:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_114		; (020A:09C0=32h)
020A:0A9F  72 08				jb	loc_46			; Jump if below
020A:0AA1  B4 01				mov	ah,1
020A:0AA3  C4					db	0C4h
020A:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (020A:06EB=52D2h) Load 32 bit ptr
020A:0AA8  90					nop
020A:0AA9			loc_46:
020A:0AA9  2E: FF 06 09BC			inc	cs:data_113		; (020A:09BC=1EE6h)
020A:0AAE  58					pop	ax
020A:0AAF  9E					sahf				; Store ah into flags
020A:0AB0  58					pop	ax
020A:0AB1			loc_47:
020A:0AB1  5B					pop	bx
020A:0AB2  1F					pop	ds
020A:0AB3  CA 0002				retf	2			; Return far
020A:0AB6			loc_48:
020A:0AB6  80 EC 10				sub	ah,10h
020A:0AB9  74 2C				jz	loc_50			; Jump if zero
020A:0ABB  FE CC				dec	ah
020A:0ABD  74 B6				jz	loc_44			; Jump if zero
020A:0ABF  FE CC				dec	ah
020A:0AC1  74 03				jz	loc_49			; Jump if zero
020A:0AC3  E9 FF28				jmp	loc_35			; (09EE)
020A:0AC6			loc_49:
020A:0AC6  A0 0018				mov	al,byte ptr data_15+2	; (020A:0018=0)
020A:0AC9  8A E0				mov	ah,al
020A:0ACB  24 04				and	al,4
020A:0ACD  51					push	cx
020A:0ACE  B1 05				mov	cl,5
020A:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:0AD2  59					pop	cx
020A:0AD3  80 E4 73				and	ah,73h			; 's'
020A:0AD6  0A C4				or	al,ah
020A:0AD8  8A 26 0096				mov	ah,byte ptr ds:[96h]	; (020A:0096=0)
020A:0ADC  80 E4 0C				and	ah,0Ch
020A:0ADF  0A E0				or	ah,al
020A:0AE1  A0 0017				mov	al,byte ptr data_15+1	; (020A:0017=0)
020A:0AE4  E9 FF07				jmp	loc_35			; (09EE)
020A:0AE7			loc_50:
020A:0AE7  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0AEB  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0AEF  75 13				jne	loc_52			; Jump if not equal
020A:0AF1  E8 FCE5				call	sub_3			; (07D9)
020A:0AF4  B8 9002				mov	ax,9002h
020A:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0AF9			loc_51:
020A:0AF9  E8 FCBD				call	sub_2			; (07B9)
020A:0AFC  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0B00  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0B04			loc_52:
020A:0B04  E8 00C1				call	sub_11			; (0BC8)
020A:0B07  75 05				jnz	loc_53			; Jump if not zero
020A:0B09  E8 0014				call	sub_6			; (0B20)
020A:0B0C  EB EB				jmp	short loc_51		; (0AF9)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 10

020A:0B0E			loc_53:
020A:0B0E  8B 07				mov	ax,[bx]
020A:0B10  E8 00A8				call	sub_10			; (0BBB)
020A:0B13  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0B17  E8 0041				call	sub_8			; (0B5B)
020A:0B1A  E8 002F				call	sub_7			; (0B4C)
020A:0B1D  E9 FECE				jmp	loc_35			; (09EE)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_6		proc	near
020A:0B20  50					push	ax
020A:0B21  E8 FCB5				call	sub_3			; (07D9)
020A:0B24  B4 02				mov	ah,2
020A:0B26  C4					db	0C4h
020A:0B27  C4 16 1E8B				les	dx,data_195		; (020A:1E8B=0) Load 32 bit ptr
020A:0B2B  1A 00				sbb	al,[bx+si]
020A:0B2D  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0B31  75 17				jne	loc_56			; Jump if not equal
020A:0B33  2E: A1 09B8				mov	ax,cs:data_112		; (020A:09B8=0)
020A:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_114		; (020A:09C0=32h)
020A:0B3C  73 07				jae	loc_55			; Jump if above or =
020A:0B3E  2E: FF 06 09BC			inc	cs:data_113		; (020A:09BC=1F60h)
020A:0B43  EB E4		;*		jmp	short loc_54		;*(0B29)
020A:0B43  EB E4				db	0EBh,0E4h
020A:0B45			loc_55:
020A:0B45  B4 01				mov	ah,1
020A:0B47  C4					db	0C4h
020A:0B48  C4 16 C358				les	dx,dword ptr data_761	; (020A:C358=8A26h) Load 32 bit ptr

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_7:
020A:0B4C  2E: C7 06 09B8 0000			mov	cs:data_112,0		; (020A:09B8=0)
020A:0B53  2E: C7 06 09BC 0000			mov	cs:data_113,0		; (020A:09BC=1F70h)
020A:0B5A  C3					retn
				sub_6		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_8		proc	near
020A:0B5B  53					push	bx
020A:0B5C  50					push	ax
020A:0B5D  9F					lahf				; Load ah from flags
020A:0B5E  8B D8				mov	bx,ax
020A:0B60  58					pop	ax
020A:0B61  53					push	bx
020A:0B62  3C F0				cmp	al,0F0h
020A:0B64  75 06				jne	loc_57			; Jump if not equal
020A:0B66  0A E4				or	ah,ah			; Zero ?
020A:0B68  74 02				jz	loc_57			; Jump if zero
020A:0B6A  32 C0				xor	al,al			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 11

020A:0B6C			loc_57:
020A:0B6C  8B D8				mov	bx,ax
020A:0B6E  58					pop	ax
020A:0B6F  9E					sahf				; Store ah into flags
020A:0B70  8B C3				mov	ax,bx
020A:0B72  5B					pop	bx
020A:0B73  C3					retn
				sub_8		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_9		proc	near
020A:0B74  53					push	bx
020A:0B75  50					push	ax
020A:0B76  9F					lahf				; Load ah from flags
020A:0B77  8B D8				mov	bx,ax
020A:0B79  58					pop	ax
020A:0B7A  53					push	bx
020A:0B7B  80 FC E0				cmp	ah,0E0h
020A:0B7E  75 0F				jne	loc_58			; Jump if not equal
020A:0B80  B4 1C				mov	ah,1Ch
020A:0B82  3C 0D				cmp	al,0Dh
020A:0B84  74 23				je	loc_60			; Jump if equal
020A:0B86  3C 0A				cmp	al,0Ah
020A:0B88  74 1F				je	loc_60			; Jump if equal
020A:0B8A  B4 35				mov	ah,35h			; '5'
020A:0B8C  EB 1B				jmp	short loc_60		; (0BA9)
020A:0B8E  90					nop
020A:0B8F			loc_58:
020A:0B8F  80 FC 84				cmp	ah,84h
020A:0B92  77 1E				ja	loc_61			; Jump if above
020A:0B94  3C F0				cmp	al,0F0h
020A:0B96  75 07				jne	loc_59			; Jump if not equal
020A:0B98  0A E4				or	ah,ah			; Zero ?
020A:0B9A  74 0D				jz	loc_60			; Jump if zero
020A:0B9C  EB 14				jmp	short loc_61		; (0BB2)
020A:0B9E  90					nop
020A:0B9F			loc_59:
020A:0B9F  3C E0				cmp	al,0E0h
020A:0BA1  75 06				jne	loc_60			; Jump if not equal
020A:0BA3  0A E4				or	ah,ah			; Zero ?
020A:0BA5  74 02				jz	loc_60			; Jump if zero
020A:0BA7  32 C0				xor	al,al			; Zero register
020A:0BA9			loc_60:
020A:0BA9  8B D8				mov	bx,ax
020A:0BAB  58					pop	ax
020A:0BAC  9E					sahf				; Store ah into flags
020A:0BAD  8B C3				mov	ax,bx
020A:0BAF  5B					pop	bx
020A:0BB0  F8					clc				; Clear carry flag
020A:0BB1  C3					retn
020A:0BB2			loc_61:
020A:0BB2  8B D8				mov	bx,ax
020A:0BB4  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 12

020A:0BB5  9E					sahf				; Store ah into flags
020A:0BB6  8B C3				mov	ax,bx
020A:0BB8  5B					pop	bx
020A:0BB9  F9					stc				; Set carry flag
020A:0BBA  C3					retn
				sub_9		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_10		proc	near
020A:0BBB  43					inc	bx
020A:0BBC  43					inc	bx
020A:0BBD  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (020A:0082=10h)
020A:0BC1  75 04				jne	loc_62			; Jump if not equal
020A:0BC3  1E8B			data_118	dw	1E8Bh
020A:0BC5  0080			data_119	dw	80h
020A:0BC7			loc_62:
020A:0BC7  53C3			data_120	dw	53C3h
020A:0BC9  5051			data_121	dw	5051h
020A:0BCB  509F			data_122	dw	509Fh
020A:0BCD  17A0			data_123	dw	17A0h
020A:0BCF  00 24				add	[si],ah
020A:0BD1  B170			data_124	dw	0B170h
020A:0BD3  D204			data_125	dw	0D204h
020A:0BD5  E8 0724				call	$+727h
020A:0BD8  8A 1E 0097				mov	bl,byte ptr data_53+1	; (020A:0097=0)
020A:0BDC  32 D8				xor	bl,al
020A:0BDE  80 E3 07				and	bl,7
020A:0BE1  74 25				jz	loc_63			; Jump if zero
020A:0BE3  F6 06 0097 40			test	byte ptr data_53+1,40h	; (020A:0097=0) '@'
020A:0BE8  75 1E				jnz	loc_63			; Jump if not zero
020A:0BEA  80 0E 0097 40			or	byte ptr data_53+1,40h	; (020A:0097=0) '@'
020A:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020A:0BF1  0A C3				or	al,bl
020A:0BF3  03B4			data_129	dw	3B4h
020A:0BF5  C4C4			data_130	dw	0C4C4h
020A:0BF7  8016			data_131	dw	8016h
020A:0BF9  26					db	26h
020A:0BFA  97					xchg	di,ax
020A:0BFB  00 F8				add	al,bh
020A:0BFD  24 0F				and	al,0Fh
020A:0BFF  08 06 0097				or	byte ptr data_53+1,al	; (020A:0097=0)
020A:0C03  80 26 0097 BF			and	byte ptr data_53+1,0BFh	; (020A:0097=0)
020A:0C08			loc_63:
020A:0C08  58					pop	ax
020A:0C09  9E					sahf				; Store ah into flags
020A:0C0A  58					pop	ax
020A:0C0B  59					pop	cx
020A:0C0C  5B					pop	bx
020A:0C0D  C3					retn
				sub_10		endp

020A:0C0E  C4					db	0C4h
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 13

020A:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
020A:0C11  E9 FA38				jmp	$-5C5h
020A:0C14  C4					db	0C4h
							                        ;* No entry point to code
020A:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0C17  E9 FA32				jmp	$-5CBh
020A:0C1A  635D			data_132	dw	635Dh
020A:0C1C  0017			data_133	dw	17h
020A:0C1E  00			data_134	db	0
020A:0C1F  E8 FBB7				call	sub_3			; (07D9)
020A:0C22  80 FC 02				cmp	ah,2
020A:0C25  72 06				jb	loc_64			; Jump if below
020A:0C27  C4					db	0C4h
020A:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
020A:0C2A  E9 FA1F				jmp	$-5DEh
020A:0C2D			loc_64:
020A:0C2D  1E					push	ds
020A:0C2E  53					push	bx
020A:0C2F  50					push	ax
020A:0C30  B8 0040				mov	ax,40h
020A:0C33  8E D8				mov	ds,ax
020A:0C35  58					pop	ax
020A:0C36  E8 FB80				call	sub_2			; (07B9)
020A:0C39  0A E4				or	ah,ah			; Zero ?
020A:0C3B  75 3F				jnz	loc_67			; Jump if not zero
020A:0C3D			loc_65:
020A:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020A:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=17h)
020A:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=635Dh)
020A:0C48  2E: 39 0E 0C1C			cmp	cs:data_133,cx		; (020A:0C1C=17h)
020A:0C4D  75 35				jne	loc_68			; Jump if not equal
020A:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_132		; (020A:0C1A=635Dh)
020A:0C54  3B DA				cmp	bx,dx
020A:0C56  74 05				je	loc_66			; Jump if equal
020A:0C58  43					inc	bx
020A:0C59  3B DA				cmp	bx,dx
020A:0C5B  75 27				jne	loc_68			; Jump if not equal
020A:0C5D			loc_66:
020A:0C5D  2E: FE 06 0C1E			inc	cs:data_134		; (020A:0C1E=0)
020A:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_134,10h		; (020A:0C1E=0)
020A:0C68  72 20				jb	loc_69			; Jump if below
020A:0C6A  E8 FB6C				call	sub_3			; (07D9)
020A:0C6D  33 C0				xor	ax,ax			; Zero register
020A:0C6F  2E: FF 0E 0C1A			dec	cs:data_132		; (020A:0C1A=635Dh)
020A:0C74  C4					db	0C4h
020A:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
020A:0C78  3F					aas				; Ascii adjust
020A:0C79  FB					sti				; Enable interrupts
020A:0C7A  EB C1				jmp	short loc_65		; (0C3D)
020A:0C7C			loc_67:
020A:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=635Dh)
020A:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=17h)
020A:0C84			loc_68:
020A:0C84  2E: C6 06 0C1E 00			mov	cs:data_134,0		; (020A:0C1E=0)
020A:0C8A			loc_69:
020A:0C8A  2E: 89 16 0C1A			mov	cs:data_132,dx		; (020A:0C1A=635Dh)
020A:0C8F  2E: 89 0E 0C1C			mov	cs:data_133,cx		; (020A:0C1C=17h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 14

020A:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020A:0C99  5B					pop	bx
020A:0C9A  1F					pop	ds
020A:0C9B  E9 F9AE				jmp	$-64Fh
020A:0C9E  C4					db	0C4h
							                        ;* No entry point to code
020A:0C9F  C4 1E A8E9				les	bx,dword ptr data_744	; (020A:A8E9=25E9h) Load 32 bit ptr
020A:0CA3  F9					stc				; Set carry flag
020A:0CA4  C4					db	0C4h
020A:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
020A:0CA8  A2 E8F9				mov	data_763,al		; (020A:E8F9=89h)
020A:0CAB  2C FB				sub	al,0FBh
020A:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020A:0CAF  EB 01				jmp	short $+3		; delay for I/O
020A:0CB1  90					nop
020A:0CB2  EB 01				jmp	short $+3		; delay for I/O
020A:0CB4  90					nop
020A:0CB5  EB 01				jmp	short $+3		; delay for I/O
020A:0CB7  90					nop
020A:0CB8  E8 FAFE				call	sub_2			; (07B9)
020A:0CBB  C4					db	0C4h
020A:0CBC  C4					db	0C4h
020A:0CBD  FE C4				inc	ah
020A:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
020A:0CC2  0A E9				or	ch,cl
020A:0CC4  86 F9				xchg	bh,cl
020A:0CC6  C4					db	0C4h
020A:0CC7			loc_70:
020A:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
020A:0CCA  02 E9				add	ch,cl
020A:0CCC  7E F9				jle	loc_70			; Jump if < or =
020A:0CCE  E8 FB08				call	sub_3			; (07D9)
020A:0CD1  EB 00				jmp	short $+2		; delay for I/O
020A:0CD3  EB 00				jmp	short $+2		; delay for I/O
020A:0CD5  EB 00				jmp	short $+2		; delay for I/O
020A:0CD7  C4					db	0C4h
020A:0CD8  C4					db	0C4h
020A:0CD9  FE					db	0FEh
020A:0CDA  74 29				jz	loc_71			; Jump if zero
020A:0CDC  2E: 89 36 44FC			mov	cs:data_548,si		; (020A:44FC=609Ah)
020A:0CE1  D9					db	0D9h
020A:0CE2  02 4E 00				add	cl,[bp]
020A:0CE5  13 2E 488B				adc	bp,data_561		; (020A:488B=7D80h)
020A:0CE9  49					dec	cx
020A:0CEA  4D					dec	bp
020A:0CEB  45					inc	bp
020A:0CEC  4D					dec	bp
020A:0CED  20 20				and	[bx+si],ah
020A:0CEF  20 24				and	[si],ah
020A:0CF1  00 70 00		;*		add	[bx+si+0],dh
020A:0CF1  00 70 00				db	 00h, 70h, 00h
020A:0CF4  00 A0 0041				add	byte ptr ds:[41h][bx+si],ah	; (020A:0041=18h)
020A:0CF8  4C					dec	sp
020A:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020A:0CFC  53					push	bx
020A:0CFD  58					pop	ax
020A:0CFE  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 15

020A:0CFF  58					pop	ax
020A:0D00  3058			data_135	dw	3058h			; Data table (indexed access)
020A:0D02  DE					db	0DEh
020A:0D03  04 74				add	al,74h			; 't'
020A:0D05			loc_71:
020A:0D05  00 75 04				add	[di+4],dh
020A:0D08  05 548E				add	ax,548Eh
020A:0D0B  00 00				add	[bx+si],al
020A:0D0D  00 42 05				add	[bp+si+5],al
020A:0D10  0A 02				or	al,[bp+si]
020A:0D12  A4					movsb				; Mov [si] to es:[di]
020A:0D13  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (020A:0100=28h)
020A:0D17  01 01				add	[bx+di],ax
020A:0D19  01 00				add	[bx+si],ax
020A:0D1B  01 00				add	[bx+si],ax
020A:0D1D  01 00				add	[bx+si],ax
020A:0D1F  01 00				add	[bx+si],ax
020A:0D21  000A[00]				db	10 dup (0)
020A:0D2B  02 01				add	al,[bx+di]
020A:0D2D  00					db	0
020A:0D2E  00 00				add	[bx+si],al
020A:0D30  00 2E 1E89				add	data_194,ch		; (020A:1E89=0)
020A:0D34  16					push	ss
020A:0D35  00 2E 068C				add	byte ptr ds:[68Ch],ch	; (020A:068C=2)
020A:0D39  18 00				sbb	[bx+si],al
020A:0D3B  CB					retf
							                        ;* No entry point to code
020A:0D3C  53					push	bx
020A:0D3D  1E					push	ds
020A:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:[16h]	; (020A:0016=0) Load 32 bit ptr
020A:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020A:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020A:0D4C  76 05				jbe	loc_72			; Jump if below or =
020A:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020A:0D53			loc_72:
020A:0D53  1F					pop	ds
020A:0D54  5B					pop	bx
020A:0D55  CB					retf
							                        ;* No entry point to code
020A:0D56  E8 03DB				call	sub_20			; (1134)
020A:0D59  80 FC 43				cmp	ah,43h			; 'C'
020A:0D5C  75 15				jne	loc_74			; Jump if not equal
020A:0D5E  0A C0				or	al,al			; Zero ?
020A:0D60  75 05				jnz	loc_73			; Jump if not zero
020A:0D62  B0 80				mov	al,80h
020A:0D64  E9 03F5				jmp	loc_125			; (115C)
020A:0D67			loc_73:
020A:0D67  3C 10				cmp	al,10h
020A:0D69  75 08				jne	loc_74			; Jump if not equal
020A:0D6B  0E					push	cs
020A:0D6C  07					pop	es
020A:0D6D  BB 00AF				mov	bx,0AFh
020A:0D70  E9 03E9				jmp	loc_125			; (115C)
020A:0D73			loc_74:
020A:0D73  E8 039E				call	sub_19			; (1114)
020A:0D76  2E: FF 2E 0022			jmp	dword ptr cs:[22h]	; (020A:0022=0FFh)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 16

020A:0D7B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (020A:0265=0)
020A:0D7F  98					cbw				; Convrt byte to word
020A:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020A:0D84  02 F6				add	dh,dh
020A:0D86  02 30				add	dh,[bx+si]
020A:0D88  03 99 2B03				add	bx,data_237[bx+di]	; (020A:2B03=432Eh)
020A:0D8C  A0 A03C				mov	al,data_738		; (020A:A03C=4)
020A:0D8F  94					xchg	sp,ax
020A:0D90  A0 A264				mov	al,data_741		; (020A:A264=0FCh)
020A:0D93  CF					iret				; Interrupt return
							                        ;* No entry point to code
020A:0D94  A0 A0FF				mov	al,data_739		; (020A:A0FF=43h)
020A:0D97  23 A1 A159				and	sp,data_740[bx+di]	; (020A:A159=0DB87h)
020A:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020A:0D9F  EB 03				jmp	short loc_75		; (0DA4)
020A:0DA1  90					nop
020A:0DA2  90					nop
020A:0DA3  90					nop
020A:0DA4			loc_75:
020A:0DA4  51					push	cx
020A:0DA5  56					push	si
020A:0DA6  57					push	di
020A:0DA7  1E					push	ds
020A:0DA8  06					push	es
020A:0DA9  9C					pushf				; Push flags
020A:0DAA  FC					cld				; Clear direction
020A:0DAB  1E					push	ds
020A:0DAC  07					pop	es
020A:0DAD  0E					push	cs
020A:0DAE  1F					pop	ds
020A:0DAF  50					push	ax
020A:0DB0  0A E4				or	ah,ah			; Zero ?
020A:0DB2  74 31				jz	loc_78			; Jump if zero
020A:0DB4  80 FC 12				cmp	ah,12h
020A:0DB7  72 07				jb	loc_76			; Jump if below
020A:0DB9  58					pop	ax
020A:0DBA  33 C0				xor	ax,ax			; Zero register
020A:0DBC  B3 80				mov	bl,80h
020A:0DBE  EB 72				jmp	short loc_82		; (0E32)
020A:0DC0			loc_76:
020A:0DC0  9C					pushf				; Push flags
020A:0DC1  E8 0350				call	sub_19			; (1114)
020A:0DC4  83 3E 0020 00			cmp	word ptr data_20+2,0	; (020A:0020=0A3B9h)
020A:0DC9  75 05				jne	loc_77			; Jump if not equal
020A:0DCB  52					push	dx
020A:0DCC  E8 0076				call	sub_13			; (0E45)
020A:0DCF  5A					pop	dx
020A:0DD0			loc_77:
020A:0DD0  0E					push	cs
020A:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0DD5  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0DDA  74 09				je	loc_78			; Jump if equal
020A:0DDC  58					pop	ax
020A:0DDD  33 C0				xor	ax,ax			; Zero register
020A:0DDF  B3 81				mov	bl,81h
020A:0DE1  33 D2				xor	dx,dx			; Zero register
020A:0DE3  EB 4D				jmp	short loc_82		; (0E32)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 17

020A:0DE5			loc_78:
020A:0DE5  58					pop	ax
020A:0DE6  50					push	ax
020A:0DE7  8A C4				mov	al,ah
020A:0DE9  32 E4				xor	ah,ah			; Zero register
020A:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:0DED  8B F8				mov	di,ax
020A:0DEF  58					pop	ax
020A:0DF0  8B BD 008B				mov	di,word ptr data_47+1[di]	; (020A:008B=504Fh)
020A:0DF4  0B FF				or	di,di			; Zero ?
020A:0DF6  79 38				jns	loc_81			; Jump if not sign
020A:0DF8  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0DFD  74 12				je	loc_79			; Jump if equal
020A:0DFF  56					push	si
020A:0E00  57					push	di
020A:0E01  50					push	ax
020A:0E02  53					push	bx
020A:0E03  51					push	cx
020A:0E04  E8 01DF				call	sub_15			; (0FE6)
020A:0E07  3D 0001				cmp	ax,1
020A:0E0A  59					pop	cx
020A:0E0B  5B					pop	bx
020A:0E0C  58					pop	ax
020A:0E0D  5F					pop	di
020A:0E0E  5E			data_138	db	5Eh
020A:0E0F  75 17				jnz	loc_80			; Jump if not zero
020A:0E11			loc_79:
020A:0E11  0E E8 002A				callf	sub_12			; (0E3F)
020A:0E15  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0E1A  74 16				je	loc_82			; Jump if equal
020A:0E1C  50					push	ax
020A:0E1D  53					push	bx
020A:0E1E  E8 01FF				call	sub_16			; (1020)
020A:0E21  3D 0001				cmp	ax,1
020A:0E24  5B					pop	bx
020A:0E25  58					pop	ax
020A:0E26  74 0A				jz	loc_82			; Jump if zero
020A:0E28			loc_80:
020A:0E28  33 C0				xor	ax,ax			; Zero register
020A:0E2A  33 D2				xor	dx,dx			; Zero register
020A:0E2C  B3 82				mov	bl,82h
020A:0E2E  EB 02				jmp	short loc_82		; (0E32)
020A:0E30			loc_81:
020A:0E30  FF D7				call	di			;*
020A:0E32			loc_82:
020A:0E32  0E					push	cs
020A:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0E37  07					pop	es
020A:0E38  1F					pop	ds
020A:0E39  5F					pop	di
020A:0E3A  5E					pop	si
020A:0E3B  59					pop	cx
020A:0E3C  CB					retf				; Return far
020A:0E3D  6D					db	6Dh
020A:0E3E  FB					sti				; Enable interrupts

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 18

				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_12		proc	near
020A:0E3F  FF 36 014D				push	word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:0E43  57					push	di
020A:0E44  CB					retf				; Return far
				sub_12		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_13		proc	near
020A:0E45  06					push	es
020A:0E46  E8 0071				call	sub_14			; (0EBA)
020A:0E49  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0E4E  74 02				je	loc_83			; Jump if equal
020A:0E50  07					pop	es
020A:0E51  C3					retn
020A:0E52			loc_83:
020A:0E52  B8 020D				mov	ax,20Dh
020A:0E55  C4					db	0C4h
020A:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
020A:0E59  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (020A:001A=0AE9Ch) Load 32 bit ptr
020A:0E5D  26: 87 04				xchg	es:[si],ax
020A:0E60  A3 001E				mov	word ptr ds:[1Eh],ax	; (020A:001E=961Fh)
020A:0E63  8C C8				mov	ax,cs
020A:0E65  26: 87 44 02				xchg	es:[si+2],ax
020A:0E69  A3 0020				mov	word ptr data_20+2,ax	; (020A:0020=0A3B9h)
020A:0E6C  8B C1				mov	ax,cx
020A:0E6E  3D 3C00				cmp	ax,3C00h
020A:0E71  72 03				jb	loc_84			; Jump if below
020A:0E73  B8 3C00				mov	ax,3C00h
020A:0E76			loc_84:
020A:0E76  2B 06 0037				sub	ax,word ptr ds:[37h]	; (020A:0037=0)
020A:0E7A  3D 0040				cmp	ax,40h
020A:0E7D  72 0C				jb	loc_85			; Jump if below
020A:0E7F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (020A:0035=80Fh)
020A:0E84  75 05				jne	loc_85			; Jump if not equal
020A:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020A:0029=14h)
020A:0E8B			loc_85:
020A:0E8B  0B C0				or	ax,ax			; Zero ?
020A:0E8D  74 20				jz	loc_88			; Jump if zero
020A:0E8F  B9 0400				mov	cx,400h
020A:0E92  33 DB				xor	bx,bx			; Zero register
020A:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0E99  74 03				je	loc_86			; Jump if equal
020A:0E9B  BB 0040				mov	bx,40h
020A:0E9E			loc_86:
020A:0E9E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA2  73 04				jae	loc_87			; Jump if above or =
020A:0EA4  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA8			loc_87:
020A:0EA8  03 CB				add	cx,bx
020A:0EAA  2B C3				sub	ax,bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 19

020A:0EAC  E8 01E2				call	sub_18			; (1091)
020A:0EAF			loc_88:
020A:0EAF  07					pop	es
020A:0EB0  C3					retn
				sub_13		endp

							                        ;* No entry point to code
020A:0EB1  13 00				adc	ax,[bx+si]
020A:0EB3  FF					db	0FFh
020A:0EB4  FF 56 44				call	word ptr [bp+44h]	;*
020A:0EB7  49					dec	cx
020A:0EB8  53					push	bx
020A:0EB9  4B					dec	bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_14		proc	near
020A:0EBA  06					push	es
020A:0EBB  33 C0				xor	ax,ax			; Zero register
020A:0EBD  8E C0				mov	es,ax
020A:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
020A:0EC4  BF 0012				mov	di,12h
020A:0EC7  BE 01C5				mov	si,1C5h
020A:0ECA  B9 0005				mov	cx,5
020A:0ECD  FC					cld				; Clear direction
020A:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0ED0  07					pop	es
020A:0ED1  74 24				jz	loc_89			; Jump if zero
020A:0ED3  E8 0110				call	sub_15			; (0FE6)
020A:0ED6  06					push	es
020A:0ED7  2E: C4 3E 01C1			les	di,dword ptr cs:[1C1h]	; (020A:01C1=0) Load 32 bit ptr
020A:0EDC  BE 01C5				mov	si,1C5h
020A:0EDF  B9 0005				mov	cx,5
020A:0EE2  FC					cld				; Clear direction
020A:0EE3  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0EE5  07					pop	es
020A:0EE6  9C					pushf				; Push flags
020A:0EE7  E8 0136				call	sub_16			; (1020)
020A:0EEA  0E					push	cs
020A:0EEB  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0EEF  74 06				jz	loc_89			; Jump if zero
020A:0EF1  C6 06 002C 00			mov	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0EF6  C3					retn
020A:0EF7			loc_89:
020A:0EF7  C6 06 002C 01			mov	byte ptr ds:[2Ch],1	; (020A:002C=39h)
020A:0EFC  C3					retn
				sub_14		endp

							                        ;* No entry point to code
020A:0EFD  80 FC 88				cmp	ah,88h
020A:0F00  74 0A				je	loc_90			; Jump if equal
020A:0F02  80 FC 87				cmp	ah,87h
020A:0F05  74 0C				je	loc_91			; Jump if equal
020A:0F07  2E: FF 2E 001E			jmp	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F0C			loc_90:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 20

020A:0F0C  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (020A:0035=80Fh)
020A:0F10  E9 0249				jmp	loc_125			; (115C)
020A:0F13			loc_91:
020A:0F13  E8 01FE				call	sub_19			; (1114)
020A:0F16  83 EC 04				sub	sp,4
020A:0F19  60					db	60h
020A:0F1A  E8 016C				call	sub_17			; (1089)
020A:0F1D  8B EC				mov	bp,sp
020A:0F1F  89 46 12				mov	[bp+12h],ax
020A:0F22  8B 46 18				mov	ax,[bp+18h]
020A:0F25  89 46 10				mov	[bp+10h],ax
020A:0F28  61					db	61h
020A:0F29  2E: FF 1E 001E			call	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F2E  50					push	ax
020A:0F2F  9C					pushf				; Push flags
020A:0F30  55					push	bp
020A:0F31  8B EC				mov	bp,sp
020A:0F33  8B 46 02				mov	ax,[bp+2]
020A:0F36  89 46 0C				mov	[bp+0Ch],ax
020A:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020A:0F3D  5D					pop	bp
020A:0F3E  58					pop	ax
020A:0F3F  58					pop	ax
020A:0F40  74 0B				jz	loc_92			; Jump if zero
020A:0F42  E8 01CF				call	sub_19			; (1114)
020A:0F45  60					db	60h
020A:0F46  B8 0001				mov	ax,1
020A:0F49  E8 0272				call	sub_21			; (11BE)
020A:0F4C  61					db	61h
020A:0F4D			loc_92:
020A:0F4D  83 C4 02				add	sp,2
020A:0F50  E9 0209				jmp	loc_125			; (115C)
							                        ;* No entry point to code
020A:0F53  00 00				add	[bx+si],al
020A:0F55  E8 01BC				call	sub_19			; (1114)
020A:0F58  B3 91				mov	bl,91h
020A:0F5A  3C 40				cmp	al,40h			; '@'
020A:0F5C  75 06				jne	loc_93			; Jump if not equal
020A:0F5E  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (020A:0263=0)
020A:0F62  74 21				je	loc_94			; Jump if equal
020A:0F64			loc_93:
020A:0F64  80 3E 0026 01			cmp	byte ptr ds:[26h],1	; (020A:0026=3)
020A:0F69  74 1A				je	loc_94			; Jump if equal
020A:0F6B  B3 90				mov	bl,90h
020A:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0F72  74 11				je	loc_94			; Jump if equal
020A:0F74  B3 92				mov	bl,92h
020A:0F76  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (020A:0033=0Ch)
020A:0F7A  72 09				jb	loc_94			; Jump if below
020A:0F7C  B8 0001				mov	ax,1
020A:0F7F  A2 0026				mov	byte ptr ds:[26h],al	; (020A:0026=3)
020A:0F82  32 DB				xor	bl,bl			; Zero register
020A:0F84  C3					retn
020A:0F85			loc_94:
020A:0F85  33 C0				xor	ax,ax			; Zero register
020A:0F87  C3					retn
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 21

020A:0F88  E8 0189				call	sub_19			; (1114)
020A:0F8B  A0 0026				mov	al,byte ptr ds:[26h]	; (020A:0026=3)
020A:0F8E  0A C0				or	al,al			; Zero ?
020A:0F90  74 0B				jz	loc_95			; Jump if zero
020A:0F92  C6 06 0026 00			mov	byte ptr ds:[26h],0	; (020A:0026=3)
020A:0F97  B8 0001				mov	ax,1
020A:0F9A  32 DB				xor	bl,bl			; Zero register
020A:0F9C  C3					retn
020A:0F9D			loc_95:
020A:0F9D  33 C0				xor	ax,ax			; Zero register
020A:0F9F  B3 93				mov	bl,93h
020A:0FA1  C3					retn
							                        ;* No entry point to code
020A:0FA2  E8 016F				call	sub_19			; (1114)
020A:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FAA  74 0D				je	loc_96			; Jump if equal
020A:0FAC  E8 0037				call	sub_15			; (0FE6)
020A:0FAF  0B C0				or	ax,ax			; Zero ?
020A:0FB1  74 0C				jz	loc_97			; Jump if zero
020A:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FB9			loc_96:
020A:0FB9  B8 0001				mov	ax,1
020A:0FBC  32 DB				xor	bl,bl			; Zero register
020A:0FBE  C3					retn
020A:0FBF			loc_97:
020A:0FBF  B3 82				mov	bl,82h
020A:0FC1  33 C0				xor	ax,ax			; Zero register
020A:0FC3  C3					retn
							                        ;* No entry point to code
020A:0FC4  E8 014D				call	sub_19			; (1114)
020A:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FCC  74 0D				je	loc_98			; Jump if equal
020A:0FCE  E8 004F				call	sub_16			; (1020)
020A:0FD1  0B C0				or	ax,ax			; Zero ?
020A:0FD3  74 0C				jz	loc_99			; Jump if zero
020A:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FDB			loc_98:
020A:0FDB  B8 0001				mov	ax,1
020A:0FDE  32 DB				xor	bl,bl			; Zero register
020A:0FE0  C3					retn
020A:0FE1			loc_99:
020A:0FE1  B3 82				mov	bl,82h
020A:0FE3  33 C0				xor	ax,ax			; Zero register
020A:0FE5  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_15		proc	near
020A:0FE6  E8 012B				call	sub_19			; (1114)
020A:0FE9  80 3E 0027 01			cmp	byte ptr ds:[27h],1	; (020A:0027=4)
020A:0FEE  75 25				jne	loc_103			; Jump if not equal
020A:0FF0  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:0FFA  74 07				je	loc_101			; Jump if equal
020A:0FFC			loc_100:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 22

020A:0FFC  E8 008A				call	sub_17			; (1089)
020A:0FFF  0B C0				or	ax,ax			; Zero ?
020A:1001  75 0E				jnz	loc_102			; Jump if not zero
020A:1003			loc_101:
020A:1003  B8 0001				mov	ax,1
020A:1006  E8 01B5				call	sub_21			; (11BE)
020A:1009  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:100D  75 ED				jnz	loc_100			; Jump if not zero
020A:100F  EB 0A				jmp	short loc_104		; (101B)
020A:1011			loc_102:
020A:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:1015			loc_103:
020A:1015  B8 0001				mov	ax,1
020A:1018  32 DB				xor	bl,bl			; Zero register
020A:101A  C3					retn
020A:101B			loc_104:
020A:101B  B3 82				mov	bl,82h
020A:101D  33 C0				xor	ax,ax			; Zero register
020A:101F  C3					retn
				sub_15		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_16		proc	near
020A:1020  E8 00F1				call	sub_19			; (1114)
020A:1023  80 3E 0027 00			cmp	byte ptr ds:[27h],0	; (020A:0027=4)
020A:1028  74 34				je	loc_109			; Jump if equal
020A:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:102F  74 33				je	loc_110			; Jump if equal
020A:1031  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:1036			loc_105:
020A:1036  E8 0050				call	sub_17			; (1089)
020A:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020A:002F=3D3Ch)
020A:103E  75 08				jne	loc_106			; Jump if not equal
020A:1040  0B C0				or	ax,ax			; Zero ?
020A:1042  74 16				jz	loc_108			; Jump if zero
020A:1044  33 C0				xor	ax,ax			; Zero register
020A:1046  EB 07				jmp	short loc_107		; (104F)
020A:1048			loc_106:
020A:1048  0B C0				or	ax,ax			; Zero ?
020A:104A  75 0E				jnz	loc_108			; Jump if not zero
020A:104C  B8 0001				mov	ax,1
020A:104F			loc_107:
020A:104F  E8 016C				call	sub_21			; (11BE)
020A:1052  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:1056  75 DE				jnz	loc_105			; Jump if not zero
020A:1058  EB 0A				jmp	short loc_110		; (1064)
020A:105A			loc_108:
020A:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:105E			loc_109:
020A:105E  B8 0001				mov	ax,1
020A:1061  32 DB				xor	bl,bl			; Zero register
020A:1063  C3					retn
020A:1064			loc_110:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 23

020A:1064  B3 82				mov	bl,82h
020A:1066  33 C0				xor	ax,ax			; Zero register
020A:1068  C3					retn
				sub_16		endp

							                        ;* No entry point to code
020A:1069  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:106F  74 04				je	loc_111			; Jump if equal
020A:1071  B8 0001				mov	ax,1
020A:1074  CB					retf				; Return far
020A:1075			loc_111:
020A:1075  E8 FF6E				call	sub_15			; (0FE6)
020A:1078  CB					retf
							                        ;* No entry point to code
020A:1079  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:107F  74 04				je	loc_112			; Jump if equal
020A:1081  B8 0001				mov	ax,1
020A:1084  CB					retf				; Return far
020A:1085			loc_112:
020A:1085  E8 FF98				call	sub_16			; (1020)
020A:1088  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_17		proc	near
020A:1089  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:108D  98					cbw				; Convrt byte to word
020A:108E  32 DB				xor	bl,bl			; Zero register
020A:1090  C3					retn
				sub_17		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_18		proc	near
020A:1091  8B D0				mov	dx,ax
020A:1093  8B F1				mov	si,cx
020A:1095  33 FF				xor	di,di			; Zero register
020A:1097  06					push	es
020A:1098  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=2AEh)
020A:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=57BEh)

020A:10A6			locloop_113:
020A:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020A:10AA  75 08				jne	loc_114			; Jump if not equal
020A:10AC  0B FF				or	di,di			; Zero ?
020A:10AE  75 48				jnz	loc_117			; Jump if not zero
020A:10B0  8B FB				mov	di,bx
020A:10B2  EB 44				jmp	short loc_117		; (10F8)
020A:10B4			loc_114:
020A:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020A:10B8  75 3E				jne	loc_117			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 24

020A:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10BE  26: 03 47 04				add	ax,es:[bx+4]
020A:10C2  3B C6				cmp	ax,si
020A:10C4  72 32				jb	loc_117			; Jump if below
020A:10C6  8B C6				mov	ax,si
020A:10C8  03 C2				add	ax,dx
020A:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020A:10CE  72 28				jb	loc_117			; Jump if below
020A:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
020A:10D4  76 08				jbe	loc_115			; Jump if below or =
020A:10D6  03 D6				add	dx,si
020A:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020A:10DC  2B D6				sub	dx,si
020A:10DE			loc_115:
020A:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10E2  26: 03 47 04				add	ax,es:[bx+4]
020A:10E6  2B C2				sub	ax,dx
020A:10E8  2B C6				sub	ax,si
020A:10EA  76 02				jbe	loc_116			; Jump if below or =
020A:10EC  03 D0				add	dx,ax
020A:10EE			loc_116:
020A:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020A:10F2  0B FF				or	di,di			; Zero ?
020A:10F4  75 02				jnz	loc_117			; Jump if not zero
020A:10F6  8B FB				mov	di,bx
020A:10F8			loc_117:
020A:10F8  83 C3 06				add	bx,6
020A:10FB  E2 A9				loop	locloop_113		; Loop if cx > 0

020A:10FD  0B FF				or	di,di			; Zero ?
020A:10FF  74 11				jz	loc_118			; Jump if zero
020A:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020A:1106  26: C6 05 01				mov	byte ptr es:[di],1
020A:110A  26: 89 75 02				mov	es:[di+2],si
020A:110E  26: 89 55 04				mov	es:[di+4],dx
020A:1112			loc_118:
020A:1112  07					pop	es
020A:1113  C3					retn
				sub_18		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_19		proc	near
020A:1114  1E					push	ds
020A:1115  50					push	ax
020A:1116  B8 0040				mov	ax,40h
020A:1119  8E D8				mov	ds,ax
020A:111B  9F					lahf				; Load ah from flags
020A:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1122  75 0C				jnz	loc_120			; Jump if not zero
020A:1124  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:112B			loc_119:
020A:112B  9E					sahf				; Store ah into flags
020A:112C  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 25

020A:112D  1F					pop	ds
020A:112E  EB 03				jmp	short loc_121		; (1133)
020A:1130			loc_120:
020A:1130  FA					cli				; Disable interrupts
020A:1131  EB F8				jmp	short loc_119		; (112B)
020A:1133			loc_121:
020A:1133  C3					retn
				sub_19		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_20		proc	near
020A:1134  1E					push	ds
020A:1135  50					push	ax
020A:1136  B8 0040				mov	ax,40h
020A:1139  8E D8				mov	ds,ax
020A:113B  9F					lahf				; Load ah from flags
020A:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1142  75 14				jnz	loc_123			; Jump if not zero
020A:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:114A  75 0C				jnz	loc_123			; Jump if not zero
020A:114C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1153			loc_122:
020A:1153  9E					sahf				; Store ah into flags
020A:1154  58					pop	ax
020A:1155  1F					pop	ds
020A:1156  EB 03				jmp	short loc_124		; (115B)
020A:1158			loc_123:
020A:1158  FB					sti				; Enable interrupts
020A:1159  EB F8				jmp	short loc_122		; (1153)
020A:115B			loc_124:
020A:115B  C3					retn
				sub_20		endp

020A:115C			loc_125:
020A:115C  1E					push	ds
020A:115D  50					push	ax
020A:115E  B8 0040				mov	ax,40h
020A:1161  8E D8				mov	ds,ax
020A:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1169  75 4F				jnz	loc_133			; Jump if not zero
020A:116B  55					push	bp
020A:116C  8B EC				mov	bp,sp
020A:116E  8B 46 0A				mov	ax,[bp+0Ah]
020A:1171  5D					pop	bp
020A:1172  A9 0100				test	ax,100h
020A:1175  75 43				jnz	loc_133			; Jump if not zero
020A:1177  A9 0200				test	ax,200h
020A:117A  74 22				jz	loc_129			; Jump if zero
020A:117C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1189  75 2F				jnz	loc_133			; Jump if not zero
020A:118B			loc_126:
020A:118B  86 E0				xchg	ah,al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 26

020A:118D  FC					cld				; Clear direction
020A:118E  A8 04				test	al,4
020A:1190  75 25				jnz	loc_132			; Jump if not zero
020A:1192			loc_127:
020A:1192  A8 08				test	al,8
020A:1194  75 11				jnz	loc_130			; Jump if not zero
020A:1196  70 19				jo	loc_131			; Jump if overflow=1
020A:1198			loc_128:
020A:1198  9E					sahf				; Store ah into flags
020A:1199  58					pop	ax
020A:119A  1F					pop	ds
020A:119B  CA 0002				retf	2			; Return far
020A:119E			loc_129:
020A:119E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:11A5  EB E4				jmp	short loc_126		; (118B)
020A:11A7			loc_130:
020A:11A7  70 EF				jo	loc_128			; Jump if overflow=1
020A:11A9  50					push	ax
020A:11AA  B0 7F				mov	al,7Fh
020A:11AC  04 02				add	al,2
020A:11AE  58					pop	ax
020A:11AF  EB E7				jmp	short loc_128		; (1198)
020A:11B1			loc_131:
020A:11B1  50					push	ax
020A:11B2  32 C0				xor	al,al			; Zero register
020A:11B4  58					pop	ax
020A:11B5  EB E1				jmp	short loc_128		; (1198)
020A:11B7			loc_132:
020A:11B7  FD					std				; Set direction flag
020A:11B8  EB D8				jmp	short loc_127		; (1192)
020A:11BA			loc_133:
020A:11BA  58					pop	ax
020A:11BB  1F					pop	ds
020A:11BC  CF					iret				; Interrupt return
020A:11BD  00 3D				add	[di],bh
020A:11BF  02 00				add	al,[bx+si]
020A:11C1  75 06				jnz	loc_134			; Jump if not zero
020A:11C3  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:11C7  98					cbw				; Convrt byte to word
020A:11C8  C3					retn
020A:11C9			loc_134:
020A:11C9  C4					db	0C4h
020A:11CA  C4 52 00		;*		les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
020A:11CA  C4 52 00				db	0C4h, 52h, 00h
020A:11CD  C3					retn
							                        ;* No entry point to code
020A:11CE  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
020A:11D3  49					dec	cx
020A:11D4  00 00				add	[bx+si],al
020A:11D6  4D					dec	bp
020A:11D7  34 00				xor	al,0
020A:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020A:0600=2)
020A:11DD  00 FD				add	ch,bh
020A:11DF  35 FFFF				xor	ax,0FFFFh
020A:11E2  06					push	es
020A:11E3  00 23				add	[bp+di],ah
020A:11E5  0021[00]				db	33 dup (0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 27

020A:1206  00			data_140	db	0
020A:1207  00			data_141	db	0
020A:1208  00			data_142	db	0
020A:1209  00			data_143	db	0
020A:120A  00			data_144	db	0
020A:120B  00					db	0
020A:120C  00					db	0
020A:120D  00					db	0
020A:120E  00					db	0
020A:120F  00					db	0
020A:1210  00					db	0
020A:1211  00					db	0
020A:1212  00					db	0
020A:1213  00					db	0
020A:1214  00					db	0
020A:1215  00					db	0
020A:1216  00					db	0
020A:1217  00					db	0
020A:1218  00					db	0
020A:1219  00					db	0
020A:121A  00					db	0
020A:121B  00					db	0
020A:121C  00					db	0
020A:121D  00					db	0
020A:121E  00					db	0
020A:121F  00					db	0
020A:1220  00					db	0
020A:1221  00					db	0
020A:1222  00					db	0
020A:1223  00					db	0
020A:1224  00					db	0
020A:1225  00					db	0
020A:1226  00					db	0
020A:1227  00					db	0
020A:1228  00					db	0
020A:1229  00					db	0
020A:122A  00					db	0
020A:122B  00					db	0
020A:122C  00					db	0
020A:122D  00					db	0
020A:122E  00					db	0
020A:122F  00					db	0
020A:1230  00					db	0
020A:1231  00					db	0
020A:1232  00					db	0
020A:1233  00					db	0
020A:1234  00					db	0
020A:1235  00					db	0
020A:1236  00					db	0
020A:1237  00					db	0
020A:1238  00					db	0
020A:1239  00					db	0
020A:123A  00					db	0
020A:123B  00					db	0
020A:123C  00					db	0
020A:123D  00					db	0
020A:123E  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 28

020A:123F  00					db	0
020A:1240  00					db	0
020A:1241  00					db	0
020A:1242  00					db	0
020A:1243  00					db	0
020A:1244  00					db	0
020A:1245  00					db	0
020A:1246  00					db	0
020A:1247  00					db	0
020A:1248  00					db	0
020A:1249  00					db	0
020A:124A  00					db	0
020A:124B  00					db	0
020A:124C  00					db	0
020A:124D  00					db	0
020A:124E  00					db	0
020A:124F  00					db	0
020A:1250  00					db	0
020A:1251  00					db	0
020A:1252  00					db	0
020A:1253  00					db	0
020A:1254  00					db	0
020A:1255  00					db	0
020A:1256  00					db	0
020A:1257  00					db	0
020A:1258  00					db	0
020A:1259  00					db	0
020A:125A  00					db	0
020A:125B  00					db	0
020A:125C  00					db	0
020A:125D  00					db	0
020A:125E  00					db	0
020A:125F  00					db	0
020A:1260  00					db	0
020A:1261  00					db	0
020A:1262  00					db	0
020A:1263  00					db	0
020A:1264  00					db	0
020A:1265  00					db	0
020A:1266  00					db	0
020A:1267  00					db	0
020A:1268  00					db	0
020A:1269  00					db	0
020A:126A  00					db	0
020A:126B  00					db	0
020A:126C  00					db	0
020A:126D  00					db	0
020A:126E  00					db	0
020A:126F  00					db	0
020A:1270  00					db	0
020A:1271  00					db	0
020A:1272  00					db	0
020A:1273  00					db	0
020A:1274  00					db	0
020A:1275  00					db	0
020A:1276  00					db	0
020A:1277  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 29

020A:1278  00					db	0
020A:1279  00					db	0
020A:127A  00					db	0
020A:127B  00					db	0
020A:127C  00					db	0
020A:127D  00					db	0
020A:127E  00					db	0
020A:127F  00					db	0
020A:1280  00					db	0
020A:1281  00					db	0
020A:1282  00					db	0
020A:1283  00					db	0
020A:1284  00					db	0
020A:1285  00					db	0
020A:1286  00					db	0
020A:1287  00					db	0
020A:1288  00					db	0
020A:1289  00					db	0
020A:128A  00					db	0
020A:128B  00					db	0
020A:128C  00					db	0
020A:128D  00					db	0
020A:128E  00					db	0
020A:128F  00					db	0
020A:1290  00					db	0
020A:1291  00					db	0
020A:1292  00					db	0
020A:1293  00					db	0
020A:1294  00					db	0
020A:1295  00					db	0
020A:1296  00					db	0
020A:1297  00					db	0
020A:1298  00					db	0
020A:1299  00					db	0
020A:129A  00					db	0
020A:129B  00					db	0
020A:129C  00					db	0
020A:129D  00					db	0
020A:129E  00					db	0
020A:129F  00					db	0
020A:12A0  00					db	0
020A:12A1  00					db	0
020A:12A2  00					db	0
020A:12A3  00					db	0
020A:12A4  00					db	0
020A:12A5  00					db	0
020A:12A6  00					db	0
020A:12A7  00					db	0
020A:12A8  00					db	0
020A:12A9  00					db	0
020A:12AA  00					db	0
020A:12AB  00					db	0
020A:12AC  00					db	0
020A:12AD  00					db	0
020A:12AE  00					db	0
020A:12AF  00					db	0
020A:12B0  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 30

020A:12B1  00					db	0
020A:12B2  00					db	0
020A:12B3  00					db	0
020A:12B4  00					db	0
020A:12B5  00					db	0
020A:12B6  00					db	0
020A:12B7  00					db	0
020A:12B8  00					db	0
020A:12B9  00					db	0
020A:12BA  00					db	0
020A:12BB  00					db	0
020A:12BC  00					db	0
020A:12BD  00					db	0
020A:12BE  00					db	0
020A:12BF  00					db	0
020A:12C0  00					db	0
020A:12C1  00					db	0
020A:12C2  00					db	0
020A:12C3  00					db	0
020A:12C4  00					db	0
020A:12C5  00					db	0
020A:12C6  00					db	0
020A:12C7  00					db	0
020A:12C8  00					db	0
020A:12C9  00					db	0
020A:12CA  00					db	0
020A:12CB  00					db	0
020A:12CC  00					db	0
020A:12CD  00					db	0
020A:12CE  00					db	0
020A:12CF  00					db	0
020A:12D0  00					db	0
020A:12D1  00					db	0
020A:12D2  00					db	0
020A:12D3  00					db	0
020A:12D4  00					db	0
020A:12D5  00					db	0
020A:12D6  00					db	0
020A:12D7  00					db	0
020A:12D8  00					db	0
020A:12D9  00					db	0
020A:12DA  00					db	0
020A:12DB  00					db	0
020A:12DC  00					db	0
020A:12DD  00					db	0
020A:12DE  00					db	0
020A:12DF  00					db	0
020A:12E0  00					db	0
020A:12E1  00					db	0
020A:12E2  00					db	0
020A:12E3  00					db	0
020A:12E4  00					db	0
020A:12E5  00					db	0
020A:12E6  00					db	0
020A:12E7  00					db	0
020A:12E8  00					db	0
020A:12E9  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 31

020A:12EA  00					db	0
020A:12EB  00					db	0
020A:12EC  00					db	0
020A:12ED  00					db	0
020A:12EE  00					db	0
020A:12EF  00					db	0
020A:12F0  00					db	0
020A:12F1  00					db	0
020A:12F2  00					db	0
020A:12F3  00					db	0
020A:12F4  00					db	0
020A:12F5  00					db	0
020A:12F6  00					db	0
020A:12F7  00					db	0
020A:12F8  00					db	0
020A:12F9  00					db	0
020A:12FA  00					db	0
020A:12FB  00					db	0
020A:12FC  00					db	0
020A:12FD  00					db	0
020A:12FE  00					db	0
020A:12FF  00					db	0
020A:1300  00					db	0
020A:1301  00					db	0
020A:1302  00					db	0
020A:1303  00					db	0
020A:1304  00					db	0
020A:1305  00					db	0
020A:1306  00					db	0
020A:1307  00					db	0
020A:1308  00					db	0
020A:1309  00					db	0
020A:130A  00					db	0
020A:130B  00					db	0
020A:130C  00					db	0
020A:130D  00					db	0
020A:130E  00					db	0
020A:130F  00					db	0
020A:1310  00					db	0
020A:1311  00					db	0
020A:1312  00					db	0
020A:1313  00					db	0
020A:1314  00					db	0
020A:1315  00					db	0
020A:1316  00					db	0
020A:1317  00					db	0
020A:1318  00					db	0
020A:1319  00					db	0
020A:131A  00					db	0
020A:131B  0000			data_145	dw	0
020A:131D  0000			data_146	dw	0
020A:131F  0000			data_147	dw	0
020A:1321  0000			data_148	dw	0
020A:1323  00					db	0
020A:1324  00					db	0
020A:1325  00					db	0
020A:1326  0000			data_149	dw	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 32

020A:1328  00			data_150	db	0
020A:1329  00			data_151	db	0
020A:132A  00					db	0
020A:132B  00					db	0
020A:132C  00					db	0
020A:132D  00					db	0
020A:132E  00					db	0
020A:132F  00					db	0
020A:1330  00					db	0
020A:1331  00					db	0
020A:1332  00					db	0
020A:1333  00					db	0
020A:1334  00					db	0
020A:1335  00					db	0
020A:1336  00					db	0
020A:1337  00					db	0
020A:1338  00					db	0
020A:1339  00					db	0
020A:133A  00					db	0
020A:133B  00					db	0
020A:133C  00					db	0
020A:133D  00					db	0
020A:133E  00			data_152	db	0
020A:133F  00					db	0
020A:1340  00					db	0
020A:1341  00					db	0
020A:1342  00					db	0
020A:1343  00					db	0
020A:1344  00					db	0
020A:1345  0000			data_153	dw	0
020A:1347  00					db	0
020A:1348  00					db	0
020A:1349  00					db	0
020A:134A  00					db	0
020A:134B  00					db	0
020A:134C  00					db	0
020A:134D  00					db	0
020A:134E  00					db	0
020A:134F  00					db	0
020A:1350  00					db	0
020A:1351  00					db	0
020A:1352  00					db	0
020A:1353  00					db	0
020A:1354  00					db	0
020A:1355  00					db	0
020A:1356  00					db	0
020A:1357  00					db	0
020A:1358  00					db	0
020A:1359  00					db	0
020A:135A  00					db	0
020A:135B  00					db	0
020A:135C  00					db	0
020A:135D  00					db	0
020A:135E  00					db	0
020A:135F  00					db	0
020A:1360  00					db	0
020A:1361  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 33

020A:1362  00					db	0
020A:1363  00					db	0
020A:1364  00					db	0
020A:1365  00					db	0
020A:1366  00					db	0
020A:1367  00					db	0
020A:1368  00					db	0
020A:1369  00					db	0
020A:136A  00					db	0
020A:136B  00					db	0
020A:136C  00					db	0
020A:136D  00					db	0
020A:136E  00					db	0
020A:136F  00					db	0
020A:1370  00					db	0
020A:1371  00					db	0
020A:1372  00					db	0
020A:1373  00					db	0
020A:1374  00					db	0
020A:1375  00					db	0
020A:1376  00					db	0
020A:1377  00					db	0
020A:1378  00					db	0
020A:1379  00					db	0
020A:137A  00					db	0
020A:137B  00					db	0
020A:137C  00					db	0
020A:137D  00					db	0
020A:137E  00					db	0
020A:137F  00					db	0
020A:1380  00					db	0
020A:1381  00					db	0
020A:1382  00					db	0
020A:1383  00					db	0
020A:1384  00					db	0
020A:1385  00					db	0
020A:1386  00					db	0
020A:1387  00					db	0
020A:1388  00					db	0
020A:1389  00					db	0
020A:138A  00					db	0
020A:138B  00					db	0
020A:138C  00					db	0
020A:138D  00					db	0
020A:138E  00					db	0
020A:138F  00					db	0
020A:1390  00					db	0
020A:1391  00					db	0
020A:1392  00					db	0
020A:1393  00					db	0
020A:1394  00					db	0
020A:1395  00					db	0
020A:1396  00					db	0
020A:1397  00					db	0
020A:1398  00					db	0
020A:1399  00					db	0
020A:139A  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 34

020A:139B  00					db	0
020A:139C  00					db	0
020A:139D  00					db	0
020A:139E  00					db	0
020A:139F  00					db	0
020A:13A0  00					db	0
020A:13A1  00					db	0
020A:13A2  00					db	0
020A:13A3  00					db	0
020A:13A4  00					db	0
020A:13A5  00					db	0
020A:13A6  00					db	0
020A:13A7  00					db	0
020A:13A8  00					db	0
020A:13A9  00					db	0
020A:13AA  00					db	0
020A:13AB  00					db	0
020A:13AC  00					db	0
020A:13AD  00					db	0
020A:13AE  00					db	0
020A:13AF  00					db	0
020A:13B0  00					db	0
020A:13B1  00					db	0
020A:13B2  00					db	0
020A:13B3  00					db	0
020A:13B4  00					db	0
020A:13B5  00					db	0
020A:13B6  00					db	0
020A:13B7  00					db	0
020A:13B8  00					db	0
020A:13B9  00					db	0
020A:13BA  00					db	0
020A:13BB  00					db	0
020A:13BC  00					db	0
020A:13BD  00					db	0
020A:13BE  00					db	0
020A:13BF  00					db	0
020A:13C0  00					db	0
020A:13C1  00					db	0
020A:13C2  00					db	0
020A:13C3  00					db	0
020A:13C4  00					db	0
020A:13C5  00					db	0
020A:13C6  00					db	0
020A:13C7  00					db	0
020A:13C8  00					db	0
020A:13C9  00					db	0
020A:13CA  00					db	0
020A:13CB  00					db	0
020A:13CC  00					db	0
020A:13CD  00					db	0
020A:13CE  00					db	0
020A:13CF  00					db	0
020A:13D0  00					db	0
020A:13D1  00					db	0
020A:13D2  00					db	0
020A:13D3  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 35

020A:13D4  00					db	0
020A:13D5  00					db	0
020A:13D6  00					db	0
020A:13D7  00					db	0
020A:13D8  00					db	0
020A:13D9  00					db	0
020A:13DA  00					db	0
020A:13DB  00					db	0
020A:13DC  00					db	0
020A:13DD  00					db	0
020A:13DE  00					db	0
020A:13DF  00					db	0
020A:13E0  00					db	0
020A:13E1  00					db	0
020A:13E2  00					db	0
020A:13E3  00					db	0
020A:13E4  00			data_154	db	0
020A:13E5  00			data_155	db	0
020A:13E6  0000			data_156	dw	0
020A:13E8  00					db	0
020A:13E9  00					db	0
020A:13EA  00					db	0
020A:13EB  00					db	0
020A:13EC  00					db	0
020A:13ED  00					db	0
020A:13EE  00					db	0
020A:13EF  00					db	0
020A:13F0  00					db	0
020A:13F1  00					db	0
020A:13F2  00					db	0
020A:13F3  00					db	0
020A:13F4  00					db	0
020A:13F5  00					db	0
020A:13F6  00					db	0
020A:13F7  00					db	0
020A:13F8  00					db	0
020A:13F9  00					db	0
020A:13FA  00					db	0
020A:13FB  00					db	0
020A:13FC  00					db	0
020A:13FD  00					db	0
020A:13FE  00					db	0
020A:13FF  00					db	0
020A:1400  00					db	0
020A:1401  00					db	0
020A:1402  00					db	0
020A:1403  00					db	0
020A:1404  00					db	0
020A:1405  00					db	0
020A:1406  00					db	0
020A:1407  00					db	0
020A:1408  00					db	0
020A:1409  00					db	0
020A:140A  00					db	0
020A:140B  00					db	0
020A:140C  00					db	0
020A:140D  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 36

020A:140E  00					db	0
020A:140F  00					db	0
020A:1410  00					db	0
020A:1411  00					db	0
020A:1412  00					db	0
020A:1413  00					db	0
020A:1414  00					db	0
020A:1415  00					db	0
020A:1416  00					db	0
020A:1417  00					db	0
020A:1418  00					db	0
020A:1419  00					db	0
020A:141A  00					db	0
020A:141B  00					db	0
020A:141C  00					db	0
020A:141D  00					db	0
020A:141E  00					db	0
020A:141F  00					db	0
020A:1420  00					db	0
020A:1421  00					db	0
020A:1422  00					db	0
020A:1423  00					db	0
020A:1424  00					db	0
020A:1425  00					db	0
020A:1426  00					db	0
020A:1427  00					db	0
020A:1428  00					db	0
020A:1429  00					db	0
020A:142A  00					db	0
020A:142B  00					db	0
020A:142C  00					db	0
020A:142D  00					db	0
020A:142E  00					db	0
020A:142F  00					db	0
020A:1430  00					db	0
020A:1431  00					db	0
020A:1432  00					db	0
020A:1433  00					db	0
020A:1434  00					db	0
020A:1435  00					db	0
020A:1436  00					db	0
020A:1437  00					db	0
020A:1438  00					db	0
020A:1439  00					db	0
020A:143A  00					db	0
020A:143B  00					db	0
020A:143C  00					db	0
020A:143D  00					db	0
020A:143E  00					db	0
020A:143F  00					db	0
020A:1440  00					db	0
020A:1441  00					db	0
020A:1442  00					db	0
020A:1443  00					db	0
020A:1444  00					db	0
020A:1445  00					db	0
020A:1446  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 37

020A:1447  00					db	0
020A:1448  00					db	0
020A:1449  00					db	0
020A:144A  00					db	0
020A:144B  00					db	0
020A:144C  00					db	0
020A:144D  00					db	0
020A:144E  00					db	0
020A:144F  00					db	0
020A:1450  00					db	0
020A:1451  00					db	0
020A:1452  00					db	0
020A:1453  00					db	0
020A:1454  00					db	0
020A:1455  00					db	0
020A:1456  00					db	0
020A:1457  00					db	0
020A:1458  00					db	0
020A:1459  00					db	0
020A:145A  00					db	0
020A:145B  00					db	0
020A:145C  00					db	0
020A:145D  00					db	0
020A:145E  00					db	0
020A:145F  00					db	0
020A:1460  00					db	0
020A:1461  00					db	0
020A:1462  00					db	0
020A:1463  00					db	0
020A:1464  00					db	0
020A:1465  00					db	0
020A:1466  00					db	0
020A:1467  00					db	0
020A:1468  00					db	0
020A:1469  00					db	0
020A:146A  00					db	0
020A:146B  00					db	0
020A:146C  00					db	0
020A:146D  00					db	0
020A:146E  00					db	0
020A:146F  00					db	0
020A:1470  00					db	0
020A:1471  00					db	0
020A:1472  00					db	0
020A:1473  00					db	0
020A:1474  00					db	0
020A:1475  00					db	0
020A:1476  00					db	0
020A:1477  00					db	0
020A:1478  00					db	0
020A:1479  00					db	0
020A:147A  00					db	0
020A:147B  00					db	0
020A:147C  00					db	0
020A:147D  00					db	0
020A:147E  00					db	0
020A:147F  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 38

020A:1480  00					db	0
020A:1481  00					db	0
020A:1482  00					db	0
020A:1483  00					db	0
020A:1484  00					db	0
020A:1485  00					db	0
020A:1486  00					db	0
020A:1487  00					db	0
020A:1488  00					db	0
020A:1489  00					db	0
020A:148A  00					db	0
020A:148B  00					db	0
020A:148C  00					db	0
020A:148D  00					db	0
020A:148E  00					db	0
020A:148F  00					db	0
020A:1490  00					db	0
020A:1491  00					db	0
020A:1492  00					db	0
020A:1493  00					db	0
020A:1494  00					db	0
020A:1495  00					db	0
020A:1496  00					db	0
020A:1497  00					db	0
020A:1498  00					db	0
020A:1499  00					db	0
020A:149A  00					db	0
020A:149B  00					db	0
020A:149C  00					db	0
020A:149D  00					db	0
020A:149E  00					db	0
020A:149F  00					db	0
020A:14A0  00					db	0
020A:14A1  00					db	0
020A:14A2  00					db	0
020A:14A3  00					db	0
020A:14A4  00					db	0
020A:14A5  00					db	0
020A:14A6  00					db	0
020A:14A7  00					db	0
020A:14A8  00					db	0
020A:14A9  00					db	0
020A:14AA  00					db	0
020A:14AB  00					db	0
020A:14AC  00					db	0
020A:14AD  00					db	0
020A:14AE  00					db	0
020A:14AF  00					db	0
020A:14B0  00					db	0
020A:14B1  00					db	0
020A:14B2  00					db	0
020A:14B3  00					db	0
020A:14B4  00					db	0
020A:14B5  00					db	0
020A:14B6  00					db	0
020A:14B7  00					db	0
020A:14B8  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 39

020A:14B9  00					db	0
020A:14BA  00					db	0
020A:14BB  00					db	0
020A:14BC  00					db	0
020A:14BD  00					db	0
020A:14BE  00					db	0
020A:14BF  00					db	0
020A:14C0  00					db	0
020A:14C1  00					db	0
020A:14C2  00					db	0
020A:14C3  00					db	0
020A:14C4  00					db	0
020A:14C5  00					db	0
020A:14C6  00					db	0
020A:14C7  00					db	0
020A:14C8  00					db	0
020A:14C9  00					db	0
020A:14CA  00					db	0
020A:14CB  00					db	0
020A:14CC  00					db	0
020A:14CD  00					db	0
020A:14CE  00					db	0
020A:14CF  00					db	0
020A:14D0  00					db	0
020A:14D1  00					db	0
020A:14D2  00					db	0
020A:14D3  00					db	0
020A:14D4  00					db	0
020A:14D5  00					db	0
020A:14D6  00					db	0
020A:14D7  00					db	0
020A:14D8  00					db	0
020A:14D9  00					db	0
020A:14DA  00					db	0
020A:14DB  00					db	0
020A:14DC  00					db	0
020A:14DD  00					db	0
020A:14DE  00					db	0
020A:14DF  00					db	0
020A:14E0  00					db	0
020A:14E1  00					db	0
020A:14E2  00					db	0
020A:14E3  00					db	0
020A:14E4  00					db	0
020A:14E5  00					db	0
020A:14E6  00					db	0
020A:14E7  00					db	0
020A:14E8  00					db	0
020A:14E9  00					db	0
020A:14EA  00					db	0
020A:14EB  00					db	0
020A:14EC  00					db	0
020A:14ED  00					db	0
020A:14EE  00					db	0
020A:14EF  00					db	0
020A:14F0  00					db	0
020A:14F1  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 40

020A:14F2  00					db	0
020A:14F3  00					db	0
020A:14F4  00					db	0
020A:14F5  00					db	0
020A:14F6  00					db	0
020A:14F7  00					db	0
020A:14F8  00					db	0
020A:14F9  00					db	0
020A:14FA  00			data_157	db	0
020A:14FB  00					db	0
020A:14FC  00					db	0
020A:14FD  00					db	0
020A:14FE  00					db	0
020A:14FF  00					db	0
020A:1500  00					db	0
020A:1501  00					db	0
020A:1502  00					db	0
020A:1503  00					db	0
020A:1504  00			data_158	db	0
020A:1505  00					db	0
020A:1506  00					db	0
020A:1507  00					db	0
020A:1508  00					db	0
020A:1509  00					db	0
020A:150A  00					db	0
020A:150B  00					db	0
020A:150C  00					db	0
020A:150D  00					db	0
020A:150E  00					db	0
020A:150F  00					db	0
020A:1510  00					db	0
020A:1511  00					db	0
020A:1512  00					db	0
020A:1513  00					db	0
020A:1514  00					db	0
020A:1515  00					db	0
020A:1516  00					db	0
020A:1517  00					db	0
020A:1518  00					db	0
020A:1519  00					db	0
020A:151A  00					db	0
020A:151B  00					db	0
020A:151C  00					db	0
020A:151D  00					db	0
020A:151E  00					db	0
020A:151F  00					db	0
020A:1520  00					db	0
020A:1521  00					db	0
020A:1522  00					db	0
020A:1523  00					db	0
020A:1524  00					db	0
020A:1525  00					db	0
020A:1526  00					db	0
020A:1527  00					db	0
020A:1528  00					db	0
020A:1529  00					db	0
020A:152A  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 41

020A:152B  00					db	0
020A:152C  00					db	0
020A:152D  00					db	0
020A:152E  00					db	0
020A:152F  00					db	0
020A:1530  00					db	0
020A:1531  00					db	0
020A:1532  00					db	0
020A:1533  00					db	0
020A:1534  00					db	0
020A:1535  00					db	0
020A:1536  00					db	0
020A:1537  00					db	0
020A:1538  00					db	0
020A:1539  00					db	0
020A:153A  00					db	0
020A:153B  00					db	0
020A:153C  00					db	0
020A:153D  00					db	0
020A:153E  00					db	0
020A:153F  00					db	0
020A:1540  00					db	0
020A:1541  00					db	0
020A:1542  00					db	0
020A:1543  00					db	0
020A:1544  00					db	0
020A:1545  00					db	0
020A:1546  00					db	0
020A:1547  00					db	0
020A:1548  00					db	0
020A:1549  00					db	0
020A:154A  00					db	0
020A:154B  00					db	0
020A:154C  00					db	0
020A:154D  00					db	0
020A:154E  00					db	0
020A:154F  00					db	0
020A:1550  00					db	0
020A:1551  00					db	0
020A:1552  00					db	0
020A:1553  00					db	0
020A:1554  00					db	0
020A:1555  00					db	0
020A:1556  00					db	0
020A:1557  00					db	0
020A:1558  00					db	0
020A:1559  00					db	0
020A:155A  00					db	0
020A:155B  00					db	0
020A:155C  00					db	0
020A:155D  00					db	0
020A:155E  00					db	0
020A:155F  00					db	0
020A:1560  00					db	0
020A:1561  00					db	0
020A:1562  00					db	0
020A:1563  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 42

020A:1564  00					db	0
020A:1565  00					db	0
020A:1566  00					db	0
020A:1567  00					db	0
020A:1568  00					db	0
020A:1569  00					db	0
020A:156A  00					db	0
020A:156B  00					db	0
020A:156C  00					db	0
020A:156D  00					db	0
020A:156E  00					db	0
020A:156F  00					db	0
020A:1570  00					db	0
020A:1571  00					db	0
020A:1572  00					db	0
020A:1573  00					db	0
020A:1574  00					db	0
020A:1575  00					db	0
020A:1576  00					db	0
020A:1577  00					db	0
020A:1578  00					db	0
020A:1579  00					db	0
020A:157A  00					db	0
020A:157B  00					db	0
020A:157C  00					db	0
020A:157D  00					db	0
020A:157E  00					db	0
020A:157F  00					db	0
020A:1580  00					db	0
020A:1581  00					db	0
020A:1582  00					db	0
020A:1583  00					db	0
020A:1584  00					db	0
020A:1585  00					db	0
020A:1586  00					db	0
020A:1587  00					db	0
020A:1588  00					db	0
020A:1589  00					db	0
020A:158A  00					db	0
020A:158B  00					db	0
020A:158C  00					db	0
020A:158D  00					db	0
020A:158E  00					db	0
020A:158F  00					db	0
020A:1590  00					db	0
020A:1591  00					db	0
020A:1592  00					db	0
020A:1593  00					db	0
020A:1594  00					db	0
020A:1595  00					db	0
020A:1596  00					db	0
020A:1597  00					db	0
020A:1598  00					db	0
020A:1599  00					db	0
020A:159A  00					db	0
020A:159B  00					db	0
020A:159C  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 43

020A:159D  00					db	0
020A:159E  00					db	0
020A:159F  00					db	0
020A:15A0  00					db	0
020A:15A1  00					db	0
020A:15A2  00					db	0
020A:15A3  00					db	0
020A:15A4  00					db	0
020A:15A5  00					db	0
020A:15A6  00					db	0
020A:15A7  00					db	0
020A:15A8  00					db	0
020A:15A9  00					db	0
020A:15AA  00					db	0
020A:15AB  00					db	0
020A:15AC  00					db	0
020A:15AD  00					db	0
020A:15AE  00					db	0
020A:15AF  00					db	0
020A:15B0  00					db	0
020A:15B1  00					db	0
020A:15B2  00					db	0
020A:15B3  00					db	0
020A:15B4  00					db	0
020A:15B5  00					db	0
020A:15B6  00					db	0
020A:15B7  00					db	0
020A:15B8  00					db	0
020A:15B9  00					db	0
020A:15BA  00					db	0
020A:15BB  00					db	0
020A:15BC  00					db	0
020A:15BD  00					db	0
020A:15BE  00					db	0
020A:15BF  00					db	0
020A:15C0  00					db	0
020A:15C1  00					db	0
020A:15C2  00					db	0
020A:15C3  00					db	0
020A:15C4  00					db	0
020A:15C5  00					db	0
020A:15C6  00					db	0
020A:15C7  00					db	0
020A:15C8  00					db	0
020A:15C9  00					db	0
020A:15CA  00					db	0
020A:15CB  00					db	0
020A:15CC  00					db	0
020A:15CD  00					db	0
020A:15CE  00			data_159	db	0
020A:15CF  00			data_160	db	0
020A:15D0  00			data_161	db	0
020A:15D1  00					db	0
020A:15D2  00					db	0
020A:15D3  00					db	0
020A:15D4  00					db	0
020A:15D5  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 44

020A:15D6  00					db	0
020A:15D7  00					db	0
020A:15D8  00					db	0
020A:15D9  00					db	0
020A:15DA  00					db	0
020A:15DB  00					db	0
020A:15DC  00					db	0
020A:15DD  00					db	0
020A:15DE  00					db	0
020A:15DF  00					db	0
020A:15E0  00					db	0
020A:15E1  00					db	0
020A:15E2  00					db	0
020A:15E3  00					db	0
020A:15E4  00					db	0
020A:15E5  00					db	0
020A:15E6  00					db	0
020A:15E7  00					db	0
020A:15E8  00					db	0
020A:15E9  00					db	0
020A:15EA  00					db	0
020A:15EB  00					db	0
020A:15EC  00					db	0
020A:15ED  00					db	0
020A:15EE  00					db	0
020A:15EF  00					db	0
020A:15F0  00					db	0
020A:15F1  00					db	0
020A:15F2  00					db	0
020A:15F3  00					db	0
020A:15F4  00					db	0
020A:15F5  00					db	0
020A:15F6  00					db	0
020A:15F7  00					db	0
020A:15F8  00					db	0
020A:15F9  00					db	0
020A:15FA  00					db	0
020A:15FB  00					db	0
020A:15FC  00					db	0
020A:15FD  00					db	0
020A:15FE  00					db	0
020A:15FF  00					db	0
020A:1600  00					db	0
020A:1601  00					db	0
020A:1602  00					db	0
020A:1603  00					db	0
020A:1604  00					db	0
020A:1605  00					db	0
020A:1606  00					db	0
020A:1607  00					db	0
020A:1608  00					db	0
020A:1609  00					db	0
020A:160A  00					db	0
020A:160B  00					db	0
020A:160C  00					db	0
020A:160D  00					db	0
020A:160E  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 45

020A:160F  00					db	0
020A:1610  00					db	0
020A:1611  00					db	0
020A:1612  00					db	0
020A:1613  00					db	0
020A:1614  00					db	0
020A:1615  00					db	0
020A:1616  00					db	0
020A:1617  00					db	0
020A:1618  00					db	0
020A:1619  00					db	0
020A:161A  00					db	0
020A:161B  00					db	0
020A:161C  00					db	0
020A:161D  00					db	0
020A:161E  00					db	0
020A:161F  00					db	0
020A:1620  00					db	0
020A:1621  00					db	0
020A:1622  00					db	0
020A:1623  00					db	0
020A:1624  00					db	0
020A:1625  00					db	0
020A:1626  00					db	0
020A:1627  00					db	0
020A:1628  00					db	0
020A:1629  00					db	0
020A:162A  00					db	0
020A:162B  00					db	0
020A:162C  00					db	0
020A:162D  00					db	0
020A:162E  00					db	0
020A:162F  00					db	0
020A:1630  00					db	0
020A:1631  00					db	0
020A:1632  00					db	0
020A:1633  00					db	0
020A:1634  00					db	0
020A:1635  00					db	0
020A:1636  00					db	0
020A:1637  00					db	0
020A:1638  00					db	0
020A:1639  00					db	0
020A:163A  00					db	0
020A:163B  00					db	0
020A:163C  00					db	0
020A:163D  00					db	0
020A:163E  00					db	0
020A:163F  00					db	0
020A:1640  00					db	0
020A:1641  00					db	0
020A:1642  00					db	0
020A:1643  00					db	0
020A:1644  00					db	0
020A:1645  00					db	0
020A:1646  00					db	0
020A:1647  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 46

020A:1648  00					db	0
020A:1649  00					db	0
020A:164A  00					db	0
020A:164B  00					db	0
020A:164C  00					db	0
020A:164D  00					db	0
020A:164E  00					db	0
020A:164F  00					db	0
020A:1650  00					db	0
020A:1651  00					db	0
020A:1652  00					db	0
020A:1653  00					db	0
020A:1654  00					db	0
020A:1655  00					db	0
020A:1656  00					db	0
020A:1657  00					db	0
020A:1658  00					db	0
020A:1659  00					db	0
020A:165A  00					db	0
020A:165B  00					db	0
020A:165C  00					db	0
020A:165D  00					db	0
020A:165E  00					db	0
020A:165F  00					db	0
020A:1660  00					db	0
020A:1661  00					db	0
020A:1662  00					db	0
020A:1663  00					db	0
020A:1664  00					db	0
020A:1665  00					db	0
020A:1666  00					db	0
020A:1667  00 00				add	[bx+si],al
020A:1669  00 0C				add	[si],cl
020A:166B  00 82 5401				add	[bp+si+5401h],al
020A:166F  03 58 72				add	bx,[bx+si+72h]
020A:1672  03 09				add	cx,[bx+di]
020A:1674  00 19				add	[bx+di],bl
020A:1676  00 00				add	[bx+si],al
020A:1678  0C 00				or	al,0
020A:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020A:167D  03 00				add	ax,[bx+si]
020A:167F  00 FF				add	bh,bh
020A:1681  FF					db	0FFh
020A:1682  D9					db	0D9h
020A:1683  19 04				sbb	[si],ax
020A:1685  00 00				add	[bx+si],al
020A:1687  00 41 41				add	[bx+di+41h],al
020A:168A  41					db	41h
020A:168B  41 41 41 41 41 41	data_163	db	'AAAAAAAAAAAAAA', 0
020A:1691  41 41 41 41 41 41
020A:1697  41 41 00
020A:169A  00 00				add	[bx+si],al
020A:169C  00 41 41				add	[bx+di+41h],al
020A:169F  0008[41]				db	8 dup (41h)
020A:16A7  00 00				add	[bx+si],al
020A:16A9  41 41				db	 41h, 41h
020A:16AB  41			data_166	db	41h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 47

020A:16AC  41 41 41 41 41 41	data_167	db	'AAAAAAAAAAAAAA', 0
020A:16B2  41 41 41 41 41 41
020A:16B8  41 41 00
020A:16BB  00 00				add	[bx+si],al
020A:16BD  00 41 41				add	[bx+di+41h],al
020A:16C0  0008[41]				db	8 dup (41h)
020A:16C8  00 00				add	[bx+si],al
020A:16CA  0011[41]				db	17 dup (41h)
020A:16DB  00					db	0
020A:16DC  00 00				add	[bx+si],al
020A:16DE  00 41 41				add	[bx+di+41h],al
020A:16E1  0008[41]				db	8 dup (41h)
020A:16E9  00 00				add	[bx+si],al
020A:16EB  0011[41]				db	17 dup (41h)
020A:16FC  00					db	0
020A:16FD  00 00				add	[bx+si],al
020A:16FF  00 41 41				add	[bx+di+41h],al
020A:1702  0008[41]				db	8 dup (41h)
020A:170A  00					db	0
020A:170B  00 00				add	[bx+si],al
020A:170D  00 95 4C1C				add	data_563[di],dl		; (020A:4C1C=2)
020A:1711  7C 03				jl	loc_135			; Jump if <
020A:1713  12 00				adc	al,[bx+si]
020A:1715  00			data_173	db	0
020A:1716			loc_135:
020A:1716  52					push	dx
020A:1717  03 00				add	ax,[bx+si]
020A:1719  00 00				add	[bx+si],al
020A:171B  00 C7				add	bh,al
020A:171D  1C 00				sbb	al,0
020A:171F  00 41 3A				add	[bx+di+3Ah],al
020A:1722  5C					pop	sp
020A:1723  000F[00]				db	15 dup (0)
020A:1732  00			data_175	db	0
020A:1733  00					db	0
020A:1734  00					db	0
020A:1735  00					db	0
020A:1736  00					db	0
020A:1737  00					db	0
020A:1738  00					db	0
020A:1739  00					db	0
020A:173A  00					db	0
020A:173B  00					db	0
020A:173C  00					db	0
020A:173D  00					db	0
020A:173E  00					db	0
020A:173F  00					db	0
020A:1740  00					db	0
020A:1741  00					db	0
020A:1742  00					db	0
020A:1743  00					db	0
020A:1744  00					db	0
020A:1745  00					db	0
020A:1746  00					db	0
020A:1747  00					db	0
020A:1748  00					db	0
020A:1749  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 48

020A:174A  00					db	0
020A:174B  00					db	0
020A:174C  00					db	0
020A:174D  00					db	0
020A:174E  00					db	0
020A:174F  00					db	0
020A:1750  00					db	0
020A:1751  00					db	0
020A:1752  00					db	0
020A:1753  00					db	0
020A:1754  00					db	0
020A:1755  00					db	0
020A:1756  00					db	0
020A:1757  00					db	0
020A:1758  00					db	0
020A:1759  00					db	0
020A:175A  00					db	0
020A:175B  00					db	0
020A:175C  00					db	0
020A:175D  00					db	0
020A:175E  00					db	0
020A:175F  00					db	0
020A:1760  00					db	0
020A:1761  00 00				add	[bx+si],al
020A:1763  00 58 02				add	[bx+si+2],bl
020A:1766  00 42 3A				add	[bp+si+3Ah],al
020A:1769  5C					pop	sp
020A:176A  00					db	0
020A:176B  0040[00]				db	64 dup (0)
020A:17AB  58					pop	ax
020A:17AC  02 00				add	al,[bx+si]
020A:17AE  43					inc	bx
020A:17AF  3A 5C 4F				cmp	bl,[si+4Fh]
020A:17B2  53					push	bx
020A:17B3  003F[00]				db	63 dup (0)
020A:17F2  54					push	sp
020A:17F3  02 00				add	al,[bx+si]
020A:17F5  44					inc	sp
020A:17F6  3A 5C 00		;*		cmp	bl,[si+0]
020A:17F6  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:17F9  0040[00]				db	64 dup (0)
020A:1839  5C					pop	sp
020A:183A  02 00				add	al,[bx+si]
020A:183C  B5 01				mov	ch,1
020A:183E  00 00				add	[bx+si],al
020A:1840  53					push	bx
020A:1841  8F 03				pop	word ptr [bp+di]
020A:1843  7D 00				jge	$+2			; delay for I/O
020A:1845  00 0C				add	[si],cl
020A:1847  00 58 00		;*		add	[bx+si+0],bl
020A:1847  00 58 00				db	 00h, 58h, 00h
020A:184A  AA					stosb				; Store al to es:[di]
020A:184B  03 00				add	ax,[bx+si]
020A:184D  00					db	0
020A:184E  00					db	0
020A:184F  00 00				add	[bx+si],al
020A:1851  00 09				add	[bx+di],cl
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 49

020A:1853  00 48 00		;*		add	[bx+si+0],cl
020A:1853  00 48 00				db	 00h, 48h, 00h
020A:1856  80 00 00				add	byte ptr [bx+si],0
020A:1859  00 BF 0003				add	byte ptr data_3+1[bx],bh	; (020A:0003=0)
020A:185D  00 40 00		;*		add	[bx+si+0],al
020A:185D  00 40 00				db	 00h, 40h, 00h
020A:1860  40					inc	ax
020A:1861  00 C3				add	bl,al
020A:1863  E2 00				loop	locloop_136		; Loop if cx > 0


020A:1865			locloop_136:
020A:1865  F0> E8 01CE		                           lock	call	sub_23			; (1A37)
020A:1869  12 00				adc	al,[bx+si]
020A:186B  46					inc	si
020A:186C  07					pop	es
020A:186D  0A 02				or	al,[bp+si]
020A:186F  E8 01C5				call	sub_23			; (1A37)
020A:1872  1B 00				sbb	ax,[bx+si]
020A:1874  0A 04				or	al,[si]
020A:1876  0A 02				or	al,[bp+si]
020A:1878  EB 02				jmp	short loc_137		; (187C)
020A:187A  90					nop
020A:187B  00 E8				add	al,ch
020A:187D  B8 2401				mov	ax,2401h
020A:1880  00 A4 0A0C				add	data_116[si],ah		; (020A:0A0C=1Ch)
020A:1884  02 E8				add	ch,al
020A:1886  AF					scasw				; Scan es:[di] for ax
020A:1887  01 31				add	[bx+di],si
020A:1889  00 EB				add	bl,ch
020A:188B  10 FF				adc	bh,bh
020A:188D  03 0A				add	cx,[bp+si]
020A:188F  02 4B 42				add	cl,[bp+di+42h]
020A:1892  00 EB				add	bl,ch
020A:1894  0C 00				or	al,0
020A:1896  00					db	0
020A:1897  00					db	0
020A:1898  00					db	0
020A:1899  00 00				add	[bx+si],al
020A:189B  00 E8				add	al,ch
020A:189D  98					cbw				; Convrt byte to word
020A:189E  01 3C				add	[si],di
020A:18A0  00 E9				add	cl,ch
020A:18A2  32 01				xor	al,[bx+di]
020A:18A4  EB 10				jmp	short loc_138		; (18B6)
							                        ;* No entry point to code
020A:18A6  FF 03				inc	word ptr [bp+di]
020A:18A8  0A 02				or	al,[bp+si]
020A:18AA  4B					dec	bx
020A:18AB  42					inc	dx
020A:18AC  00 EB				add	bl,ch
020A:18AE  0C 00				or	al,0
020A:18B0  00					db	0
020A:18B1  00					db	0
020A:18B2  00					db	0
020A:18B3  0000			data_179	dw	0
020A:18B5  00 E8				add	al,ch
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 50

020A:18B7  7E 01				jle	loc_139			; Jump if < or =
020A:18B9  56					push	si
020A:18BA			loc_139:
020A:18BA  00 E9				add	cl,ch
020A:18BC  18 01				sbb	[bx+di],al
020A:18BE  EB 10				jmp	short loc_140		; (18D0)
020A:18C0  FF 03				inc	word ptr [bp+di]
020A:18C2  0A 02				or	al,[bp+si]
020A:18C4  4B					dec	bx
020A:18C5  42					inc	dx
020A:18C6  00 EB				add	bl,ch
020A:18C8  0C 00				or	al,0
020A:18CA  00					db	0
020A:18CB  00					db	0
020A:18CC  00					db	0
020A:18CD  00 00				add	[bx+si],al
020A:18CF  00 E8				add	al,ch
020A:18D1  64					db	64h
020A:18D2  01 70 00		;*		add	[bx+si+0],si
020A:18D2  01 70 00				db	 01h, 70h, 00h
020A:18D5  E9 00FE				jmp	loc_153			; (19D6)
020A:18D8  EB 10				jmp	short loc_141		; (18EA)
020A:18DA  FF 03				inc	word ptr [bp+di]
020A:18DC  0A 02				or	al,[bp+si]
020A:18DE  4B					dec	bx
020A:18DF  42					inc	dx
020A:18E0  00 EB				add	bl,ch
020A:18E2  0C 00				or	al,0
020A:18E4  00					db	0
020A:18E5  00					db	0
020A:18E6  00					db	0
020A:18E7  00 00				add	[bx+si],al
020A:18E9  00 E8				add	al,ch
020A:18EB  4A					dec	dx
020A:18EC  01 8A E900				add	[bp+si-1700h],cx
020A:18F0  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
020A:18F2  EB 10				jmp	short loc_142		; (1904)
020A:18F4  B3 07				mov	bl,7
020A:18F6  0A 02				or	al,[bp+si]
020A:18F8  4B					dec	bx
020A:18F9  42					inc	dx
020A:18FA  00 EB				add	bl,ch
020A:18FC  0C 00				or	al,0
020A:18FE  00					db	0
020A:18FF  00					db	0
020A:1900  00					db	0
020A:1901  00 00				add	[bx+si],al
020A:1903  00 E8				add	al,ch
020A:1905  30 01				xor	[bx+di],al
020A:1907  A4					movsb				; Mov [si] to es:[di]
020A:1908  00 E9				add	cl,ch
020A:190A  CA EB00				retf	0EB00h			; Return far
020A:190D  10 B4 0A06				adc	data_115[si],dh		; (020A:0A06=74h)
020A:1911  02 4B 42				add	cl,[bp+di+42h]
020A:1914  00 EB				add	bl,ch
020A:1916  0C 00				or	al,0
020A:1918  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 51

020A:1919  00					db	0
020A:191A  00					db	0
020A:191B  00 00				add	[bx+si],al
020A:191D  00 E8				add	al,ch
020A:191F  16					push	ss
020A:1920  01 BE E900				add	[bp-1700h],di
020A:1924  B0 00				mov	al,0
020A:1926  EB 10				jmp	short loc_143		; (1938)
020A:1928  B4 06				mov	ah,6
020A:192A  0A 02				or	al,[bp+si]
020A:192C  4B					dec	bx
020A:192D  42					inc	dx
020A:192E  00 EB				add	bl,ch
020A:1930  0C 00				or	al,0
020A:1932  00					db	0
020A:1933  00					db	0
020A:1934  00					db	0
020A:1935  00 00				add	[bx+si],al
020A:1937  00 E8				add	al,ch
020A:1939  FC					cld				; Clear direction
020A:193A  00 D8				add	al,bl
020A:193C  00 E9				add	cl,ch
020A:193E  96					xchg	si,ax
020A:193F  00			data_180	db	0
020A:1940  EB 10				jmp	short $+12h
020A:1942  B4 06				mov	ah,6
020A:1944  0A 02				or	al,[bp+si]
020A:1946  4B					dec	bx
020A:1947  0042			data_181	dw	42h
020A:1949  EB 0C				jmp	short $+0Eh
020A:194B  00					db	0
020A:194C  00					db	0
020A:194D  00					db	0
020A:194E  00					db	0
020A:194F  00 00				add	[bx+si],al
020A:1951  00 E8				add	al,ch
020A:1953  E2 00				loop	locloop_144		; Loop if cx > 0


020A:1955			locloop_144:
020A:1955  F2					db	0F2h
020A:1956  00 EB				add	bl,ch
020A:1958  7D 90		;*		jge	loc_141			;*Jump if > or =
020A:1958  7D 90				db	 7Dh, 90h
020A:195A  EB 10				jmp	short loc_145		; (196C)
020A:195C  B4 06				mov	ah,6
020A:195E  0A 02				or	al,[bp+si]
020A:1960  4B					dec	bx
020A:1961  42					inc	dx
020A:1962  00 EB				add	bl,ch
020A:1964  0C 00				or	al,0
020A:1966  00					db	0
020A:1967  00					db	0
020A:1968  00					db	0
020A:1969  00 00				add	[bx+si],al
020A:196B  00 E8				add	al,ch
020A:196D  C8					db	0C8h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 52

020A:196E  00 0C				add	[si],cl
020A:1970  01 EB				add	bx,bp
020A:1972  63					db	63h
020A:1973  90					nop
020A:1974  EB 10				jmp	short loc_146		; (1986)
020A:1976  B4 06				mov	ah,6
020A:1978  0A 02				or	al,[bp+si]
020A:197A  4B					dec	bx
020A:197B  42					inc	dx
020A:197C  00 EB				add	bl,ch
020A:197E  0C 00				or	al,0
020A:1980  00					db	0
020A:1981  00					db	0
020A:1982  00					db	0
020A:1983  00 00				add	[bx+si],al
020A:1985  00 E8				add	al,ch
020A:1987  AE					scasb				; Scan es:[di] for al
020A:1988  00 26 EB01				add	data_764,ah		; (020A:EB01=6)
020A:198C  49					dec	cx
020A:198D  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_22		proc	near
020A:198E  1E					push	ds
020A:198F  50					push	ax
020A:1990  B8 0040				mov	ax,40h
020A:1993  8E D8				mov	ds,ax
020A:1995  9F					lahf				; Load ah from flags
020A:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:199C  75 0C				jnz	loc_148			; Jump if not zero
020A:199E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:19A5			loc_147:
020A:19A5  9E					sahf				; Store ah into flags
020A:19A6  58					pop	ax
020A:19A7  1F					pop	ds
020A:19A8  03EB			data_182	dw	3EBh
020A:19AA			loc_148:
020A:19AA  EBFA			data_183	dw	0EBFAh
020A:19AC  F8					clc				; Clear carry flag
020A:19AD			loc_149:
020A:19AD  C3					retn
				sub_22		endp

							                        ;* No entry point to code
020A:19AE  1E					push	ds
020A:19AF  50					push	ax
020A:19B0  B8 0040				mov	ax,40h
020A:19B3  8E D8				mov	ds,ax
020A:19B5  9F					lahf				; Load ah from flags
020A:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:19BC  75 14				jnz	loc_151			; Jump if not zero
020A:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19C4  75 0C				jnz	loc_151			; Jump if not zero
020A:19C6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 53

020A:19CD			loc_150:
020A:19CD  9E					sahf				; Store ah into flags
020A:19CE  58					pop	ax
020A:19CF  1F					pop	ds
020A:19D0  EB 03				jmp	short loc_152		; (19D5)
020A:19D2			loc_151:
020A:19D2  FB					sti				; Enable interrupts
020A:19D3  EB F8				jmp	short loc_150		; (19CD)
020A:19D5			loc_152:
020A:19D5  C3					retn
020A:19D6			loc_153:
020A:19D6  1E					push	ds
020A:19D7  50					push	ax
020A:19D8  B8 0040				mov	ax,40h
020A:19DB  8E D8				mov	ds,ax
020A:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19E3  75 4F				jnz	loc_161			; Jump if not zero
020A:19E5  55					push	bp
020A:19E6  8B EC				mov	bp,sp
020A:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020A:19EB  5D					pop	bp
020A:19EC  A9 0100				test	ax,100h
020A:19EF  75 43				jnz	loc_161			; Jump if not zero
020A:19F1  A9 0200				test	ax,200h
020A:19F4  74 22				jz	loc_157			; Jump if zero
020A:19F6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1A03  75 2F				jnz	loc_161			; Jump if not zero
020A:1A05			loc_154:
020A:1A05  86 E0				xchg	ah,al
020A:1A07  FC					cld				; Clear direction
020A:1A08  A8 04				test	al,4
020A:1A0A  75 25				jnz	loc_160			; Jump if not zero
020A:1A0C			loc_155:
020A:1A0C  A8 08				test	al,8
020A:1A0E  75 11				jnz	loc_158			; Jump if not zero
020A:1A10  70 19				jo	loc_159			; Jump if overflow=1
020A:1A12			loc_156:
020A:1A12  9E					sahf				; Store ah into flags
020A:1A13  58					pop	ax
020A:1A14  1F					pop	ds
020A:1A15  CA 0002				retf	2			; Return far
020A:1A18			loc_157:
020A:1A18  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:1A1F  EB E4				jmp	short loc_154		; (1A05)
020A:1A21			loc_158:
020A:1A21  70 EF				jo	loc_156			; Jump if overflow=1
020A:1A23  50					push	ax
020A:1A24  B0 7F				mov	al,7Fh
020A:1A26  04 02				add	al,2
020A:1A28  58					pop	ax
020A:1A29  EB E7				jmp	short loc_156		; (1A12)
020A:1A2B			loc_159:
020A:1A2B  50					push	ax
020A:1A2C  32 C0				xor	al,al			; Zero register
020A:1A2E  58					pop	ax
020A:1A2F  EB E1				jmp	short loc_156		; (1A12)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 54

020A:1A31			loc_160:
020A:1A31  FD					std				; Set direction flag
020A:1A32  EB D8				jmp	short loc_155		; (1A0C)
020A:1A34			loc_161:
020A:1A34  58					pop	ax
020A:1A35  1F					pop	ds
020A:1A36  CF					iret				; Interrupt return

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_23		proc	near
020A:1A37  50					push	ax
020A:1A38  55					push	bp
020A:1A39  06					push	es
020A:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020A:000A=272Dh)
020A:1A3F  2E: 8B 2E 0010			mov	bp,word ptr cs:[10h]	; (020A:0010=1FBFh)
020A:1A44  B0 01				mov	al,1
020A:1A46  26: 86 46 00				xchg	es:[bp],al
020A:1A4A  3C 00				cmp	al,0
020A:1A4C  75 51				jne	loc_163			; Jump if not equal
020A:1A4E  2E: 2E83		data_184	dw	2E83h
020A:1A51  0010			data_185	dw	10h
020A:1A53  08 26 6689				or	byte ptr ds:[6689h],ah	; (020A:6689=80h)
020A:1A57  02 26 568C				add	ah,byte ptr ds:[568Ch]	; (020A:568C=0B9h)
020A:1A5B  04 8B				add	al,8Bh
020A:1A5D  C5 26 6E8B				lds	sp,dword ptr ds:[6E8Bh]	; (020A:6E8B=0B803h) Load 32 bit ptr
020A:1A61  06					push	es
020A:1A62  26: 39 46 00				cmp	es:[bp],ax
020A:1A66  75 44				jne	loc_165			; Jump if not equal
020A:1A68  55					push	bp
020A:1A69  8B EC				mov	bp,sp
020A:1A6B  8B 46 08				mov	ax,[bp+8]
020A:1A6E  5D					pop	bp
020A:1A6F  06					push	es
020A:1A70  17					pop	ss
020A:1A71  8B E5				mov	sp,bp
020A:1A73  8B E8				mov	bp,ax
020A:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020A:1A79  9C					pushf				; Push flags
020A:1A7A  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
020A:1A7E  8B EC				mov	bp,sp
020A:1A80  26: 8B 6E 00				mov	bp,es:[bp]
020A:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020A:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
020A:1A8C  26: C6 46 00 00			mov	byte ptr es:[bp],0
020A:1A91  2E: 89 2E 0010			mov	word ptr cs:[10h],bp	; (020A:0010=1FBFh)
020A:1A96  07					pop	es
020A:1A97  5D					pop	bp
020A:1A98  58					pop	ax
020A:1A99  83 C4 02				add	sp,2
020A:1A9C  E9 FF37				jmp	loc_153			; (19D6)
020A:1A9F			loc_163:
020A:1A9F  3C 01				cmp	al,1
020A:1AA1  74 04				je	loc_164			; Jump if equal
020A:1AA3  26: 86 46 00				xchg	es:[bp],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 55

020A:1AA7			loc_164:
020A:1AA7  E8 0012				call	sub_24			; (1ABC)
020A:1AAA  EB A8		;*		jmp	short loc_162		;*(1A54)
020A:1AAA  EB A8				db	0EBh,0A8h
020A:1AAC			loc_165:
020A:1AAC  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1AB1  72 F4				jb	loc_164			; Jump if below
020A:1AB3  8B E8				mov	bp,ax
020A:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020A:1ABA  EB EB				jmp	short loc_164		; (1AA7)
				sub_23		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_24		proc	near
020A:1ABC  2E: 8B 2E 000E			mov	bp,word ptr cs:[0Eh]	; (020A:000E=0A02Bh)
020A:1AC1			loc_166:
020A:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020A:1AC6  75 12				jne	loc_167			; Jump if not equal
020A:1AC8  B0 01				mov	al,1
020A:1ACA  26: 86 46 00				xchg	es:[bp],al
020A:1ACE  3C 00				cmp	al,0
020A:1AD0  74 14				je	loc_168			; Jump if equal
020A:1AD2  3C 01				cmp	al,1
020A:1AD4  74 04				je	loc_167			; Jump if equal
020A:1AD6  26: 88 46 00				mov	es:[bp],al
020A:1ADA			loc_167:
020A:1ADA  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1ADF  74 06				je	loc_169			; Jump if equal
020A:1AE1  83 ED 08				sub	bp,8
020A:1AE4  EB DB				jmp	short loc_166		; (1AC1)
020A:1AE6			loc_168:
020A:1AE6  C3					retn
020A:1AE7			loc_169:
020A:1AE7  E8 FEA4				call	sub_22			; (198E)
020A:1AEA  B0 FF				mov	al,0FFh
020A:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020A:1AEE  E6 A1				out	0A1h,al			; port 0A1h  al = 0FFh, inhibit interr
020A:1AF0  8C CE				mov	si,cs
020A:1AF2  8E DE				mov	ds,si
020A:1AF4  BE 02CB				mov	si,2CBh
020A:1AF7  50					push	ax
020A:1AF8  1E					push	ds
020A:1AF9  B8 0070				mov	ax,70h
020A:1AFC  8E D8				mov	ds,ax
020A:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
020A:1B03  1F					pop	ds
020A:1B04  58					pop	ax
020A:1B05  74 05				jz	loc_170			; Jump if zero
020A:1B07  9A 0070:0338		;*		call	far ptr sub_1		;*(0070:0338)
020A:1B07  9A					db	9Ah
020A:1B08  0338 0070				dw	338h, 70h
020A:1B0C			loc_170:
020A:1B0C  AC					lodsb				; String [si] to al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 56

020A:1B0D  3C 24				cmp	al,24h			; '$'
020A:1B0F  74 08				je	loc_171			; Jump if equal
020A:1B11  B3 07				mov	bl,7
020A:1B13  B4 0E				mov	ah,0Eh
020A:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:1B17  EB F3				jmp	short loc_170		; (1B0C)
020A:1B19			loc_171:
020A:1B19  EB FE				jmp	short loc_171		; (1B19)
				sub_24		endp

020A:1B1B  0D 070A				or	ax,70Ah
020A:1B1E  0D 0A 49 6E 74 65			db	0Dh, 0Ah, 'Internal stack overflo'
020A:1B24  72 6E 61 6C 20 73
020A:1B2A  74 61 63 6B 20 6F
020A:1B30  76 65 72 66 6C 6F
020A:1B36  77 0D 0A 53 79 73			db	'w', 0Dh, 0Ah, 'System halted', 0Dh
020A:1B3C  74 65 6D 20 68 61
020A:1B42  6C 74 65 64 0D
020A:1B47  0A 24				db	0Ah, '$'
020A:1B49  52					db	'R'
020A:1B4A  00 00				add	[bx+si],al
020A:1B4C  06					push	es
020A:1B4D  00 05				add	[di],al
020A:1B4F  0007[00]				db	7 dup (0)
020A:1B56  C6 00 00				mov	byte ptr [bx+si],0
020A:1B59  00					db	0
020A:1B5A  00					db	0
020A:1B5B  00 00				add	[bx+si],al
020A:1B5D  00 46 01				add	[bp+1],al
020A:1B60  00					db	0
020A:1B61  00					db	0
020A:1B62  00					db	0
020A:1B63  00 00				add	[bx+si],al
020A:1B65  00 C6				add	dh,al
020A:1B67  01 00				add	[bx+si],ax
020A:1B69  00					db	0
020A:1B6A  00					db	0
020A:1B6B  00 00				add	[bx+si],al
020A:1B6D  00 46 02				add	[bp+2],al
020A:1B70  00					db	0
020A:1B71  00					db	0
020A:1B72  00					db	0
020A:1B73  00 00				add	[bx+si],al
020A:1B75  00 C6				add	dh,al
020A:1B77  02 00				add	al,[bx+si]
020A:1B79  00					db	0
020A:1B7A  00					db	0
020A:1B7B  00 00				add	[bx+si],al
020A:1B7D  00 46 03				add	[bp+3],al
020A:1B80  00					db	0
020A:1B81  00					db	0
020A:1B82  00					db	0
020A:1B83  00 00				add	[bx+si],al
020A:1B85  00 C6				add	dh,al
020A:1B87  03 00				add	ax,[bx+si]
020A:1B89  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 57

020A:1B8A  00					db	0
020A:1B8B  00 00				add	[bx+si],al
020A:1B8D  00 46 04				add	[bp+4],al
020A:1B90  00 00				add	[bx+si],al
020A:1B92  F8					clc				; Clear carry flag
020A:1B93  05 8E05				add	ax,8E05h
020A:1B96  C6 04 00				mov	byte ptr [si],0
020A:1B99  00FD[00]				db	253 dup (0)
020A:1C96  08 00				or	[bx+si],al
020A:1C98  007E[00]				db	126 dup (0)
020A:1D16  10 00				adc	[bx+si],al
020A:1D18  007E[00]				db	126 dup (0)
020A:1D96  18 00				sbb	[bx+si],al
020A:1D98  0040[00]				db	64 dup (0)
020A:1DD8  00			data_192	db	0
020A:1DD9  00					db	0
020A:1DDA  00					db	0
020A:1DDB  00					db	0
020A:1DDC  00					db	0
020A:1DDD  00					db	0
020A:1DDE  00					db	0
020A:1DDF  00					db	0
020A:1DE0  00					db	0
020A:1DE1  00					db	0
020A:1DE2  00					db	0
020A:1DE3  00					db	0
020A:1DE4  00					db	0
020A:1DE5  00					db	0
020A:1DE6  00					db	0
020A:1DE7  00					db	0
020A:1DE8  00					db	0
020A:1DE9  00					db	0
020A:1DEA  00					db	0
020A:1DEB  00					db	0
020A:1DEC  00					db	0
020A:1DED  00					db	0
020A:1DEE  00					db	0
020A:1DEF  00					db	0
020A:1DF0  00					db	0
020A:1DF1  00					db	0
020A:1DF2  00					db	0
020A:1DF3  00					db	0
020A:1DF4  00					db	0
020A:1DF5  00					db	0
020A:1DF6  00					db	0
020A:1DF7  00					db	0
020A:1DF8  00					db	0
020A:1DF9  00					db	0
020A:1DFA  00					db	0
020A:1DFB  00					db	0
020A:1DFC  00					db	0
020A:1DFD  00					db	0
020A:1DFE  00					db	0
020A:1DFF  00					db	0
020A:1E00  00					db	0
020A:1E01  00					db	0
020A:1E02  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 58

020A:1E03  00					db	0
020A:1E04  00					db	0
020A:1E05  00					db	0
020A:1E06  00					db	0
020A:1E07  00					db	0
020A:1E08  00					db	0
020A:1E09  00					db	0
020A:1E0A  00					db	0
020A:1E0B  00					db	0
020A:1E0C  00					db	0
020A:1E0D  00					db	0
020A:1E0E  00					db	0
020A:1E0F  00					db	0
020A:1E10  00					db	0
020A:1E11  00					db	0
020A:1E12  00					db	0
020A:1E13  00 00				add	[bx+si],al
020A:1E15  00 20				add	[bx+si],ah
020A:1E17  00					db	0
020A:1E18  0071[00]				db	113 dup (0)
020A:1E89  00			data_194	db	0
020A:1E8A  00					db	0
020A:1E8B  0000 0000		data_195	dd	00000h
020A:1E8F  00					db	0
020A:1E90  00					db	0
020A:1E91  00					db	0
020A:1E92  00					db	0
020A:1E93  00 00				add	[bx+si],al
020A:1E95  00 28				add	[bx+si],ch
020A:1E97  00					db	0
020A:1E98  007E[00]				db	126 dup (0)
020A:1F16  30 00				xor	[bx+si],al
020A:1F18  007E[00]				db	126 dup (0)
020A:1F96  38 00				cmp	[bx+si],al
020A:1F98  006C[00]				db	108 dup (0)
020A:2004  01 91 9101				add	data_731[bx+di],dx	; (020A:9101=8002h)
020A:2008  05 F38E				add	ax,0F38Eh
020A:200B  03 B7 0500				add	si,word ptr ds:[500h][bx]	; (020A:0500=4F08h)
020A:200F  8E					db	8Eh
020A:2010  2E: 02 8F 4603			add	cl,cs:data_549[bx]	; (020A:4603=5Bh)
020A:2015  30 40 00		;*		xor	[bx+si+0],al
020A:2015  30 40 00				db	 30h, 40h, 00h
020A:2018  06					push	es
020A:2019  00 1B				add	[bp+di],bl
020A:201B  39 00				cmp	[bx+si],ax
020A:201D  00 06 4D00				add	data_564,al		; (020A:4D00=0Ch)
020A:2021  0D A204				or	ax,0A204h
020A:2024  00 00				add	[bx+si],al
020A:2026  06					push	es
020A:2027  00 43 4F				add	[bp+di+4Fh],al
020A:202A  4D					dec	bp
020A:202B  4D					dec	bp
020A:202C  41					inc	cx
020A:202D  4E					dec	si
020A:202E  44					inc	sp
020A:202F  00 CD				add	ch,cl
020A:2031  20 FF				and	bh,bh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 59

020A:2033  9F					lahf				; Load ah from flags
020A:2034  00 9A FEF0				add	[bp+si-110h],bl
020A:2038  1D 7FF0				sbb	ax,7FF0h
020A:203B  01 0D				add	[di],cx
020A:203D  04 4B				add	al,4Bh			; 'K'
020A:203F  01 0D				add	[di],cx
020A:2041  04 56				add	al,56h			; 'V'
020A:2043  01 0D				add	[di],cx
020A:2045  04 0D				add	al,0Dh
020A:2047  04 01				add	al,1
020A:2049  01 01				add	[bx+di],ax
020A:204B  00 02				add	[bp+si],al
020A:204D  000F[FF]				db	15 dup (0FFh)
020A:205C  B8 FA04				mov	ax,0FA04h
020A:205F  05 040D				add	ax,40Dh
020A:2062  14 00				adc	al,0
020A:2064  18 00				sbb	[bx+si],al
020A:2066  0D FF04				or	ax,0FF04h
020A:2069  FF					db	0FFh
020A:206A  FF					db	0FFh
020A:206B  FF 00				inc	word ptr [bx+si]
020A:206D  00 00				add	[bx+si],al
020A:206F  00 05				add	[di],al
020A:2071  000F[00]				db	15 dup (0)
020A:2080  CD 21				int	21h			; ??INT Non-standard interrupt
020A:2082  CB					retf				; Return far
020A:2083  000A[00]				db	10 dup (0)
020A:208D  000B[20]				db	11 dup (20h)
020A:2098  00					db	0
020A:2099  00					db	0
020A:209A  00			data_203	db	0
020A:209B  00 00				add	[bx+si],al
020A:209D  20 20				and	[bx+si],ah
020A:209F  20 20				and	[bx+si],ah
020A:20A1  20 20				and	[bx+si],ah
020A:20A3  20 20				and	[bx+si],ah
020A:20A5  20 20				and	[bx+si],ah
020A:20A7  20 00				and	[bx+si],al
020A:20A9  00					db	0
020A:20AA  00					db	0
020A:20AB  00					db	0
020A:20AC  00					db	0
020A:20AD  00					db	0
020A:20AE  00 00				add	[bx+si],al
020A:20B0  00 0D				add	[di],cl
020A:20B2  20 20				and	[bx+si],ah
020A:20B4  20 53 45				and	[bp+di+45h],dl
020A:20B7  54					push	sp
020A:20B8  20 42 4C				and	[bp+si+4Ch],al
020A:20BB  41					inc	cx
020A:20BC  53					push	bx
020A:20BD  4554			data_207	dw	4554h
020A:20BF  52					push	dx
020A:20C0  3D 3041				cmp	ax,3041h
020A:20C3  640D			data_209	dw	640Dh
020A:20C5  64					db	64h
020A:20C6  72 65				jc	$+67h			; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 60

020A:20C8  73 73				jnc	$+75h			; Jump if carry=0
020A:20CA  2E: 20 20				and	cs:[bx+si],ah
020A:20CD  6F46			data_210	dw	6F46h
020A:20CF  72 20				jc	$+22h			; Jump if carry Set
020A:20D1  65					db	65h
020A:20D2  78 61				js	$+63h			; Jump if sign=1
020A:20D4  6D					db	6Dh
020A:20D5  70 6C				jo	$+6Eh			; Jump if overflow=1
020A:20D7  65					db	65h
020A:20D8  3A 0D				cmp	cl,[di]
020A:20DA  20 6F 6E				and	[bx+6Eh],ch
020A:20DD  20 4E 54				and	[bp+54h],cl
020A:20E0  56					push	si
020A:20E1  44					inc	sp
020A:20E2  4D					dec	bp
020A:20E3  2C 20				sub	al,20h			; ' '
020A:20E5  73 70				jnc	$+72h			; Jump if carry=0
020A:20E7  65					db	65h
020A:20E8  63					db	63h
020A:20E9  69					db	69h
020A:20EA  66					db	66h
020A:20EB  79 20				jns	$+22h			; Jump if not sign
020A:20ED  61					db	61h
020A:20EE  6E					db	6Eh
020A:20EF  20 69 6E				and	[bx+di+6Eh],ch
020A:20F2  76 61				jbe	$+63h			; Jump if below or =
020A:20F4  6C					db	6Ch
020A:20F5  69					db	69h
020A:20F6  64					db	64h
020A:20F7  0D 6F20				or	ax,6F20h
020A:20FA  6E					db	6Eh
020A:20FB  6C					db	6Ch
020A:20FC  79 2E				jns	$+30h			; Jump if not sign
020A:20FE  0D 0000				or	ax,0
020A:2101  00					db	0
020A:2102  00					db	0
020A:2103  00					db	0
020A:2104  00					db	0
020A:2105  00					db	0
020A:2106  00					db	0
020A:2107  00					db	0
020A:2108  00					db	0
020A:2109  00					db	0
020A:210A  00					db	0
020A:210B  00					db	0
020A:210C  00					db	0
020A:210D  00					db	0
020A:210E  00					db	0
020A:210F  00					db	0
020A:2110  00					db	0
020A:2111  00					db	0
020A:2112  00					db	0
020A:2113  00					db	0
020A:2114  00					db	0
020A:2115  00					db	0
020A:2116  00					db	0
020A:2117  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 61

020A:2118  00					db	0
020A:2119  00					db	0
020A:211A  00					db	0
020A:211B  00					db	0
020A:211C  00					db	0
020A:211D  00					db	0
020A:211E  00					db	0
020A:211F  00					db	0
020A:2120  00					db	0
020A:2121  00					db	0
020A:2122  00					db	0
020A:2123  00					db	0
020A:2124  00					db	0
020A:2125  00					db	0
020A:2126  00					db	0
020A:2127  00					db	0
020A:2128  00					db	0
020A:2129  00					db	0
020A:212A  00					db	0
020A:212B  00					db	0
020A:212C  00					db	0
020A:212D  00 00				add	[bx+si],al
020A:212F  00 E9				add	cl,ch
020A:2131  5D					pop	bp
020A:2132  15 0700				adc	ax,700h
020A:2135  64					db	64h
020A:2136  FF					db	0FFh
020A:2137  FF 27				jmp	word ptr [bx]		;*
020A:2139  5E					pop	si
020A:213A  FF					db	0FFh
020A:213B  FF E5				jmp	bp			;*Register jump
020A:213D  5C					pop	sp
020A:213E  FF					db	0FFh
020A:213F  FF 14				call	word ptr [si]		;*
020A:2141  61					db	61h
020A:2142  FF					db	0FFh
020A:2143  FF					db	0FFh
020A:2144  D9					db	0D9h
020A:2145  5C					pop	sp
020A:2146  FF					db	0FFh
020A:2147  FF 53 5F				call	word ptr [bp+di+5Fh]	;*
020A:214A  FF					db	0FFh
020A:214B  FF F1		;*		push	cx
020A:214B  FF F1				db	0FFh,0F1h
020A:214D  60					db	60h
020A:214E  FF					db	0FFh
020A:214F  FF 5E 5E				call	dword ptr [bp+5Eh]	;*
020A:2152  FF					db	0FFh
020A:2153  FF 4A 64				dec	word ptr [bp+si+64h]
020A:2156  FF					db	0FFh
020A:2157  FF 72 5F				push	word ptr [bp+si+5Fh]
020A:215A  FF					db	0FFh
020A:215B  FF C3				inc	bx
020A:215D  64					db	64h
020A:215E  FF					db	0FFh
020A:215F  FF AF D900				jmp	dword ptr data_762[bx]	;*(020A:D900=0FC23h)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 62

020A:2163  02 01				add	al,[bx+di]
020A:2165  FB					sti				; Enable interrupts
020A:2166  E8 0064				call	sub_26			; (21CD)
020A:2169  1E					push	ds
020A:216A  0E					push	cs
020A:216B  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (020A:0104=908h)
							                        ;* No entry point to code
020A:2170  FB					sti				; Enable interrupts
020A:2171  E8 0059				call	sub_26			; (21CD)
020A:2174  1E					push	ds
020A:2175  0E					push	cs
020A:2176  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (020A:0108=0A302h)
							                        ;* No entry point to code
020A:217B  FB					sti				; Enable interrupts
020A:217C  E8 004E				call	sub_26			; (21CD)
020A:217F  1E					push	ds
020A:2180  0E					push	cs
020A:2181  2E: FF 2E 010C			jmp	dword ptr cs:[10Ch]	; (020A:010C=9028h)
							                        ;* No entry point to code
020A:2186  FB					sti				; Enable interrupts
020A:2187  E8 0043				call	sub_26			; (21CD)
020A:218A  1E					push	ds
020A:218B  0E					push	cs
020A:218C  2E: FF 2E 0110			jmp	dword ptr cs:[110h]	; (020A:0110=1FBFh)
020A:2191			loc_173:
020A:2191  E8 0039				call	sub_26			; (21CD)
020A:2194  1E					push	ds
020A:2195  0E					push	cs
020A:2196  2E: FF 2E 0114			jmp	dword ptr cs:[114h]	; (020A:0114=0C0Bh)
							                        ;* No entry point to code
020A:219B  E8 002F				call	sub_26			; (21CD)
020A:219E  1E					push	ds
020A:219F  0E					push	cs
020A:21A0  2E: FF 2E 0118			jmp	dword ptr cs:[118h]	; (020A:0118=0)
							                        ;* No entry point to code
020A:21A5  E8 0025				call	sub_26			; (21CD)
020A:21A8  1E					push	ds
020A:21A9  0E					push	cs
020A:21AA  2E: FF 2E 011C			jmp	dword ptr cs:[11Ch]	; (020A:011C=145Dh)
020A:21AF			loc_174:
020A:21AF  E8 001B				call	sub_26			; (21CD)
020A:21B2  1E					push	ds
020A:21B3  0E					push	cs
020A:21B4  2E: FF 2E 0120			jmp	dword ptr cs:[120h]	; (020A:0120=0A3BAh)
							                        ;* No entry point to code
020A:21B9  E8 0011				call	sub_26			; (21CD)
020A:21BC  1E					push	ds
020A:21BD  0E					push	cs
020A:21BE  2E: FF 2E 0124			jmp	dword ptr cs:[124h]	; (020A:0124=201h)
							                        ;* No entry point to code
020A:21C3  E8 0007				call	sub_26			; (21CD)
020A:21C6  1E					push	ds
020A:21C7  0E					push	cs
020A:21C8  2E: FF 2E 0128			jmp	dword ptr cs:[128h]	; (020A:0128=1405h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 63

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_26		proc	near
020A:21CD  9C					pushf				; Push flags
020A:21CE  50					push	ax
020A:21CF  2E: 80 3E 0134 00			cmp	byte ptr cs:[134h],0	; (020A:0134=0)
020A:21D5  74 08				je	loc_175			; Jump if equal
020A:21D7  E8 000D				call	sub_27			; (21E7)
020A:21DA  73 03				jnc	loc_175			; Jump if carry=0
020A:21DC  E8 001B				call	sub_28			; (21FA)
020A:21DF			loc_175:
020A:21DF  58					pop	ax
020A:21E0  9D					popf				; Pop flags
020A:21E1  C3					retn
				sub_26		endp

020A:21E2  EA 040D:0135		;*		jmp	far ptr loc_2615	;*(040D:0135)
020A:21E2  EA					db	0EAh
020A:21E3  0135 040D				dw	135h, 40Dh

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_27		proc	near
020A:21E7  53					push	bx
020A:21E8  50					push	ax
020A:21E9  B4 07				mov	ah,7
020A:21EB  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:21F0  0B C0				or	ax,ax			; Zero ?
020A:21F2  58					pop	ax
020A:21F3  5B					pop	bx
020A:21F4  75 02				jnz	loc_176			; Jump if not zero
020A:21F6  F9					stc				; Set carry flag
020A:21F7  C3					retn
020A:21F8			loc_176:
020A:21F8  F8					clc				; Clear carry flag
020A:21F9  C3					retn
				sub_27		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_28		proc	near
020A:21FA  53					push	bx
020A:21FB  50					push	ax
020A:21FC  B4 05				mov	ah,5
020A:21FE  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2203  0B C0				or	ax,ax			; Zero ?
020A:2205  74 03				jz	loc_177			; Jump if zero
020A:2207  58					pop	ax
020A:2208  5B					pop	bx
020A:2209  C3					retn
020A:220A			loc_177:
020A:220A  EB FE				jmp	short loc_177		; (220A)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 64

				sub_28		endp

							                        ;* No entry point to code
020A:220C  CD 21				int	21h			; ??INT Non-standard interrupt
020A:220E  FA					cli				; Disable interrupts
020A:220F  0E					push	cs
020A:2210  17					pop	ss
020A:2211  BC 0612				mov	sp,612h
020A:2214  FB					sti				; Enable interrupts
020A:2215  0E					push	cs
020A:2216  1F					pop	ds
020A:2217  9C					pushf				; Push flags
020A:2218  50					push	ax
020A:2219  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (020A:0614=2Eh)
020A:221D  A8 80				test	al,80h
020A:221F  74 07				jz	loc_178			; Jump if zero
020A:2221  24 7F				and	al,7Fh
020A:2223  2E: FF 1E 012C			call	dword ptr cs:[12Ch]	; (020A:012C=3A39h)
020A:2228			loc_178:
020A:2228  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (020A:0614=2Eh)
020A:222E  58					pop	ax
020A:222F  9D					popf				; Pop flags
020A:2230  E9 FF5E				jmp	loc_173			; (2191)
							                        ;* No entry point to code
020A:2233  02 00				add	al,[bx+si]
020A:2235  00 01				add	[bx+di],al
020A:2237  09 02				or	[bp+si],ax
020A:2239  41					inc	cx
020A:223A  02 00				add	al,[bx+si]
020A:223C  00 02				add	[bp+si],al
020A:223E  10 02				adc	[bp+si],al
020A:2240  0009[00]				db	9 dup (0)
020A:2249  02 22				add	ah,[bp+si]
020A:224B  02 03				add	al,[bp+di]
020A:224D  30 02				xor	[bp+si],al
020A:224F  03 2E 0002				add	bp,word ptr ds:[2]	; (020A:0002=10h)
020A:2253  0010[00]				db	16 dup (0)
020A:2263  01 09				add	[bx+di],cx
020A:2265  02 02				add	al,[bp+si]
020A:2267  5A					pop	dx
020A:2268  02 01				add	al,[bx+di]
020A:226A  3C 02				cmp	al,2
020A:226C  43					inc	bx
020A:226D  02 7C 04				add	bh,[si+4]
020A:2270  000B[00]				db	11 dup (0)
020A:227B  0D 7F04				or	ax,7F04h
020A:227E  01 0D				add	[di],cx
020A:2280  04 00				add	al,0
020A:2282  00					db	0
020A:2283  00					db	0
020A:2284  00					db	0
020A:2285  00 00				add	[bx+si],al
020A:2287  00 43 3A				add	[bp+di+3Ah],al
020A:228A  5C					pop	sp
020A:228B  57					push	di
020A:228C  49					dec	cx
020A:228D  4E					dec	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 65

020A:228E  44					inc	sp
020A:228F  4F					dec	di
020A:2290  57					push	di
020A:2291  53					push	bx
020A:2292  5C					pop	sp
020A:2293  53					push	bx
020A:2294  59					pop	cx
020A:2295  53					push	bx
020A:2296  54					push	sp
020A:2297  45					inc	bp
020A:2298  4D					dec	bp
020A:2299  33 32				xor	si,[bp+si]
020A:229B  5C					pop	sp
020A:229C  43					inc	bx
020A:229D  4F					dec	di
020A:229E  4D					dec	bp
020A:229F  4D					dec	bp
020A:22A0  41					inc	cx
020A:22A1  4E					dec	si
020A:22A2  44					inc	sp
020A:22A3  2E					db	2Eh
020A:22A4  43					inc	bx
020A:22A5  4F					dec	di
020A:22A6  4D					dec	bp
020A:22A7  0021[00]				db	33 dup (0)
020A:22C8  77 02				ja	loc_179			; Jump if above
020A:22CA  2C 01				sub	al,1
020A:22CC			loc_179:
020A:22CC  EA 0000:0195				jmp	far ptr $-2137h
							                        ;* No entry point to code
020A:22D1  03 FF				add	di,di
020A:22D3  9F					lahf				; Load ah from flags
020A:22D4  30 BA 0001				xor	[bp+si+1],bh
020A:22D8  03 00				add	ax,[bx+si]
020A:22DA  01 00				add	[bx+si],ax
020A:22DC  01 01				add	[bx+di],ax
020A:22DE  01 00				add	[bx+si],ax
020A:22E0  01 00				add	[bx+si],ax
020A:22E2  00 00				add	[bx+si],al
020A:22E4  FF					db	0FFh
020A:22E5  FF 00				inc	word ptr [bx+si]
020A:22E7  000B[00]				db	11 dup (0)
020A:22F2  04 31				add	al,31h			; '1'
020A:22F4  0B A7 0000				or	sp,word ptr ds:[0][bx]	; (020A:0000=1828h)
020A:22F8  00 00				add	[bx+si],al
020A:22FA  00 E7				add	bh,ah
020A:22FC  0C A7				or	al,0A7h
020A:22FE  0058[00]				db	88 dup (0)
020A:2356  01 00				add	[bx+si],ax
020A:2358  00 00				add	[bx+si],al
020A:235A  01 00				add	[bx+si],ax
020A:235C  0007[00]				db	7 dup (0)
020A:2363  1E					push	ds
020A:2364  06					push	es
020A:2365  0E					push	cs
020A:2366  1F					pop	ds
020A:2367  8B 16 20CD				mov	dx,data_210		; (020A:20CD=6F46h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 66

020A:236B  A1 20C1				mov	ax,word ptr ds:[20C1h]	; (020A:20C1=3041h)
020A:236E  8B 1E 20BD				mov	bx,data_207		; (020A:20BD=4554h)
020A:2372  8B 0E 20C3				mov	cx,data_209		; (020A:20C3=640Dh)
020A:2376  50					push	ax
020A:2377  53					push	bx
020A:2378  51					push	cx
020A:2379  8C DB				mov	bx,ds
020A:237B  8E C3				mov	es,bx
020A:237D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020A:0593=3)
020A:2381  B4 4A				mov	ah,4Ah
020A:2383  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:2385  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:238A  75 33				jne	loc_180			; Jump if not equal
020A:238C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020A:0256=0)
020A:2391  74 2C				je	loc_180			; Jump if equal
020A:2393  BB 0007				mov	bx,7
020A:2396  B4 48				mov	ah,48h
020A:2398  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:239A  72 23				jc	loc_180			; Jump if carry Set
020A:239C  8E C0				mov	es,ax
020A:239E  33 FF				xor	di,di			; Zero register
020A:23A0  33 F6				xor	si,si			; Zero register
020A:23A2  1E					push	ds
020A:23A3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020A:0256=0)
020A:23A7  B9 0021				mov	cx,21h
020A:23AA  83 C1 40				add	cx,40h
020A:23AD  FC					cld				; Clear direction
020A:23AE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:23B0  1F					pop	ds
020A:23B1  8C C1				mov	cx,es
020A:23B3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020A:0256=0)
020A:23B7  B4 49				mov	ah,49h
020A:23B9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23BB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020A:0256=0)
020A:23BF			loc_180:
020A:23BF  59					pop	cx
020A:23C0  5B					pop	bx
020A:23C1  5D					pop	bp
020A:23C2  B4 48				mov	ah,48h
020A:23C4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23C6  72 41				jc	loc_181			; Jump if carry Set
020A:23C8  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23CB  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:23CE  8E C0				mov	es,ax
020A:23D0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:23D5  75 34				jne	loc_182			; Jump if not equal
020A:23D7  53					push	bx
020A:23D8  BB 0000				mov	bx,0
020A:23DB  C4					db	0C4h
020A:23DC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:23DF  8B C3				mov	ax,bx
020A:23E1  5B					pop	bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 67

020A:23E2  3D 0000				cmp	ax,0
020A:23E5  74 24				je	loc_182			; Jump if equal
020A:23E7  03 D8				add	bx,ax
020A:23E9  B4 49				mov	ah,49h
020A:23EB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23ED  B4 48				mov	ah,48h
020A:23EF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23F1  72 75				jc	loc_185			; Jump if carry Set
020A:23F3  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23F6  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:23F9  8E C0				mov	es,ax
020A:23FB  89 1E 20BD				mov	data_207,bx		; (020A:20BD=4554h)
020A:23FF  53					push	bx
020A:2400  C4					db	0C4h
020A:2401  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:2404  58					pop	ax
020A:2405  3B D8				cmp	bx,ax
020A:2407  76 0D				jbe	loc_183			; Jump if below or =
020A:2409			loc_181:
020A:2409  EB 5D				jmp	short loc_185		; (2468)
020A:240B			loc_182:
020A:240B  1E					push	ds
020A:240C  8E DD				mov	ds,bp
020A:240E  33 F6				xor	si,si			; Zero register
020A:2410  8B FE				mov	di,si
020A:2412  FC					cld				; Clear direction
020A:2413  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2415  1F					pop	ds
020A:2416			loc_183:
020A:2416  80 3E 209A 00			cmp	data_203,0		; (020A:209A=0)
020A:241B  75 06				jne	loc_184			; Jump if not equal
020A:241D  8E C5				mov	es,bp
020A:241F  B4 49				mov	ah,49h
020A:2421  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2423			loc_184:
020A:2423  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (020A:029E=0)
020A:2428  06					push	es
020A:2429  BE 2570				mov	si,2570h
020A:242C  BF 0000				mov	di,0
020A:242F  B9 A14C				mov	cx,0A14Ch
020A:2432  BB FFFF				mov	bx,0FFFFh
020A:2435  B4 48				mov	ah,48h
020A:2437  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2439  3B DA				cmp	bx,dx
020A:243B  72 2B				jb	loc_185			; Jump if below
020A:243D  B4 48				mov	ah,48h
020A:243F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2441  72 25				jc	loc_185			; Jump if carry Set
020A:2443  50					push	ax
020A:2444  03 C3				add	ax,bx
020A:2446  2B C2				sub	ax,dx
020A:2448  A3 029C				mov	word ptr ds:[29Ch],ax	; (020A:029C=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 68

020A:244B  8E C0				mov	es,ax
020A:244D  58					pop	ax
020A:244E  03 F1				add	si,cx
020A:2450  4E					dec	si
020A:2451  03 F9				add	di,cx
020A:2453  4F					dec	di
020A:2454  FD					std				; Set direction flag
020A:2455  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2457  FC					cld				; Clear direction
020A:2458  8E C0				mov	es,ax
020A:245A  B4 49				mov	ah,49h
020A:245C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:245E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020A:0330=61h)
020A:2463  07					pop	es
020A:2464  1F					pop	ds
020A:2465  E9 FD47				jmp	loc_174			; (21AF)
020A:2468			loc_185:
020A:2468  E9 1BD0				jmp	loc_402			; (403B)
020A:246B  0019[00]				db	25 dup (0)
020A:2484  33 03				xor	ax,[bp+di]
020A:2486  82 03 B8				add	byte ptr [bp+di],0B8h
020A:2489  04 80				add	al,80h
020A:248B  00 0D				add	[di],cl
020A:248D  04 5C				add	al,5Ch			; '\'
020A:248F  00 0D				add	[di],cl
020A:2491  04 6C				add	al,6Ch			; 'l'
020A:2493  00 0D				add	[di],cl
020A:2495  04 93				add	al,93h
020A:2497  01 0D				add	[di],cx
020A:2499  04 00				add	al,0
020A:249B  10 2F				adc	[bx],ch
020A:249D  5C					pop	sp
020A:249E  DC					db	0DCh
020A:249F  01 0D				add	[di],cx
020A:24A1  04 6B				add	al,6Bh			; 'k'
020A:24A3  01 0D				add	[di],cx
020A:24A5  04 00				add	al,0
020A:24A7  00 FC				add	ah,bh
020A:24A9  04 00				add	al,0
020A:24AB  00 43 3A				add	[bp+di+3Ah],al
020A:24AE  5C					pop	sp
020A:24AF  4F					dec	di
020A:24B0  53					push	bx
020A:24B1  5C					pop	sp
020A:24B2  53					push	bx
020A:24B3  52					push	dx
020A:24B4  2E					db	2Eh
020A:24B5  45					inc	bp
020A:24B6  58					pop	ax
020A:24B7  45					inc	bp
020A:24B8  00 73 74				add	[bp+di+74h],dh
020A:24BB  65					db	65h
020A:24BC  6D					db	6Dh
020A:24BD  33 32				xor	si,[bp+si]
020A:24BF  5C					pop	sp
020A:24C0  44					inc	sp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 69

020A:24C1  4F					dec	di
020A:24C2  53					push	bx
020A:24C3  58					pop	ax
020A:24C4  2E					db	2Eh
020A:24C5  45					inc	bp
020A:24C6  58					pop	ax
020A:24C7  45					inc	bp
020A:24C8  00 00				add	[bx+si],al
020A:24CA  58					pop	ax
020A:24CB  45					inc	bp
020A:24CC  0054[00]				db	84 dup (0)
020A:2520  00			data_221	db	0
020A:2521  00					db	0
020A:2522  00					db	0
020A:2523  00					db	0
020A:2524  00					db	0
020A:2525  00					db	0
020A:2526  00					db	0
020A:2527  00					db	0
020A:2528  00					db	0
020A:2529  00					db	0
020A:252A  00					db	0
020A:252B  00					db	0
020A:252C  00					db	0
020A:252D  00					db	0
020A:252E  00					db	0
020A:252F  00					db	0
020A:2530  00					db	0
020A:2531  00					db	0
020A:2532  00					db	0
020A:2533  00					db	0
020A:2534  00					db	0
020A:2535  00					db	0
020A:2536  00					db	0
020A:2537  00					db	0
020A:2538  00					db	0
020A:2539  00					db	0
020A:253A  00					db	0
020A:253B  00					db	0
020A:253C  00					db	0
020A:253D  00					db	0
020A:253E  00					db	0
020A:253F  00					db	0
020A:2540  00					db	0
020A:2541  00					db	0
020A:2542  00					db	0
020A:2543  00					db	0
020A:2544  00					db	0
020A:2545  00					db	0
020A:2546  00					db	0
020A:2547  00					db	0
020A:2548  00					db	0
020A:2549  00					db	0
020A:254A  00					db	0
020A:254B  00					db	0
020A:254C  00					db	0
020A:254D  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 70

020A:254E  00					db	0
020A:254F  00					db	0
020A:2550  00					db	0
020A:2551  00					db	0
020A:2552  00					db	0
020A:2553  00					db	0
020A:2554  00					db	0
020A:2555  00					db	0
020A:2556  00					db	0
020A:2557  00					db	0
020A:2558  00					db	0
020A:2559  00					db	0
020A:255A  00					db	0
020A:255B  00					db	0
020A:255C  00					db	0
020A:255D  00					db	0
020A:255E  00					db	0
020A:255F  00					db	0
020A:2560  00					db	0
020A:2561  00					db	0
020A:2562  00					db	0
020A:2563  00					db	0
020A:2564  00					db	0
020A:2565  00					db	0
020A:2566  00					db	0
020A:2567  00					db	0
020A:2568  00					db	0
020A:2569  00					db	0
020A:256A  00					db	0
020A:256B  00					db	0
020A:256C  00					db	0
020A:256D  00					db	0
020A:256E  00					db	0
020A:256F  00					db	0
020A:2570  00					db	0
020A:2571  00					db	0
020A:2572  00					db	0
020A:2573  00					db	0
020A:2574  00					db	0
020A:2575  00					db	0
020A:2576  00					db	0
020A:2577  00					db	0
020A:2578  00					db	0
020A:2579  00					db	0
020A:257A  00					db	0
020A:257B  00					db	0
020A:257C  00					db	0
020A:257D  00					db	0
020A:257E  00					db	0
020A:257F  00					db	0
020A:2580  00					db	0
020A:2581  00					db	0
020A:2582  00					db	0
020A:2583  00					db	0
020A:2584  00					db	0
020A:2585  00					db	0
020A:2586  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 71

020A:2587  00					db	0
020A:2588  00					db	0
020A:2589  00					db	0
020A:258A  00					db	0
020A:258B  00					db	0
020A:258C  00					db	0
020A:258D  00					db	0
020A:258E  00					db	0
020A:258F  00					db	0
020A:2590  00					db	0
020A:2591  00					db	0
020A:2592  00					db	0
020A:2593  00					db	0
020A:2594  00					db	0
020A:2595  00					db	0
020A:2596  00					db	0
020A:2597  00					db	0
020A:2598  00					db	0
020A:2599  00					db	0
020A:259A  00					db	0
020A:259B  00					db	0
020A:259C  00					db	0
020A:259D  00					db	0
020A:259E  00					db	0
020A:259F  00					db	0
020A:25A0  00					db	0
020A:25A1  00					db	0
020A:25A2  00					db	0
020A:25A3  00					db	0
020A:25A4  00					db	0
020A:25A5  00					db	0
020A:25A6  00					db	0
020A:25A7  00					db	0
020A:25A8  00					db	0
020A:25A9  00					db	0
020A:25AA  00					db	0
020A:25AB  00					db	0
020A:25AC  00					db	0
020A:25AD  00					db	0
020A:25AE  00					db	0
020A:25AF  00					db	0
020A:25B0  00					db	0
020A:25B1  00					db	0
020A:25B2  00					db	0
020A:25B3  00					db	0
020A:25B4  00					db	0
020A:25B5  00					db	0
020A:25B6  00					db	0
020A:25B7  00					db	0
020A:25B8  00					db	0
020A:25B9  00					db	0
020A:25BA  00 00				add	[bx+si],al
020A:25BC  00 66 00				add	[bp],ah
020A:25BF  D9					db	0D9h
020A:25C0  02 12				add	dl,[bp+si]
020A:25C2  0A A2 0000				or	ah,[bp+si+0]
020A:25C6  0041[00]				db	65 dup (0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 72

020A:2607  63					db	63h
020A:2608  AC					lodsb				; String [si] to al
020A:2609  90					nop
020A:260A  00					db	0
020A:260B  00 00				add	[bx+si],al
020A:260D  00 E7				add	bh,ah
020A:260F  0C D5				or	al,0D5h
020A:2611  20 AB FA90				and	[bp+di-570h],ch
020A:2615  20 FA				and	dl,bh
020A:2617  20 FB				and	bl,bh
020A:2619  07					pop	es
020A:261A  00 07				add	[bx],al
020A:261C  D9					db	0D9h
020A:261D  02 01				add	al,[bx+di]
020A:261F  00 D9				add	cl,bl
020A:2621  02 47 01				add	al,[bx+1]
020A:2624  D9					db	0D9h
020A:2625  02 24				add	ah,[si]
020A:2627  25 95EA				and	ax,95EAh
020A:262A  00 3E 9ACD				add	data_735,bh		; (020A:9ACD=38h)
020A:262E  0D 0004				or	ax,4
020A:2631  00 00				add	[bx+si],al
020A:2633  01 00				add	[bx+si],ax
020A:2635  01 81 0D00				add	data_135[bx+di],ax	; (020A:0D00=3058h)
020A:2639  04 0D				add	al,0Dh
020A:263B  04 DE				add	al,0DEh
020A:263D  01 0D				add	[di],cx
020A:263F  04 46				add	al,46h			; 'F'
020A:2641  32 00				xor	al,[bx+si]
020A:2643  00 00				add	[bx+si],al
020A:2645  41					inc	cx
020A:2646  52					push	dx
020A:2647  49					dec	cx
020A:2648  46					inc	si
020A:2649  59					pop	cx
020A:264A  4E					dec	si
020A:264B  05 6241				add	ax,6241h
020A:264E  6F					db	6Fh
020A:264F  72 74				jc	loc_187			; Jump if carry Set
020A:2651  07					pop	es
020A:2652  2C 20				sub	al,20h			; ' '
020A:2654  52					push	dx
020A:2655  65					db	65h
020A:2656  74 72				jz	loc_189			; Jump if zero
020A:2658  79 08				jns	loc_186			; Jump if not sign
020A:265A  2C 20				sub	al,20h			; ' '
020A:265C  49					dec	cx
020A:265D  67					db	67h
020A:265E  6E					db	6Eh
020A:265F  6F					db	6Fh
020A:2660  72 65				jc	loc_188			; Jump if carry Set
020A:2662			loc_186:
020A:2662  06					push	es
020A:2663  2C 20				sub	al,20h			; ' '
020A:2665  46					inc	si
020A:2666  61					db	61h
020A:2667  69					db	69h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 73

020A:2668  6C					db	6Ch
020A:2669  01 3F				add	[bx],di
020A:266B  08 72 65				or	[bp+si+65h],dh
020A:266E  61					db	61h
020A:266F  64					db	64h
020A:2670  69					db	69h
020A:2671  6E					db	6Eh
020A:2672  67					db	67h
020A:2673  00 08				add	[bx+si],cl
020A:2675  77 72				ja	loc_191			; Jump if above
020A:2677  69					db	69h
020A:2678  74 69				jz	loc_190			; Jump if zero
020A:267A  6E					db	6Eh
020A:267B  67					db	67h
020A:267C  00 0E 2520				add	data_221,cl		; (020A:2520=0)
020A:2680  2031 7264		data_223	dw	2031h, 7264h
020A:2684  69					db	69h
020A:2685  76 65				jbe	loc_192			; Jump if below or =
020A:2687  20 25				and	[di],ah
020A:2689  32 0D				xor	cl,[di]
020A:268B  0A 0F				or	cl,[bx]
020A:268D  20 25 31 20 64 65			db	' %1 device %2', 0Dh, 0Ah, '&Plea'
020A:2693  76 69 63 65 20 25
020A:2699  32 0D 0A 26 50 6C
020A:269F  65 61
020A:26A1  73 65 20 69 6E 73			db	'se insert volume %1 serial %2-%3'
020A:26A7  65 72 74 20 76 6F
020A:26AD  6C 75 6D 65 20 25
020A:26B3  31 20 73 65 72 69
020A:26B9  61 6C 20 25 32 2D
020A:26BF  25 33
020A:26C1  0D 0A 25 46				db	0Dh, 0Ah, '%F'
020A:26C5			loc_187:
020A:26C5  69 6C				db	'il'
020A:26C7			loc_188:
020A:26C7  65 20 61				db	'e a'
020A:26CA			loc_189:
020A:26CA  6C					db	6Ch
020A:26CB  6C					db	6Ch
020A:26CC  6F					db	6Fh
020A:26CD  63					db	63h
020A:26CE  61					db	61h
020A:26CF  74 69				jz	loc_193			; Jump if zero
020A:26D1  6F					db	6Fh
020A:26D2  6E					db	6Eh
020A:26D3  20 74 61				and	[si+61h],dh
020A:26D6  62					db	62h
020A:26D7  6C					db	6Ch
020A:26D8  65					db	65h
020A:26D9  20 62 61				and	[bp+si+61h],ah
020A:26DC  64					db	64h
020A:26DD  2C 20				sub	al,20h			; ' '
020A:26DF  64					db	64h
020A:26E0  72 69				jc	loc_195			; Jump if carry Set
020A:26E2  76 65				jbe	loc_194			; Jump if below or =
020A:26E4  20 25				and	[di],ah
020A:26E6  31 0D				xor	[di],cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 74

020A:26E8  0A 15				or	dl,[di]
020A:26EA  49 6E 76 61 6C 69			db	'Invalid COMMAND.COM', 0Dh, 0Ah, '!'
020A:26F0  64 20 43 4F 4D 4D
020A:26F6  41 4E 44 2E 43 4F
020A:26FC  4D 0D 0A 21
020A:2700  49 6E 73 65 72 74			db	'Insert disk with %1 in drive %2', 0Dh
020A:2706  20 64 69 73 6B 20
020A:270C  77 69 74 68 20 25
020A:2712  31 20 69 6E 20 64
020A:2718  72 69 76 65 20 25
020A:271E  32 0D
020A:2720  0A 21 50 72 65 73			db	0Ah, '!Press any key to continu'
020A:2726  73 20 61 6E 79 20
020A:272C  6B 65 79 20 74 6F
020A:2732  20 63 6F 6E 74 69
020A:2738  6E 75
020A:273A			loc_193:
020A:273A  65					db	65h
020A:273B  20 2E 2E20				and	data_279,ch		; (020A:2E20=0)
020A:273F  20 2E 0A0D				and	data_117,ch		; (020A:0A0D=0)
020A:2743  1C 0D				sbb	al,0Dh
020A:2745  0A 54 65				or	dl,[si+65h]
020A:2748  72 6D				jc	loc_198			; Jump if carry Set
020A:274A  69					db	69h
020A:274B			loc_195:
020A:274B  6E					db	6Eh
020A:274C  61					db	61h
020A:274D  74 65				jz	loc_197			; Jump if zero
020A:274F  20 62 61				and	[bp+si+61h],ah
020A:2752  74 63				jz	loc_198			; Jump if zero
020A:2754  68					db	68h
020A:2755  20 6A 6F				and	[bp+si+6Fh],ch
020A:2758  62					db	62h
020A:2759  20 28				and	[bx+si],ch
020A:275B  59					pop	cx
020A:275C  2F					das				; Decimal adjust
020A:275D  4E					dec	si
020A:275E  29 3F				sub	[bx],di
020A:2760  13 43 61				adc	ax,[bp+di+61h]
020A:2763  6E					db	6Eh
020A:2764  6E					db	6Eh
020A:2765  6F					db	6Fh
020A:2766  74 20				jz	loc_196			; Jump if zero
020A:2768  65					db	65h
020A:2769  78 65				js	loc_199			; Jump if sign=1
020A:276B  63					db	63h
020A:276C  75 74				jnz	loc_201			; Jump if not zero
020A:276E  65					db	65h
020A:276F  20 25				and	[di],ah
020A:2771  31 0D				xor	[di],cx
020A:2773  0A 13				or	dl,[bp+di]
020A:2775  45 72 72 6F 72 20			db	'Error in EXE file', 0Dh, 0Ah
020A:277B  69 6E 20 45 58 45
020A:2781  20 66 69 6C 65 0D
020A:2787  0A
020A:2788			loc_196:
020A:2788  22 50 72 6F 67 72			db	'"Program too big to fit in memor'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 75

020A:278E  61 6D 20 74 6F 6F
020A:2794  20 62 69 67 20 74
020A:279A  6F 20 66 69 74 20
020A:27A0  69 6E 20 6D 65 6D
020A:27A6  6F 72
020A:27A8  79 0D 0A				db	'y', 0Dh, 0Ah
020A:27AB  16					push	ss
020A:27AC  0D 4E0A				or	ax,4E0Ah
020A:27AF  6F					db	6Fh
020A:27B0  20 66 72				and	[bp+72h],ah
020A:27B3  65					db	65h
020A:27B4			loc_197:
020A:27B4  65					db	65h
020A:27B5  20 66 69				and	[bp+69h],ah
020A:27B8  6C					db	6Ch
020A:27B9  65					db	65h
020A:27BA  20 68 61				and	[bx+si+61h],ch
020A:27BD  6E					db	6Eh
020A:27BE  64					db	64h
020A:27BF  6C					db	6Ch
020A:27C0  65					db	65h
020A:27C1  73 1A				jnc	loc_200			; Jump if carry=0
020A:27C3  42					inc	dx
020A:27C4  61					db	61h
020A:27C5  64					db	64h
020A:27C6  20 43 6F				and	[bp+di+6Fh],al
020A:27C9  6D					db	6Dh
020A:27CA  6D					db	6Dh
020A:27CB  61					db	61h
020A:27CC  6E					db	6Eh
020A:27CD  64					db	64h
020A:27CE  20 6F 72				and	[bx+72h],ch
020A:27D1  20 66 69				and	[bp+69h],ah
020A:27D4  6C					db	6Ch
020A:27D5  65					db	65h
020A:27D6  20 6E 61				and	[bp+61h],ch
020A:27D9  6D					db	6Dh
020A:27DA  65					db	65h
020A:27DB  0D 0E0A				or	ax,0E0Ah
020A:27DE  41					inc	cx
020A:27DF  63					db	63h
020A:27E0  63					db	63h
020A:27E1  65					db	65h
020A:27E2			loc_201:
020A:27E2  73 73				jnc	loc_202			; Jump if carry=0
020A:27E4  20 64 65				and	[si+65h],ah
020A:27E7  6E					db	6Eh
020A:27E8  69					db	69h
020A:27E9  65					db	65h
020A:27EA  64					db	64h
020A:27EB  20 19				and	[bx+di],bl
020A:27ED  0D 0A 4D 65 6D 6F			db	0Dh, 0Ah, 'Memory allocation erro'
020A:27F3  72 79 20 61 6C 6C
020A:27F9  6F 63 61 74 69 6F
020A:27FF  6E 20 65 72 72 6F
020A:2805  72 26 0D 0A 43 61			db	'r&', 0Dh, 0Ah, 'Cannot load COMM'
020A:280B  6E 6E 6F 74 20 6C
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 76

020A:2811  6F 61 64 20 43 4F
020A:2817  4D 4D
020A:2819  41 4E 44 2C 20 73			db	'AND, system halted', 0Dh, 0Ah, '!'
020A:281F  79 73 74 65 6D 20
020A:2825  68 61 6C 74 65 64
020A:282B  0D 0A 21
020A:282E  0D 0A 43 61 6E 6E			db	0Dh, 0Ah, 'Cannot start COMMAND, '
020A:2834  6F 74 20 73 74 61
020A:283A  72 74 20 43 4F 4D
020A:2840  4D 41 4E 44 2C 20
020A:2846  65 78 69 74 69 6E			db	'exiting', 0Dh, 0Ah, '.', 0Dh, 0Ah
020A:284C  67 0D 0A 2E 0D 0A
020A:2852  54 6F 70 20 6C			db	'Top l'
020A:2857			loc_202:
020A:2857  65 76 65 6C 20 70			db	'evel process aborted, cannot con'
020A:285D  72 6F 63 65 73 73
020A:2863  20 61 62 6F 72 74
020A:2869  65 64 2C 20 63 61
020A:286F  6E 6E 6F 74 20 63
020A:2875  6F 6E
020A:2877  74 69 6E 75 65 0D			db	'tinue', 0Dh, 0Ah
020A:287D  0A
020A:287E  02 0D				add	cl,[di]
020A:2880  0A 60 0D				or	ah,[bx+si+0Dh]
020A:2883  01 00				add	[bx+si],ax
020A:2885  0C 0B				or	al,0Bh
020A:2887  01 00				add	[bx+si],ax
020A:2889  60					db	60h
020A:288A  0D 0001				or	ax,1
020A:288D  00					db	0
020A:288E  00 00				add	[bx+si],al
020A:2890  00 89 0D01				add	byte ptr data_135+1[bx+di],cl	; (020A:0D01=30h)
020A:2894  04 13				add	al,13h
020A:2896  57 72 69 74 65 20			db	'Write protect error', 0Ch, 'Inva'
020A:289C  70 72 6F 74 65 63
020A:28A2  74 20 65 72 72 6F
020A:28A8  72 0C 49 6E 76 61
020A:28AE  6C 69 64 20 75 6E			db	'lid unit', 9, 'Not ready'
020A:28B4  69 74 09 4E 6F 74
020A:28BA  20 72 65 61 64 79
020A:28C0  16					push	ss
020A:28C1  49 6E 76 61 6C 69			db	'Invalid device request', 0Ah, 'D'
020A:28C7  64 20 64 65 76 69
020A:28CD  63 65 20 72 65 71
020A:28D3  75 65 73 74 0A 44
020A:28D9  61 74 61 20 65 72			db	'ata error!Invalid device request'
020A:28DF  72 6F 72 21 49 6E
020A:28E5  76 61 6C 69 64 20
020A:28EB  64 65 76 69 63 65
020A:28F1  20 72 65 71 75 65
020A:28F7  73 74
020A:28F9  20 70 61 72 61 6D			db	' parameters', 0Ah, 'Seek error'
020A:28FF  65 74 65 72 73 0A
020A:2905  53 65 65 6B 20 65
020A:290B  72 72 6F 72
020A:290F  12 49 6E				adc	cl,[bx+di+6Eh]
020A:2912  76 61				jbe	loc_209			; Jump if below or =
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 77

020A:2914  6C					db	6Ch
020A:2915  69					db	69h
020A:2916  64					db	64h
020A:2917  20 6D 65				and	[di+65h],ch
020A:291A  64					db	64h
020A:291B  69					db	69h
020A:291C  61					db	61h
020A:291D  20 74 79				and	[si+79h],dh
020A:2920  70 65				jo	loc_212			; Jump if overflow=1
020A:2922  10 53 65				adc	[bp+di+65h],dl
020A:2925  63					db	63h
020A:2926  74 6F				jz	loc_214			; Jump if zero
020A:2928  72 20				jc	loc_203			; Jump if carry Set
020A:292A  6E					db	6Eh
020A:292B  6F					db	6Fh
020A:292C  74 20				jz	loc_204			; Jump if zero
020A:292E  66					db	66h
020A:292F  6F					db	6Fh
020A:2930  75 6E				jnz	loc_216			; Jump if not zero
020A:2932  64					db	64h
020A:2933  1A 50 72				sbb	dl,[bx+si+72h]
020A:2936  69					db	69h
020A:2937  6E					db	6Eh
020A:2938  74 65				jz	loc_215			; Jump if zero
020A:293A  72 20				jc	loc_205			; Jump if carry Set
020A:293C  6F					db	6Fh
020A:293D  75 74				jnz	loc_218			; Jump if not zero
020A:293F  20 6F 66				and	[bx+66h],ch
020A:2942  20 70 61				and	[bx+si+61h],dh
020A:2945  70 65				jo	loc_217			; Jump if overflow=1
020A:2947  72 20				jc	loc_207			; Jump if carry Set
020A:2949  65					db	65h
020A:294A			loc_203:
020A:294A  72 72				jc	loc_221			; Jump if carry Set
020A:294C  6F					db	6Fh
020A:294D  72 11				jc	loc_206			; Jump if carry Set
020A:294F  57					push	di
020A:2950  72 69				jc	loc_220			; Jump if carry Set
020A:2952  74 65				jz	loc_219			; Jump if zero
020A:2954  20 66 61				and	[bp+61h],ah
020A:2957  75 6C				jnz	loc_222			; Jump if not zero
020A:2959  74 20				jz	loc_210			; Jump if zero
020A:295B  65					db	65h
020A:295C			loc_205:
020A:295C  72 72				jc	loc_223			; Jump if carry Set
020A:295E  6F					db	6Fh
020A:295F  72 10				jc	loc_208			; Jump if carry Set
020A:2961  52					push	dx
020A:2962  65					db	65h
020A:2963  61					db	61h
020A:2964  64					db	64h
020A:2965  20 66 61				and	[bp+61h],ah
020A:2968  75 6C				jnz	loc_224			; Jump if not zero
020A:296A  74 20				jz	loc_213			; Jump if zero
020A:296C  65					db	65h
020A:296D  72 72				jc	loc_226			; Jump if carry Set
020A:296F  6F					db	6Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 78

020A:2970  72 0F				jc	loc_211			; Jump if carry Set
020A:2972  47					inc	di
020A:2973  65					db	65h
020A:2974  6E					db	6Eh
020A:2975			loc_209:
020A:2975  65					db	65h
020A:2976  72 61				jc	loc_225			; Jump if carry Set
020A:2978  6C					db	6Ch
020A:2979  20 66 61				and	[bp+61h],ah
020A:297C  69					db	69h
020A:297D  6C					db	6Ch
020A:297E  75 72				jnz	loc_228			; Jump if not zero
020A:2980  65					db	65h
020A:2981			loc_211:
020A:2981  11 53 68				adc	[bp+di+68h],dx
020A:2984  61					db	61h
020A:2985  72 69				jc	loc_227			; Jump if carry Set
020A:2987			loc_212:
020A:2987  6E					db	6Eh
020A:2988  67					db	67h
020A:2989  20 76 69				and	[bp+69h],dh
020A:298C			loc_213:
020A:298C  6F					db	6Fh
020A:298D  6C					db	6Ch
020A:298E  61					db	61h
020A:298F  74 69				jz	loc_229			; Jump if zero
020A:2991  6F					db	6Fh
020A:2992  6E					db	6Eh
020A:2993  0E					push	cs
020A:2994  4C					dec	sp
020A:2995  6F					db	6Fh
020A:2996  63					db	63h
020A:2997			loc_214:
020A:2997  6B					db	6Bh
020A:2998  20 76 69				and	[bp+69h],dh
020A:299B  6F					db	6Fh
020A:299C  6C					db	6Ch
020A:299D  61					db	61h
020A:299E  74 69				jz	loc_231			; Jump if zero
020A:29A0			loc_216:
020A:29A0  6F					db	6Fh
020A:29A1  6E					db	6Eh
020A:29A2  13 49 6E				adc	cx,[bx+di+6Eh]
020A:29A5  76 61				jbe	loc_230			; Jump if below or =
020A:29A7  6C					db	6Ch
020A:29A8  69					db	69h
020A:29A9  64					db	64h
020A:29AA  20 64 69				and	[si+69h],ah
020A:29AD  73 6B				jnc	loc_233			; Jump if carry=0
020A:29AF  20 63 68				and	[bp+di+68h],ah
020A:29B2  61					db	61h
020A:29B3			loc_218:
020A:29B3  6E					db	6Eh
020A:29B4  67					db	67h
020A:29B5  65					db	65h
020A:29B6  0F			;*		pop	cs			; Dangerous-8088 only
020A:29B6  0F					db	0Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 79

020A:29B7  46					inc	si
020A:29B8  43					inc	bx
020A:29B9			loc_219:
020A:29B9  42					inc	dx
020A:29BA  20 75 6E				and	[di+6Eh],dh
020A:29BD  61					db	61h
020A:29BE			loc_221:
020A:29BE  76 61				jbe	loc_234			; Jump if below or =
020A:29C0  69					db	69h
020A:29C1  6C					db	6Ch
020A:29C2  61					db	61h
020A:29C3  62					db	62h
020A:29C4  6C					db	6Ch
020A:29C5			loc_222:
020A:29C5  65					db	65h
020A:29C6  19 53 79				sbb	[bp+di+79h],dx
020A:29C9  73 74				jnc	loc_236			; Jump if carry=0
020A:29CB  65					db	65h
020A:29CC  6D					db	6Dh
020A:29CD  20 72 65				and	[bp+si+65h],dh
020A:29D0			loc_223:
020A:29D0  73 6F				jnc	loc_237			; Jump if carry=0
020A:29D2  75 72				jnz	loc_239			; Jump if not zero
020A:29D4  63					db	63h
020A:29D5  65					db	65h
020A:29D6			loc_224:
020A:29D6  20 65 78				and	[di+78h],ah
020A:29D9			loc_225:
020A:29D9  68					db	68h
020A:29DA  61					db	61h
020A:29DB  75 73				jnz	loc_240			; Jump if not zero
020A:29DD  74 65				jz	loc_238			; Jump if zero
020A:29DF  64					db	64h
020A:29E0  12 43 6F				adc	al,[bp+di+6Fh]
020A:29E3  64					db	64h
020A:29E4  65					db	65h
020A:29E5  20 70 61				and	[bx+si+61h],dh
020A:29E8  67					db	67h
020A:29E9  65					db	65h
020A:29EA  20 6D 69				and	[di+69h],ch
020A:29ED  73 6D				jnc	loc_242			; Jump if carry=0
020A:29EF  61					db	61h
020A:29F0			loc_227:
020A:29F0  74 63				jz	loc_241			; Jump if zero
020A:29F2			loc_228:
020A:29F2  68					db	68h
020A:29F3  0C 4F				or	al,4Fh			; 'O'
020A:29F5  75 74				jnz	loc_243			; Jump if not zero
020A:29F7  20 6F 66				and	[bx+66h],ch
020A:29FA			loc_229:
020A:29FA  20 69 6E				and	[bx+di+6Eh],ch
020A:29FD  70 75				jo	loc_245			; Jump if overflow=1
020A:29FF  74 17				jz	loc_232			; Jump if zero
020A:2A01  49					dec	cx
020A:2A02  6E					db	6Eh
020A:2A03  73 75				jnc	loc_246			; Jump if carry=0
020A:2A05  66					db	66h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 80

020A:2A06  66					db	66h
020A:2A07  69					db	69h
020A:2A08			loc_230:
020A:2A08  63					db	63h
020A:2A09			loc_231:
020A:2A09  69					db	69h
020A:2A0A  65					db	65h
020A:2A0B  6E					db	6Eh
020A:2A0C  74 20				jz	loc_235			; Jump if zero
020A:2A0E  64					db	64h
020A:2A0F  69					db	69h
020A:2A10  73 6B				jnc	loc_247			; Jump if carry=0
020A:2A12  20 73 70				and	[bp+di+70h],dh
020A:2A15  61					db	61h
020A:2A16  63					db	63h
020A:2A17  65					db	65h
020A:2A18			loc_232:
020A:2A18  65					db	65h
020A:2A19  08 79 08				or	[bx+di+8],bh
020A:2A1C  86 08				xchg	[bx+si],cl
020A:2A1E  90					nop
020A:2A1F  08 A7 B208				or	data_745[bx],ah		; (020A:B208=89h)
020A:2A23  08 D4				or	ah,dl
020A:2A25  08 DF				or	bh,bl
020A:2A27  08 F2				or	dl,dh
020A:2A29  08 03				or	[bp+di],al
020A:2A2B  09 1E 3009				or	data_282,bx		; (020A:3009=746Eh)
020A:2A2F  09 41 09				or	[bx+di+9],ax
020A:2A32  51					push	cx
020A:2A33  09 63 09				or	[bp+di+9],sp
020A:2A36  72 09				jc	loc_237			; Jump if carry Set
020A:2A38  86 09				xchg	[bx+di],cl
020A:2A3A  96					xchg	si,ax
020A:2A3B  09 B0 C309				or	data_760[bx+si],si	; (020A:C309=629h)
020A:2A3F			loc_236:
020A:2A3F  09 D0				or	ax,dx
020A:2A41			loc_237:
020A:2A41  09 13				or	[bp+di],dx
020A:2A43  54					push	sp
020A:2A44			loc_238:
020A:2A44  6F					db	6Fh
020A:2A45  6F					db	6Fh
020A:2A46			loc_239:
020A:2A46  20 6D 61				and	[di+61h],ch
020A:2A49  6E					db	6Eh
020A:2A4A  79 20				jns	loc_244			; Jump if not sign
020A:2A4C  70 61				jo	loc_248			; Jump if overflow=1
020A:2A4E  72 61				jc	loc_249			; Jump if carry Set
020A:2A50			loc_240:
020A:2A50  4D					dec	bp
020A:2A51  00 00				add	[bx+si],al
020A:2A53  07					pop	es
020A:2A54  00 73 1A				add	[bp+di+1Ah],dh
020A:2A57  52					push	dx
020A:2A58  65					db	65h
020A:2A59  71 75				jno	loc_252			; Jump if not overflw
020A:2A5B  69					db	69h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 81

020A:2A5C			loc_242:
020A:2A5C  72 65				jc	loc_250			; Jump if carry Set
020A:2A5E  64					db	64h
020A:2A5F  20 00				and	[bx+si],al
020A:2A61  01 00				add	[bx+si],ax
020A:2A63  00					db	0
020A:2A64  00					db	0
020A:2A65  00 00				add	[bx+si],al
020A:2A67  00 87 0006				add	byte ptr ds:[6][bx],al	; (020A:0006=3)
020A:2A6B			loc_243:
020A:2A6B  00 FF				add	bh,bh
020A:2A6D  0013[FF]				db	19 dup (0FFh)
020A:2A80  43					inc	bx
020A:2A81  3A 5C 57				cmp	bl,[si+57h]
020A:2A84  49					dec	cx
020A:2A85  4E					dec	si
020A:2A86  44					inc	sp
020A:2A87  4F					dec	di
020A:2A88  57					push	di
020A:2A89  53					push	bx
020A:2A8A  5C					pop	sp
020A:2A8B  54					push	sp
020A:2A8C  45					inc	bp
020A:2A8D  4D					dec	bp
020A:2A8E  50					push	ax
020A:2A8F  5C					pop	sp
020A:2A90  73 63				jnc	loc_254			; Jump if carry=0
020A:2A92  73 31				jnc	loc_251			; Jump if carry=0
020A:2A94  37					aaa				; Ascii adjust
020A:2A95  2E					db	2Eh
020A:2A96  74 6D				jz	loc_255			; Jump if zero
020A:2A98  70 00				jo	$+2			; delay for I/O
020A:2A9A  0027[00]				db	39 dup (0)
020A:2AC1  20 76 61				and	[bp+61h],dh
020A:2AC4  6C					db	6Ch
020A:2AC5			loc_251:
020A:2AC5  75 65				jnz	loc_256			; Jump if not zero
020A:2AC7  20 6E 6F				and	[bp+6Fh],ch
020A:2ACA  74 20				jz	loc_253			; Jump if zero
020A:2ACC  61					db	61h
020A:2ACD  6C					db	6Ch
020A:2ACE  6C					db	6Ch
020A:2ACF  6F					db	6Fh
020A:2AD0			loc_252:
020A:2AD0  4D					dec	bp
020A:2AD1  0D 4304				or	ax,4304h
020A:2AD4  00 61 72				add	[bx+di+72h],ah
020A:2AD7  61 6D 65 74 65 72			db	'ameter vaCOMSPEC=C:\WINDOWS\SYST'
020A:2ADD  20 76 61 43 4F 4D
020A:2AE3  53 50 45 43 3D 43
020A:2AE9  3A 5C 57 49 4E 44
020A:2AEF  4F 57 53 5C 53 59
020A:2AF5  53 54
020A:2AF7  45 4D 33 32 5C 43			db	'EM32\COMMAND'
020A:2AFD  4F 4D 4D 41 4E 44
020A:2B03  432E			data_237	dw	432Eh			; Data table (indexed access)
020A:2B05			loc_255:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 82

020A:2B05  4F					dec	di
020A:2B06  4D					dec	bp
020A:2B07  00 41 4C				add	[bx+di+4Ch],al
020A:2B0A  4C					dec	sp
020A:2B0B  55					push	bp
020A:2B0C  53					push	bx
020A:2B0D  45					inc	bp
020A:2B0E  52					push	dx
020A:2B0F  53					push	bx
020A:2B10  50					push	ax
020A:2B11  52					push	dx
020A:2B12  4F					dec	di
020A:2B13  46					inc	si
020A:2B14  49					dec	cx
020A:2B15  4C					dec	sp
020A:2B16  45					inc	bp
020A:2B17  3D 3A43				cmp	ax,3A43h
020A:2B1A  5C					pop	sp
020A:2B1B  44					inc	sp
020A:2B1C  4F					dec	di
020A:2B1D  43					inc	bx
020A:2B1E  55					push	bp
020A:2B1F  4D					dec	bp
020A:2B20  45					inc	bp
020A:2B21  7E 31				jle	$+33h			; Jump if < or =
020A:2B23  5C					pop	sp
020A:2B24  41					inc	cx
020A:2B25  4C					dec	sp
020A:2B26  4C					dec	sp
020A:2B27  55					push	bp
020A:2B28  53					push	bx
020A:2B29  45					inc	bp
020A:2B2A  7E 31				jle	$+33h			; Jump if < or =
020A:2B2C			loc_256:
020A:2B2C  00 41 50				add	[bx+di+50h],al
020A:2B2F  50					push	ax
020A:2B30  44					inc	sp
020A:2B31  41					inc	cx
020A:2B32  54					push	sp
020A:2B33  41					inc	cx
020A:2B34  3D 3A43				cmp	ax,3A43h
020A:2B37  5C			data_239	db	5Ch
020A:2B38  44			data_240	db	44h
020A:2B39  434F			data_241	dw	434Fh
020A:2B3B  55			data_242	db	55h
020A:2B3C  4D			data_243	db	4Dh
020A:2B3D  7E45			data_244	dw	7E45h
020A:2B3F  31 5C 41				xor	[si+41h],bx
020A:2B42  4D44			data_247	dw	4D44h
020A:2B44  49			data_248	db	49h
020A:2B45  4E 49 7E 31 5C 41	data_249	db	'NI~1\APPLIC~1', 0
020A:2B4B  50 50 4C 49 43 7E
020A:2B51  31 00
020A:2B53  43					inc	bx
020A:2B54  4F					dec	di
020A:2B55  4D					dec	bp
020A:2B56  4D					dec	bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 83

020A:2B57  4F					dec	di
020A:2B58  4E					dec	si
020A:2B59  50					push	ax
020A:2B5A  52					push	dx
020A:2B5B  4F					dec	di
020A:2B5C  47					inc	di
020A:2B5D  52					push	dx
020A:2B5E  41					inc	cx
020A:2B5F  4D					dec	bp
020A:2B60  46					inc	si
020A:2B61  49					dec	cx
020A:2B62  4C					dec	sp
020A:2B63  45					inc	bp
020A:2B64  53					push	bx
020A:2B65  3D 3A43				cmp	ax,3A43h
020A:2B68  5C					pop	sp
020A:2B69  50					push	ax
020A:2B6A  52					push	dx
020A:2B6B  4F					dec	di
020A:2B6C  47					inc	di
020A:2B6D  52					push	dx
020A:2B6E  41					inc	cx
020A:2B6F  7E 31				jle	$+33h			; Jump if < or =
020A:2B71  5C					pop	sp
020A:2B72  43					inc	bx
020A:2B73  4F					dec	di
020A:2B74  4D					dec	bp
020A:2B75  4D					dec	bp
020A:2B76  4F					dec	di
020A:2B77  4E					dec	si
020A:2B78  7E 31				jle	$+33h			; Jump if < or =
020A:2B7A  00 43 4F				add	[bp+di+4Fh],al
020A:2B7D  4D					dec	bp
020A:2B7E  50					push	ax
020A:2B7F  55					push	bp
020A:2B80  54					push	sp
020A:2B81  45					inc	bp
020A:2B82  52					push	dx
020A:2B83  4E					dec	si
020A:2B84  41					inc	cx
020A:2B85  4D					dec	bp
020A:2B86  45					inc	bp
020A:2B87  3D 4441				cmp	ax,4441h
020A:2B8A  4D					dec	bp
020A:2B8B  49					dec	cx
020A:2B8C  4E					dec	si
020A:2B8D  2D 3738				sub	ax,3738h
020A:2B90  42					inc	dx
020A:2B91  35 3133				xor	ax,3133h
020A:2B94  38 39				cmp	[bx+di],bh
020A:2B96  32 00				xor	al,[bx+si]
020A:2B98  46					inc	si
020A:2B99  50					push	ax
020A:2B9A  5F					pop	di
020A:2B9B  4E					dec	si
020A:2B9C  4F					dec	di
020A:2B9D  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 84

020A:2B9E  48					dec	ax
020A:2B9F  4F					dec	di
020A:2BA0  53					push	bx
020A:2BA1  54					push	sp
020A:2BA2  5F					pop	di
020A:2BA3  43					inc	bx
020A:2BA4  48					dec	ax
020A:2BA5  45					inc	bp
020A:2BA6  43					inc	bx
020A:2BA7  4B					dec	bx
020A:2BA8  3D 4F4E				cmp	ax,4F4Eh
020A:2BAB  00 48 4F				add	[bx+si+4Fh],cl
020A:2BAE  4D					dec	bp
020A:2BAF  45					inc	bp
020A:2BB0  44					inc	sp
020A:2BB1  52					push	dx
020A:2BB2  49					dec	cx
020A:2BB3  56					push	si
020A:2BB4  45					inc	bp
020A:2BB5  3D 3A43				cmp	ax,3A43h
020A:2BB8  00 48 4F				add	[bx+si+4Fh],cl
020A:2BBB  4D					dec	bp
020A:2BBC  45					inc	bp
020A:2BBD  50					push	ax
020A:2BBE  41					inc	cx
020A:2BBF  54					push	sp
020A:2BC0  48					dec	ax
020A:2BC1  3D 445C				cmp	ax,445Ch
020A:2BC4  6F					db	6Fh
020A:2BC5  63					db	63h
020A:2BC6  75 6D				jnz	$+6Fh			; Jump if not zero
020A:2BC8  65					db	65h
020A:2BC9  6E					db	6Eh
020A:2BCA  74 73				jz	$+75h			; Jump if zero
020A:2BCC  20 61 6E				and	[bx+di+6Eh],ah
020A:2BCF  64					db	64h
020A:2BD0  20 53 65				and	[bp+di+65h],dl
020A:2BD3  74 74				jz	$+76h			; Jump if zero
020A:2BD5  69					db	69h
020A:2BD6  6E					db	6Eh
020A:2BD7  67					db	67h
020A:2BD8  73 5C				jnc	$+5Eh			; Jump if carry=0
020A:2BDA  41					inc	cx
020A:2BDB  64					db	64h
020A:2BDC  6D					db	6Dh
020A:2BDD  69					db	69h
020A:2BDE  6E					db	6Eh
020A:2BDF  69					db	69h
020A:2BE0  73 74				jnc	$+76h			; Jump if carry=0
020A:2BE2  6172			data_251	dw	6172h
020A:2BE4  6F74			data_252	dw	6F74h
020A:2BE6  72			data_253	db	72h
020A:2BE7  4C00			data_254	dw	4C00h			; Data table (indexed access)
020A:2BE9  474F			data_255	dw	474Fh			; Data table (indexed access)
020A:2BEB  4E4F			data_256	dw	4E4Fh			; Data table (indexed access)
020A:2BED  4553			data_257	dw	4553h			; Data table (indexed access)
020A:2BEF  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 85

020A:2BF0  56					push	si
020A:2BF1  45					inc	bp
020A:2BF2  52					push	dx
020A:2BF3  3D 5C5C				cmp	ax,5C5Ch
020A:2BF6  41					inc	cx
020A:2BF7  44					inc	sp
020A:2BF8  4D					dec	bp
020A:2BF9  49					dec	cx
020A:2BFA  4E					dec	si
020A:2BFB  2D 3738				sub	ax,3738h
020A:2BFE  42					inc	dx
020A:2BFF  35 3133				xor	ax,3133h
020A:2C02  38 39				cmp	[bx+di],bh
020A:2C04  32 00				xor	al,[bx+si]
020A:2C06  4E					dec	si
020A:2C07  55					push	bp
020A:2C08  4D					dec	bp
020A:2C09  42					inc	dx
020A:2C0A  45					inc	bp
020A:2C0B  52					push	dx
020A:2C0C  5F					pop	di
020A:2C0D  4F					dec	di
020A:2C0E  46					inc	si
020A:2C0F  505F			data_258	dw	505Fh
020A:2C11  4F52			data_259	dw	4F52h
020A:2C13  43					inc	bx
020A:2C14  45					inc	bp
020A:2C15  53					push	bx
020A:2C16  53					push	bx
020A:2C17  4F					dec	di
020A:2C18  52					push	dx
020A:2C19  53					push	bx
020A:2C1A  3D 0031				cmp	ax,31h
020A:2C1D  4F					dec	di
020A:2C1E  53					push	bx
020A:2C1F  3D 6957				cmp	ax,6957h
020A:2C22  6E 64 6F 77 73 5F	data_261	db	'ndows_NT', 0
020A:2C28  4E 54 00
020A:2C2B  50					push	ax
020A:2C2C  41					inc	cx
020A:2C2D  54					push	sp
020A:2C2E  48					dec	ax
020A:2C2F  3D 3A43				cmp	ax,3A43h
020A:2C32  5C					pop	sp
020A:2C33  57					push	di
020A:2C34  49					dec	cx
020A:2C35  4E					dec	si
020A:2C36  44					inc	sp
020A:2C37  4F					dec	di
020A:2C38  57					push	di
020A:2C39  53					push	bx
020A:2C3A  5C					pop	sp
020A:2C3B  73 79				jnc	$+7Bh			; Jump if carry=0
020A:2C3D  73 74				jnc	$+76h			; Jump if carry=0
020A:2C3F  65					db	65h
020A:2C40  6D					db	6Dh
020A:2C41  33 32				xor	si,[bp+si]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 86

020A:2C43  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2C46  5C					pop	sp
020A:2C47  57					push	di
020A:2C48  49					dec	cx
020A:2C49  4E					dec	si
020A:2C4A  44					inc	sp
020A:2C4B  4F					dec	di
020A:2C4C  57					push	di
020A:2C4D  53					push	bx
020A:2C4E  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2C51  5C					pop	sp
020A:2C52  57					push	di
020A:2C53  49					dec	cx
020A:2C54  4E					dec	si
020A:2C55  44					inc	sp
020A:2C56  4F					dec	di
020A:2C57  57					push	di
020A:2C58  53					push	bx
020A:2C59  5C					pop	sp
020A:2C5A  53					push	bx
020A:2C5B  79 73				jns	$+75h			; Jump if not sign
020A:2C5D  74 65				jz	$+67h			; Jump if zero
020A:2C5F  6D					db	6Dh
020A:2C60  33 32				xor	si,[bp+si]
020A:2C62  575C			data_263	dw	575Ch
020A:2C64  62					db	62h
020A:2C65  65					db	65h
020A:2C66  6D					db	6Dh
020A:2C67  00 50 41				add	[bx+si+41h],dl
020A:2C6A  54					push	sp
020A:2C6B  48					dec	ax
020A:2C6C  45					inc	bp
020A:2C6D  58					pop	ax
020A:2C6E  54					push	sp
020A:2C6F  3D 432E				cmp	ax,432Eh
020A:2C72  4F					dec	di
020A:2C73  4D					dec	bp
020A:2C74  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=0B913h)
020A:2C78  45					inc	bp
020A:2C79  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=4EFCh)
020A:2C7D  54					push	sp
020A:2C7E  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=0CEE8h)
020A:2C82  44					inc	sp
020A:2C83  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=10A8h)
020A:2C87  53					push	bx
020A:2C88  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=10A8h)
020A:2C8C  45					inc	bp
020A:2C8D  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=800Ah)
020A:2C91  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=800Ah)
020A:2C95  45					inc	bp
020A:2C96  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=8090h)
020A:2C9A  46					inc	si
020A:2C9B  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=8090h)
020A:2C9F  48					dec	ax
020A:2CA0  00 50 52				add	[bx+si+52h],dl
020A:2CA3  4F					dec	di

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 87

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_32		proc	near
020A:2CA4  43					inc	bx
020A:2CA5  45					inc	bp
020A:2CA6  53					push	bx
020A:2CA7  53					push	bx
020A:2CA8  4F					dec	di
020A:2CA9  52					push	dx
020A:2CAA  5F					pop	di
020A:2CAB  41					inc	cx
020A:2CAC  52					push	dx
020A:2CAD  43					inc	bx
020A:2CAE  48					dec	ax
020A:2CAF  5449			data_264	dw	5449h
020A:2CB1  45					inc	bp
020A:2CB2  43					inc	bx
020A:2CB3  54					push	sp
020A:2CB4  55					push	bp
020A:2CB5  52					push	dx
020A:2CB6  45					inc	bp
020A:2CB7  3D 3878				cmp	ax,3878h
020A:2CBA  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:2CBE  4F					dec	di
020A:2CBF  43					inc	bx
020A:2CC0  45					inc	bp
020A:2CC1  53					push	bx
020A:2CC2  4F53			data_265	dw	4F53h
020A:2CC4  5F52			data_266	dw	5F52h
020A:2CC6  4449			data_267	dw	4449h
020A:2CC8  4E45			data_268	dw	4E45h
020A:2CCA  4954			data_269	dw	4954h			; Data table (indexed access)
020A:2CCC  46					inc	si
020A:2CCD  49					dec	cx
020A:2CCE  45					inc	bp
020A:2CCF  52					push	dx
020A:2CD0  3D 3878				cmp	ax,3878h
020A:2CD3  36					db	36h
020A:2CD4  20 46 61				and	[bp+61h],al
020A:2CD7  6D					db	6Dh
020A:2CD8  69					db	69h
020A:2CD9  6C					db	6Ch
020A:2CDA  79 20				jns	$+22h			; Jump if not sign
020A:2CDC  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:2CE0  64					db	64h
020A:2CE1  65					db	65h
020A:2CE2  6C					db	6Ch
020A:2CE3  20 31				and	[bx+di],dh
020A:2CE5  34 32				xor	al,32h			; '2'
020A:2CE7  20 53 74				and	[bp+di+74h],dl
020A:2CEA  65					db	65h
020A:2CEB  70 70				jo	$+72h			; Jump if overflow=1
020A:2CED  69					db	69h
020A:2CEE  6E					db	6Eh
020A:2CEF  67					db	67h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 88

020A:2CF0  20 39				and	[bx+di],bh
020A:2CF2  2C 20				sub	al,20h			; ' '
020A:2CF4  47					inc	di
020A:2CF5  65					db	65h
020A:2CF6  6E					db	6Eh
020A:2CF7  75 69				jnz	$+6Bh			; Jump if not zero
020A:2CF9  6E					db	6Eh
020A:2CFA  65					db	65h
020A:2CFB  49					dec	cx
020A:2CFC  6E					db	6Eh
020A:2CFD  74 65				jz	$+67h			; Jump if zero
020A:2CFF  6C					db	6Ch
020A:2D00  00 50 52				add	[bx+si+52h],dl
020A:2D03  4F					dec	di
020A:2D04  43					inc	bx
020A:2D05  45					inc	bp
020A:2D06  53 53 4F 52 5F 4C	data_270	db	'SSOR_LEVEL=6', 0
020A:2D0C  45 56 45 4C 3D 36
020A:2D12  00
020A:2D13  50					push	ax
020A:2D14  52					push	dx
020A:2D15  4F					dec	di
020A:2D16  43					inc	bx
020A:2D17  45					inc	bp
020A:2D18  53					push	bx
020A:2D19  53					push	bx
020A:2D1A  4F					dec	di
020A:2D1B  52					push	dx
020A:2D1C  5F					pop	di
020A:2D1D  52					push	dx
020A:2D1E  45					inc	bp
020A:2D1F  56					push	si
020A:2D20  49					dec	cx
020A:2D21  53					push	bx
020A:2D22  49					dec	cx
020A:2D23  4F					dec	di
020A:2D24  4E					dec	si
020A:2D25  3D			data_271	db	3Dh
020A:2D26  38 65 30				cmp	[di+30h],ah
020A:2D29  39 00				cmp	[bx+si],ax
020A:2D2B  50					push	ax
020A:2D2C  52					push	dx
020A:2D2D  4F					dec	di
020A:2D2E  47					inc	di
020A:2D2F  52					push	dx
020A:2D30  41					inc	cx
020A:2D31  4D					dec	bp
020A:2D32  46					inc	si
020A:2D33  49					dec	cx
020A:2D34  4C					dec	sp
020A:2D35  45					inc	bp
020A:2D36  53					push	bx
020A:2D37  3D 3A43				cmp	ax,3A43h
020A:2D3A  5C 50 52 4F 47 52	data_272	db	'\PROGRA~1', 0
020A:2D40  41 7E 31 00
020A:2D44  50					push	ax
020A:2D45  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 89

020A:2D46  4F					dec	di
020A:2D47  4D					dec	bp
020A:2D48  50					push	ax
020A:2D49  54					push	sp
020A:2D4A  3D 5024				cmp	ax,5024h
020A:2D4D  24 47				and	al,47h			; 'G'
020A:2D4F  00 53 45				add	[bp+di+45h],dl
020A:2D52  53					push	bx
020A:2D53  53					push	bx
020A:2D54  49					dec	cx
020A:2D55  4F					dec	di
020A:2D56  4E					dec	si
020A:2D57  4E					dec	si
020A:2D58  41					inc	cx
020A:2D59  4D					dec	bp
020A:2D5A  45					inc	bp
020A:2D5B  3D			data_273	db	3Dh
020A:2D5C  6F43			data_274	dw	6F43h
020A:2D5E  6E					db	6Eh
020A:2D5F  73 6F				jnc	$+71h			; Jump if carry=0
020A:2D61  6C					db	6Ch
020A:2D62  65					db	65h
020A:2D63  00 53 59				add	[bp+di+59h],dl
020A:2D66  53					push	bx
020A:2D67  54					push	sp
020A:2D68  45					inc	bp
020A:2D69  4D					dec	bp
020A:2D6A  44					inc	sp
020A:2D6B  52					push	dx
020A:2D6C  49					dec	cx
020A:2D6D  56					push	si
020A:2D6E  45					inc	bp
020A:2D6F  3D 3A43				cmp	ax,3A43h
020A:2D72  00 53 59				add	[bp+di+59h],dl
020A:2D75  53					push	bx
020A:2D76  54					push	sp
020A:2D77  45					inc	bp
020A:2D78  4D					dec	bp
020A:2D79  52					push	dx
020A:2D7A  4F					dec	di
020A:2D7B  4F					dec	di
020A:2D7C  54					push	sp
020A:2D7D  3D 3A43				cmp	ax,3A43h
020A:2D80  5C					pop	sp
020A:2D81  57					push	di
020A:2D82  49					dec	cx
020A:2D83  4E					dec	si
020A:2D84  44					inc	sp
020A:2D85  4F					dec	di
020A:2D86  57					push	di
020A:2D87  53					push	bx
020A:2D88  00 54 45				add	[si+45h],dl
020A:2D8B  4D					dec	bp
020A:2D8C  50					push	ax
020A:2D8D  3D 3A43				cmp	ax,3A43h
020A:2D90  5C					pop	sp
020A:2D91  57					push	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 90

020A:2D92  49					dec	cx
020A:2D93  4E					dec	si
020A:2D94  44					inc	sp
020A:2D95  4F					dec	di
020A:2D96  57					push	di
020A:2D97  53					push	bx
020A:2D98  5C					pop	sp
020A:2D99  54					push	sp
020A:2D9A  45					inc	bp
020A:2D9B  4D					dec	bp
020A:2D9C  50					push	ax
020A:2D9D  00 54 4D				add	[si+4Dh],dl
020A:2DA0  50					push	ax
020A:2DA1  3D 3A43				cmp	ax,3A43h
020A:2DA4  5C					pop	sp
020A:2DA5  57					push	di
020A:2DA6  49					dec	cx
020A:2DA7  4E					dec	si
020A:2DA8  44					inc	sp
020A:2DA9  4F					dec	di
020A:2DAA  57					push	di
020A:2DAB  5C53			data_275	dw	5C53h
020A:2DAD  54			data_276	db	54h
020A:2DAE  45					inc	bp
020A:2DAF  4D					dec	bp
020A:2DB0  50					push	ax
020A:2DB1  00 55 53				add	[di+53h],dl
020A:2DB4  45					inc	bp
020A:2DB5  52					push	dx
020A:2DB6  44					inc	sp
020A:2DB7  4F					dec	di
020A:2DB8  4D					dec	bp
020A:2DB9  41					inc	cx
020A:2DBA  49					dec	cx
020A:2DBB  4E					dec	si
020A:2DBC  3D 4441				cmp	ax,4441h
020A:2DBF  4D					dec	bp
020A:2DC0  49					dec	cx
020A:2DC1  4E					dec	si
020A:2DC2  2D 3738				sub	ax,3738h
020A:2DC5  42					inc	dx
020A:2DC6  35 3133				xor	ax,3133h
020A:2DC9  38 39				cmp	[bx+di],bh
020A:2DCB  32 00				xor	al,[bx+si]
020A:2DCD  55					push	bp
020A:2DCE  53					push	bx
020A:2DCF  45					inc	bp
020A:2DD0  52					push	dx
020A:2DD1  4E					dec	si
020A:2DD2  41					inc	cx
020A:2DD3  4D					dec	bp
020A:2DD4  45					inc	bp
020A:2DD5  3D 6441				cmp	ax,6441h
020A:2DD8  6D					db	6Dh
020A:2DD9  69					db	69h
020A:2DDA  6E					db	6Eh
020A:2DDB  69					db	69h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 91

020A:2DDC  73 74				jnc	$+76h			; Jump if carry=0
020A:2DDE  72 61				jc	$+63h			; Jump if carry Set
020A:2DE0  74 6F				jz	$+71h			; Jump if zero
020A:2DE2  72 00				jc	$+2			; delay for I/O
020A:2DE4  55					push	bp
020A:2DE5  53					push	bx
020A:2DE6  45					inc	bp
020A:2DE7  52					push	dx
020A:2DE8  50					push	ax
020A:2DE9  52					push	dx
020A:2DEA  4F					dec	di
020A:2DEB  46					inc	si
020A:2DEC  49					dec	cx
020A:2DED  4C					dec	sp
020A:2DEE  45					inc	bp
020A:2DEF  3D 3A43				cmp	ax,3A43h
020A:2DF2  5C					pop	sp
020A:2DF3  44					inc	sp
020A:2DF4  434F			data_277	dw	434Fh
020A:2DF6  55					push	bp
020A:2DF7  4D					dec	bp
020A:2DF8  45					inc	bp
020A:2DF9  7E 31				jle	$+33h			; Jump if < or =
020A:2DFB  5C					pop	sp
020A:2DFC  41					inc	cx
020A:2DFD  44					inc	sp
020A:2DFE  4D					dec	bp
020A:2DFF  49					dec	cx
020A:2E00  4E					dec	si
020A:2E01  49					dec	cx
020A:2E02  7E 31				jle	$+33h			; Jump if < or =
020A:2E04  00 42 4C				add	[bp+si+4Ch],al
020A:2E07  41					inc	cx
020A:2E08  53					push	bx
020A:2E09  54					push	sp
020A:2E0A  45					inc	bp
020A:2E0B  52					push	dx
020A:2E0C  3D 3241				cmp	ax,3241h
020A:2E0F  32 30				xor	dh,[bx+si]
020A:2E11  20 49 35				and	[bx+di+35h],cl
020A:2E14  20 44 31				and	[si+31h],al
020A:2E17  20 50 33				and	[bx+si+33h],dl
020A:2E1A  33 30				xor	si,[bx+si]
020A:2E1C  20 54 33				and	[si+33h],dl
020A:2E1F  00					db	0
020A:2E20  00			data_279	db	0
020A:2E21  00					db	0
020A:2E22  00					db	0
020A:2E23  00					db	0
020A:2E24  00					db	0
020A:2E25  00					db	0
020A:2E26  00					db	0
020A:2E27  00					db	0
020A:2E28  00					db	0
020A:2E29  00					db	0
020A:2E2A  00					db	0
020A:2E2B  00 00				add	[bx+si],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 92

020A:2E2D  00 7D 0C				add	[di+0Ch],bh
020A:2E30  00 00				add	[bx+si],al
020A:2E32  89 0C				mov	[si],cx
020A:2E34  A5					movsw				; Mov [si] to es:[di]
020A:2E35  0C B4				or	al,0B4h
020A:2E37  0C CA				or	al,0CAh
020A:2E39  0C E0				or	al,0E0h
020A:2E3B  0C F1				or	al,0F1h
020A:2E3D  0C 03				or	al,3
020A:2E3F  0D 0D16				or	ax,0D16h
020A:2E42  38 0D				cmp	[di],cl
020A:2E44  000C[00]				db	12 dup (0)
020A:2E50			loc_258:
020A:2E50  BB 0792				mov	bx,792h
020A:2E53  3C 02				cmp	al,2
020A:2E55  74 1B				je	loc_259			; Jump if equal
020A:2E57  BB 0758				mov	bx,758h
020A:2E5A  3C 08				cmp	al,8
020A:2E5C  74 14				je	loc_259			; Jump if equal
020A:2E5E  BB 0744				mov	bx,744h
020A:2E61  3C 0B				cmp	al,0Bh
020A:2E63  74 0D				je	loc_259			; Jump if equal
020A:2E65  BB 07AD				mov	bx,7ADh
020A:2E68  3C 05				cmp	al,5
020A:2E6A  74 06				je	loc_259			; Jump if equal
020A:2E6C  BB 0730				mov	bx,730h
020A:2E6F  BE 023D				mov	si,23Dh
020A:2E72			loc_259:
020A:2E72  8B D3				mov	dx,bx
020A:2E74  E8 068C				call	sub_36			; (3503)
020A:2E77  EB 09				jmp	short loc_260		; (2E82)
							                        ;* No entry point to code
020A:2E79  72 D5				jc	loc_258			; Jump if carry Set
020A:2E7B  B4 4D				mov	ah,4Dh
020A:2E7D  CD 21				int	21h			; DOS Services  ah=function 4Dh
										;  get return code info in ax
020A:2E7F  A3 02A7				mov	word ptr ds:[2A7h],ax	; (020A:02A7=0FFh)
020A:2E82			loc_260:
020A:2E82  E9 0179				jmp	loc_269			; (2FFE)
							                        ;* No entry point to code
020A:2E85  1F					pop	ds
020A:2E86  F6 06 0330 01			test	byte ptr ds:[330h],1	; (3281:0330=48h)
020A:2E8B  74 0D				jz	loc_262			; Jump if zero
020A:2E8D  F6 06 0330 02			test	byte ptr ds:[330h],2	; (3281:0330=48h)
020A:2E92  74 04				jz	loc_261			; Jump if zero
020A:2E94  1F					pop	ds
020A:2E95  E9 0F5A				jmp	loc_373			; (3DF2)
020A:2E98			loc_261:
020A:2E98  1F					pop	ds
020A:2E99  CF					iret				; Interrupt return
020A:2E9A			loc_262:
020A:2E9A  F6 06 0330 04			test	byte ptr ds:[330h],4	; (3601:0330=81h)
020A:2E9F  74 12				jz	loc_263			; Jump if zero
020A:2EA1  80 FC 01				cmp	ah,1
020A:2EA4  72 F2				jb	loc_261			; Jump if below
020A:2EA6  80 FC 0C				cmp	ah,0Ch
020A:2EA9  77 ED				ja	loc_261			; Jump if above
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 93

020A:2EAB  1F					pop	ds
020A:2EAC  83 C4 06				add	sp,6
020A:2EAF  F9					stc				; Set carry flag
020A:2EB0  CA 0002				retf	2			; Return far
020A:2EB3			loc_263:
020A:2EB3  80 0E 0330 04			or	byte ptr ds:[330h],4	; (F93C:0330=4)
020A:2EB8  FB					sti				; Enable interrupts
020A:2EB9  58					pop	ax
020A:2EBA  A1 02B1				mov	ax,word ptr ds:[2B1h]	; (F93C:02B1=0F66h)
020A:2EBD  0B C0				or	ax,ax			; Zero ?
020A:2EBF  75 06				jnz	loc_264			; Jump if not zero
020A:2EC1  50					push	ax
020A:2EC2  B4 0D				mov	ah,0Dh
020A:2EC4  CD 21				int	21h			; DOS Services  ah=function 0Dh
										;  flush disk buffers to disk
020A:2EC6  58					pop	ax
020A:2EC7			loc_264:
020A:2EC7  F7 06 0256 FFFF			test	word ptr ds:[256h],0FFFFh	; (F93C:0256=3798h)
020A:2ECD  74 52				jz	loc_267			; Jump if zero
020A:2ECF  0B C0				or	ax,ax			; Zero ?
020A:2ED1  75 4E				jnz	loc_267			; Jump if not zero
020A:2ED3  E8 02AC				call	sub_33			; (3182)
020A:2ED6  E8 03BF				call	sub_34			; (3298)
020A:2ED9  73 40				jnc	loc_266			; Jump if carry=0
020A:2EDB  8A 0E 02AA				mov	cl,byte ptr ds:[2AAh]	; (F93C:02AA=58h)
020A:2EDF  53					push	bx
020A:2EE0  8E 06 0256				mov	es,word ptr ds:[256h]	; (F93C:0256=3798h)
020A:2EE4  BF 0020				mov	di,20h
020A:2EE7  26: 8B 1E 0005			mov	bx,word ptr es:[5]	; (3798:0005=44CDh)
020A:2EEC  83 FB 00				cmp	bx,0
020A:2EEF  74 08				je	loc_265			; Jump if equal
020A:2EF1  06					push	es
020A:2EF2  8E C3				mov	es,bx
020A:2EF4  B4 49				mov	ah,49h
020A:2EF6  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2EF8  07					pop	es
020A:2EF9			loc_265:
020A:2EF9  26: 8A 0E 0001			mov	cl,byte ptr es:[1]	; (3798:0001=0B3h)
020A:2EFE  26: 8B 1E 0003			mov	bx,word ptr es:[3]	; (3798:0003=0F20h)
020A:2F03  B4 49				mov	ah,49h
020A:2F05  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2F07  89 1E 0256				mov	word ptr ds:[256h],bx	; (F93C:0256=3798h)
020A:2F0B  FF 0E 02BB				dec	word ptr ds:[2BBh]	; (F93C:02BB=8B66h)
020A:2F0F  75 4D				jnz	loc_268			; Jump if not zero
020A:2F11  32 05				xor	al,[di]
020A:2F13  35 0200				xor	ax,200h
020A:2F16  C6 06 0331 00			mov	byte ptr ds:[331h],0	; (F93C:0331=0)
020A:2F1B			loc_266:
020A:2F1B  E8 05E2				call	sub_35			; (3500)
020A:2F1E  E8 438A				call	sub_102			; (72AB)
020A:2F21			loc_267:
020A:2F21  4F 4D 53 50 45 43			db	'OMSPEC=C:\WINDOWS\SYSTEM32\COMMA'
020A:2F27  3D 43 3A 5C 57 49
020A:2F2D  4E 44 4F 57 53 5C
020A:2F33  53 59 53 54 45 4D
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 94

020A:2F39  33 32 5C 43 4F 4D
020A:2F3F  4D 41
020A:2F41  4E 44 2E 43 4F 4D			db	'ND.COM', 0
020A:2F47  00
020A:2F48  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020A:2F4E  52 53 50 52 4F 46
020A:2F54  49 4C 45 3D 43 3A
020A:2F5A  5C 44 4F 43 55 4D
020A:2F60  45 7E 31 5C 41 4C
020A:2F66  4C 55
020A:2F68  53 45 7E 31 00			db	'SE~1', 0
020A:2F6D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\ADMINI~1\APP'
020A:2F73  41 3D 43 3A 5C 44
020A:2F79  4F 43 55 4D 45 7E
020A:2F7F  31 5C 41 44 4D 49
020A:2F85  4E 49 7E 31 5C 41
020A:2F8B  50 50
020A:2F8D  4C 49 43 7E 31 00			db	'LIC~1', 0
020A:2F93  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020A:2F99  50 52 4F 47 52 41
020A:2F9F  4D 46 49 4C 45 53
020A:2FA5  3D 43 3A 5C 50 52
020A:2FAB  4F 47 52 41 7E 31
020A:2FB1  5C 43
020A:2FB3  4F 4D 4D 4F 4E 7E			db	'OMMON~1', 0
020A:2FB9  31 00
020A:2FBB  43 4F 4D 50 55 54			db	'COMPUTERNAME=ADMIN-87B531892', 0
020A:2FC1  45 52 4E 41 4D 45
020A:2FC7  3D 41 44 4D 49 4E
020A:2FCD  2D 38 37 42 35 33
020A:2FD3  31 38 39 32 00
020A:2FD8  46 50 5F 4E 4F 5F			db	'FP_NO_HOST_CHECK=NO', 0
020A:2FDE  48 4F 53 54 5F 43
020A:2FE4  48 45 43 4B 3D 4E
020A:2FEA  4F 00
020A:2FEC  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
020A:2FF2  49 56 45 3D 43 3A
020A:2FF8  00
020A:2FF9  48 4F 4D 45 50 41			db	'HOMEPATH=\Docume'
020A:2FFF  54 48 3D 5C 44 6F
020A:3005  63 75 6D 65
020A:3009  746E			data_282	dw	746Eh
020A:300B  73 20				jnc	$+22h			; Jump if carry=0
020A:300D  61					db	61h
020A:300E  6E					db	6Eh
020A:300F  64					db	64h
020A:3010  20 53 65				and	[bp+di+65h],dl
020A:3013  74 74				jz	$+76h			; Jump if zero
020A:3015  69					db	69h
020A:3016  6E					db	6Eh
020A:3017  67					db	67h
020A:3018  73 5C				jnc	$+5Eh			; Jump if carry=0
020A:301A  41					inc	cx
020A:301B  64					db	64h
020A:301C  6D					db	6Dh
020A:301D  69					db	69h
020A:301E  6E					db	6Eh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 95

020A:301F  69					db	69h
020A:3020  73 74				jnc	$+76h			; Jump if carry=0
020A:3022  72 61				jc	$+63h			; Jump if carry Set
020A:3024  74 6F				jz	$+71h			; Jump if zero
020A:3026  72 00				jc	$+2			; delay for I/O
020A:3028  4C					dec	sp
020A:3029  474F			data_284	dw	474Fh
020A:302B  4E4F			data_285	dw	4E4Fh
020A:302D  4553			data_286	dw	4553h
020A:302F  52					push	dx
020A:3030  56			data_287	db	56h
020A:3031  45			data_288	db	45h
020A:3032  52			data_289	db	52h
020A:3033  5C3D			data_290	dw	5C3Dh
020A:3035  415C			data_291	dw	415Ch
020A:3037  4D44			data_292	dw	4D44h
020A:3039  4E49			data_293	dw	4E49h
020A:303B  2D			data_294	db	2Dh
020A:303C  3738			data_295	dw	3738h
020A:303E  42			data_296	db	42h
020A:303F  35			data_297	db	35h
020A:3040  33			data_298	db	33h
020A:3041  31 38				xor	[bx+si],di
020A:3043  39 32				cmp	[bp+si],si
020A:3045  00			data_301	db	0
020A:3046  4E			data_302	db	4Eh
020A:3047  55			data_303	db	55h
020A:3048  424D			data_304	dw	424Dh
020A:304A  45			data_305	db	45h
020A:304B  52			data_306	db	52h
020A:304C  4F5F			data_307	dw	4F5Fh
020A:304E  5F46			data_308	dw	5F46h
020A:3050  5250			data_309	dw	5250h
020A:3052  434F			data_310	dw	434Fh
020A:3054  5345			data_311	dw	5345h
020A:3056  4F53			data_312	dw	4F53h
020A:3058  5352			data_313	dw	5352h
020A:305A  313D			data_314	dw	313Dh
020A:305C  4F00			data_315	dw	4F00h
020A:305E  3D53			data_316	dw	3D53h
020A:3060  6957			data_317	dw	6957h
020A:3062  646E			data_318	dw	646Eh
020A:3064  776F			data_319	dw	776Fh
020A:3066  5F73			data_320	dw	5F73h
020A:3068  4E					dec	si
020A:3069  54					push	sp
020A:306A  5000			data_321	dw	5000h
020A:306C  5441			data_322	dw	5441h
020A:306E  48					dec	ax
020A:306F  3D			data_323	db	3Dh
020A:3070  43					inc	bx
020A:3071  3A 5C 57				cmp	bl,[si+57h]
020A:3074  49					dec	cx
020A:3075  4E					dec	si
020A:3076  4F44			data_324	dw	4F44h
020A:3078  57			data_325	db	57h
020A:3079  53					push	bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 96

020A:307A  5C			data_326	db	5Ch
020A:307B  73			data_327	db	73h
020A:307C  79			data_328	db	79h
020A:307D  73			data_329	db	73h
020A:307E  74			data_330	db	74h
020A:307F  6D65			data_331	dw	6D65h
020A:3081  3233			data_332	dw	3233h
020A:3083  3B			data_333	db	3Bh
020A:3084  3A43			data_334	dw	3A43h
020A:3086  575C			data_335	dw	575Ch
020A:3088  4E49			data_336	dw	4E49h
020A:308A  4F44			data_337	dw	4F44h
020A:308C  5357			data_338	dw	5357h
020A:308E  433B			data_339	dw	433Bh
020A:3090  5C3A			data_340	dw	5C3Ah
020A:3092  4957			data_341	dw	4957h
020A:3094  444E			data_342	dw	444Eh
020A:3096  574F			data_343	dw	574Fh
020A:3098  5C53			data_344	dw	5C53h
020A:309A  7953			data_345	dw	7953h
020A:309C  73 74				jnc	$+76h			; Jump if carry=0
020A:309E  65			data_346	db	65h
020A:309F  6D			data_347	db	6Dh
020A:30A0  33			data_348	db	33h
020A:30A1  32			data_349	db	32h
020A:30A2  5C					pop	sp
020A:30A3  57					push	di
020A:30A4  62					db	62h
020A:30A5  65					db	65h
020A:30A6  6D					db	6Dh
020A:30A7  00 50 41				add	[bx+si+41h],dl
020A:30AA  54					push	sp
020A:30AB  48					dec	ax
020A:30AC  45					inc	bp
020A:30AD  58					pop	ax
020A:30AE  54					push	sp
020A:30AF  3D 432E				cmp	ax,432Eh
020A:30B2  4F			data_352	db	4Fh
020A:30B3  4D			data_353	db	4Dh
020A:30B4  3B			data_354	db	3Bh
020A:30B5  2E: 45		data_355	db	45h
020A:30B7  58			data_356	db	58h
020A:30B8  45			data_357	db	45h
020A:30B9  3B			data_358	db	3Bh
020A:30BA  2E			data_359	db	2Eh
020A:30BB  42			data_360	db	42h
020A:30BC  5441			data_361	dw	5441h
020A:30BE  2E3B			data_362	dw	2E3Bh
020A:30C0  4D43			data_363	dw	4D43h
020A:30C2  3B44			data_364	dw	3B44h
020A:30C4  2E					db	2Eh
020A:30C5  56					push	si
020A:30C6  5342			data_365	dw	5342h
020A:30C8  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (F93C:4256=30h)
020A:30CC  45					inc	bp
020A:30CD  3B			data_368	db	3Bh
020A:30CE  2E 4A 53 3B 2E 4A	data_369	db	'.JS;.JSE;.WSF;.WSH', 0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 97

020A:30D4  53 45 3B 2E 57 53
020A:30DA  46 3B 2E 57 53 48
020A:30E0  00
020A:30E1  50					push	ax
020A:30E2  52					push	dx
020A:30E3  4F					dec	di
020A:30E4  43					inc	bx
020A:30E5  45					inc	bp
020A:30E6  53					push	bx
020A:30E7  53					push	bx
020A:30E8  4F					dec	di
020A:30E9  52					push	dx
020A:30EA  5F					pop	di
020A:30EB  41					inc	cx
020A:30EC  52					push	dx
020A:30ED  43					inc	bx
020A:30EE  48					dec	ax
020A:30EF  49					dec	cx
020A:30F0  54					push	sp
020A:30F1  45					inc	bp
020A:30F2  43					inc	bx
020A:30F3  54					push	sp
020A:30F4  55					push	bp
020A:30F5  52					push	dx
020A:30F6  45					inc	bp
020A:30F7  3D 3878				cmp	ax,3878h
020A:30FA  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:30FE  4F					dec	di
020A:30FF  43					inc	bx
020A:3100  45					inc	bp
020A:3101  53					push	bx
020A:3102  53					push	bx
020A:3103  4F					dec	di
020A:3104  52					push	dx
020A:3105  5F					pop	di
020A:3106  49					dec	cx
020A:3107  44					inc	sp
020A:3108  45					inc	bp
020A:3109  4E					dec	si
020A:310A  54					push	sp
020A:310B  49					dec	cx
020A:310C  46					inc	si
020A:310D  49					dec	cx
020A:310E  45					inc	bp
020A:310F  52					push	dx
020A:3110  3D 3878				cmp	ax,3878h
020A:3113  36					db	36h
020A:3114  20 46 61				and	[bp+61h],al
020A:3117  6D					db	6Dh
020A:3118  69					db	69h
020A:3119  6C					db	6Ch
020A:311A  79 20				jns	$+22h			; Jump if not sign
020A:311C  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:3120  64					db	64h
020A:3121  65					db	65h
020A:3122  6C					db	6Ch
020A:3123  20 31				and	[bx+di],dh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 98

020A:3125  34 32				xor	al,32h			; '2'
020A:3127  20 53 74				and	[bp+di+74h],dl
020A:312A  65					db	65h
020A:312B  70 70				jo	$+72h			; Jump if overflow=1
020A:312D  69					db	69h
020A:312E  6E					db	6Eh
020A:312F  67					db	67h
020A:3130  20 39				and	[bx+di],bh
020A:3132  2C 20				sub	al,20h			; ' '
020A:3134  47					inc	di
020A:3135  65					db	65h
020A:3136  6E					db	6Eh
020A:3137  75 69				jnz	$+6Bh			; Jump if not zero
020A:3139  6E					db	6Eh
020A:313A  65					db	65h
020A:313B  49					dec	cx
020A:313C  6E					db	6Eh
020A:313D  74 65				jz	$+67h			; Jump if zero
020A:313F  6C					db	6Ch
020A:3140  00 50 52				add	[bx+si+52h],dl
020A:3143  4F					dec	di
020A:3144  43					inc	bx
020A:3145  45					inc	bp
020A:3146  53					push	bx
020A:3147  53					push	bx
020A:3148  4F					dec	di
020A:3149  52					push	dx
020A:314A  5F					pop	di
020A:314B  4C					dec	sp
020A:314C  45					inc	bp
020A:314D  56					push	si
020A:314E  45					inc	bp
020A:314F  4C					dec	sp
020A:3150  3D 0036				cmp	ax,36h
020A:3153  50					push	ax
020A:3154  52					push	dx
020A:3155  4F					dec	di
020A:3156  43					inc	bx
020A:3157  45					inc	bp
020A:3158  53					push	bx
020A:3159  53					push	bx
020A:315A  4F					dec	di
020A:315B  52					push	dx
020A:315C  5F					pop	di
020A:315D  52					push	dx
020A:315E  45					inc	bp
020A:315F  56					push	si
020A:3160  49					dec	cx
020A:3161  53					push	bx
020A:3162  49					dec	cx
020A:3163  4F					dec	di
020A:3164  4E					dec	si
020A:3165  3D 6538				cmp	ax,6538h
020A:3168  30 39				xor	[bx+di],bh
020A:316A  00 50 52				add	[bx+si+52h],dl
020A:316D  4F					dec	di
020A:316E  47					inc	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 99

020A:316F  52					push	dx
020A:3170  41					inc	cx
020A:3171  4D					dec	bp
020A:3172  46					inc	si
020A:3173  49					dec	cx
020A:3174  4C					dec	sp
020A:3175  45					inc	bp
020A:3176  53					push	bx
020A:3177  3D 3A43				cmp	ax,3A43h
020A:317A  5C					pop	sp
020A:317B  50					push	ax
020A:317C  52					push	dx
020A:317D  4F					dec	di
020A:317E  47					inc	di
020A:317F  52					push	dx
020A:3180  41					inc	cx
020A:3181  7E 31				jle	$+33h			; Jump if < or =
020A:3183  00 50 52				add	[bx+si+52h],dl
020A:3186  4F					dec	di
020A:3187  4D					dec	bp
020A:3188  50					push	ax
020A:3189  54					push	sp
020A:318A  3D 5024				cmp	ax,5024h
020A:318D  24 47				and	al,47h			; 'G'
020A:318F  00 53 45				add	[bp+di+45h],dl
020A:3192  53					push	bx
020A:3193  53					push	bx
020A:3194  49					dec	cx
020A:3195  4F					dec	di
020A:3196  4E					dec	si
020A:3197  4E					dec	si
020A:3198  41					inc	cx
020A:3199  4D					dec	bp
020A:319A  45					inc	bp
020A:319B  3D 6F43				cmp	ax,6F43h
020A:319E  6E					db	6Eh
020A:319F  73 6F				jnc	$+71h			; Jump if carry=0
020A:31A1  6C					db	6Ch
020A:31A2  65					db	65h
020A:31A3  00 53 59				add	[bp+di+59h],dl
020A:31A6  53					push	bx
020A:31A7  54					push	sp
020A:31A8  45					inc	bp
020A:31A9  4D					dec	bp
020A:31AA  44					inc	sp
020A:31AB  52					push	dx
020A:31AC  49					dec	cx
020A:31AD  56					push	si
020A:31AE  45					inc	bp
020A:31AF  3D 3A43				cmp	ax,3A43h
020A:31B2  00 53 59				add	[bp+di+59h],dl
020A:31B5  53					push	bx
020A:31B6  54					push	sp
020A:31B7  45					inc	bp
020A:31B8  4D					dec	bp
020A:31B9  52					push	dx
020A:31BA  4F					dec	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 100

020A:31BB  4F					dec	di
020A:31BC  54					push	sp
020A:31BD  3D 3A43				cmp	ax,3A43h
020A:31C0  5C					pop	sp
020A:31C1  57					push	di
020A:31C2  49					dec	cx
020A:31C3  4E					dec	si
020A:31C4  44					inc	sp
020A:31C5  4F					dec	di
020A:31C6  57					push	di
020A:31C7  53					push	bx
020A:31C8  00 54 45				add	[si+45h],dl
020A:31CB  4D					dec	bp
020A:31CC  50					push	ax
020A:31CD  3D 3A43				cmp	ax,3A43h
020A:31D0  5C					pop	sp
020A:31D1  57					push	di
020A:31D2  49					dec	cx
020A:31D3  4E					dec	si
020A:31D4  44					inc	sp
020A:31D5  4F					dec	di
020A:31D6  57					push	di
020A:31D7  53					push	bx
020A:31D8  5C					pop	sp
020A:31D9  54					push	sp
020A:31DA  45					inc	bp
020A:31DB  4D					dec	bp
020A:31DC  50					push	ax
020A:31DD  00 54 4D				add	[si+4Dh],dl
020A:31E0  50					push	ax
020A:31E1  3D 3A43				cmp	ax,3A43h
020A:31E4  5C					pop	sp
020A:31E5  57					push	di
020A:31E6  49					dec	cx
020A:31E7  444E			data_371	dw	444Eh
020A:31E9  574F			data_372	dw	574Fh
020A:31EB  53					push	bx
020A:31EC  5C					pop	sp
020A:31ED  54					push	sp
020A:31EE  45					inc	bp
020A:31EF  4D					dec	bp
020A:31F0  50			data_373	db	50h
020A:31F1  00 55 53				add	[di+53h],dl
020A:31F4  45					inc	bp
020A:31F5  52					push	dx
020A:31F6  44					inc	sp
020A:31F7  4F					dec	di
020A:31F8  4D					dec	bp
020A:31F9  41					inc	cx
020A:31FA  49					dec	cx
020A:31FB  4E					dec	si
020A:31FC  3D 4441				cmp	ax,4441h
020A:31FF  4D					dec	bp
020A:3200  49					dec	cx
020A:3201  4E					dec	si
020A:3202  2D 3738				sub	ax,3738h
020A:3205  42					inc	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 101

020A:3206  35 3133				xor	ax,3133h
020A:3209  38 39				cmp	[bx+di],bh
020A:320B  32 00				xor	al,[bx+si]
020A:320D  55					push	bp
020A:320E  53					push	bx
020A:320F  45					inc	bp
020A:3210  52					push	dx
020A:3211  4E					dec	si
020A:3212  41					inc	cx
020A:3213  4D					dec	bp
020A:3214  45					inc	bp
020A:3215  3D 6441				cmp	ax,6441h
020A:3218  6D					db	6Dh
020A:3219  69					db	69h
020A:321A  6E					db	6Eh
020A:321B  69					db	69h
020A:321C  73 74				jnc	$+76h			; Jump if carry=0
020A:321E  72 61				jc	$+63h			; Jump if carry Set
020A:3220  74 6F				jz	$+71h			; Jump if zero
020A:3222  72 00				jc	$+2			; delay for I/O
020A:3224  55					push	bp
020A:3225  53					push	bx
020A:3226  45					inc	bp
020A:3227  52					push	dx
020A:3228  50					push	ax
020A:3229  52					push	dx
020A:322A  4F					dec	di
020A:322B  46					inc	si
020A:322C  49					dec	cx
020A:322D  4C					dec	sp
020A:322E  45					inc	bp
020A:322F  3D 3A43				cmp	ax,3A43h
020A:3232  5C					pop	sp
020A:3233  44			data_375	db	44h
020A:3234  4F 43 55 4D 45 7E	data_376	db	'OCUME~1\ADMINI~1', 0
020A:323A  31 5C 41 44 4D 49
020A:3240  4E 49 7E 31 00
020A:3245  42					inc	dx
020A:3246  4C					dec	sp
020A:3247  41					inc	cx
020A:3248  53					push	bx
020A:3249  54					push	sp
020A:324A  45					inc	bp
020A:324B  52					push	dx
020A:324C  3D 3241				cmp	ax,3241h
020A:324F  32 30				xor	dh,[bx+si]
020A:3251  20 49 35				and	[bx+di+35h],cl
020A:3254  20 44 31				and	[si+31h],al
020A:3257  20 50 33				and	[bx+si+33h],dl
020A:325A  33 30				xor	si,[bx+si]
020A:325C  20 54 33				and	[si+33h],dl
020A:325F  00 00				add	[bx+si],al
020A:3261  01 00				add	[bx+si],ax
020A:3263  43					inc	bx
020A:3264  3A 5C 4F				cmp	bl,[si+4Fh]
020A:3267  53					push	bx
020A:3268  5C					pop	sp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 102

020A:3269  53					push	bx
020A:326A  52					push	dx
020A:326B  2E					db	2Eh
020A:326C  45					inc	bp
020A:326D  58					pop	ax
020A:326E  45					inc	bp
020A:326F  00 5A 32				add	[bp+si+32h],bl
020A:3272  05 9ACD				add	ax,9ACDh
020A:3275  B8 2522				mov	ax,2522h
020A:3278  53					push	bx
020A:3279  52			data_378	db	52h
020A:327A  00 00				add	[bx+si],al
020A:327C  8C 1E 000C				mov	word ptr ds:[0Ch],ds	; (F93C:000C=47Dh)
020A:3280  CD 20				int	20h			; DOS program terminate
							                        ;* No entry point to code
020A:3282  FF 9F 9A00				call	dword ptr ds:[9A00h][bx]	;*(F93C:9A00=9205h)
020A:3286  F0					db	0F0h
020A:3287  FE					db	0FEh
020A:3288  1D DEF0				sbb	ax,0DEF0h
020A:328B  01 0D				add	[di],cx
020A:328D  04 4B				add	al,4Bh			; 'K'
020A:328F  01 0D				add	[di],cx
020A:3291  04 56				add	al,56h			; 'V'
020A:3293  01 0D				add	[di],cx
020A:3295  04 0D				add	al,0Dh
020A:3297  04 01				add	al,1
020A:3299  01 01				add	[bx+di],ax
020A:329B  00 02				add	[bp+si],al
020A:329D  000F[03]				db	15 dup (3)
020A:32AC  FC					cld				; Clear direction
020A:32AD  04 3C				add	al,3Ch			; '<'
020A:32AF  02 B6 141C				add	dh,[bp+141Ch]
020A:32B3  00 18				add	[bx+si],bl
020A:32B5  00 32				add	[bp+si],dh
020A:32B7  05 FFFF				add	ax,0FFFFh
020A:32BA  FF					db	0FFh
020A:32BB  FF 00				inc	word ptr [bx+si]
020A:32BD  00 00				add	[bx+si],al
020A:32BF  00 05				add	[di],al
020A:32C1  000F[00]				db	15 dup (0)
020A:32D0  CD 21				int	21h			; DOS Services  ah=function 46h
										;  force handle cx same as bx
020A:32D2  CB					retf				; Return far
				sub_32		endp

020A:32D3  000A[00]				db	10 dup (0)
020A:32DD  000B[20]				db	11 dup (20h)
020A:32E8  00					db	0
020A:32E9  00					db	0
020A:32EA  00 00				add	[bx+si],al
020A:32EC  00 20				add	[bx+si],ah
020A:32EE  000A[20]				db	10 dup (20h)
020A:32F8  0009[00]				db	9 dup (0)
020A:3301  0D 20 20 20 53 45			db	0Dh, '   SET BLASTER=A0', 0Dh, 'd'
020A:3307  54 20 42 4C 41 53
020A:330D  54 45 52 3D 41 30
020A:3313  0D 64
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 103

020A:3315  64 72 65 73 73 2E			db	'dress.  For example:', 0Dh, ' on'
020A:331B  20 20 46 6F 72 20
020A:3321  65 78 61 6D 70 6C
020A:3327  65 3A 0D 20 6F 6E
020A:332D  20 4E 54 56 44 4D			db	' NTVDM, specify an invalid', 0Dh
020A:3333  2C 20 73 70 65 63
020A:3339  69 66 79 20 61 6E
020A:333F  20 69 6E 76 61 6C
020A:3345  69 64 0D
020A:3348  20 6F 6E 6C 79 2E			db	' only.', 0Dh
020A:334E  0D
020A:334F  0031[00]				db	49 dup (0)
020A:3380  53 6F 75 72 63 65			db	'Sourcer - V Communications, Inc.'
020A:3386  72 20 2D 20 56 20
020A:338C  43 6F 6D 6D 75 6E
020A:3392  69 63 61 74 69 6F
020A:3398  6E 73 2C 20 49 6E
020A:339E  63 2E
020A:33A0  20 43 6F 70 79 72			db	' Copyright 1988-1993 V5.10  s/n '
020A:33A6  69 67 68 74 20 31
020A:33AC  39 38 38 2D 31 39
020A:33B2  39 33 20 56 35 2E
020A:33B8  31 30 20 20 73 2F
020A:33BE  6E 20
020A:33C0  42 33 31 31 33 31			db	'B311312-XBIOF02/27/20', 0
020A:33C6  32 2D 58 42 49 4F
020A:33CC  46 30 32 2F 32 37
020A:33D2  2F 32 30 00
020A:33D6  FC					cld				; Clear direction
020A:33D7  66 20 42 79 20 46			db	'f By Frank van Gilluwe (09/14/93'
020A:33DD  72 61 6E 6B 20 76
020A:33E3  61 6E 20 47 69 6C
020A:33E9  6C 75 77 65 20 28
020A:33EF  30 39 2F 31 34 2F
020A:33F5  39 33
020A:33F7  2C 31 35 3A 32			db	',15:2'
020A:33FC  3A30			data_393	dw	3A30h
020A:33FE  33 30				xor	si,[bx+si]
020A:3400  29 00				sub	[bx+si],ax
020A:3402  00					db	0
020A:3403  00					db	0
020A:3404  00					db	0
020A:3405  00					db	0
020A:3406  00					db	0
020A:3407  00					db	0
020A:3408  00					db	0
020A:3409  00					db	0
020A:340A  00					db	0
020A:340B  00					db	0
020A:340C  00					db	0
020A:340D  00 00				add	[bx+si],al
020A:340F  00 32				add	[bp+si],dh
020A:3411  05 2E8D				add	ax,2E8Dh
020A:3414  00 00				add	[bx+si],al
020A:3416  46					inc	si
020A:3417  32 00				xor	al,[bx+si]
020A:3419  2E: 8C 06 0090			mov	word ptr cs:[90h],es	; (020A:0090=1FBFh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 104

020A:341E  57E8			data_395	dw	57E8h
020A:3420  9A38			data_396	dw	9A38h
020A:3422  4E64			data_397	dw	4E64h
020A:3424  00 6E E8				add	[bp-18h],ch
020A:3427  13 38				adc	di,[bx+si]
020A:3429  9A 6E00:54B0		;*		call	far ptr sub_248		;*(6E00:54B0)
020A:3429  9A					db	9Ah
020A:342A  54B0 6E00				dw	54B0h, 6E00h
020A:342E  E8 8097				call	sub_137			; (B4C8)
020A:3431  BE 0080				mov	si,80h
020A:3434  E8 3C0E				call	sub_91			; (7045)
020A:3437  2E: A1 0090				mov	ax,word ptr cs:[90h]	; (020A:0090=1FBFh)
020A:343B  A3 5618				mov	data_661,ax		; (020A:5618=8107h)
020A:343E  BF 5156				mov	di,5156h
020A:3441  03 FE				add	di,si
020A:3443  E8 3C1A				call	sub_96			; (7060)
020A:3446  26: 8580		data_399	dw	8580h
020A:3449  00			data_400	db	0
020A:344A  CD01			data_401	dw	0CD01h
020A:344C  06C6			data_402	dw	6C6h
020A:344E  2B36			data_403	dw	2B36h
020A:3450  8300			data_404	dw	8300h
020A:3452  213E			data_405	dw	213Eh
020A:3454  0013			data_406	dw	13h
020A:3456  1474			data_407	dw	1474h
020A:3458  BE			data_408	db	0BEh
020A:3459  21			data_409	db	21h
020A:345A  13			data_410	db	13h
020A:345B  8B C6				mov	ax,si
020A:345D  05			data_412	db	5
020A:345E  0004			data_413	dw	4
020A:3460  A3			data_414	db	0A3h
020A:3461  509E			data_415	dw	509Eh
020A:3463  7EE8			data_416	dw	7EE8h
020A:3465  06			data_417	db	6
020A:3466  0472			data_418	dw	472h
020A:3468  1689			data_419	dw	1689h
020A:346A  131F			data_420	dw	131Fh
020A:346C			loc_270:
020A:346C  47B9			data_421	dw	47B9h
020A:346E  8100			data_422	dw	8100h
020A:3470  3AE9			data_423	dw	3AE9h
020A:3472  BF00			data_424	dw	0BF00h
020A:3474  01C5			data_425	dw	1C5h
020A:3476  3ABE			data_426	dw	3ABEh
020A:3478  B800			data_427	dw	0B800h
020A:347A  0542			data_428	dw	542h
020A:347C  D88E			data_429	dw	0D88Eh
020A:347E  DCE8			data_430	dw	0DCE8h
020A:3480  FC3B			data_431	dw	0FC3Bh
020A:3482  A4F3			data_432	dw	0A4F3h
020A:3484  BEE8			data_433	dw	0BEE8h
020A:3486  9A3B			data_434	dw	9A3Bh
020A:3488  5284			data_435	dw	5284h
020A:348A  00 6E B6				add	[bp-4Ah],ch
020A:348D  00 E8				add	al,ch
020A:348F  C7					db	0C7h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 105

020A:3490  20 B4 9A01				and	byte ptr ds:[9A01h][si],dh	; (020A:9A01=26h)
020A:3494  8C					db	8Ch
020A:3495  32 FC				xor	bh,ah
020A:3497  14 BF				adc	al,0BFh
020A:3499  41					inc	cx
020A:349A  11 81 23EF				adc	word ptr ds:[23EFh][bx+di],ax	; (020A:23EF=21CDh)
020A:349E  10 9A 08E4				adc	[bp+si+8E4h],bl
020A:34A2  FC					cld				; Clear direction
020A:34A3  14 8C				adc	al,8Ch
020A:34A5  C8					db	0C8h
020A:34A6  9A 6E00:54E0		;*		call	far ptr sub_249		;*(6E00:54E0)
020A:34A6  9A					db	9Ah
020A:34A7  54E0 6E00				dw	54E0h, 6E00h
020A:34AB  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:34B0  74 07				je	loc_271			; Jump if equal
020A:34B2  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=5Ch)
020A:34B7  75 42				jne	loc_272			; Jump if not equal
020A:34B9			loc_271:
020A:34B9  E8 3BA1				call	sub_95			; (705D)
020A:34BC  BF 00E8				mov	di,0E8h
020A:34BF  B0 2A				mov	al,2Ah			; '*'
020A:34C1  B9 0029				mov	cx,29h
020A:34C4  FC					cld				; Clear direction
020A:34C5  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:34C7  BF 0188				mov	di,188h
020A:34CA  B9 0029				mov	cx,29h
020A:34CD  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:34CF  BE 006F				mov	si,6Fh
020A:34D2  BF 0138				mov	di,138h
020A:34D5  B9 0027				mov	cx,27h
020A:34D8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:34DA  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:34DE  A0 1209				mov	al,data_143		; (020A:1209=0)
020A:34E1  88 47 59				mov	[bx+59h],al
020A:34E4  88 47 46				mov	[bx+46h],al
020A:34E7  88 47 5B				mov	[bx+5Bh],al
020A:34EA  B0 07				mov	al,7
020A:34EC  88 47 57				mov	[bx+57h],al
020A:34EF  88 47 58				mov	[bx+58h],al
020A:34F2  88 47 5A				mov	[bx+5Ah],al
020A:34F5  88 47 42				mov	[bx+42h],al
020A:34F8  88 47 45				mov	[bx+45h],al
020A:34FB			loc_272:
020A:34FB  9A 14FC:2B34		;*		call	far ptr sub_183		;*(14FC:2B34)
020A:34FB  9A					db	9Ah
020A:34FC  2B34 14FC				dw	2B34h, 14FCh

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_35		proc	near
020A:3500  E8 1F9D				call	sub_54			; (54A0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_36:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 106

020A:3503  E8 7C8A				call	sub_133			; (B190)
020A:3506  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=5Ch)
020A:350B  75 14				jne	loc_273			; Jump if not equal
020A:350D  53					push	bx
020A:350E  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:3512  C6 47 41 07				mov	byte ptr [bx+41h],7
020A:3516  C6 06 1207 07			mov	data_141,7		; (020A:1207=0)
020A:351B  C6 06 1208 07			mov	data_142,7		; (020A:1208=0)
020A:3520  5B					pop	bx
020A:3521			loc_273:
020A:3521  9A 14FC:7340		;*		call	far ptr sub_245		;*(14FC:7340)
020A:3521  9A					db	9Ah
020A:3522  7340 14FC				dw	7340h, 14FCh
020A:3526  80 3E 4103 00			cmp	byte ptr data_531,0	; (020A:4103=46h)
020A:352B  74 42				je	loc_275			; Jump if equal
020A:352D  BF 4103				mov	di,4103h
020A:3530  B0 00				mov	al,0
020A:3532  9A 14FC:2724		;*		call	far ptr sub_179		;*(14FC:2724)
020A:3532  9A					db	9Ah
020A:3533  2724 14FC				dw	2724h, 14FCh
020A:3537  9A 14FC:27AC		;*		call	far ptr sub_180		;*(14FC:27AC)
020A:3537  9A					db	9Ah
020A:3538  27AC 14FC				dw	27ACh, 14FCh
020A:353C  A2 327E				mov	byte ptr ds:[327Eh],al	; (020A:327E=0Ch)
020A:353F  3C 00				cmp	al,0
020A:3541  74 2C				je	loc_275			; Jump if equal
020A:3543  50					push	ax
020A:3544  57					push	di
020A:3545  BE 4103				mov	si,4103h
020A:3548  BF 31F0				mov	di,31F0h
020A:354B  8B CB				mov	cx,bx
020A:354D  FC					cld				; Clear direction
020A:354E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3550  5F					pop	di
020A:3551  4F					dec	di
020A:3552  9A 14FC:7270		;*		call	far ptr sub_244		;*(14FC:7270)
020A:3552  9A					db	9Ah
020A:3553  7270 14FC				dw	7270h, 14FCh
020A:3557  58					pop	ax
020A:3558  83 FB 0C				cmp	bx,0Ch
020A:355B  77 0D				ja	loc_274			; Jump if above
020A:355D  3C 01				cmp	al,1
020A:355F  74 22				je	loc_277			; Jump if equal
020A:3561  80 3E 438F 01			cmp	byte ptr data_535,1	; (020A:438F=80h)
020A:3566  75 10				jne	loc_276			; Jump if not equal
020A:3568  EB 4B				jmp	short loc_281		; (35B5)
020A:356A			loc_274:
020A:356A  C6 06 327E 00			mov	byte ptr ds:[327Eh],0	; (020A:327E=0Ch)
020A:356F			loc_275:
020A:356F  80 3E 438F 01			cmp	byte ptr data_535,1	; (020A:438F=80h)
020A:3574  75 02				jne	loc_276			; Jump if not equal
020A:3576  EB 45				jmp	short loc_282		; (35BD)
020A:3578			loc_276:
020A:3578  BD 4103				mov	bp,4103h
020A:357B  BE 4381				mov	si,4381h
020A:357E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:357E  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 107

020A:357F  4160 14FC				dw	4160h, 14FCh
020A:3583			loc_277:
020A:3583  B4 2A				mov	ah,2Ah			; '*'
020A:3585  E8 2134				call	sub_58			; (56BC)
020A:3588  E8 1D89				call	sub_47			; (5314)
020A:358B  BA 4103				mov	dx,4103h
020A:358E  B4 3D				mov	ah,3Dh			; '='
020A:3590  B0 00				mov	al,0
020A:3592  B9 0000				mov	cx,0
020A:3595  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:3597  A3 4150				mov	data_532,ax		; (020A:4150=835h)
020A:359A  73 12				jnc	loc_280			; Jump if carry=0
020A:359C  80 3E 327E 01			cmp	byte ptr ds:[327Eh],1	; (020A:327E=0Ch)
020A:35A1  0977			data_441	dw	977h
020A:35A3  75 05				jnz	loc_278			; Jump if not zero
020A:35A5  B3 01				mov	bl,1
020A:35A7  E9 3430				jmp	loc_916			; (69DA)
020A:35AA			loc_278:
020A:35AA  EB 11				jmp	short loc_282		; (35BD)
020A:35AC			loc_279:
020A:35AC  EB 07				jmp	short loc_281		; (35B5)
020A:35AE			loc_280:
020A:35AE  9A 14FC:0B10		;*		call	far ptr sub_173		;*(14FC:0B10)
020A:35AE  9A					db	9Ah
020A:35AF  0B10 14FC				dw	0B10h, 14FCh
020A:35B3  EB 08				jmp	short loc_282		; (35BD)
020A:35B5			loc_281:
020A:35B5  E8 5E1C				call	sub_119			; (93D4)
020A:35B8  73 03				jnc	loc_282			; Jump if carry=0
020A:35BA  E9 3546				jmp	loc_928			; (6B03)
020A:35BD			loc_282:
020A:35BD  C6 06 2B36 01			mov	byte ptr ds:[2B36h],1	; (020A:2B36=3Ah)
020A:35C2  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:35C6  E8 20F3				call	sub_58			; (56BC)
020A:35C9  E8 1D48				call	sub_47			; (5314)
020A:35CC  80 3E 4F13 01			cmp	byte ptr data_642,1	; (020A:4F13=20h)
020A:35D1  75 08				jne	loc_283			; Jump if not equal
020A:35D3  C6			data_442	db	0C6h
020A:35D4  06			data_443	db	6
020A:35D5  4F13			data_444	dw	4F13h
020A:35D7  E900			data_445	dw	0E900h
020A:35D9  0E95			data_446	dw	0E95h
020A:35DB			loc_283:
020A:35DB  7FE8			data_447	dw	7FE8h
020A:35DD  3A			data_448	db	3Ah
020A:35DE  2E			data_449	db	2Eh
020A:35DF  80			data_450	db	80h
020A:35E0  3E: 98		data_451	db	98h
020A:35E2  00			data_452	db	0
020A:35E3  01			data_453	db	1
020A:35E4  74			data_454	db	74h
020A:35E5  20			data_455	db	20h
020A:35E6  B4			data_456	db	0B4h
020A:35E7  07					pop	es
020A:35E8  CD			data_457	db	0CDh
020A:35E9  3C21			data_458	dw	3C21h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 108

020A:35EB  7500			data_459	dw	7500h
020A:35ED  0D			data_460	db	0Dh
020A:35EE  B4			data_461	db	0B4h
020A:35EF  07					pop	es
020A:35F0  CD			data_462	db	0CDh
020A:35F1  3C21			data_463	dw	3C21h
020A:35F3  3B			data_464	db	3Bh
020A:35F4  0375			data_465	dw	375h
020A:35F6  8CE9			data_466	dw	8CE9h
020A:35F8  18			data_467	db	18h
020A:35F9			loc_284:
020A:35F9  EB 3B				jmp	short loc_290		; (3636)
020A:35FB			loc_285:
020A:35FB  3C 3F				cmp	al,3Fh			; '?'
020A:35FD  75 03				jne	loc_286			; Jump if not equal
020A:35FF  E9 1883				jmp	loc_575			; (4E85)
020A:3602			loc_286:
020A:3602  1B3C			data_470	dw	1B3Ch
020A:3604  75 03				jnz	loc_288			; Jump if not zero
020A:3606			loc_287:
020A:3606  1CE9			data_471	dw	1CE9h
020A:3608  3C16			data_472	dw	3C16h
020A:360A  752B			data_473	dw	752Bh
020A:360C  03 E9				add	bp,cx
020A:360E  19B5			data_474	dw	19B5h
020A:3610			loc_289:
020A:3610  3C 80				cmp	al,80h
020A:3612  E573			data_475	dw	0E573h
020A:3614  A8 40				test	al,40h			; '@'
020A:3616  74 E1				jz	loc_284			; Jump if zero
020A:3618  5F24			data_476	dw	5F24h
020A:361A  69B9			data_477	dw	69B9h
020A:361C  8150			data_478	dw	8150h
020A:361E  50E9			data_479	dw	50E9h
020A:3620  BF50			data_480	dw	0BF50h
020A:3622  50					push	ax
020A:3623  50					push	ax
020A:3624  FC					cld				; Clear direction
020A:3625  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3627  E3 0D				jcxz	loc_290			; Jump if cx=0
020A:3629  4F					dec	di
020A:362A  81			data_482	db	81h
020A:362B  EF			data_483	db	0EFh
020A:362C  50			data_484	db	50h
020A:362D  50					push	ax
020A:362E  D1			data_485	db	0D1h
020A:362F  E7			data_486	db	0E7h
020A:3630  81			data_487	db	81h
020A:3631  C7			data_488	db	0C7h
020A:3632  69			data_489	db	69h
020A:3633  50			data_490	db	50h
020A:3634  FF 25				jmp	word ptr [di]		;*
020A:3636			loc_290:
020A:3636  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:3636  9A					db	9Ah
020A:3637  2B10 14FC				dw	2B10h, 14FCh
020A:363B  EB 9E				jmp	short loc_283		; (35DB)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 109

				sub_35		endp

							                        ;* No entry point to code
020A:363D  E8 2020				call	sub_56			; (5660)
020A:3640  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:3644  B4 22				mov	ah,22h			; '"'
020A:3646  E8 2073				call	sub_58			; (56BC)
020A:3649  E8 1CC8				call	sub_47			; (5314)
020A:364C  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:3651  75 30				jne	loc_293			; Jump if not equal
020A:3653  B4 02				mov	ah,2
020A:3655  32 FF				xor	bh,bh			; Zero register
020A:3657  BA 0500				mov	dx,500h
020A:365A  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:365A  9A					db	9Ah
020A:365B  2BA8 14FC				dw	2BA8h, 14FCh
020A:365F  BE 0623				mov	si,623h
020A:3662  B9 0BC3				mov	cx,0BC3h
020A:3665  81 E9 0623				sub	cx,623h
020A:3669  49					dec	cx
020A:366A  E8 39F3				call	sub_96			; (7060)

020A:366D			locloop_291:
020A:366D  33 ED				xor	bp,bp			; Zero register
020A:366F  26: 8A 14				mov	dl,es:[si]
020A:3672  80 FA F4				cmp	dl,0F4h
020A:3675  72 02				jb	loc_292			; Jump if below
020A:3677  B2 20				mov	dl,20h			; ' '
020A:3679			loc_292:
020A:3679  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:3679  9A					db	9Ah
020A:367A  07A0 14FC				dw	7A0h, 14FCh
020A:367E  46					inc	si
020A:367F  E2 EC				loop	locloop_291		; Loop if cx > 0

020A:3681  EB 7C				jmp	short loc_303		; (36FF)
020A:3683			loc_293:
020A:3683  E8 1CD2				call	sub_50			; (5358)
020A:3686  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:368A  BF 0320				mov	di,320h
020A:368D  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:3691  E8 39B4				call	sub_92			; (7048)
020A:3694  BE 0623				mov	si,623h
020A:3697  B9 0BC3				mov	cx,0BC3h
020A:369A  81 E9 0623				sub	cx,623h
020A:369E  B7 07				mov	bh,7
020A:36A0  FC					cld				; Clear direction

020A:36A1			locloop_295:
020A:36A1  8A DF				mov	bl,bh
020A:36A3  80 3C FE				cmp	byte ptr [si],0FEh
020A:36A6  75 0F				jne	loc_298			; Jump if not equal
020A:36A8  80 FF 07				cmp	bh,7
020A:36AB  75 04				jne	loc_296			; Jump if not equal
020A:36AD  B7 0F				mov	bh,0Fh
020A:36AF  EB 02				jmp	short loc_297		; (36B3)
020A:36B1			loc_296:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 110

020A:36B1  B7 07				mov	bh,7
020A:36B3			loc_297:
020A:36B3  8A DF				mov	bl,bh
020A:36B5  EB 0F				jmp	short loc_299		; (36C6)
020A:36B7			loc_298:
020A:36B7  80 3C F4				cmp	byte ptr [si],0F4h
020A:36BA  72 15				jb	loc_300			; Jump if below
020A:36BC  1E					push	ds
020A:36BD  E8 3985				call	sub_91			; (7045)
020A:36C0  8A 1E 1207				mov	bl,data_141		; (020A:1207=0)
020A:36C4  1F					pop	ds
020A:36C5  FC					cld				; Clear direction
020A:36C6			loc_299:
020A:36C6  B0 20				mov	al,20h			; ' '
020A:36C8  AA					stosb				; Store al to es:[di]
020A:36C9  46					inc	si
020A:36CA  26: 88 1D				mov	es:[di],bl
020A:36CD  47					inc	di
020A:36CE  49					dec	cx
020A:36CF  EB 0E				jmp	short loc_301		; (36DF)
020A:36D1			loc_300:
020A:36D1  80 3C 80				cmp	byte ptr [si],80h
020A:36D4  72 09				jb	loc_301			; Jump if below
020A:36D6  1E					push	ds
020A:36D7  E8 396B				call	sub_91			; (7045)
020A:36DA  8A 1E 1206				mov	bl,data_140		; (020A:1206=0)
020A:36DE  1F					pop	ds
020A:36DF			loc_301:
020A:36DF  AC					lodsb				; String [si] to al
020A:36E0  1E					push	ds
020A:36E1  E8 3961				call	sub_91			; (7045)
020A:36E4  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:36E9  75 0C				jne	loc_302			; Jump if not equal
020A:36EB  3C 80				cmp	al,80h
020A:36ED  72 08				jb	loc_302			; Jump if below
020A:36EF  53					push	bx
020A:36F0  BB 2B61				mov	bx,2B61h
020A:36F3  2C 80				sub	al,80h
020A:36F5  D7					xlat				; al=[al+[bx]] table
020A:36F6  5B					pop	bx
020A:36F7			loc_302:
020A:36F7  1F					pop	ds
020A:36F8  AA					stosb				; Store al to es:[di]
020A:36F9  26: 88 1D				mov	es:[di],bl
020A:36FC  47					inc	di
020A:36FD  E2 A2				loop	locloop_295		; Loop if cx > 0

020A:36FF			loc_303:
020A:36FF  E8 3943				call	sub_91			; (7045)
020A:3702  E8 1C77				call	sub_51			; (537C)
020A:3705  83 26 4E19 FE			and	data_587,0FFFEh		; (020A:4E19=6174h)
020A:370A  8B 1E 4E22				mov	bx,data_591		; (020A:4E22=0EDA3h)
020A:370E  E8 237F				call	sub_65			; (5A90)
020A:3711			loc_304:
020A:3711  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:3711  9A					db	9Ah
020A:3712  0760 14FC				dw	760h, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 111

020A:3716  3C 00				cmp	al,0
020A:3718  74 0A				je	loc_305			; Jump if equal
020A:371A  24 5F				and	al,5Fh			; '_'
020A:371C  3C 41				cmp	al,41h			; 'A'
020A:371E  72 04				jb	loc_305			; Jump if below
020A:3720  3C 5A				cmp	al,5Ah			; 'Z'
020A:3722  76 03				jbe	loc_306			; Jump if below or =
020A:3724			loc_305:
020A:3724  E9 0098				jmp	loc_311			; (37BF)
020A:3727			loc_306:
020A:3727  3C 50				cmp	al,50h			; 'P'
020A:3729  77 29				ja	loc_307			; Jump if above
020A:372B  2C 41				sub	al,41h			; 'A'
020A:372D  BB 8000				mov	bx,8000h
020A:3730  8A C8				mov	cl,al
020A:3732  D3 CB				ror	bx,cl			; Rotate
020A:3734  8B 16 4E22				mov	dx,data_591		; (020A:4E22=0EDA3h)
020A:3738  8B CA				mov	cx,dx
020A:373A  23 D3				and	dx,bx
020A:373C  F7 D2				not	dx
020A:373E  23 D3				and	dx,bx
020A:3740  F7 D3				not	bx
020A:3742  23 CB				and	cx,bx
020A:3744  0B CA				or	cx,dx
020A:3746  F7 06 4E19 0002			test	data_587,2		; (020A:4E19=6174h)
020A:374C  75 62				jnz	loc_309			; Jump if not zero
020A:374E  89 0E 4E22				mov	data_591,cx		; (020A:4E22=0EDA3h)
020A:3752  EB 61				jmp	short loc_310		; (37B5)
020A:3754			loc_307:
020A:3754  3C 54				cmp	al,54h			; 'T'
020A:3756  77 2F				ja	loc_308			; Jump if above
020A:3758  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:375D  74 51				je	loc_309			; Jump if equal
020A:375F  2C 51				sub	al,51h			; 'Q'
020A:3761  B3 04				mov	bl,4
020A:3763  8A C8				mov	cl,al
020A:3765  D2 CB				ror	bl,cl			; Rotate
020A:3767  8A 16 4E7F				mov	dl,data_633		; (020A:4E7F=0E8h)
020A:376B  8A CA				mov	cl,dl
020A:376D  22 D3				and	dl,bl
020A:376F  F6			data_492	db	0F6h
020A:3770  D2 22				shl	byte ptr [bp+si],cl	; Shift w/zeros fill
020A:3772  D3 F6				sal	si,cl			; Shift w/zeros fill
020A:3774  D3 22				shl	word ptr [bp+si],cl	; Shift w/zeros fill
020A:3776  CB					retf
							                        ;* No entry point to code
020A:3777  0A CA				or	cl,dl
020A:3779  F7 06 4E19 0002			test	data_587,2		; (020A:4E19=6174h)
020A:377F  75 2F				jnz	loc_309			; Jump if not zero
020A:3781  88 0E 4E7F				mov	data_633,cl		; (020A:4E7F=0E8h)
020A:3785  EB 2E				jmp	short loc_310		; (37B5)
020A:3787			loc_308:
020A:3787  2C 55				sub	al,55h			; 'U'
020A:3789  BB 0080				mov	bx,80h
020A:378C  8A C8				mov	cl,al
020A:378E  D3 CB				ror	bx,cl			; Rotate
020A:3790  8B 16 4E24				mov	dx,data_592		; (020A:4E24=0A107h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 112

020A:3794  8B CA				mov	cx,dx
020A:3796  23 D3				and	dx,bx
020A:3798  F7 D2				not	dx
020A:379A  23 D3				and	dx,bx
020A:379C  F7 D3				not	bx
020A:379E  23 CB				and	cx,bx
020A:37A0  0B CA				or	cx,dx
020A:37A2  F7 06 4E19 0002			test	data_587,2		; (020A:4E19=6174h)
020A:37A8  75 06				jnz	loc_309			; Jump if not zero
020A:37AA  89 0E 4E24				mov	data_592,cx		; (020A:4E24=0A107h)
020A:37AE  EB 05				jmp	short loc_310		; (37B5)
020A:37B0			loc_309:
020A:37B0  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:37B0  9A					db	9Ah
020A:37B1  2B10 14FC				dw	2B10h, 14FCh
020A:37B5			loc_310:
020A:37B5  8B 1E 4E22				mov	bx,data_591		; (020A:4E22=0EDA3h)
020A:37B9  E8 22D4				call	sub_65			; (5A90)
020A:37BC  E9 FF52				jmp	loc_304			; (3711)
020A:37BF			loc_311:
020A:37BF  E8 1EC6				call	sub_57			; (5688)
020A:37C2  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:37C6  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:37CA  C6 06 2B36 01			mov	byte ptr ds:[2B36h],1	; (020A:2B36=3Ah)
020A:37CF  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:37D3  E8 1EE6				call	sub_58			; (56BC)
020A:37D6  E8 1B3B				call	sub_47			; (5314)
020A:37D9  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:37DC  F6 06 4E7F 07			test	byte ptr data_633,7	; (020A:4E7F=0E8h)
020A:37E1  74 0C				jz	loc_312			; Jump if zero
020A:37E3  80 3E 2B3B 0A			cmp	data_242,0Ah		; (020A:2B3B=55h)
020A:37E8  73 05				jae	loc_312			; Jump if above or =
020A:37EA  B0 0A				mov	al,0Ah
020A:37EC  E8 264D				call	sub_75			; (5E3C)
020A:37EF			loc_312:
020A:37EF  E8 2322				call	sub_66			; (5B14)
020A:37F2  E9 FDE6				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:37F5  E8 1E68				call	sub_56			; (5660)
020A:37F8  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:37FC  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020A:3800  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
020A:3804  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:3808  E8 19E5				call	sub_46			; (51F0)
020A:380B  B4 02				mov	ah,2
020A:380D  32 FF				xor	bh,bh			; Zero register
020A:380F  BA 1313				mov	dx,1313h
020A:3812  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:3812  9A					db	9Ah
020A:3813  2BA8 14FC				dw	2BA8h, 14FCh
020A:3817  E8 2266				call	sub_64			; (5A80)
020A:381A  B1 04				mov	cl,4
020A:381C  B3 02				mov	bl,2
020A:381E  BE 0699				mov	si,699h
020A:3821  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:3821  9A					db	9Ah
020A:3822  0620 14FC				dw	620h, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 113

020A:3826  3C 1B				cmp	al,1Bh
020A:3828  75 03				jne	loc_313			; Jump if not equal
020A:382A  E9 00A2				jmp	loc_319			; (38CF)
020A:382D			loc_313:
020A:382D  80 F9 00				cmp	cl,0
020A:3830  74 03				je	loc_314			; Jump if equal
020A:3832  E9 0095				jmp	loc_318			; (38CA)
020A:3835			loc_314:
020A:3835  B9 0080				mov	cx,80h
020A:3838  BF 0699				mov	di,699h
020A:383B  E8 0262				call	sub_37			; (3AA0)
020A:383E  72 03				jc	loc_315			; Jump if carry Set
020A:3840  E9 0087				jmp	loc_318			; (38CA)
020A:3843			loc_315:
020A:3843  89 16 3029				mov	data_284,dx		; (020A:3029=474Fh)
020A:3847  B2 3A				mov	dl,3Ah			; ':'
020A:3849  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:3849  9A					db	9Ah
020A:384A  07A0 14FC				dw	7A0h, 14FCh
020A:384E  B1 04				mov	cl,4
020A:3850  B3 02				mov	bl,2
020A:3852  BE 069E				mov	si,69Eh
020A:3855  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:3855  9A					db	9Ah
020A:3856  0620 14FC				dw	620h, 14FCh
020A:385A  3C 1B				cmp	al,1Bh
020A:385C  74 71				je	loc_319			; Jump if equal
020A:385E  80 F9 00				cmp	cl,0
020A:3861  75 67				jne	loc_318			; Jump if not equal
020A:3863  B9 0080				mov	cx,80h
020A:3866  BF 069E				mov	di,69Eh
020A:3869  E8 0234				call	sub_37			; (3AA0)
020A:386C  73 5C				jnc	loc_318			; Jump if carry=0
020A:386E  E8 37E3				call	sub_93			; (7054)
020A:3871  26: 89 16 0002			mov	word ptr es:[2],dx	; (020A:0002=10h)
020A:3876  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (020A:0006=3)
020A:387C  75 07				jne	loc_316			; Jump if not equal
020A:387E  26: C7 06 0004 0000			mov	word ptr es:[4],0	; (020A:0004=808h)
020A:3885			loc_316:
020A:3885  A1 3029				mov	ax,data_284		; (020A:3029=474Fh)
020A:3888  26: A3 0000				mov	word ptr es:[0],ax	; (020A:0000=1828h)
020A:388C  26: A3 0006				mov	word ptr es:[6],ax	; (020A:0006=3)
020A:3890  26: A3 0008				mov	word ptr es:[8],ax	; (020A:0008=6702h)
020A:3894  26: C6 06 000E 00			mov	byte ptr es:[0Eh],0	; (020A:000E=2Bh)
020A:389A  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (020A:000A=272Dh)
020A:38A0  75			data_493	db	75h
020A:38A1  2619			data_494	dw	2619h
020A:38A3  06C7			data_495	dw	6C7h
020A:38A5  000A			data_496	dw	0Ah
020A:38A7  0000			data_497	dw	0
020A:38A9  C726			data_498	dw	0C726h
020A:38AB  0C06			data_499	dw	0C06h
020A:38AD  4100			data_500	dw	4100h
020A:38AF  8000			data_501	dw	8000h
020A:38B1  403E			data_502	dw	403Eh
020A:38B3  0030			data_503	dw	30h
020A:38B5  0477			data_504	dw	477h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 114

020A:38B7  06FE			data_505	dw	6FEh
020A:38B9  3040			data_506	dw	3040h
020A:38BB			loc_317:
020A:38BB  E8 379F				call	sub_95			; (705D)
020A:38BE  E8 2E83				call	sub_82			; (6744)
020A:38C1  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:38C5  E8 1DF4				call	sub_58			; (56BC)
020A:38C8  EB 05				jmp	short loc_319		; (38CF)
020A:38CA			loc_318:
020A:38CA  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:38CA  9A					db	9Ah
020A:38CB  2B10 14FC				dw	2B10h, 14FCh
020A:38CF			loc_319:
020A:38CF  E8 20DE				call	sub_61			; (59B0)
020A:38D2  E8 1DB3				call	sub_57			; (5688)
020A:38D5  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:38D9  C6 47 79 07				mov	byte ptr [bx+79h],7
020A:38DD  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:38E1  E8 2190				call	sub_63			; (5A74)
020A:38E4  E8 1A2D				call	sub_47			; (5314)
020A:38E7  E9 FCF1				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:38EA  8A 36 327F				mov	dh,byte ptr ds:[327Fh]	; (020A:327F=0)
020A:38EE  FE C6				inc	dh
020A:38F0  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:38F3  80 FE 07				cmp	dh,7
020A:38F6  76 08				jbe	loc_320			; Jump if below or =
020A:38F8  B6 01				mov	dh,1
020A:38FA  3C 09				cmp	al,9
020A:38FC  75 02				jne	loc_320			; Jump if not equal
020A:38FE  B0 04				mov	al,4
020A:3900			loc_320:
020A:3900  88 36 327F				mov	byte ptr ds:[327Fh],dh	; (020A:327F=0)
020A:3904  80 FE 01				cmp	dh,1
020A:3907  76 06				jbe	loc_321			; Jump if below or =
020A:3909  3C 04				cmp	al,4
020A:390B  75 02				jne	loc_321			; Jump if not equal
020A:390D  B0 12				mov	al,12h
020A:390F			loc_321:
020A:390F  9A 14FC:0850		;*		call	far ptr sub_168		;*(14FC:0850)
020A:390F  9A					db	9Ah
020A:3910  0850 14FC				dw	850h, 14FCh
020A:3914  E8 2525				call	sub_75			; (5E3C)
020A:3917  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:3917  9A					db	9Ah
020A:3918  2B70 14FC				dw	2B70h, 14FCh
020A:391C  E8 2091				call	sub_61			; (59B0)
020A:391F  E8 19F2				call	sub_47			; (5314)
020A:3922  E9 FCB6				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:3925  E8 1D38				call	sub_56			; (5660)
020A:3928  C6 47 52 07				mov	byte ptr [bx+52h],7
020A:392C  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020A:3930  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020A:3934  B4 1E				mov	ah,1Eh
020A:3936  E8 1D83				call	sub_58			; (56BC)
020A:3939  C6 06 066E 20			mov	byte ptr ds:[66Eh],20h	; (020A:066E=0Eh) ' '
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 115

020A:393E  E8 18AF				call	sub_46			; (51F0)
020A:3941  B4 02				mov	ah,2
020A:3943  32 FF				xor	bh,bh			; Zero register
020A:3945  BA 1238				mov	dx,1238h
020A:3948  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:3948  9A					db	9Ah
020A:3949  2BA8 14FC				dw	2BA8h, 14FCh
020A:394D  E8 2130				call	sub_64			; (5A80)
020A:3950  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:3950  9A					db	9Ah
020A:3951  0760 14FC				dw	760h, 14FCh
020A:3955  3C 80				cmp	al,80h
020A:3957  73 2A				jae	loc_322			; Jump if above or =
020A:3959  A8 40				test	al,40h			; '@'
020A:395B  74 26				jz	loc_322			; Jump if zero
020A:395D  24 5F				and	al,5Fh			; '_'
020A:395F  3C 41				cmp	al,41h			; 'A'
020A:3961  72 20				jb	loc_322			; Jump if below
020A:3963  3C 5A				cmp	al,5Ah			; 'Z'
020A:3965  77 1C				ja	loc_322			; Jump if above
020A:3967  8A D0				mov	dl,al
020A:3969  80 EA 41				sub	dl,41h			; 'A'
020A:396C  8A DA				mov	bl,dl
020A:396E  52					push	dx
020A:396F  B4 02				mov	ah,2
020A:3971  32 FF				xor	bh,bh			; Zero register
020A:3973  BA 184F				mov	dx,184Fh
020A:3976  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:3976  9A					db	9Ah
020A:3977  2BA8 14FC				dw	2BA8h, 14FCh
020A:397B  E8 20F6				call	sub_63			; (5A74)
020A:397E  5A					pop	dx
020A:397F  B4 0E				mov	ah,0Eh
020A:3981  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3983			loc_322:
020A:3983  B4 19				mov	ah,19h
020A:3985  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3987  A2 30CE				mov	byte ptr data_369,al	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:398A  04 61				add	al,61h			; 'a'
020A:398C  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:398F  E8 1B0E				call	sub_54			; (54A0)
020A:3992  8A 16 30CD				mov	dl,data_368		; (020A:30CD=3Bh)
020A:3996  B4 0E				mov	ah,0Eh
020A:3998  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:399A  E8 1CEB				call	sub_57			; (5688)
020A:399D  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:39A1  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020A:39A5  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:39A9  E8 1D10				call	sub_58			; (56BC)
020A:39AC  E8 20C5				call	sub_63			; (5A74)
020A:39AF  E8 1962				call	sub_47			; (5314)
020A:39B2  E9 FC26				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:39B5  E8 1CA8				call	sub_56			; (5660)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 116

020A:39B8  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:39BC  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020A:39C0  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020A:39C4  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:39C8  80 0E 1715 02			or	data_173,2		; (020A:1715=0)
020A:39CD  E8 1FE0				call	sub_61			; (59B0)
020A:39D0  E8 181D				call	sub_46			; (51F0)
020A:39D3  B4 02				mov	ah,2
020A:39D5  32 FF				xor	bh,bh			; Zero register
020A:39D7  BA 1418				mov	dx,1418h
020A:39DA  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:39DA  9A					db	9Ah
020A:39DB  2BA8 14FC				dw	2BA8h, 14FCh
020A:39DF  E8 209E				call	sub_64			; (5A80)
020A:39E2  B1 04				mov	cl,4
020A:39E4  B3 02				mov	bl,2
020A:39E6  BE 06EE				mov	si,6EEh
020A:39E9  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:39E9  9A					db	9Ah
020A:39EA  0620 14FC				dw	620h, 14FCh
020A:39EE  3C 1B				cmp	al,1Bh
020A:39F0  74 71				je	loc_326			; Jump if equal
020A:39F2  80 F9 00				cmp	cl,0
020A:39F5  75 67				jne	loc_325			; Jump if not equal
020A:39F7  B9 0080				mov	cx,80h
020A:39FA  BF 06EE				mov	di,6EEh
020A:39FD  E8 00A0				call	sub_37			; (3AA0)
020A:3A00  73 5C				jnc	loc_325			; Jump if carry=0
020A:3A02  E8 364F				call	sub_93			; (7054)
020A:3A05  26: 89 16 0004			mov	word ptr es:[4],dx	; (020A:0004=808h)
020A:3A0A  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (020A:0000=1828h)
020A:3A10  75 38				jne	loc_324			; Jump if not equal
020A:3A12  33 C0				xor	ax,ax			; Zero register
020A:3A14  26: A3 0000				mov	word ptr es:[0],ax	; (020A:0000=1828h)
020A:3A18  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:3A1C  26: A3 0000				mov	word ptr es:[0],ax	; (020A:0000=1828h)
020A:3A20  26: A3 0006				mov	word ptr es:[6],ax	; (020A:0006=3)
020A:3A24  26: A3 0008				mov	word ptr es:[8],ax	; (020A:0008=6702h)
020A:3A28  26: A2 000E				mov	byte ptr es:[0Eh],al	; (020A:000E=2Bh)
020A:3A2C  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (020A:000A=272Dh)
020A:3A32  75 0B				jne	loc_323			; Jump if not equal
020A:3A34  26: A3 000A				mov	word ptr es:[0Ah],ax	; (020A:000A=272Dh)
020A:3A38  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (020A:000C=9028h)
020A:3A3F			loc_323:
020A:3A3F  80 3E 3040 00			cmp	data_298,0		; (020A:3040=33h)
020A:3A44  77 04				ja	loc_324			; Jump if above
020A:3A46  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:3A4A			loc_324:
020A:3A4A  C6 06 1715 01			mov	data_173,1		; (020A:1715=0)
020A:3A4F  E8 360B				call	sub_95			; (705D)
020A:3A52  E8 2CEF				call	sub_82			; (6744)
020A:3A55  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:3A59  E8 1C60				call	sub_58			; (56BC)
020A:3A5C  EB 0D				jmp	short loc_327		; (3A6B)
020A:3A5E			loc_325:
020A:3A5E  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:3A5E  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 117

020A:3A5F  2B10 14FC				dw	2B10h, 14FCh
020A:3A63			loc_326:
020A:3A63  80 26 1715 FD			and	data_173,0FDh		; (020A:1715=0)
020A:3A68  E8 1F45				call	sub_61			; (59B0)
020A:3A6B			loc_327:
020A:3A6B  E8 1C1A				call	sub_57			; (5688)
020A:3A6E  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:3A72  C6 47 7A 07				mov	byte ptr [bx+7Ah],7
020A:3A76  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:3A7A  E8 1FF7				call	sub_63			; (5A74)
020A:3A7D  E8 1894				call	sub_47			; (5314)
020A:3A80  E9 FB58				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:3A83  E8 35D7				call	sub_95			; (705D)
020A:3A86  B0 41				mov	al,41h			; 'A'
020A:3A88  80 3E 35E6 01			cmp	data_456,1		; (020A:35E6=0B4h)
020A:3A8D  74 02				je	loc_328			; Jump if equal
020A:3A8F  B0 4C				mov	al,4Ch			; 'L'
020A:3A91			loc_328:
020A:3A91  E8 0248				call	sub_40			; (3CDC)
020A:3A94  E8 187D				call	sub_47			; (5314)
020A:3A97  E9 FB41				jmp	loc_283			; (35DB)
020A:3A9A  00					db	0
020A:3A9B  00					db	0
020A:3A9C  00					db	0
020A:3A9D  00 00				add	[bx+si],al
020A:3A9F  00 53 32				add	[bp+di+32h],dl
020A:3AA2  DB					db	0DBh
020A:3AA3  33 D2				xor	dx,dx			; Zero register
020A:3AA5			loc_329:
020A:3AA5  80 FB 04				cmp	bl,4
020A:3AA8  73 32				jae	loc_333			; Jump if above or =
020A:3AAA  8A 05				mov	al,[di]
020A:3AAC  3C 40				cmp	al,40h			; '@'
020A:3AAE  72 0C				jb	loc_330			; Jump if below
020A:3AB0  24 DF				and	al,0DFh
020A:3AB2  2C 41				sub	al,41h			; 'A'
020A:3AB4  3C 06				cmp	al,6
020A:3AB6  73 1F				jae	loc_332			; Jump if above or =
020A:3AB8  04 0A				add	al,0Ah
020A:3ABA  EB 06				jmp	short loc_331		; (3AC2)
020A:3ABC			loc_330:
020A:3ABC  2C 30				sub	al,30h			; '0'
020A:3ABE  3C 09				cmp	al,9
020A:3AC0  77 15				ja	loc_332			; Jump if above
020A:3AC2			loc_331:
020A:3AC2  32 E4				xor	ah,ah			; Zero register
020A:3AC4  FE C3				inc	bl
020A:3AC6  51					push	cx
020A:3AC7  B1 04				mov	cl,4
020A:3AC9  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:3ACB  59					pop	cx
020A:3ACC  03 D0				add	dx,ax
020A:3ACE  9A 14FC:05A0		;*		call	far ptr sub_162		;*(14FC:05A0)
020A:3ACE  9A					db	9Ah
020A:3ACF  05A0 14FC				dw	5A0h, 14FCh
020A:3AD3  73 D0				jnc	loc_329			; Jump if carry=0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 118

020A:3AD5  EB 08				jmp	short loc_334		; (3ADF)
020A:3AD7			loc_332:
020A:3AD7  80 FB 01				cmp	bl,1
020A:3ADA  72 03				jb	loc_334			; Jump if below
020A:3ADC			loc_333:
020A:3ADC  F9					stc				; Set carry flag
020A:3ADD  EB 01				jmp	short loc_335		; (3AE0)
020A:3ADF			loc_334:
020A:3ADF  F8					clc				; Clear carry flag
020A:3AE0			loc_335:
020A:3AE0  5B					pop	bx
020A:3AE1  C3					retn
020A:3AE2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_38		proc	near
020A:3AE4  56					push	si
020A:3AE5			loc_336:
020A:3AE5  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:3AE8  74 0A				je	loc_337			; Jump if equal
020A:3AEA  80 3C 09				cmp	byte ptr [si],9
020A:3AED  74 05				je	loc_337			; Jump if equal
020A:3AEF  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:3AF2  75 09				jne	loc_338			; Jump if not equal
020A:3AF4			loc_337:
020A:3AF4  46					inc	si
020A:3AF5  3B 36 509E				cmp	si,data_646		; (020A:509E=0BF78h)
020A:3AF9  76 EA				jbe	loc_336			; Jump if below or =
020A:3AFB  EB 5D				jmp	short loc_345		; (3B5A)
020A:3AFD			loc_338:
020A:3AFD  33 D2				xor	dx,dx			; Zero register
020A:3AFF  B5 04				mov	ch,4
020A:3B01  8A CD				mov	cl,ch
020A:3B03			loc_339:
020A:3B03  8A 04				mov	al,[si]
020A:3B05  3C 40				cmp	al,40h			; '@'
020A:3B07  72 0C				jb	loc_340			; Jump if below
020A:3B09  24 DF				and	al,0DFh
020A:3B0B  2C 41				sub	al,41h			; 'A'
020A:3B0D  3C 06				cmp	al,6
020A:3B0F  73 24				jae	loc_344			; Jump if above or =
020A:3B11  04 0A				add	al,0Ah
020A:3B13  EB 06				jmp	short loc_341		; (3B1B)
020A:3B15			loc_340:
020A:3B15  2C 30				sub	al,30h			; '0'
020A:3B17  3C 09				cmp	al,9
020A:3B19  77 1A				ja	loc_344			; Jump if above
020A:3B1B			loc_341:
020A:3B1B  32 E4				xor	ah,ah			; Zero register
020A:3B1D  03 D0				add	dx,ax
020A:3B1F  D3 C2				rol	dx,cl			; Rotate
020A:3B21  FE CD				dec	ch
020A:3B23  80 FD 00				cmp	ch,0
020A:3B26  74 07				je	loc_342			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 119

020A:3B28  46					inc	si
020A:3B29  3B 36 509E				cmp	si,data_646		; (020A:509E=0BF78h)
020A:3B2D  76 D4				jbe	loc_339			; Jump if below or =
020A:3B2F			loc_342:
020A:3B2F  46					inc	si
020A:3B30			loc_343:
020A:3B30  D3 CA				ror	dx,cl			; Rotate
020A:3B32  58					pop	ax
020A:3B33  F8					clc				; Clear carry flag
020A:3B34  C3					retn
020A:3B35			loc_344:
020A:3B35  80 FD 04				cmp	ch,4
020A:3B38  74 20				je	loc_345			; Jump if equal
020A:3B3A  8A 04				mov	al,[si]
020A:3B3C  3C 20				cmp	al,20h			; ' '
020A:3B3E  74 F0				je	loc_343			; Jump if equal
020A:3B40  3C 09				cmp	al,9
020A:3B42  74 EC				je	loc_343			; Jump if equal
020A:3B44  3C 00				cmp	al,0
020A:3B46  74 E8				je	loc_343			; Jump if equal
020A:3B48  3C 2C				cmp	al,2Ch			; ','
020A:3B4A  74 E4				je	loc_343			; Jump if equal
020A:3B4C  3C 3A				cmp	al,3Ah			; ':'
020A:3B4E  74 E0				je	loc_343			; Jump if equal
020A:3B50  3C 3B				cmp	al,3Bh			; ';'
020A:3B52  74 DC				je	loc_343			; Jump if equal
020A:3B54  24 DF				and	al,0DFh
020A:3B56  3C 48				cmp	al,48h			; 'H'
020A:3B58  74 D6				je	loc_343			; Jump if equal
020A:3B5A			loc_345:
020A:3B5A  F9					stc				; Set carry flag
020A:3B5B  5E					pop	si
020A:3B5C  C3					retn
				sub_38		endp

020A:3B5D  00 00				add	[bx+si],al
020A:3B5F  00 BA 8005				add	[bp+si-7FFBh],bh
020A:3B63  BB 04F0				mov	bx,4F0h
020A:3B66  E8 ECB7		;*		call	sub_30			;*(2820)
020A:3B66  E8 B7 EC				db	0E8h,0B7h,0ECh
020A:3B69  C3					retn
020A:3B6A  00					db	0
020A:3B6B  00					db	0
020A:3B6C  00					db	0
							                        ;* No entry point to code
020A:3B6D  00 00				add	[bx+si],al
020A:3B6F  00 F7				add	bh,dh
020A:3B71  06					push	es
020A:3B72  19 4E 02				sbb	[bp+2],cx
020A:3B75  00 74 02				add	[si+2],dh
020A:3B78			loc_346:
020A:3B78  EB 7B				jmp	short loc_354		; (3BF5)
020A:3B7A			loc_347:
020A:3B7A  8A 04				mov	al,[si]
020A:3B7C  8A E0				mov	ah,al
020A:3B7E  3C 00				cmp	al,0
020A:3B80  74 F6				je	loc_346			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 120

020A:3B82  24 5F				and	al,5Fh			; '_'
020A:3B84  3C 41				cmp	al,41h			; 'A'
020A:3B86  72 F0				jb	loc_346			; Jump if below
020A:3B88  3C 5A				cmp	al,5Ah			; 'Z'
020A:3B8A  77 EC				ja	loc_346			; Jump if above
020A:3B8C  3C 50				cmp	al,50h			; 'P'
020A:3B8E  77 1E				ja	loc_349			; Jump if above
020A:3B90  2C 41				sub	al,41h			; 'A'
020A:3B92  BB 8000				mov	bx,8000h
020A:3B95  8A C8				mov	cl,al
020A:3B97  D3 CB				ror	bx,cl			; Rotate
020A:3B99  8B 16 4E22				mov	dx,data_591		; (020A:4E22=0EDA3h)
020A:3B9D  0B D3				or	dx,bx
020A:3B9F  F6			data_509	db	0F6h
020A:3BA0  C4 20				les	sp,dword ptr [bx+si]	; Load 32 bit ptr
020A:3BA2  74 04				jz	loc_348			; Jump if zero
020A:3BA4  F7 D3				not	bx
020A:3BA6  23 D3				and	dx,bx
020A:3BA8			loc_348:
020A:3BA8  89			data_510	db	89h
020A:3BA9  16					push	ss
020A:3BAA  22			data_511	db	22h
020A:3BAB  4E					dec	si
020A:3BAC  EB 44				jmp	short loc_353		; (3BF2)
020A:3BAE			loc_349:
020A:3BAE  3C 54				cmp	al,54h			; 'T'
020A:3BB0  77 24				ja	loc_351			; Jump if above
020A:3BB2  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:3BB7  74 39				je	loc_353			; Jump if equal
020A:3BB9  2C 51				sub	al,51h			; 'Q'
020A:3BBB  B3 04				mov	bl,4
020A:3BBD  8A C8				mov	cl,al
020A:3BBF  D2 CB				ror	bl,cl			; Rotate
020A:3BC1  8A 16 4E7F				mov	dl,data_633		; (020A:4E7F=0E8h)
020A:3BC5  0A D3				or	dl,bl
020A:3BC7  F6 C4 20				test	ah,20h			; ' '
020A:3BCA  74 04				jz	loc_350			; Jump if zero
020A:3BCC  F6 D3				not	bl
020A:3BCE  22 D3				and	dl,bl
020A:3BD0			loc_350:
020A:3BD0  88 16 4E7F				mov	data_633,dl		; (020A:4E7F=0E8h)
020A:3BD4  77 1C				ja	loc_353			; Jump if above
020A:3BD6			loc_351:
020A:3BD6  2C 55				sub	al,55h			; 'U'
020A:3BD8  BB 0080				mov	bx,80h
020A:3BDB  8A C8				mov	cl,al
020A:3BDD  D3 CB				ror	bx,cl			; Rotate
020A:3BDF  8B 16 4E24				mov	dx,data_592		; (020A:4E24=0A107h)
020A:3BE3  0B D3				or	dx,bx
020A:3BE5  F6 C4 20				test	ah,20h			; ' '
020A:3BE8  74 04				jz	loc_352			; Jump if zero
020A:3BEA  F7 D3				not	bx
020A:3BEC  23 D3				and	dx,bx
020A:3BEE			loc_352:
020A:3BEE  89 16 4E24				mov	data_592,dx		; (020A:4E24=0A107h)
020A:3BF2			loc_353:
020A:3BF2  46					inc	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 121

020A:3BF3  EB 85				jmp	short loc_347		; (3B7A)
020A:3BF5			loc_354:
020A:3BF5  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:3BF8  F6 06 4E7F 07			test	byte ptr data_633,7	; (020A:4E7F=0E8h)
020A:3BFD  74 0C				jz	loc_355			; Jump if zero
020A:3BFF  80 3E 2B3B 0A			cmp	data_242,0Ah		; (020A:2B3B=55h)
020A:3C04  73 05				jae	loc_355			; Jump if above or =
020A:3C06  B0 0A				mov	al,0Ah
020A:3C08  E8 2231				call	sub_75			; (5E3C)
020A:3C0B			loc_355:
020A:3C0B  E8 1F06				call	sub_66			; (5B14)
020A:3C0E  F7 06 4E22 0002			test	data_591,2		; (020A:4E22=0EDA3h)
020A:3C14  74 07				jz	loc_356			; Jump if zero
020A:3C16  B0 01				mov	al,1
020A:3C18  9A 14FC:45B8		;*		call	far ptr sub_212		;*(14FC:45B8)
020A:3C18  9A					db	9Ah
020A:3C19  45B8 14FC				dw	45B8h, 14FCh
020A:3C1D			loc_356:
020A:3C1D  C3					retn
							                        ;* No entry point to code
020A:3C1E  87 DB				xchg	bx,bx
020A:3C20  80 3E 5614 01			cmp	byte ptr data_659,1	; (020A:5614=2Eh)
020A:3C25  75 07				jne	loc_357			; Jump if not equal
020A:3C27  C6 06 4FD6 12			mov	byte ptr data_644,12h	; (020A:4FD6=34h)
020A:3C2C  EB 28				jmp	short loc_359		; (3C56)
020A:3C2E			loc_357:
020A:3C2E  89 36 509E				mov	data_646,si		; (020A:509E=0BF78h)
020A:3C32  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:3C36  01 1E 509E				add	data_646,bx		; (020A:509E=0BF78h)
020A:3C3A  E8 FEA7				call	sub_38			; (3AE4)
020A:3C3D  72 12				jc	loc_358			; Jump if carry Set
020A:3C3F  E8 3439				call	sub_100			; (707B)
020A:3C42  3B D0				cmp	dx,ax
020A:3C44  72 0B				jb	loc_358			; Jump if below
020A:3C46  89 16 3035				mov	data_291,dx		; (020A:3035=415Ch)
020A:3C4A  2E: 89 16 38A7			mov	cs:data_497,dx		; (020A:38A7=0)
020A:3C4F  EB 05				jmp	short loc_359		; (3C56)
020A:3C51			loc_358:
020A:3C51  C6 06 4FD6 31			mov	byte ptr data_644,31h	; (020A:4FD6=34h) '1'
020A:3C56			loc_359:
020A:3C56  C3					retn
							                        ;* No entry point to code
020A:3C57  90					nop
020A:3C58  B4 01				mov	ah,1
020A:3C5A  3C 46				cmp	al,46h			; 'F'
020A:3C5C  74 37				je	loc_360			; Jump if equal
020A:3C5E  FE C4				inc	ah
020A:3C60  3C 43				cmp	al,43h			; 'C'
020A:3C62  74 31				je	loc_360			; Jump if equal
020A:3C64  FE C4				inc	ah
020A:3C66  3C 45				cmp	al,45h			; 'E'
020A:3C68  74 2B				je	loc_360			; Jump if equal
020A:3C6A  FE C4				inc	ah
020A:3C6C  3C 5A				cmp	al,5Ah			; 'Z'
020A:3C6E  74 25				je	loc_360			; Jump if equal
020A:3C70  FE C4				inc	ah
020A:3C72  3C 44				cmp	al,44h			; 'D'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 122

020A:3C74  74 1F				je	loc_360			; Jump if equal
020A:3C76  FE C4				inc	ah
020A:3C78  3C 4F				cmp	al,4Fh			; 'O'
020A:3C7A  74 19				je	loc_360			; Jump if equal
020A:3C7C  FE C4				inc	ah
020A:3C7E  3C 53				cmp	al,53h			; 'S'
020A:3C80  74 13				je	loc_360			; Jump if equal
020A:3C82  FE C4				inc	ah
020A:3C84  3C 57				cmp	al,57h			; 'W'
020A:3C86  74 0D				je	loc_360			; Jump if equal
020A:3C88  FE C4				inc	ah
020A:3C8A  3C 4E				cmp	al,4Eh			; 'N'
020A:3C8C  74 07				je	loc_360			; Jump if equal
020A:3C8E  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3C93  EB 0E				jmp	short loc_361		; (3CA3)
020A:3C95			loc_360:
020A:3C95  88 26 327F				mov	byte ptr ds:[327Fh],ah	; (020A:327F=0)
020A:3C99  9A 14FC:0850		;*		call	far ptr sub_168		;*(14FC:0850)
020A:3C99  9A					db	9Ah
020A:3C9A  0850 14FC				dw	850h, 14FCh
020A:3C9E  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:3C9E  9A					db	9Ah
020A:3C9F  2B70 14FC				dw	2B70h, 14FCh
020A:3CA3			loc_361:
020A:3CA3  C3					retn
							                        ;* No entry point to code
020A:3CA4  3C 41				cmp	al,41h			; 'A'
020A:3CA6  72 2C				jb	loc_362			; Jump if below
020A:3CA8  3C 5A				cmp	al,5Ah			; 'Z'
020A:3CAA  77 28				ja	loc_362			; Jump if above
020A:3CAC  8A D0				mov	dl,al
020A:3CAE  80 EA 41				sub	dl,41h			; 'A'
020A:3CB1  8A DA				mov	bl,dl
020A:3CB3  B4 19				mov	ah,19h
020A:3CB5  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3CB7  50					push	ax
020A:3CB8  B4 0E				mov	ah,0Eh
020A:3CBA  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3CBC  B4 19				mov	ah,19h
020A:3CBE  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3CC0  A2 30CE				mov	byte ptr data_369,al	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:3CC3  04 61				add	al,61h			; 'a'
020A:3CC5  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:3CC8  E8 17D5				call	sub_54			; (54A0)
020A:3CCB  58					pop	ax
020A:3CCC  8A D0				mov	dl,al
020A:3CCE  B4 0E				mov	ah,0Eh
020A:3CD0  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3CD2  EB 05				jmp	short loc_363		; (3CD9)
020A:3CD4			loc_362:
020A:3CD4  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3CD9			loc_363:
020A:3CD9  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 123

020A:3CDA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_40		proc	near
020A:3CDC  50					push	ax
020A:3CDD  BF 036A				mov	di,36Ah
020A:3CE0  B9 0009				mov	cx,9
020A:3CE3  B0 2E				mov	al,2Eh			; '.'
020A:3CE5  FC					cld				; Clear direction
020A:3CE6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3CE8  4F					dec	di
020A:3CE9  58					pop	ax
020A:3CEA  3C 4C				cmp	al,4Ch			; 'L'
020A:3CEC  74 0C				je	loc_364			; Jump if equal
020A:3CEE  3C 41				cmp	al,41h			; 'A'
020A:3CF0  74 0B				je	loc_365			; Jump if equal
020A:3CF2  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3CF7  E9 0117				jmp	loc_375			; (3E11)
020A:3CFA			loc_364:
020A:3CFA  E9 009B				jmp	loc_370			; (3D98)
020A:3CFD			loc_365:
020A:3CFD  F6 06 14FA 80			test	data_157,80h		; (020A:14FA=0)
020A:3D02  75 05				jnz	loc_366			; Jump if not zero
020A:3D04  C6 06 14FA 02			mov	data_157,2		; (020A:14FA=0)
020A:3D09			loc_366:
020A:3D09  C6 06 35E6 00			mov	data_456,0		; (020A:35E6=0B4h)
020A:3D0E  9A 14FC:26A0		;*		call	far ptr sub_177		;*(14FC:26A0)
020A:3D0E  9A					db	9Ah
020A:3D0F  26A0 14FC				dw	26A0h, 14FCh
020A:3D13  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:3D17  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:3D1B  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:3D1F  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:3D23  C6 47 65 00				mov	byte ptr [bx+65h],0
020A:3D27  C6 47 66 00				mov	byte ptr [bx+66h],0
020A:3D2B  C6 47 69 00				mov	byte ptr [bx+69h],0
020A:3D2F  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020A:3D33  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:3D37  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020A:3D3B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:3D3F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:3D43  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
020A:3D47  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:3D4B  C6 06 4E7F 00			mov	byte ptr data_633,0	; (020A:4E7F=0E8h)
020A:3D50  B9 000D				mov	cx,0Dh
020A:3D53  BF 13E8				mov	di,13E8h
020A:3D56  A0 13E4				mov	al,data_154		; (020A:13E4=0)

020A:3D59			locloop_367:
020A:3D59  3A 05				cmp	al,[di]
020A:3D5B  74 05				je	loc_368			; Jump if equal
020A:3D5D  83 C7 10				add	di,10h
020A:3D60  E2 F7				loop	locloop_367		; Loop if cx > 0

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 124

020A:3D62			loc_368:
020A:3D62  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020A:3D67  75 1D				jne	loc_369			; Jump if not equal
020A:3D69  BF 13E8				mov	di,13E8h
020A:3D6C  81 C7 00C0				add	di,0C0h
020A:3D70  8A 45 0D				mov	al,[di+0Dh]
020A:3D73  A2 13E5				mov	data_155,al		; (020A:13E5=0)
020A:3D76  8A 05				mov	al,[di]
020A:3D78  A2 13E4				mov	data_154,al		; (020A:13E4=0)
020A:3D7B  8B 45 0B				mov	ax,[di+0Bh]
020A:3D7E  A3 13E6				mov	data_156,ax		; (020A:13E6=0)
020A:3D81  9A 14FC:2B34		;*		call	far ptr sub_183		;*(14FC:2B34)
020A:3D81  9A					db	9Ah
020A:3D82  2B34 14FC				dw	2B34h, 14FCh
020A:3D86			loc_369:
020A:3D86  80 26 35E4 FE			and	data_454,0FEh		; (020A:35E4=74h)
020A:3D8B  32 C0				xor	al,al			; Zero register
020A:3D8D  9A 14FC:09D8		;*		call	far ptr sub_171		;*(14FC:09D8)
020A:3D8D  9A					db	9Ah
020A:3D8E  09D8 14FC				dw	9D8h, 14FCh
020A:3D92  C6 47 48 00				mov	byte ptr [bx+48h],0
020A:3D96  EB 65				jmp	short loc_374		; (3DFD)
020A:3D98			loc_370:
020A:3D98  F6 06 14FA 80			test	data_157,80h		; (020A:14FA=0)
020A:3D9D  75 05				jnz	loc_371			; Jump if not zero
020A:3D9F  C6 06 14FA 00			mov	data_157,0		; (020A:14FA=0)
020A:3DA4			loc_371:
020A:3DA4  C6 06 35E6 01			mov	data_456,1		; (020A:35E6=0B4h)
020A:3DA9  9A 14FC:26A0		;*		call	far ptr sub_177		;*(14FC:26A0)
020A:3DA9  9A					db	9Ah
020A:3DAA  26A0 14FC				dw	26A0h, 14FCh
020A:3DAE  A0 1209				mov	al,data_143		; (020A:1209=0)
020A:3DB1  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:3DB5  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:3DB9  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:3DBD  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020A:3DC1  88 47 65				mov	[bx+65h],al
020A:3DC4  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:3DC8  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:3DCC  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020A:3DD0  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:3DD4  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020A:3DD8  88 47 70				mov	[bx+70h],al
020A:3DDB  C6 47 71 07				mov	byte ptr [bx+71h],7
020A:3DDF  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
020A:3DE3  F6 06 35E3 01			test	data_453,1		; (020A:35E3=1)
020A:3DE8  75 04				jnz	loc_372			; Jump if not zero
020A:3DEA  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:3DEE			loc_372:
020A:3DEE  E8 1D23				call	sub_66			; (5B14)
020A:3DF1  80 0E 35E4 01			or	data_454,1		; (020A:35E4=74h)
020A:3DF6  B0 01				mov	al,1
020A:3DF8  9A 14FC:09D8		;*		call	far ptr sub_171		;*(14FC:09D8)
020A:3DF8  9A					db	9Ah
020A:3DF9  09D8 14FC				dw	9D8h, 14FCh
020A:3DFD			loc_374:
020A:3DFD  E8 1544				call	sub_49			; (5344)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 125

020A:3E00  BF 3233				mov	di,3233h
020A:3E03  B9 003F				mov	cx,3Fh
020A:3E06  B0 2E				mov	al,2Eh			; '.'
020A:3E08  FC					cld				; Clear direction
020A:3E09  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E0B  4F					dec	di
020A:3E0C  9A 14FC:26A0		;*		call	far ptr sub_177		;*(14FC:26A0)
020A:3E0C  9A					db	9Ah
020A:3E0D  26A0 14FC				dw	26A0h, 14FCh
020A:3E11			loc_375:
020A:3E11  C3					retn
				sub_40		endp

							                        ;* No entry point to code
020A:3E12  87 DB				xchg	bx,bx
020A:3E14  C6 06 4F13 01			mov	byte ptr data_642,1	; (020A:4F13=20h)
020A:3E19  C3					retn
							                        ;* No entry point to code
020A:3E1A  87 DB				xchg	bx,bx
020A:3E1C  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:3E20  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:3E25  74 1B				je	loc_377			; Jump if equal
020A:3E27  BF 0378				mov	di,378h
020A:3E2A  B9 0021				mov	cx,21h
020A:3E2D  B0 20				mov	al,20h			; ' '
020A:3E2F  FC					cld				; Clear direction
020A:3E30  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3E32  B9 0020				mov	cx,20h
020A:3E35  83 FB 20				cmp	bx,20h
020A:3E38  77 02				ja	loc_376			; Jump if above
020A:3E3A  8B CB				mov	cx,bx
020A:3E3C			loc_376:
020A:3E3C  BF 0378				mov	di,378h
020A:3E3F  FC					cld				; Clear direction
020A:3E40  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3E42			loc_377:
020A:3E42  C3					retn
							                        ;* No entry point to code
020A:3E43  90					nop
020A:3E44  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:3E48  83 FB 00				cmp	bx,0
020A:3E4B  75 08				jne	loc_378			; Jump if not equal
020A:3E4D  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3E52  E9 00BC				jmp	loc_387			; (3F11)
020A:3E55			loc_378:
020A:3E55  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020A:3E58  74 1D				je	loc_379			; Jump if equal
020A:3E5A  8B FE				mov	di,si
020A:3E5C  B0 00				mov	al,0
020A:3E5E  9A 14FC:2724		;*		call	far ptr sub_179		;*(14FC:2724)
020A:3E5E  9A					db	9Ah
020A:3E5F  2724 14FC				dw	2724h, 14FCh
020A:3E63  9A 14FC:27AC		;*		call	far ptr sub_180		;*(14FC:27AC)
020A:3E63  9A					db	9Ah
020A:3E64  27AC 14FC				dw	27ACh, 14FCh
020A:3E68  A2 327E				mov	byte ptr ds:[327Eh],al	; (020A:327E=0Ch)
020A:3E6B  3C 01				cmp	al,1
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 126

020A:3E6D  77 12				ja	loc_380			; Jump if above
020A:3E6F  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3E74  E9 009A				jmp	loc_387			; (3F11)
020A:3E77			loc_379:
020A:3E77  80 3E 327E 01			cmp	byte ptr ds:[327Eh],1	; (020A:327E=0Ch)
020A:3E7C  77 25				ja	loc_381			; Jump if above
020A:3E7E  E9 009D				jmp	loc_388			; (3F1E)
020A:3E81			loc_380:
020A:3E81  BF 31F0				mov	di,31F0h
020A:3E84  B9 0040				mov	cx,40h
020A:3E87  B0 00				mov	al,0
020A:3E89  FC					cld				; Clear direction
020A:3E8A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3E8C  BF 0649				mov	di,649h
020A:3E8F  B9 000C				mov	cx,0Ch
020A:3E92  B0 20				mov	al,20h			; ' '
020A:3E94  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3E96  BF 31F0				mov	di,31F0h
020A:3E99  8B CB				mov	cx,bx
020A:3E9B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3E9D  4F					dec	di
020A:3E9E  9A 14FC:7270		;*		call	far ptr sub_244		;*(14FC:7270)
020A:3E9E  9A					db	9Ah
020A:3E9F  7270 14FC				dw	7270h, 14FCh
020A:3EA3			loc_381:
020A:3EA3  80 3E 3031 03			cmp	data_288,3		; (020A:3031=45h)
020A:3EA8  75 05				jne	loc_382			; Jump if not equal
020A:3EAA  C6 06 3031 04			mov	data_288,4		; (020A:3031=45h)
020A:3EAF			loc_382:
020A:3EAF  E8 5522				call	sub_119			; (93D4)
020A:3EB2  73 05				jnc	loc_383			; Jump if carry=0
020A:3EB4  A2 4FD6				mov	data_644,al		; (020A:4FD6=34h)
020A:3EB7  EB 58				jmp	short loc_387		; (3F11)
020A:3EB9			loc_383:
020A:3EB9  C6 06 5614 01			mov	byte ptr data_659,1	; (020A:5614=2Eh)
020A:3EBE  80 3E 2B38 01			cmp	data_240,1		; (020A:2B38=44h)
020A:3EC3  74 05				je	loc_384			; Jump if equal
020A:3EC5  B0 0A				mov	al,0Ah
020A:3EC7  E8 1F72				call	sub_75			; (5E3C)
020A:3ECA			loc_384:
020A:3ECA  E8 3187				call	sub_93			; (7054)
020A:3ECD  BE 0000				mov	si,0
020A:3ED0  BB 291D				mov	bx,291Dh
020A:3ED3  B9 00FA				mov	cx,0FAh
020A:3ED6  32 D2				xor	dl,dl			; Zero register

020A:3ED8			locloop_385:
020A:3ED8  26: 8B 04				mov	ax,es:[si]
020A:3EDB  26: 89 07				mov	es:[bx],ax
020A:3EDE  3D FFFF				cmp	ax,0FFFFh
020A:3EE1  74 02				je	loc_386			; Jump if equal
020A:3EE3  FE C2				inc	dl
020A:3EE5			loc_386:
020A:3EE5  83 C6 15				add	si,15h
020A:3EE8  43					inc	bx
020A:3EE9  43					inc	bx
020A:3EEA  E2 EC				loop	locloop_385		; Loop if cx > 0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 127


020A:3EEC  88 16 3042				mov	byte ptr ds:[3042h],dl	; (020A:3042=38h)
020A:3EF0  80 3E 3031 04			cmp	data_288,4		; (020A:3031=45h)
020A:3EF5  75 1A				jne	loc_387			; Jump if not equal
020A:3EF7  FE 0E 3031				dec	data_288		; (020A:3031=45h)
020A:3EFB  BF 0000				mov	di,0
020A:3EFE  A0 3040				mov	al,data_298		; (020A:3040=33h)
020A:3F01  B4 15				mov	ah,15h
020A:3F03  F6 E4				mul	ah			; ax = reg * al
020A:3F05  8B C8				mov	cx,ax
020A:3F07  B0 FF				mov	al,0FFh
020A:3F09  FC					cld				; Clear direction
020A:3F0A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3F0C  C6 06 3040 00			mov	data_298,0		; (020A:3040=33h)
020A:3F11			loc_387:
020A:3F11  E8 3149				call	sub_95			; (705D)
020A:3F14  51					push	cx
020A:3F15  B4 2A				mov	ah,2Ah			; '*'
020A:3F17  E8 17A2				call	sub_58			; (56BC)
020A:3F1A  E8 140F				call	sub_48			; (532C)
020A:3F1D  59					pop	cx
020A:3F1E			loc_388:
020A:3F1E  C3					retn
							                        ;* No entry point to code
020A:3F1F  90					nop
020A:3F20  89 36 509E				mov	data_646,si		; (020A:509E=0BF78h)
020A:3F24  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:3F28  01 1E 509E				add	data_646,bx		; (020A:509E=0BF78h)
020A:3F2C  E8 FBB5				call	sub_38			; (3AE4)
020A:3F2F  72 2B				jc	loc_389			; Jump if carry Set
020A:3F31  89 16 35E9				mov	data_458,dx		; (020A:35E9=3C21h)
020A:3F35  89 16 35EB				mov	data_459,dx		; (020A:35EB=7500h)
020A:3F39  83 26 35EB E7			and	data_459,0FFE7h		; (020A:35EB=7500h)
020A:3F3E  88 36 53D4				mov	data_647,dh		; (020A:53D4=0C3h)
020A:3F42  F7 06 35E9 0002			test	data_458,2		; (020A:35E9=3C21h)
020A:3F48  74 17				jz	loc_390			; Jump if zero
020A:3F4A  BF 338A				mov	di,338Ah
020A:3F4D  83 EF 03				sub	di,3
020A:3F50  B9 0004				mov	cx,4
020A:3F53  2B F9				sub	di,cx
020A:3F55  B0 58				mov	al,58h			; 'X'
020A:3F57  FC					cld				; Clear direction
020A:3F58  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3F5A  EB 05				jmp	short loc_390		; (3F61)
020A:3F5C			loc_389:
020A:3F5C  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3F61			loc_390:
020A:3F61  C3					retn
							                        ;* No entry point to code
020A:3F62  87 DB				xchg	bx,bx
020A:3F64  80 3E 5614 01			cmp	byte ptr data_659,1	; (020A:5614=2Eh)
020A:3F69  75 07				jne	loc_391			; Jump if not equal
020A:3F6B  C6 06 4FD6 12			mov	byte ptr data_644,12h	; (020A:4FD6=34h)
020A:3F70  EB 2B				jmp	short loc_394		; (3F9D)
020A:3F72			loc_391:
020A:3F72  B4 01				mov	ah,1
020A:3F74  3C 46				cmp	al,46h			; 'F'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 128

020A:3F76  74 16				je	loc_392			; Jump if equal
020A:3F78  FE C4				inc	ah
020A:3F7A  3C 42				cmp	al,42h			; 'B'
020A:3F7C  74 10				je	loc_392			; Jump if equal
020A:3F7E  FE C4				inc	ah
020A:3F80  3C 44				cmp	al,44h			; 'D'
020A:3F82  74 0A				je	loc_392			; Jump if equal
020A:3F84  2C 31				sub	al,31h			; '1'
020A:3F86  3C 02				cmp	al,2
020A:3F88  77 0E				ja	loc_393			; Jump if above
020A:3F8A  FE C0				inc	al
020A:3F8C  8A E0				mov	ah,al
020A:3F8E			loc_392:
020A:3F8E  88 26 3031				mov	data_288,ah		; (020A:3031=45h)
020A:3F92  88 26 3032				mov	data_289,ah		; (020A:3032=52h)
020A:3F96  EB 05				jmp	short loc_394		; (3F9D)
020A:3F98			loc_393:
020A:3F98  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3F9D			loc_394:
020A:3F9D  C3					retn
							                        ;* No entry point to code
020A:3F9E  87 DB				xchg	bx,bx
020A:3FA0  32 E4				xor	ah,ah			; Zero register
020A:3FA2  3C 44				cmp	al,44h			; 'D'
020A:3FA4  74 1D				je	loc_395			; Jump if equal
020A:3FA6  FE C4				inc	ah
020A:3FA8  3C 5A				cmp	al,5Ah			; 'Z'
020A:3FAA  74 17				je	loc_395			; Jump if equal
020A:3FAC  FE C4				inc	ah
020A:3FAE  3C 53				cmp	al,53h			; 'S'
020A:3FB0  74 11				je	loc_395			; Jump if equal
020A:3FB2  FE C4				inc	ah
020A:3FB4  3C 4C				cmp	al,4Ch			; 'L'
020A:3FB6  74 0B				je	loc_395			; Jump if equal
020A:3FB8  3C 4E				cmp	al,4Eh			; 'N'
020A:3FBA  74 07				je	loc_395			; Jump if equal
020A:3FBC  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:3FC1  EB 0A				jmp	short loc_396		; (3FCD)
020A:3FC3			loc_395:
020A:3FC3  88 26 15D0				mov	data_161,ah		; (020A:15D0=0)
020A:3FC7  E8 1B9A				call	sub_67			; (5B64)
020A:3FCA  E8 0364				call	sub_42			; (4331)
020A:3FCD			loc_396:
020A:3FCD  C3					retn
							                        ;* No entry point to code
020A:3FCE  87 DB				xchg	bx,bx
020A:3FD0  3C 41				cmp	al,41h			; 'A'
020A:3FD2  75 07				jne	loc_397			; Jump if not equal
020A:3FD4  80 0E 30B2 80			or	data_352,80h		; (020A:30B2=4Fh)
020A:3FD9  EB 0E				jmp	short loc_398		; (3FE9)
020A:3FDB			loc_397:
020A:3FDB  80 26 30B2 7F			and	data_352,7Fh		; (020A:30B2=4Fh)
020A:3FE0  8A 44 01				mov	al,[si+1]
020A:3FE3  24 5F				and	al,5Fh			; '_'
020A:3FE5  3C 4E				cmp	al,4Eh			; 'N'
020A:3FE7  74 08				je	loc_399			; Jump if equal
020A:3FE9			loc_398:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 129

020A:3FE9  C6 06 30B0 00			mov	byte ptr ds:[30B0h],0	; (020A:30B0=2Eh)
020A:3FEE  E9 0256				jmp	loc_433			; (4247)
020A:3FF1			loc_399:
020A:3FF1  C6 06 30B0 01			mov	byte ptr ds:[30B0h],1	; (020A:30B0=2Eh)
020A:3FF6  E9 024E				jmp	loc_433			; (4247)
							                        ;* No entry point to code
020A:3FF9  87 DB				xchg	bx,bx
020A:3FFB  90					nop
020A:3FFC  A0 4E90				mov	al,data_641		; (020A:4E90=75h)
020A:3FFF  24 DF				and	al,0DFh
020A:4001  3C 41				cmp	al,41h			; 'A'
020A:4003  75 0D				jne	loc_400			; Jump if not equal
020A:4005  C6 06 35E3 01			mov	data_453,1		; (020A:35E3=1)
020A:400A  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:400E  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:4012			loc_400:
020A:4012  C3					retn
							                        ;* No entry point to code
020A:4013  90					nop
020A:4014  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:4018  83 FB 00				cmp	bx,0
020A:401B  75 08				jne	loc_401			; Jump if not equal
020A:401D  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:4022  E9 0090				jmp	loc_408			; (40B5)
020A:4025			loc_401:
020A:4025  FC					cld				; Clear direction
020A:4026  BF 3233				mov	di,3233h
020A:4029  B9 0029				mov	cx,29h
020A:402C  B0 00				mov	al,0
020A:402E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4030  BF 036A				mov	di,36Ah
020A:4033  B9 000C				mov	cx,0Ch
020A:4036  B0 20				mov	al,20h			; ' '
020A:4038  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:403A  BF 3233				mov	di,3233h
020A:403D  8B CB				mov	cx,bx

020A:403F			locloop_403:
020A:403F  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020A:4042  74 03				je	loc_404			; Jump if equal
020A:4044  A4					movsb				; Mov [si] to es:[di]
020A:4045  E2 F8				loop	locloop_403		; Loop if cx > 0

020A:4047			loc_404:
020A:4047  2B D9				sub	bx,cx
020A:4049  9A 14FC:26A0		;*		call	far ptr sub_177		;*(14FC:26A0)
020A:4049  9A					db	9Ah
020A:404A  26A0 14FC				dw	26A0h, 14FCh
020A:404E  83 C3 04				add	bx,4
020A:4051  47					inc	di
020A:4052  8B CB				mov	cx,bx
020A:4054			loc_405:
020A:4054  8A 05				mov	al,[di]
020A:4056  3C 3A				cmp	al,3Ah			; ':'
020A:4058  74 0D				je	loc_406			; Jump if equal
020A:405A  3C 5C				cmp	al,5Ch			; '\'
020A:405C  74 09				je	loc_406			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 130

020A:405E  83 F9 01				cmp	cx,1
020A:4061  76 06				jbe	loc_407			; Jump if below or =
020A:4063  49					dec	cx
020A:4064  4F					dec	di
020A:4065  EB ED				jmp	short loc_405		; (4054)
020A:4067			loc_406:
020A:4067  47					inc	di
020A:4068  41					inc	cx
020A:4069			loc_407:
020A:4069  2B D9				sub	bx,cx
020A:406B  8B CB				mov	cx,bx
020A:406D  41					inc	cx
020A:406E  83 F9 0C				cmp	cx,0Ch
020A:4071  77 42				ja	loc_408			; Jump if above
020A:4073  8B F7				mov	si,di
020A:4075  BF 036A				mov	di,36Ah
020A:4078  FC					cld				; Clear direction
020A:4079  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:407B  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='OCUME 1\ADMINI 1') ':'
020A:4080  75 33				jne	loc_408			; Jump if not equal
020A:4082  A0 3233				mov	al,data_375		; (020A:3233=44h)
020A:4085  24 5F				and	al,5Fh			; '_'
020A:4087  3C 41				cmp	al,41h			; 'A'
020A:4089  72 2A				jb	loc_408			; Jump if below
020A:408B  3C 5A				cmp	al,5Ah			; 'Z'
020A:408D  77 26				ja	loc_408			; Jump if above
020A:408F  8A D0				mov	dl,al
020A:4091  80 EA 41				sub	dl,41h			; 'A'
020A:4094  8A DA				mov	bl,dl
020A:4096  B4 19				mov	ah,19h
020A:4098  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:409A  50					push	ax
020A:409B  B4 0E				mov	ah,0Eh
020A:409D  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:409F  B4 19				mov	ah,19h
020A:40A1  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:40A3  A2 30CE				mov	byte ptr data_369,al	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:40A6  04 61				add	al,61h			; 'a'
020A:40A8  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:40AB  E8 13F2				call	sub_54			; (54A0)
020A:40AE  58					pop	ax
020A:40AF  8A D0				mov	dl,al
020A:40B1  B4 0E				mov	ah,0Eh
020A:40B3  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:40B5			loc_408:
020A:40B5  C3					retn
							                        ;* No entry point to code
020A:40B6  87 DB				xchg	bx,bx
020A:40B8  2C 32				sub	al,32h			; '2'
020A:40BA  3C 07				cmp	al,7
020A:40BC  77 0E				ja	loc_409			; Jump if above
020A:40BE  04 02				add	al,2
020A:40C0  D0 E0				shl	al,1			; Shift w/zeros fill
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 131

020A:40C2  E8 1D77				call	sub_75			; (5E3C)
020A:40C5  C6 06 2B38 01			mov	data_240,1		; (020A:2B38=44h)
020A:40CA  EB 05				jmp	short loc_410		; (40D1)
020A:40CC			loc_409:
020A:40CC  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:40D1			loc_410:
020A:40D1  C3					retn
							                        ;* No entry point to code
020A:40D2  87 DB				xchg	bx,bx
020A:40D4  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:40D8  32 E4				xor	ah,ah			; Zero register
020A:40DA  3C 4E				cmp	al,4Eh			; 'N'
020A:40DC  74 3E				je	loc_412			; Jump if equal
020A:40DE  FE C4				inc	ah
020A:40E0  3C 44				cmp	al,44h			; 'D'
020A:40E2  3874			data_514	dw	3874h
020A:40E4  C4FE			data_515	dw	0C4FEh
020A:40E6  3C			data_516	db	3Ch
020A:40E7  7449			data_517	dw	7449h
020A:40E9  B432			data_518	dw	0B432h
020A:40EB  04 3C				add	al,3Ch			; '<'
020A:40ED  744F			data_519	dw	744Fh
020A:40EF  B42C			data_520	dw	0B42Ch
020A:40F1  3C07			data_521	dw	3C07h
020A:40F3  7441			data_522	dw	7441h
020A:40F5  3C26			data_523	dw	3C26h
020A:40F7  7545			data_524	dw	7545h
020A:40F9  462B			data_525	dw	462Bh
020A:40FB  744B			data_526	dw	744Bh
020A:40FD  8027			data_527	dw	8027h
020A:40FF  203C			data_528	dw	203Ch
020A:4101  F775			data_530	dw	0F775h
020A:4103  46			data_531	db	46h
020A:4104  4B					dec	bx
020A:4105  74 1E				jz	loc_413			; Jump if zero
020A:4107  B4 06				mov	ah,6
020A:4109  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020A:410C  74 0E				je	loc_412			; Jump if equal
020A:410E  FE CC				dec	ah
020A:4110  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020A:4113  74 07				je	loc_412			; Jump if equal
020A:4115  B4 03				mov	ah,3
020A:4117  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020A:411A  75 09				jne	loc_413			; Jump if not equal
020A:411C			loc_412:
020A:411C  88 26 16AB				mov	data_166,ah		; (020A:16AB=41h)
020A:4120  E8 1ACD				call	sub_68			; (5BF0)
020A:4123  EB 05				jmp	short loc_414		; (412A)
020A:4125			loc_413:
020A:4125  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:412A			loc_414:
020A:412A  C3					retn
							                        ;* No entry point to code
020A:412B  90					nop
020A:412C  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:4131  74 28				je	loc_417			; Jump if equal
020A:4133  8A E0				mov	ah,al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 132

020A:4135  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:4138  74 1A				je	loc_416			; Jump if equal
020A:413A  C6 06 35E4 01			mov	data_454,1		; (020A:35E4=74h)
020A:413F  B0 01				mov	al,1
020A:4141  80 FC 4E				cmp	ah,4Eh			; 'N'
020A:4144  74 07				je	loc_415			; Jump if equal
020A:4146  80 0E 35E4 02			or	data_454,2		; (020A:35E4=74h)
020A:414B  EB 0E				jmp	short loc_417		; (415B)
020A:414D			loc_415:
020A:414D  80 0E 35E4 08			or	data_454,8		; (020A:35E4=74h)
020A:4152  07EB			data_533	dw	7EBh
020A:4154			loc_416:
020A:4154  80 26 35E4 FE			and	data_454,0FEh		; (020A:35E4=74h)
020A:4159  32 C0				xor	al,al			; Zero register
020A:415B			loc_417:
020A:415B  C3					retn
							                        ;* No entry point to code
020A:415C  BF 13E8				mov	di,13E8h
020A:415F  8A 05				mov	al,[di]
020A:4161  A2 13E4				mov	data_154,al		; (020A:13E4=0)
020A:4164  33 ED				xor	bp,bp			; Zero register
020A:4166  8D 55 0B				lea	dx,[di+0Bh]		; Load effective addr
020A:4169  8D 4D 01				lea	cx,[di+1]		; Load effective addr
020A:416C  2B D1				sub	dx,cx
020A:416E  8B CA				mov	cx,dx
020A:4170  33 DB				xor	bx,bx			; Zero register
020A:4172  56					push	si

020A:4173			locloop_418:
020A:4173  8A 04				mov	al,[si]
020A:4175  3C 00				cmp	al,0
020A:4177  74 3E				je	loc_423			; Jump if equal
020A:4179  3C 20				cmp	al,20h			; ' '
020A:417B  74 04				je	loc_419			; Jump if equal
020A:417D  3C 09				cmp	al,9
020A:417F  75 03				jne	loc_420			; Jump if not equal
020A:4181			loc_419:
020A:4181  46					inc	si
020A:4182  EB EF				jmp	short locloop_418	; (4173)
020A:4184			loc_420:
020A:4184  81 39 582E				cmp	word ptr [bx+di],582Eh
020A:4188  75 0B				jne	loc_421			; Jump if not equal
020A:418A  3C 30				cmp	al,30h			; '0'
020A:418C  72 18				jb	loc_422			; Jump if below
020A:418E  3C 39				cmp	al,39h			; '9'
020A:4190  77 03				ja	loc_421			; Jump if above
020A:4192  46					inc	si
020A:4193  EB 28				jmp	short loc_424		; (41BD)
020A:4195			loc_421:
020A:4195  38 41 01				cmp	[bx+di+1],al
020A:4198  75 0C				jne	loc_422			; Jump if not equal
020A:419A  43					inc	bx
020A:419B  46					inc	si
020A:419C  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020A:41A0  74 1B				je	loc_424			; Jump if equal
020A:41A2  E2 CF				loop	locloop_418		; Loop if cx > 0

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 133

020A:41A4  E3 17				jcxz	loc_424			; Jump if cx=0
020A:41A6			loc_422:
020A:41A6  5E					pop	si
020A:41A7  56					push	si
020A:41A8  45					inc	bp
020A:41A9  83 FD 0D				cmp	bp,0Dh
020A:41AC  73 09				jae	loc_423			; Jump if above or =
020A:41AE  8B CA				mov	cx,dx
020A:41B0  83 C7 10				add	di,10h
020A:41B3  33 DB				xor	bx,bx			; Zero register
020A:41B5  EB BC				jmp	short locloop_418	; (4173)
020A:41B7			loc_423:
020A:41B7  5E					pop	si
020A:41B8  B4 36				mov	ah,36h			; '6'
020A:41BA  E9 2A3B				jmp	loc_941			; (6BF8)
020A:41BD			loc_424:
020A:41BD  8A 45 0D				mov	al,[di+0Dh]
020A:41C0  A2 13E5				mov	data_155,al		; (020A:13E5=0)
020A:41C3  8A 05				mov	al,[di]
020A:41C5  A2 13E4				mov	data_154,al		; (020A:13E4=0)
020A:41C8  8B 45 0B				mov	ax,[di+0Bh]
020A:41CB  A3 13E6				mov	data_156,ax		; (020A:13E6=0)
020A:41CE			loc_425:
020A:41CE  8A 04				mov	al,[si]
020A:41D0  3C 00				cmp	al,0
020A:41D2  74 26				je	loc_428			; Jump if equal
020A:41D4  3C 2C				cmp	al,2Ch			; ','
020A:41D6  74 03				je	loc_426			; Jump if equal
020A:41D8  46					inc	si
020A:41D9  EB F3				jmp	short loc_425		; (41CE)
020A:41DB			loc_426:
020A:41DB  8A 04				mov	al,[si]
020A:41DD  3C 00				cmp	al,0
020A:41DF  74 19				je	loc_428			; Jump if equal
020A:41E1  B4 80				mov	ah,80h
020A:41E3  3C 46				cmp	al,46h			; 'F'
020A:41E5  74 0F				je	loc_427			; Jump if equal
020A:41E7  FE C4				inc	ah
020A:41E9  3C 53				cmp	al,53h			; 'S'
020A:41EB  74 09				je	loc_427			; Jump if equal
020A:41ED  FE C4				inc	ah
020A:41EF  3C 42				cmp	al,42h			; 'B'
020A:41F1  74 03				je	loc_427			; Jump if equal
020A:41F3  46					inc	si
020A:41F4  EB E5				jmp	short loc_426		; (41DB)
020A:41F6			loc_427:
020A:41F6  88 26 14FA				mov	data_157,ah		; (020A:14FA=0)
020A:41FA			loc_428:
020A:41FA  9A 14FC:2B34		;*		call	far ptr sub_183		;*(14FC:2B34)
020A:41FA  9A					db	9Ah
020A:41FB  2B34 14FC				dw	2B34h, 14FCh
020A:41FF  E8 1142				call	sub_49			; (5344)
020A:4202  5E					pop	si
020A:4203  C3					retn
							                        ;* No entry point to code
020A:4204  8B 04				mov	ax,[si]
020A:4206  8A 5C 02				mov	bl,[si+2]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 134

020A:4209  BF 4F96				mov	di,4F96h
020A:420C			loc_429:
020A:420C  3B 05				cmp	ax,[di]
020A:420E  75 05				jne	loc_430			; Jump if not equal
020A:4210  3A 5D 02				cmp	bl,[di+2]
020A:4213  74 10				je	loc_431			; Jump if equal
020A:4215			loc_430:
020A:4215  83 C7 04				add	di,4
020A:4218  81 FF 4FD6				cmp	di,4FD6h
020A:421C  72 EE				jb	loc_429			; Jump if below
020A:421E  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:4223  EB 5E				jmp	short loc_437		; (4283)
020A:4225			loc_431:
020A:4225  8A 45 03				mov	al,[di+3]
020A:4228  3C F1				cmp	al,0F1h
020A:422A  74 57				je	loc_437			; Jump if equal
020A:422C  8A 36 30A0				mov	dh,data_348		; (020A:30A0=33h)
020A:4230  3C F2				cmp	al,0F2h
020A:4232  75 09				jne	loc_432			; Jump if not equal
020A:4234  A0 30A1				mov	al,data_349		; (020A:30A1=32h)
020A:4237  A8 F0				test	al,0F0h
020A:4239  74 02				jz	loc_432			; Jump if zero
020A:423B  0C 08				or	al,8
020A:423D			loc_432:
020A:423D  A2 30A0				mov	data_348,al		; (020A:30A0=33h)
020A:4240  C6 06 30B0 00			mov	byte ptr ds:[30B0h],0	; (020A:30B0=2Eh)
020A:4245  EB 25				jmp	short loc_435		; (426C)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_41		proc	near
020A:4247			loc_433:
020A:4247  A0 30A0				mov	al,data_348		; (020A:30A0=33h)
020A:424A  F6 06 30B0 1F			test	byte ptr ds:[30B0h],1Fh	; (020A:30B0=2Eh)
020A:424F  74 1B				jz	loc_435			; Jump if zero
020A:4251  C6 06 30B0 01			mov	byte ptr ds:[30B0h],1	; (020A:30B0=2Eh)
020A:4256  10A8					dw	10A8h
020A:4258  74 07				jz	loc_434			; Jump if zero
020A:425A  C6 06 30B0 02			mov	byte ptr ds:[30B0h],2	; (020A:30B0=2Eh)
020A:425F  EB 1D				jmp	short loc_436		; (427E)
020A:4261			loc_434:
020A:4261  A8 20				test	al,20h			; ' '
020A:4263  74 07				jz	loc_435			; Jump if zero
020A:4265  C6 06 30B0 04			mov	byte ptr ds:[30B0h],4	; (020A:30B0=2Eh)
020A:426A  EB 12				jmp	short loc_436		; (427E)
020A:426C			loc_435:
020A:426C  A8 C0				test	al,0C0h
020A:426E  74 0E				jz	loc_436			; Jump if zero
020A:4270  C6 06 30B0 0C			mov	byte ptr ds:[30B0h],0Ch	; (020A:30B0=2Eh)
020A:4275  A8 80				test	al,80h
020A:4277  74 05				jz	loc_436			; Jump if zero
020A:4279  C6 06 30B0 14			mov	byte ptr ds:[30B0h],14h	; (020A:30B0=2Eh)
020A:427E			loc_436:
020A:427E  B6 01				mov	dh,1
020A:4280  E8 12D5				call	sub_55			; (5558)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 135

020A:4283			loc_437:
020A:4283  C3					retn
				sub_41		endp

							                        ;* No entry point to code
020A:4284  55					push	bp
020A:4285  8B 2E 4F94				mov	bp,data_643		; (020A:4F94=0FC07h)
020A:4289  33 DB				xor	bx,bx			; Zero register
020A:428B  32 C9				xor	cl,cl			; Zero register
020A:428D  8A 1C				mov	bl,[si]
020A:428F  80 EB 30				sub	bl,30h			; '0'
020A:4292  80 FB 09				cmp	bl,9
020A:4295  76 03				jbe	loc_438			; Jump if below or =
020A:4297  E9 008F				jmp	loc_445			; (4329)
020A:429A			loc_438:
020A:429A  8A C3				mov	al,bl
020A:429C  46					inc	si
020A:429D  4D					dec	bp
020A:429E  FE C1				inc	cl
020A:42A0  8A 1C				mov	bl,[si]
020A:42A2  80 EB 30				sub	bl,30h			; '0'
020A:42A5  80 FB 09				cmp	bl,9
020A:42A8  76 04				jbe	loc_439			; Jump if below or =
020A:42AA  8A D8				mov	bl,al
020A:42AC  EB 22				jmp	short loc_440		; (42D0)
020A:42AE			loc_439:
020A:42AE  B5 0A				mov	ch,0Ah
020A:42B0  F6 E5				mul	ch			; ax = reg * al
020A:42B2  03 D8				add	bx,ax
020A:42B4  46					inc	si
020A:42B5  4D					dec	bp
020A:42B6  FE C1				inc	cl
020A:42B8  8A 14				mov	dl,[si]
020A:42BA  80 EA 30				sub	dl,30h			; '0'
020A:42BD  80 FA 09				cmp	dl,9
020A:42C0  77 0E				ja	loc_440			; Jump if above
020A:42C2  46					inc	si
020A:42C3  4D					dec	bp
020A:42C4  FE C1				inc	cl
020A:42C6  8B C3				mov	ax,bx
020A:42C8  F6 E5				mul	ch			; ax = reg * al
020A:42CA  32 F6				xor	dh,dh			; Zero register
020A:42CC  03 C2				add	ax,dx
020A:42CE  8B D8				mov	bx,ax
020A:42D0			loc_440:
020A:42D0  83 FB 00				cmp	bx,0
020A:42D3  74 0B				je	loc_441			; Jump if equal
020A:42D5  83 FB 0A				cmp	bx,0Ah
020A:42D8  72 4F				jb	loc_445			; Jump if below
020A:42DA  81 FB 00FF				cmp	bx,0FFh
020A:42DE  77 49				ja	loc_445			; Jump if above
020A:42E0			loc_441:
020A:42E0  88 1E 35E8				mov	data_457,bl		; (020A:35E8=0CDh)
020A:42E4  80 FB 00				cmp	bl,0
020A:42E7  74 11				je	loc_442			; Jump if equal
020A:42E9  BF 5ABD				mov	di,5ABDh
020A:42EC  C7 45 FF 2020			mov	word ptr [di-1],2020h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 136

020A:42F1  56					push	si
020A:42F2  4E					dec	si
020A:42F3  32 ED				xor	ch,ch			; Zero register
020A:42F5  FD					std				; Set direction flag
020A:42F6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:42F8  FC					cld				; Clear direction
020A:42F9  5E					pop	si
020A:42FA			loc_442:
020A:42FA  83 FD 02				cmp	bp,2
020A:42FD  72 2A				jb	loc_445			; Jump if below
020A:42FF  83 FD 32				cmp	bp,32h
020A:4302  77 25				ja	loc_445			; Jump if above
020A:4304			loc_443:
020A:4304  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:4307  74 06				je	loc_444			; Jump if equal
020A:4309  4D					dec	bp
020A:430A  74 1D				jz	loc_445			; Jump if zero
020A:430C  46					inc	si
020A:430D  EB F5				jmp	short loc_443		; (4304)
020A:430F			loc_444:
020A:430F  46					inc	si
020A:4310  4D					dec	bp
020A:4311  74 16				jz	loc_445			; Jump if zero
020A:4313  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4316  74 F7				je	loc_444			; Jump if equal
020A:4318  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020A:431B  75 0C				jne	loc_445			; Jump if not equal
020A:431D  46					inc	si
020A:431E  8A 04				mov	al,[si]
020A:4320  2C 30				sub	al,30h			; '0'
020A:4322  3C 07				cmp	al,7
020A:4324  77 03				ja	loc_445			; Jump if above
020A:4326  A2 35E1				mov	data_451,al		; (020A:35E1=98h)
020A:4329			loc_445:
020A:4329  5D					pop	bp
020A:432A  C3					retn
							                        ;* No entry point to code
020A:432B  90					nop
020A:432C  C6 06 35DF 00			mov	data_450,0		; (020A:35DF=80h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_42		proc	near
020A:4331  BE 03D0				mov	si,3D0h
020A:4334  BA 0003				mov	dx,3
020A:4337			loc_446:
020A:4337  B9 0016				mov	cx,16h
020A:433A  E8 1EAF				call	sub_77			; (61EC)
020A:433D  83 C6 3A				add	si,3Ah
020A:4340  4A					dec	dx
020A:4341  75 F4				jnz	loc_446			; Jump if not zero
020A:4343  B9 3BCD				mov	cx,3BCDh
020A:4346  81 E9 3634				sub	cx,3634h
020A:434A  BE 3634				mov	si,3634h
020A:434D  E8 1E9C				call	sub_77			; (61EC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 137

020A:4350  B9 5FF9				mov	cx,5FF9h
020A:4353  81 E9 5BA8				sub	cx,5BA8h
020A:4357  BE 5BA8				mov	si,5BA8h
020A:435A  E8 1E8F				call	sub_77			; (61EC)
020A:435D  C3					retn
				sub_42		endp

							                        ;* No entry point to code
020A:435E  87 DB				xchg	bx,bx
020A:4360  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:4364  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:4369  74 35				je	loc_450			; Jump if equal
020A:436B  83 FB 02				cmp	bx,2
020A:436E  72 0F				jb	loc_447			; Jump if below
020A:4370  8A 44 01				mov	al,[si+1]
020A:4373  B3 07				mov	bl,7
020A:4375  3C 4E				cmp	al,4Eh			; 'N'
020A:4377  74 0D				je	loc_448			; Jump if equal
020A:4379  32 DB				xor	bl,bl			; Zero register
020A:437B  3C 46				cmp	al,46h			; 'F'
020A:437D  74 07				je	loc_448			; Jump if equal
020A:437F			loc_447:
020A:437F  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:4384  EB 1A				jmp	short loc_450		; (43A0)
020A:4386			loc_448:
020A:4386  88 1E 4E7F				mov	data_633,bl		; (020A:4E7F=0E8h)
020A:438A  80 FB 00				cmp	bl,0
020A:438D  74 0E				je	loc_449			; Jump if equal
020A:438F  80			data_535	db	80h
020A:4390  3E: 3B 2B				cmp	bp,ds:[bp+di]
020A:4393  0A 73 0A				or	dh,[bp+di+0Ah]
020A:4396  B0 0A				mov	al,0Ah
020A:4398  E8 1AA1				call	sub_75			; (5E3C)
020A:439B  03EB			data_541	dw	3EBh
020A:439D			loc_449:
020A:439D  E8			data_542	db	0E8h
020A:439E  1774			data_543	dw	1774h
020A:43A0			loc_450:
020A:43A0  C3			data_544	db	0C3h
020A:43A1  87			data_545	db	87h
020A:43A2  DB					db	0DBh
020A:43A3  90					nop
020A:43A4  89 36 509E				mov	data_646,si		; (020A:509E=0BF78h)
020A:43A8  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:43AC  01 1E 509E				add	data_646,bx		; (020A:509E=0BF78h)
020A:43B0  E8 F731				call	sub_38			; (3AE4)
020A:43B3  72 02				jc	loc_451			; Jump if carry Set
020A:43B5  EB 05				jmp	short loc_452		; (43BC)
020A:43B7			loc_451:
020A:43B7  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
020A:43BC			loc_452:
020A:43BC  C3					retn
							                        ;* No entry point to code
020A:43BD  87 DB				xchg	bx,bx
020A:43BF  90					nop
020A:43C0  C6 06 2BE6 00			mov	data_253,0		; (020A:2BE6=72h)
020A:43C5  80 3E 5614 01			cmp	byte ptr data_659,1	; (020A:5614=2Eh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 138

020A:43CA  75 08				jne	loc_453			; Jump if not equal
020A:43CC  C6 06 4FD6 12			mov	byte ptr data_644,12h	; (020A:4FD6=34h)
020A:43D1  E9 0082				jmp	loc_462			; (4456)
020A:43D4			loc_453:
020A:43D4  89 36 509E				mov	data_646,si		; (020A:509E=0BF78h)
020A:43D8  8B 1E 4F94				mov	bx,data_643		; (020A:4F94=0FC07h)
020A:43DC  01 1E 509E				add	data_646,bx		; (020A:509E=0BF78h)
020A:43E0  33 DB				xor	bx,bx			; Zero register
020A:43E2  81 3C 5856				cmp	word ptr [si],5856h
020A:43E6  75 08				jne	loc_454			; Jump if not equal
020A:43E8  83 C6 03				add	si,3
020A:43EB  C6 06 2BE6 01			mov	data_253,1		; (020A:2BE6=72h)
020A:43F0			loc_454:
020A:43F0  E8 F6F1				call	sub_38			; (3AE4)
020A:43F3  72 5C				jc	loc_461			; Jump if carry Set
020A:43F5  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:43F8  75 17				jne	loc_457			; Jump if not equal
020A:43FA  46					inc	si
020A:43FB  80 3E 2BE6 01			cmp	data_253,1		; (020A:2BE6=72h)
020A:4400  75 06				jne	loc_455			; Jump if not equal
020A:4402  89 16 2C0F				mov	data_258,dx		; (020A:2C0F=505Fh)
020A:4406  EB 04				jmp	short loc_456		; (440C)
020A:4408			loc_455:
020A:4408  89 97 2BE7				mov	data_254[bx],dx		; (020A:2BE7=4C00h)
020A:440C			loc_456:
020A:440C  E8 F6D5				call	sub_38			; (3AE4)
020A:440F  72 40				jc	loc_461			; Jump if carry Set
020A:4411			loc_457:
020A:4411  80 3E 2BE6 01			cmp	data_253,1		; (020A:2BE6=72h)
020A:4416  75 06				jne	loc_458			; Jump if not equal
020A:4418  89 16 2C11				mov	data_259,dx		; (020A:2C11=4F52h)
020A:441C  EB 2D				jmp	short loc_460		; (444B)
020A:441E			loc_458:
020A:441E  89 97 2BE9				mov	data_255[bx],dx		; (020A:2BE9=474Fh)
020A:4422  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:4425  75 24				jne	loc_460			; Jump if not equal
020A:4427  46					inc	si
020A:4428  E8 F6B9				call	sub_38			; (3AE4)
020A:442B  72 24				jc	loc_461			; Jump if carry Set
020A:442D  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:4430  75 0A				jne	loc_459			; Jump if not equal
020A:4432  46					inc	si
020A:4433  89 97 2BEB				mov	data_256[bx],dx		; (020A:2BEB=4E4Fh)
020A:4437  E8 F6AA				call	sub_38			; (3AE4)
020A:443A  72 15				jc	loc_461			; Jump if carry Set
020A:443C			loc_459:
020A:443C  89 97 2BED				mov	data_257[bx],dx		; (020A:2BED=4553h)
020A:4440  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020A:4443  75 06				jne	loc_460			; Jump if not equal
020A:4445  46					inc	si
020A:4446  83 C3 08				add	bx,8
020A:4449  EB A5				jmp	short loc_454		; (43F0)
020A:444B			loc_460:
020A:444B  FE 06 2BE6				inc	data_253		; (020A:2BE6=72h)
020A:444F  EB 05				jmp	short loc_462		; (4456)
020A:4451			loc_461:
020A:4451  C6 06 4FD6 09			mov	byte ptr data_644,9	; (020A:4FD6=34h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 139

020A:4456			loc_462:
020A:4456  C3					retn
							                        ;* No entry point to code
020A:4457  90					nop
020A:4458  2C 30				sub	al,30h			; '0'
020A:445A  3C 7F				cmp	al,7Fh
020A:445C  77 03				ja	loc_463			; Jump if above
020A:445E  A2 35D3				mov	data_442,al		; (020A:35D3=0C6h)
020A:4461			loc_463:
020A:4461  C3					retn
020A:4462  000E[00]				db	14 dup (0)
020A:4470			loc_464:
020A:4470  BE 4E43				mov	si,4E43h
020A:4473  80 3E 327D 00			cmp	byte ptr ds:[327Dh],0	; (020A:327D=1Eh)
020A:4478  74 03				je	loc_465			; Jump if equal
020A:447A  E9 F140				jmp	loc_282			; (35BD)
020A:447D			loc_465:
020A:447D  B6 01				mov	dh,1
020A:447F  B2 37				mov	dl,37h			; '7'
020A:4481  E8 7640				call	sub_144			; (BAC4)
020A:4484  0A F6				or	dh,dh			; Zero ?
020A:4486  74 09				jz	loc_466			; Jump if zero
020A:4488  83 4C D6 04				or	word ptr [si-2Ah],4
020A:448C  B2 25				mov	dl,25h			; '%'
020A:448E  E8 7633				call	sub_144			; (BAC4)
020A:4491			loc_466:
020A:4491  A1 4E22				mov	ax,data_591		; (020A:4E22=0EDA3h)
020A:4494  A3 4E1C				mov	data_588,ax		; (020A:4E1C=750Dh)
020A:4497  A1 4E24				mov	ax,data_592		; (020A:4E24=0A107h)
020A:449A  A3 4E1E				mov	data_589,ax		; (020A:4E1E=0A119h)
020A:449D  F7 06 4E22 0002			test	data_591,2		; (020A:4E22=0EDA3h)
020A:44A3  74 07				jz	loc_467			; Jump if zero
020A:44A5  B0 01				mov	al,1
020A:44A7  9A 14FC:45B8		;*		call	far ptr sub_212		;*(14FC:45B8)
020A:44A7  9A					db	9Ah
020A:44A8  45B8 14FC				dw	45B8h, 14FCh
020A:44AC			loc_467:
020A:44AC  8A 16 30CE				mov	dl,byte ptr data_369	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:44B0  80 C2 61				add	dl,61h			; 'a'
020A:44B3  88 16 3231				mov	byte ptr ds:[3231h],dl	; (020A:3231=3Ah)
020A:44B7  BA 4355				mov	dx,4355h
020A:44BA  B4 1A				mov	ah,1Ah
020A:44BC  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA(disk xfer area) ds:dx
020A:44BE  BA 3233				mov	dx,3233h
020A:44C1  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='OCUME 1\ADMINI 1') ':'
020A:44C6  74 03				je	loc_468			; Jump if equal
020A:44C8  BA 3231				mov	dx,3231h
020A:44CB			loc_468:
020A:44CB  B9 0000				mov	cx,0
020A:44CE  B4 4E				mov	ah,4Eh
020A:44D0  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:44D2  72 53				jc	loc_471			; Jump if carry Set
020A:44D4  E8 1189				call	sub_56			; (5660)
020A:44D7  A0 1208				mov	al,data_142		; (020A:1208=0)
020A:44DA  88 47 52				mov	[bx+52h],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 140

020A:44DD  B4 19				mov	ah,19h
020A:44DF  E8 11DA				call	sub_58			; (56BC)
020A:44E2  E8 0D0B				call	sub_46			; (51F0)
020A:44E5  B4 02				mov	ah,2
020A:44E7  32 FF				xor	bh,bh			; Zero register
020A:44E9  BA 174B				mov	dx,174Bh
020A:44EC  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:44EC  9A					db	9Ah
020A:44ED  2BA8 14FC				dw	2BA8h, 14FCh
020A:44F1  E8 158C				call	sub_64			; (5A80)
020A:44F4			loc_469:
020A:44F4  F7 06 35E9 0004			test	data_458,4		; (020A:35E9=3C21h)
020A:44FA  75 2B				jnz	loc_471			; Jump if not zero
020A:44FC  609A			data_548	dw	609Ah
020A:44FE  07					pop	es
020A:44FF  FC					cld				; Clear direction
020A:4500  14 24				adc	al,24h			; '$'
020A:4502  DF					db	0DFh
020A:4503  3C 59				cmp	al,59h			; 'Y'
020A:4505  74 20				je	loc_471			; Jump if equal
020A:4507  3C 4E				cmp	al,4Eh			; 'N'
020A:4509  74 07				je	loc_470			; Jump if equal
020A:450B  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:450B  9A					db	9Ah
020A:450C  2B10 14FC				dw	2B10h, 14FCh
020A:4510  EB E2				jmp	short loc_469		; (44F4)
020A:4512			loc_470:
020A:4512  8A 16 30CD				mov	dl,data_368		; (020A:30CD=3Bh)
020A:4516  B4 0E				mov	ah,0Eh
020A:4518  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:451A  E8 1557				call	sub_63			; (5A74)
020A:451D  E8 1168				call	sub_57			; (5688)
020A:4520  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4524  E9 F096				jmp	loc_282			; (35BD)
020A:4527			loc_471:
020A:4527  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:452B  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:452F  E8 1542				call	sub_63			; (5A74)
020A:4532  E8 2B28				call	sub_95			; (705D)
020A:4535  B9 000C				mov	cx,0Ch
020A:4538  BE 036A				mov	si,36Ah
020A:453B  BF 3346				mov	di,3346h

020A:453E			locloop_472:
020A:453E  80 3C 00				cmp	byte ptr [si],0
020A:4541  74 09				je	loc_473			; Jump if equal
020A:4543  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4546  74 04				je	loc_473			; Jump if equal
020A:4548  FC					cld				; Clear direction
020A:4549  A4					movsb				; Mov [si] to es:[di]
020A:454A  E2 F2				loop	locloop_472		; Loop if cx > 0

020A:454C			loc_473:
020A:454C  BB 4DEB				mov	bx,4DEBh
020A:454F  B9 0020				mov	cx,20h
020A:4552  BE 0378				mov	si,378h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 141

020A:4555  BF 3356				mov	di,3356h
020A:4558  FC					cld				; Clear direction
020A:4559  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:455B  F7 47 2E 0002			test	word ptr [bx+2Eh],2
020A:4560  74 03				jz	loc_474			; Jump if zero
020A:4562  E9 2617				jmp	loc_935			; (6B7C)
020A:4565			loc_474:
020A:4565  F7 06 4E24 0020			test	data_592,20h		; (020A:4E24=0A107h)
020A:456B  75 0A				jnz	loc_475			; Jump if not zero
020A:456D  C6 06 6822 2A			mov	byte ptr data_694,2Ah	; (020A:6822=2Eh) '*'
020A:4572  C6 06 6A59 2A			mov	byte ptr data_696,2Ah	; (020A:6A59=0F6h) '*'
020A:4577			loc_475:
020A:4577  83 3E 3037 00			cmp	data_292,0		; (020A:3037=4D44h)
020A:457C  75 44				jne	loc_478			; Jump if not equal
020A:457E  8B 1E 2B3D				mov	bx,data_244		; (020A:2B3D=7E45h)
020A:4582  8C C8				mov	ax,cs
020A:4584  2D 0010				sub	ax,10h
020A:4587  06					push	es
020A:4588  8E C0				mov	es,ax
020A:458A  B4 4A				mov	ah,4Ah
020A:458C  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:458E  07					pop	es
020A:458F  73 06				jnc	loc_476			; Jump if carry=0
020A:4591  B8 0008				mov	ax,8
020A:4594  E9 256C				jmp	loc_928			; (6B03)
020A:4597			loc_476:
020A:4597  E8 2ADE				call	sub_99			; (7078)
020A:459A  8C CB				mov	bx,cs
020A:459C  83 EB 10				sub	bx,10h
020A:459F  2B C3				sub	ax,bx
020A:45A1  8B 1E 2B3D				mov	bx,data_244		; (020A:2B3D=7E45h)
020A:45A5  2B D8				sub	bx,ax
020A:45A7  B9 FFFF				mov	cx,0FFFFh
020A:45AA  81 FB 1000				cmp	bx,1000h
020A:45AE  73 0A				jae	loc_477			; Jump if above or =
020A:45B0  8B CB				mov	cx,bx
020A:45B2  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45B4  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45B6  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45B8  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45BA			loc_477:
020A:45BA  89 0E 4E82				mov	data_635,cx		; (020A:4E82=38E9h)
020A:45BE  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:45C0  EB 26				jmp	short loc_480		; (45E8)
020A:45C2			loc_478:
020A:45C2  E8 2A9B				call	sub_96			; (7060)
020A:45C5  8C C0				mov	ax,es
020A:45C7  8B 0E 3037				mov	cx,data_292		; (020A:3037=4D44h)
020A:45CB  2B C8				sub	cx,ax
020A:45CD  81 F9 1000				cmp	cx,1000h
020A:45D1  76 03				jbe	loc_479			; Jump if below or =
020A:45D3  B9 1000				mov	cx,1000h
020A:45D6			loc_479:
020A:45D6  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45D8  D1 E1				shl	cx,1			; Shift w/zeros fill
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 142

020A:45DA  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:45DC  89 0E 4E82				mov	data_635,cx		; (020A:4E82=38E9h)
020A:45E0  FF 0E 4E82				dec	data_635		; (020A:4E82=38E9h)
020A:45E4  D1 26 4E82				shl	data_635,1		; (020A:4E82=38E9h) Shift w/zeros fill
020A:45E8			loc_480:
020A:45E8  E8 2A75				call	sub_96			; (7060)
020A:45EB  B8 FFFF				mov	ax,0FFFFh
020A:45EE  33 FF				xor	di,di			; Zero register
020A:45F0  FC					cld				; Clear direction
020A:45F1  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:45F3  E8 2A67				call	sub_95			; (705D)
020A:45F6  B4 2C				mov	ah,2Ch
020A:45F8  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:45FA  89 0E 4E73				mov	data_631,cx		; (020A:4E73=1689h)
020A:45FE  89 16 4E75				mov	data_632,dx		; (020A:4E75=35D7h)
020A:4602  E8 105B				call	sub_56			; (5660)
020A:4605  A0 1207				mov	al,data_141		; (020A:1207=0)
020A:4608  88 47 4C				mov	[bx+4Ch],al
020A:460B  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020A:460F  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020A:4613  C6 47 40 00				mov	byte ptr [bx+40h],0
020A:4617  C6 47 56 00				mov	byte ptr [bx+56h],0
020A:461B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:461F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:4623  C6 47 72 00				mov	byte ptr [bx+72h],0
020A:4627  C6 47 73 00				mov	byte ptr [bx+73h],0
020A:462B  C6 47 74 00				mov	byte ptr [bx+74h],0
020A:462F  C6 47 75 00				mov	byte ptr [bx+75h],0
020A:4633  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:4637  C6 47 35 00				mov	byte ptr [bx+35h],0
020A:463B  C6 47 36 00				mov	byte ptr [bx+36h],0
020A:463F  E8 2BA6				call	sub_101			; (71E8)
020A:4642  C7 06 2B39 0010			mov	data_241,10h		; (020A:2B39=434Fh)
020A:4648  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:4648  9A					db	9Ah
020A:4649  2C58 14FC				dw	2C58h, 14FCh
020A:464D  B4 05				mov	ah,5
020A:464F  E8 106A				call	sub_58			; (56BC)
020A:4652  E8 0CBF				call	sub_47			; (5314)
020A:4655  8A 1E 3042				mov	bl,byte ptr ds:[3042h]	; (020A:3042=38h)
020A:4659  FE CB				dec	bl
020A:465B  BA FFFF				mov	dx,0FFFFh
020A:465E  BE 0000				mov	si,0
020A:4661  E8 29F0				call	sub_93			; (7054)
020A:4664			loc_481:
020A:4664  81 FE 291D				cmp	si,291Dh
020A:4668  73 08				jae	loc_482			; Jump if above or =
020A:466A  26: 8B 04				mov	ax,es:[si]
020A:466D  3D FFFF				cmp	ax,0FFFFh
020A:4670  75 02				jne	loc_483			; Jump if not equal
020A:4672			loc_482:
020A:4672  EB 58				jmp	short loc_493		; (46CC)
020A:4674			loc_483:
020A:4674  BF 291D				mov	di,291Dh
020A:4677  32 C9				xor	cl,cl			; Zero register
020A:4679			loc_484:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 143

020A:4679  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:467D  74 0F				je	loc_485			; Jump if equal
020A:467F  26: 3B 05				cmp	ax,es:[di]
020A:4682  74 12				je	loc_487			; Jump if equal
020A:4684  83 C7 02				add	di,2
020A:4687  FE C1				inc	cl
020A:4689  80 F9 FA				cmp	cl,0FAh
020A:468C  72 EB				jb	loc_484			; Jump if below
020A:468E			loc_485:
020A:468E  3B C2				cmp	ax,dx
020A:4690  74 02				je	loc_486			; Jump if equal
020A:4692  FE C3				inc	bl
020A:4694			loc_486:
020A:4694  8A CB				mov	cl,bl
020A:4696			loc_487:
020A:4696  88 0E 3046				mov	data_302,cl		; (020A:3046=4Eh)
020A:469A  80 F9 19				cmp	cl,19h
020A:469D  77 07				ja	loc_488			; Jump if above
020A:469F  80 C1 41				add	cl,41h			; 'A'
020A:46A2  B5 20				mov	ch,20h			; ' '
020A:46A4  EB 13				jmp	short loc_491		; (46B9)
020A:46A6			loc_488:
020A:46A6  B5 41				mov	ch,41h			; 'A'
020A:46A8			loc_489:
020A:46A8  80 E9 1A				sub	cl,1Ah
020A:46AB  80 F9 19				cmp	cl,19h
020A:46AE  76 04				jbe	loc_490			; Jump if below or =
020A:46B0  FE C5				inc	ch
020A:46B2  EB F4				jmp	short loc_489		; (46A8)
020A:46B4			loc_490:
020A:46B4  80 C1 41				add	cl,41h			; 'A'
020A:46B7  86 CD				xchg	cl,ch
020A:46B9			loc_491:
020A:46B9  26: F7 44 0C 8000			test	word ptr es:[si+0Ch],8000h
020A:46BF  75 04				jnz	loc_492			; Jump if not zero
020A:46C1  26: 89 4C 0C				mov	es:[si+0Ch],cx
020A:46C5			loc_492:
020A:46C5  8B D0				mov	dx,ax
020A:46C7  83 C6 15				add	si,15h
020A:46CA  EB 98				jmp	short loc_481		; (4664)
020A:46CC			loc_493:
020A:46CC  BE 0000				mov	si,0
020A:46CF			loc_494:
020A:46CF  BF 0000				mov	di,0
020A:46D2  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:46D6  75 03				jne	loc_495			; Jump if not equal
020A:46D8  E9 0111				jmp	loc_509			; (47EC)
020A:46DB			loc_495:
020A:46DB  26: F6 44 0B 01			test	byte ptr es:[si+0Bh],1
020A:46E0  75 05				jnz	loc_497			; Jump if not zero
020A:46E2			loc_496:
020A:46E2  83 C6 15				add	si,15h
020A:46E5  EB E8				jmp	short loc_494		; (46CF)
020A:46E7			loc_497:
020A:46E7  26: 8B 04				mov	ax,es:[si]
020A:46EA  26: 8B 5C 02				mov	bx,es:[si+2]
020A:46EE  26: 8B 4C 04				mov	cx,es:[si+4]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 144

020A:46F2			loc_498:
020A:46F2  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020A:46F7  74 0B				jz	loc_501			; Jump if zero
020A:46F9			loc_499:
020A:46F9  83 C7 15				add	di,15h
020A:46FC			loc_500:
020A:46FC  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:4700  75			data_550	db	75h
020A:4701  F0			data_551	db	0F0h
020A:4702  EB DE				jmp	short loc_496		; (46E2)
020A:4704			loc_501:
020A:4704  26: 3B 05				cmp	ax,es:[di]
020A:4707  75 F0				jne	loc_499			; Jump if not equal
020A:4709  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:470D  72 EA				jb	loc_499			; Jump if below
020A:470F  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:4713  77 E4				ja	loc_499			; Jump if above
020A:4715  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:4719  76 15				jbe	loc_502			; Jump if below or =
020A:471B  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:471F  72 47				jb	loc_506			; Jump if below
020A:4721  8B D3				mov	dx,bx
020A:4723  4A					dec	dx
020A:4724  26: 3B 55 02				cmp	dx,es:[di+2]
020A:4728  74 1B				je	loc_504			; Jump if equal
020A:472A  26: 89 55 04				mov	es:[di+4],dx
020A:472E  EB C9				jmp	short loc_499		; (46F9)
020A:4730			loc_502:
020A:4730  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:4734  73 0F				jae	loc_504			; Jump if above or =
020A:4736			loc_503:
020A:4736  8B D1				mov	dx,cx
020A:4738  42					inc	dx
020A:4739  26: 3B 55 04				cmp	dx,es:[di+4]
020A:473D  74 06				je	loc_504			; Jump if equal
020A:473F  26: 89 55 02				mov	es:[di+2],dx
020A:4743  EB B4				jmp	short loc_499		; (46F9)
020A:4745			loc_504:
020A:4745  06					push	es
020A:4746  1F					pop	ds
020A:4747  56					push	si
020A:4748  57					push	di
020A:4749  8B F7				mov	si,di
020A:474B  83 C6 15				add	si,15h
020A:474E  B9 291D				mov	cx,291Dh
020A:4751  2B CE				sub	cx,si
020A:4753  FC					cld				; Clear direction
020A:4754  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4756  5F					pop	di
020A:4757  5E					pop	si
020A:4758  E8 28EA				call	sub_91			; (7045)
020A:475B  3B F7				cmp	si,di
020A:475D  72 03				jb	loc_505			; Jump if below
020A:475F  83 EE 15				sub	si,15h
020A:4762			loc_505:
020A:4762  FE 0E 3040				dec	byte ptr ds:[3040h]	; (0000:3040=93h)
020A:4766  EB 94				jmp	short loc_500		; (46FC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 145

020A:4768			loc_506:
020A:4768  8B D3				mov	dx,bx
020A:476A  4A					dec	dx
020A:476B  26: 3B 55 02				cmp	dx,es:[di+2]
020A:476F  74 C5				je	loc_503			; Jump if equal
020A:4771  26: 87 55 04				xchg	es:[di+4],dx
020A:4775  80 3E 3040 FA			cmp	byte ptr ds:[3040h],0FAh	; (0000:3040=93h)
020A:477A  73 6D				jae	loc_508			; Jump if above or =
020A:477C  56					push	si
020A:477D  53					push	bx
020A:477E  50					push	ax
020A:477F  B8 0015				mov	ax,15h
020A:4782  8A 1E 3040				mov	bl,byte ptr ds:[3040h]	; (0000:3040=93h)
020A:4786  F6 E3				mul	bl			; ax = reg * al
020A:4788  05 0000				add	ax,0
020A:478B  8B F0				mov	si,ax
020A:478D  8B D9				mov	bx,cx
020A:478F  43					inc	bx
020A:4790  3B DA				cmp	bx,dx
020A:4792  74 53				je	loc_507			; Jump if equal
020A:4794  26: 89 5C 02				mov	es:[si+2],bx
020A:4798  58					pop	ax
020A:4799  26: 89 04				mov	es:[si],ax
020A:479C  26: 89 54 04				mov	es:[si+4],dx
020A:47A0  26: 8B 55 06				mov	dx,es:[di+6]
020A:47A4  26: 89 54 06				mov	es:[si+6],dx
020A:47A8  26: 8B 55 08				mov	dx,es:[di+8]
020A:47AC  26: 89 54 08				mov	es:[si+8],dx
020A:47B0  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020A:47B4  26: 89 54 0A				mov	es:[si+0Ah],dx
020A:47B8  8B26			data_552	dw	8B26h
020A:47BA  55			data_553	db	55h
020A:47BB  260C			data_554	dw	260Ch
020A:47BD  5489			data_555	dw	5489h
020A:47BF  0C			data_556	db	0Ch
020A:47C0  26			data_557	db	26h
020A:47C1  8A			data_558	db	8Ah
020A:47C2  55			data_559	db	55h
020A:47C3  0E			data_560	db	0Eh
020A:47C4  80 E2 FE				and	dl,0FEh
020A:47C7  26: 88 54 0E				mov	es:[si+0Eh],dl
020A:47CB  26: 8B 55 0F				mov	dx,es:[di+0Fh]
020A:47CF  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:47D3  26: 8B 55 11				mov	dx,es:[di+11h]
020A:47D7  26: 89 54 11				mov	es:[si+11h],dx
020A:47DB  26: 8B 55 13				mov	dx,es:[di+13h]
020A:47DF  26: 89 54 13				mov	es:[si+13h],dx
020A:47E3  FE 06 3040				inc	byte ptr ds:[3040h]	; (0000:3040=93h)
020A:47E7			loc_507:
020A:47E7  5B					pop	bx
020A:47E8  5E					pop	si
020A:47E9			loc_508:
020A:47E9  E9 FF0D				jmp	loc_499			; (46F9)
020A:47EC			loc_509:
020A:47EC  E8 DF81		;*		call	sub_29			;*(2770)
020A:47EC  E8 81 DF				db	0E8h, 81h,0DFh
020A:47EF  E8 2862				call	sub_93			; (7054)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 146

020A:47F2  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (0000:3040=93h)
020A:47F6  80 FA 01				cmp	dl,1
020A:47F9  77 03				ja	loc_511			; Jump if above
020A:47FB			loc_510:
020A:47FB  E9 00A9				jmp	loc_517			; (48A7)
020A:47FE			loc_511:
020A:47FE  BF 0000				mov	di,0
020A:4801  32 F6				xor	dh,dh			; Zero register
020A:4803			loc_512:
020A:4803  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020A:4808  75 F1				jnz	loc_510			; Jump if not zero
020A:480A  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020A:480F  74 63				je	loc_514			; Jump if equal
020A:4811  26: 8B 4D 04				mov	cx,es:[di+4]
020A:4815  26: 2B 4D 02				sub	cx,es:[di+2]
020A:4819  83 F9 64				cmp	cx,64h
020A:481C  72 56				jb	loc_514			; Jump if below
020A:481E  E8 2824				call	sub_91			; (7045)
020A:4821  26: 8B 05				mov	ax,es:[di]
020A:4824  3B 06 304C				cmp	ax,word ptr ds:[304Ch]	; (0000:304C=37E8h)
020A:4828  74 4A				je	loc_514			; Jump if equal
020A:482A  8E D8				mov	ds,ax
020A:482C  26: 8B 75 02				mov	si,es:[di+2]
020A:4830  56					push	si
020A:4831  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:4836  06					push	es
020A:4837  9A 14FC:3514		;*		call	far ptr sub_192		;*(14FC:3514)
020A:4837  9A					db	9Ah
020A:4838  3514 14FC				dw	3514h, 14FCh
020A:483C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:4841  9C					pushf				; Push flags
020A:4842  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:4847  5A					pop	dx
020A:4848  8E C2				mov	es,dx
020A:484A  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:484F  5A					pop	dx
020A:4850  75 0A				jnz	loc_513			; Jump if not zero
020A:4852  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:4857  74 03				je	loc_513			; Jump if equal
020A:4859  E8 2B60				call	sub_103			; (73BC)
020A:485C			loc_513:
020A:485C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:4861  9D					popf				; Pop flags
020A:4862  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:4867  5E					pop	si
020A:4868  72 0A				jc	loc_514			; Jump if carry Set
020A:486A  FE C6				inc	dh
020A:486C  26: 80 4D 0E 80			or	byte ptr es:[di+0Eh],80h
020A:4871  26: 8B 1D				mov	bx,es:[di]
020A:4874			loc_514:
020A:4874  83 C7 15				add	di,15h
020A:4877  FE CA				dec	dl
020A:4879  75 88				jnz	loc_512			; Jump if not zero
020A:487B  E8 27C7				call	sub_91			; (7045)
020A:487E  80 FE 01				cmp	dh,1
020A:4881  75 24				jne	loc_517			; Jump if not equal
020A:4883  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (1068:3040=6)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 147

020A:4887  BF 0000				mov	di,0
020A:488A			loc_515:
020A:488A  26: 7D80		data_561	dw	7D80h
020A:488D  0A 03				or	al,[bp+di]
020A:488F  74 0F				jz	loc_516			; Jump if zero
020A:4891  26: F6 45 0E 80			test	byte ptr es:[di+0Eh],80h
020A:4896  75 08				jnz	loc_516			; Jump if not zero
020A:4898  26: 89 5D 06				mov	es:[di+6],bx
020A:489C  26: 89 5D 08				mov	es:[di+8],bx
020A:48A0			loc_516:
020A:48A0  83 C7 15				add	di,15h
020A:48A3  FE CA				dec	dl
020A:48A5  75 E3				jnz	loc_515			; Jump if not zero
020A:48A7			loc_517:
020A:48A7  E8 279B				call	sub_91			; (7045)
020A:48AA  F6 06 35D3 40			test	byte ptr ds:[35D3h],40h	; (1068:35D3=26h) '@'
020A:48AF  74 25				jz	loc_519			; Jump if zero
020A:48B1  9A 14FC:26F0		;*		call	far ptr sub_178		;*(14FC:26F0)
020A:48B1  9A					db	9Ah
020A:48B2  26F0 14FC				dw	26F0h, 14FCh
020A:48B6  C6 06 35E6 00			mov	byte ptr ds:[35E6h],0	; (1068:35E6=3Ah)
020A:48BB  E8 8D92				call	sub_146			; (D650)
020A:48BE  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1068:4150=0)
020A:48C2  E8 59D7				call	sub_121			; (A29C)
020A:48C5  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (1068:2B3C=3Ch)
020A:48CA  75 07				jne	loc_518			; Jump if not equal
020A:48CC  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1068:4150=0)
020A:48D0  E8 59C9				call	sub_121			; (A29C)
020A:48D3			loc_518:
020A:48D3  E9 1F9A				jmp	loc_902			; (6870)
020A:48D6			loc_519:
020A:48D6  9A 14FC:4F4C		;*		call	far ptr sub_223		;*(14FC:4F4C)
020A:48D6  9A					db	9Ah
020A:48D7  4F4C 14FC				dw	4F4Ch, 14FCh
020A:48DB  B2 00				mov	dl,0
020A:48DD			loc_520:
020A:48DD  E8 2774				call	sub_93			; (7054)
020A:48E0  B8 0015				mov	ax,15h
020A:48E3  F6 E2				mul	dl			; ax = reg * al
020A:48E5  05 0000				add	ax,0
020A:48E8  8B D8				mov	bx,ax
020A:48EA  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:48EE  24 03				and	al,3
020A:48F0  3C 02				cmp	al,2
020A:48F2  77 1F				ja	loc_522			; Jump if above
020A:48F4  26: 8B 07				mov	ax,es:[bx]
020A:48F7  26: 8B 7F 02				mov	di,es:[bx+2]
020A:48FB  26: 8B 4F 04				mov	cx,es:[bx+4]
020A:48FF  8E C0				mov	es,ax
020A:4901  2B CF				sub	cx,di
020A:4903  81 F9 03E8				cmp	cx,3E8h
020A:4907  72 03				jb	loc_521			; Jump if below
020A:4909  B9 03E8				mov	cx,3E8h
020A:490C			loc_521:
020A:490C  9A 14FC:4C30		;*		call	far ptr sub_220		;*(14FC:4C30)
020A:490C  9A					db	9Ah
020A:490D  4C30 14FC				dw	4C30h, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 148

020A:4911  72 08				jc	loc_523			; Jump if carry Set
020A:4913			loc_522:
020A:4913  FE C2				inc	dl
020A:4915  3A 16 3040				cmp	dl,byte ptr ds:[3040h]	; (1068:3040=6)
020A:4919  76 C2				jbe	loc_520			; Jump if below or =
020A:491B			loc_523:
020A:491B  E8 2736				call	sub_93			; (7054)
020A:491E  26: A1 0000				mov	ax,word ptr es:[0]	; (1068:0000=2505h)
020A:4922  A3 3050				mov	word ptr ds:[3050h],ax	; (1068:3050=0A001h)
020A:4925  E9 A1D8				jmp	loc_2385		; (EB00)
							                        ;* No entry point to code
020A:4928  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (1068:35E6=3Ah)
020A:492D  74 5C				je	loc_524			; Jump if equal
020A:492F  E8 272B				call	sub_95			; (705D)
020A:4932  BF 0378				mov	di,378h
020A:4935  B9 0021				mov	cx,21h
020A:4938  B0 20				mov	al,20h			; ' '
020A:493A  FC					cld				; Clear direction
020A:493B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:493D  E8 0D20				call	sub_56			; (5660)
020A:4940  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:4944  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020A:4948  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:494C  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020A:4950  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4954  E8 0899				call	sub_46			; (51F0)
020A:4957  B4 02				mov	ah,2
020A:4959  32 FF				xor	bh,bh			; Zero register
020A:495B  BA 0912				mov	dx,912h
020A:495E  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:495E  9A					db	9Ah
020A:495F  2BA8 14FC				dw	2BA8h, 14FCh
020A:4963  E8 111A				call	sub_64			; (5A80)
020A:4966  BE 0378				mov	si,378h
020A:4969  B1 20				mov	cl,20h			; ' '
020A:496B  B3 01				mov	bl,1
020A:496D  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:496D  9A					db	9Ah
020A:496E  0620 14FC				dw	620h, 14FCh
020A:4972  E8 0D13				call	sub_57			; (5688)
020A:4975  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4979  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:497D  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:4981  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4985  E8 10EC				call	sub_63			; (5A74)
020A:4988  E8 0989				call	sub_47			; (5314)
020A:498B			loc_524:
020A:498B  E9 EC4D				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:498E  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:4994  74 08				je	loc_525			; Jump if equal
020A:4996  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:4996  9A					db	9Ah
020A:4997  2B10 14FC				dw	2B10h, 14FCh
020A:499B  E9 EC3D				jmp	loc_283			; (35DB)
020A:499E			loc_525:
020A:499E  E8 0013				call	sub_43			; (49B4)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 149

020A:49A1  80 3E 31F0 00			cmp	byte ptr ds:[31F0h],0	; (1068:31F0=62h)
020A:49A6  74 03				je	loc_526			; Jump if equal
020A:49A8  E8 283D				call	sub_101			; (71E8)
020A:49AB			loc_526:
020A:49AB  E8 0CDA				call	sub_57			; (5688)
020A:49AE  E8 0963				call	sub_47			; (5314)
020A:49B1  E9 EC27				jmp	loc_283			; (35DB)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_43		proc	near
020A:49B4  E8 0CA9				call	sub_56			; (5660)
020A:49B7  C6 47 53 00				mov	byte ptr [bx+53h],0
020A:49BB  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:49BF  B4 02				mov	ah,2
020A:49C1  E8 0CF8				call	sub_58			; (56BC)
020A:49C4  E8 0829				call	sub_46			; (51F0)
020A:49C7  B4 02				mov	ah,2
020A:49C9  32 FF				xor	bh,bh			; Zero register
020A:49CB  BA 171A				mov	dx,171Ah
020A:49CE  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:49CE  9A					db	9Ah
020A:49CF  2BA8 14FC				dw	2BA8h, 14FCh
020A:49D3  E8 10AA				call	sub_64			; (5A80)
020A:49D6  B1 28				mov	cl,28h			; '('
020A:49D8  B3 01				mov	bl,1
020A:49DA  BE 07E0				mov	si,7E0h
020A:49DD  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:49DD  9A					db	9Ah
020A:49DE  0620 14FC				dw	620h, 14FCh
020A:49E2  B3 28				mov	bl,28h			; '('
020A:49E4  2A D9				sub	bl,cl
020A:49E6  32 FF				xor	bh,bh			; Zero register
020A:49E8  83 FB 00				cmp	bx,0
020A:49EB  75 02				jne	loc_527			; Jump if not equal
020A:49ED  EB 74				jmp	short loc_530		; (4A63)
020A:49EF			loc_527:
020A:49EF  3C 1B				cmp	al,1Bh
020A:49F1  75 02				jne	loc_528			; Jump if not equal
020A:49F3  EB 6E				jmp	short loc_530		; (4A63)
020A:49F5			loc_528:
020A:49F5  E8 2665				call	sub_95			; (705D)
020A:49F8  BF 07E0				mov	di,7E0h
020A:49FB  B0 20				mov	al,20h			; ' '
020A:49FD  8B CB				mov	cx,bx
020A:49FF  FC					cld				; Clear direction
020A:4A00  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4A02  74 5F				jz	loc_530			; Jump if zero
020A:4A04  BF 07E0				mov	di,7E0h
020A:4A07  B0 20				mov	al,20h			; ' '
020A:4A09  9A 14FC:2724		;*		call	far ptr sub_179		;*(14FC:2724)
020A:4A09  9A					db	9Ah
020A:4A0A  2724 14FC				dw	2724h, 14FCh
020A:4A0E  9A 14FC:27AC		;*		call	far ptr sub_180		;*(14FC:27AC)
020A:4A0E  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 150

020A:4A0F  27AC 14FC				dw	27ACh, 14FCh
020A:4A13  A2 327E				mov	byte ptr ds:[327Eh],al	; (1068:327E=4Eh)
020A:4A16  3C 01				cmp	al,1
020A:4A18  77 1C				ja	loc_529			; Jump if above
020A:4A1A  B4 10				mov	ah,10h
020A:4A1C  E8 0C9D				call	sub_58			; (56BC)
020A:4A1F  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (1068:1326=8A26h)
020A:4A23  A0 1208				mov	al,byte ptr ds:[1208h]	; (1068:1208=0FCh)
020A:4A26  88 47 52				mov	[bx+52h],al
020A:4A29  E8 1048				call	sub_63			; (5A74)
020A:4A2C  E8 08E5				call	sub_47			; (5314)
020A:4A2F  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:4A2F  9A					db	9Ah
020A:4A30  0760 14FC				dw	760h, 14FCh
020A:4A34  EB 2D				jmp	short loc_530		; (4A63)
020A:4A36			loc_529:
020A:4A36  BF 31F0				mov	di,31F0h
020A:4A39  B9 0040				mov	cx,40h
020A:4A3C  B0 00				mov	al,0
020A:4A3E  FC					cld				; Clear direction
020A:4A3F  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A41  BF 0649				mov	di,649h
020A:4A44  B9 000C				mov	cx,0Ch
020A:4A47  B0 20				mov	al,20h			; ' '
020A:4A49  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A4B  BE 07E0				mov	si,7E0h
020A:4A4E  BF 31F0				mov	di,31F0h
020A:4A51  8B CB				mov	cx,bx
020A:4A53  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4A55  4F					dec	di
020A:4A56  9A 14FC:7270		;*		call	far ptr sub_244		;*(14FC:7270)
020A:4A56  9A					db	9Ah
020A:4A57  7270 14FC				dw	7270h, 14FCh
020A:4A5B  E8 4976				call	sub_119			; (93D4)
020A:4A5E  73 03				jnc	loc_530			; Jump if carry=0
020A:4A60  E9 20A0				jmp	loc_928			; (6B03)
020A:4A63			loc_530:
020A:4A63  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (1068:327D=14h)
020A:4A67  E8 0C52				call	sub_58			; (56BC)
020A:4A6A  E8 0C1B				call	sub_57			; (5688)
020A:4A6D  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4A71  C6 47 53 07				mov	byte ptr [bx+53h],7
020A:4A75  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4A79  E8 0FF8				call	sub_63			; (5A74)
020A:4A7C  E8 0895				call	sub_47			; (5314)
020A:4A7F  C3					retn
				sub_43		endp

							                        ;* No entry point to code
020A:4A80  80 3E 15CE 01			cmp	data_159,1		; (020A:15CE=0)
020A:4A85  75 07				jne	loc_531			; Jump if not equal
020A:4A87  80 36 15D0 01			xor	data_161,1		; (020A:15D0=0)
020A:4A8C  EB 09				jmp	short loc_532		; (4A97)
020A:4A8E			loc_531:
020A:4A8E  FE 06 15D0				inc	data_161		; (020A:15D0=0)
020A:4A92  80 26 15D0 03			and	data_161,3		; (020A:15D0=0)
020A:4A97			loc_532:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 151

020A:4A97  E8 10CA				call	sub_67			; (5B64)
020A:4A9A  E8 F894				call	sub_42			; (4331)
020A:4A9D  E8 0874				call	sub_47			; (5314)
020A:4AA0  E9 EB38				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4AA3  F6 06 30A0 C0			test	data_348,0C0h		; (020A:30A0=33h)
020A:4AA8  75 36				jnz	loc_536			; Jump if not zero
020A:4AAA  8A 36 30B0				mov	dh,byte ptr ds:[30B0h]	; (020A:30B0=2Eh)
020A:4AAE  F6 C6 1F				test	dh,1Fh
020A:4AB1  74 04				jz	loc_533			; Jump if zero
020A:4AB3  B6 00				mov	dh,0
020A:4AB5  EB 38				jmp	short loc_538		; (4AEF)
020A:4AB7			loc_533:
020A:4AB7  F6 06 30B2 80			test	data_352,80h		; (020A:30B2=4Fh)
020A:4ABC  75 07				jnz	loc_534			; Jump if not zero
020A:4ABE  80 0E 30B2 80			or	data_352,80h		; (020A:30B2=4Fh)
020A:4AC3  EB 2E				jmp	short loc_539		; (4AF3)
020A:4AC5			loc_534:
020A:4AC5  80 26 30B2 7F			and	data_352,7Fh		; (020A:30B2=4Fh)
020A:4ACA  B6 01				mov	dh,1
020A:4ACC  F6 06 30A0 10			test	data_348,10h		; (020A:30A0=33h)
020A:4AD1  74 02				jz	loc_535			; Jump if zero
020A:4AD3  B6 02				mov	dh,2
020A:4AD5			loc_535:
020A:4AD5  F6 06 30A0 20			test	data_348,20h		; (020A:30A0=33h) ' '
020A:4ADA  74 13				jz	loc_538			; Jump if zero
020A:4ADC  B6 04				mov	dh,4
020A:4ADE  EB 0F				jmp	short loc_538		; (4AEF)
020A:4AE0			loc_536:
020A:4AE0  F6 06 30A0 40			test	data_348,40h		; (020A:30A0=33h) '@'
020A:4AE5  74 04				jz	loc_537			; Jump if zero
020A:4AE7  B6 0C				mov	dh,0Ch
020A:4AE9  EB 04				jmp	short loc_538		; (4AEF)
020A:4AEB			loc_537:
020A:4AEB  B6 14				mov	dh,14h
020A:4AED  EB 00				jmp	short loc_538		; (4AEF)
020A:4AEF			loc_538:
020A:4AEF  88 36 30B0				mov	byte ptr ds:[30B0h],dh	; (020A:30B0=2Eh)
020A:4AF3			loc_539:
020A:4AF3  B6 01				mov	dh,1
020A:4AF5  E8 0A60				call	sub_55			; (5558)
020A:4AF8  E9 EAE0				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4AFB  80 3E 35E6 01			cmp	data_456,1		; (020A:35E6=0B4h)
020A:4B00  75 1C				jne	loc_540			; Jump if not equal
020A:4B02  FE 06 35E3				inc	data_453		; (020A:35E3=1)
020A:4B06  80 26 35E3 01			and	data_453,1		; (020A:35E3=1)
020A:4B0B  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:4B0F  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:4B13  F6 06 35E3 01			test	data_453,1		; (020A:35E3=1)
020A:4B18  74 04				jz	loc_540			; Jump if zero
020A:4B1A  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:4B1E			loc_540:
020A:4B1E  E8 07F3				call	sub_47			; (5314)
020A:4B21  E9 EAB7				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4B24  E8 0B39				call	sub_56			; (5660)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 152

020A:4B27  C6 47 68 00				mov	byte ptr [bx+68h],0
020A:4B2B  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4B2F  B4 03				mov	ah,3
020A:4B31  E8 0B88				call	sub_58			; (56BC)
020A:4B34  E8 06B9				call	sub_46			; (51F0)
020A:4B37  B4 02				mov	ah,2
020A:4B39  32 FF				xor	bh,bh			; Zero register
020A:4B3B  BA 171A				mov	dx,171Ah
020A:4B3E  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:4B3E  9A					db	9Ah
020A:4B3F  2BA8 14FC				dw	2BA8h, 14FCh
020A:4B43  E8 0F3A				call	sub_64			; (5A80)
020A:4B46  B1 28				mov	cl,28h			; '('
020A:4B48  B3 03				mov	bl,3
020A:4B4A  BE 07E0				mov	si,7E0h
020A:4B4D  9A 14FC:0620		;*		call	far ptr sub_163		;*(14FC:0620)
020A:4B4D  9A					db	9Ah
020A:4B4E  0620 14FC				dw	620h, 14FCh
020A:4B52  B3 28				mov	bl,28h			; '('
020A:4B54  2A D9				sub	bl,cl
020A:4B56  32 FF				xor	bh,bh			; Zero register
020A:4B58  83 FB 00				cmp	bx,0
020A:4B5B  74 13				je	loc_541			; Jump if equal
020A:4B5D  3C 1B				cmp	al,1Bh
020A:4B5F  74 0F				je	loc_541			; Jump if equal
020A:4B61  E8 24F9				call	sub_95			; (705D)
020A:4B64  BF 07E0				mov	di,7E0h
020A:4B67  B0 20				mov	al,20h			; ' '
020A:4B69  8B CB				mov	cx,bx
020A:4B6B  FC					cld				; Clear direction
020A:4B6C  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4B6E  75 03				jnz	loc_542			; Jump if not zero
020A:4B70			loc_541:
020A:4B70  E9 0086				jmp	loc_546			; (4BF9)
020A:4B73			loc_542:
020A:4B73  FC					cld				; Clear direction
020A:4B74  BF 3233				mov	di,3233h
020A:4B77  B9 0029				mov	cx,29h
020A:4B7A  B0 00				mov	al,0
020A:4B7C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4B7E  BF 036A				mov	di,36Ah
020A:4B81  B9 000C				mov	cx,0Ch
020A:4B84  B0 20				mov	al,20h			; ' '
020A:4B86  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4B88  BE 07E0				mov	si,7E0h
020A:4B8B  BF 3233				mov	di,3233h
020A:4B8E  8B CB				mov	cx,bx
020A:4B90  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4B92  9A 14FC:26A0		;*		call	far ptr sub_177		;*(14FC:26A0)
020A:4B92  9A					db	9Ah
020A:4B93  26A0 14FC				dw	26A0h, 14FCh
020A:4B97  83 C3 04				add	bx,4
020A:4B9A  47					inc	di
020A:4B9B  8B CB				mov	cx,bx
020A:4B9D			loc_543:
020A:4B9D  8A 05				mov	al,[di]
020A:4B9F  3C 3A				cmp	al,3Ah			; ':'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 153

020A:4BA1  74 0D				je	loc_544			; Jump if equal
020A:4BA3  3C 5C				cmp	al,5Ch			; '\'
020A:4BA5  74 09				je	loc_544			; Jump if equal
020A:4BA7  83 F9 01				cmp	cx,1
020A:4BAA  76 05				jbe	loc_545			; Jump if below or =
020A:4BAC  49					dec	cx
020A:4BAD  4F					dec	di
020A:4BAE  EB ED				jmp	short loc_543		; (4B9D)
020A:4BB0			loc_544:
020A:4BB0  47					inc	di
020A:4BB1			loc_545:
020A:4BB1  2B D9				sub	bx,cx
020A:4BB3  8B CB				mov	cx,bx
020A:4BB5  41					inc	cx
020A:4BB6  83 F9 0C				cmp	cx,0Ch
020A:4BB9  77 3E				ja	loc_546			; Jump if above
020A:4BBB  8B F7				mov	si,di
020A:4BBD  BF 036A				mov	di,36Ah
020A:4BC0  FC					cld				; Clear direction
020A:4BC1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4BC3  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='OCUME 1\ADMINI 1') ':'
020A:4BC8  75 2F				jne	loc_546			; Jump if not equal
020A:4BCA  A0 3233				mov	al,data_375		; (020A:3233=44h)
020A:4BCD  24 5F				and	al,5Fh			; '_'
020A:4BCF  3C 41				cmp	al,41h			; 'A'
020A:4BD1  72 26				jb	loc_546			; Jump if below
020A:4BD3  3C 5A				cmp	al,5Ah			; 'Z'
020A:4BD5  77 22				ja	loc_546			; Jump if above
020A:4BD7  8A D0				mov	dl,al
020A:4BD9  80 EA 41				sub	dl,41h			; 'A'
020A:4BDC  8A DA				mov	bl,dl
020A:4BDE  B4 0E				mov	ah,0Eh
020A:4BE0  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:4BE2  B4 19				mov	ah,19h
020A:4BE4  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:4BE6  A2 30CE				mov	byte ptr data_369,al	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:4BE9  04 61				add	al,61h			; 'a'
020A:4BEB  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:4BEE  E8 08AF				call	sub_54			; (54A0)
020A:4BF1  8A 16 30CD				mov	dl,data_368		; (020A:30CD=3Bh)
020A:4BF5  B4 0E				mov	ah,0Eh
020A:4BF7  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:4BF9			loc_546:
020A:4BF9  E8 0A8C				call	sub_57			; (5688)
020A:4BFC  C6 47 68 07				mov	byte ptr [bx+68h],7
020A:4C00  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4C04  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=1Eh)
020A:4C08  E8 0AB1				call	sub_58			; (56BC)
020A:4C0B  E8 0E66				call	sub_63			; (5A74)
020A:4C0E  E8 0703				call	sub_47			; (5314)
020A:4C11  E9 E9C7				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4C14  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:4C17  04 02				add	al,2
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 154

020A:4C19  3C 14				cmp	al,14h
020A:4C1B  72 02				jb	loc_547			; Jump if below
020A:4C1D  B0 04				mov	al,4
020A:4C1F			loc_547:
020A:4C1F  E8 121A				call	sub_75			; (5E3C)
020A:4C22  E9 E9B6				jmp	loc_283			; (35DB)
020A:4C25			loc_548:
020A:4C25  B4 11				mov	ah,11h
020A:4C27  E9 1FCE				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:4C2A  A0 16AB				mov	al,data_166		; (020A:16AB=41h)
020A:4C2D  BB 16AD				mov	bx,16ADh
020A:4C30  D7					xlat				; al=[al+[bx]] table
020A:4C31  A2 16AB				mov	data_166,al		; (020A:16AB=41h)
020A:4C34  E8 0FB9				call	sub_68			; (5BF0)
020A:4C37  E8 06DA				call	sub_47			; (5314)
020A:4C3A  E9 E99E				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4C3D  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:4C42  74 20				je	loc_552			; Jump if equal
020A:4C44  A0 35E4				mov	al,data_454		; (020A:35E4=74h)
020A:4C47  A8 01				test	al,1
020A:4C49  74 0C				jz	loc_550			; Jump if zero
020A:4C4B  A8 06				test	al,6
020A:4C4D  74 04				jz	loc_549			; Jump if zero
020A:4C4F  B0 09				mov	al,9
020A:4C51  EB 06				jmp	short loc_551		; (4C59)
020A:4C53			loc_549:
020A:4C53  B0 02				mov	al,2
020A:4C55  EB 02				jmp	short loc_551		; (4C59)
020A:4C57			loc_550:
020A:4C57  B0 03				mov	al,3
020A:4C59			loc_551:
020A:4C59  A2 35E4				mov	data_454,al		; (020A:35E4=74h)
020A:4C5C  9A 14FC:09D8		;*		call	far ptr sub_171		;*(14FC:09D8)
020A:4C5C  9A					db	9Ah
020A:4C5D  09D8 14FC				dw	9D8h, 14FCh
020A:4C61  E8 06B0				call	sub_47			; (5314)
020A:4C64			loc_552:
020A:4C64  E9 E974				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4C67  BF 13E8				mov	di,13E8h
020A:4C6A  A0 13E4				mov	al,data_154		; (020A:13E4=0)
020A:4C6D  32 C9				xor	cl,cl			; Zero register
020A:4C6F			loc_553:
020A:4C6F  3A 05				cmp	al,[di]
020A:4C71  74 0C				je	loc_554			; Jump if equal
020A:4C73  FE C1				inc	cl
020A:4C75  80 F9 0D				cmp	cl,0Dh
020A:4C78  73 05				jae	loc_554			; Jump if above or =
020A:4C7A  83 C7 10				add	di,10h
020A:4C7D  EB F0				jmp	short loc_553		; (4C6F)
020A:4C7F			loc_554:
020A:4C7F  80 F9 0C				cmp	cl,0Ch
020A:4C82  72 03				jb	loc_555			; Jump if below
020A:4C84  BF 13D8				mov	di,13D8h
020A:4C87			loc_555:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 155

020A:4C87  83 C7 10				add	di,10h
020A:4C8A  8A 45 0D				mov	al,[di+0Dh]
020A:4C8D  A2 13E5				mov	data_155,al		; (020A:13E5=0)
020A:4C90  8A 05				mov	al,[di]
020A:4C92  A2 13E4				mov	data_154,al		; (020A:13E4=0)
020A:4C95  8B 45 0B				mov	ax,[di+0Bh]
020A:4C98  A3 13E6				mov	data_156,ax		; (020A:13E6=0)
020A:4C9B  9A 14FC:2B34		;*		call	far ptr sub_183		;*(14FC:2B34)
020A:4C9B  9A					db	9Ah
020A:4C9C  2B34 14FC				dw	2B34h, 14FCh
020A:4CA0  E8 0671				call	sub_47			; (5314)
020A:4CA3  E9 E935				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4CA6  01 02				add	[bp+si],ax
020A:4CA8  04 10				add	al,10h
020A:4CAA  18 20				sbb	[bx+si],ah
020A:4CAC  28 40 48				sub	[bx+si+48h],al
020A:4CAF  88 00				mov	[bx+si],al
020A:4CB1  8A 36 30A0				mov	dh,data_348		; (020A:30A0=33h)
020A:4CB5  B8 0000				mov	ax,0
020A:4CB8  56					push	si
020A:4CB9  BE 1926				mov	si,1926h
020A:4CBC			loc_556:
020A:4CBC  2E: 3A 34				cmp	dh,cs:[si]
020A:4CBF  74 11				je	loc_558			; Jump if equal
020A:4CC1  46					inc	si
020A:4CC2  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:4CC6  74 02				je	loc_557			; Jump if equal
020A:4CC8  EB F2				jmp	short loc_556		; (4CBC)
020A:4CCA			loc_557:
020A:4CCA  B6 01				mov	dh,1
020A:4CCC  C6 06 30B0 00			mov	byte ptr ds:[30B0h],0	; (020A:30B0=2Eh)
020A:4CD1  4E					dec	si
020A:4CD2			loc_558:
020A:4CD2  46					inc	si
020A:4CD3  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:4CD7  75 08				jne	loc_559			; Jump if not equal
020A:4CD9  BE 1926				mov	si,1926h
020A:4CDC  C6 06 30B0 00			mov	byte ptr ds:[30B0h],0	; (020A:30B0=2Eh)
020A:4CE1			loc_559:
020A:4CE1  2E: 8A 34				mov	dh,cs:[si]
020A:4CE4  5E					pop	si
020A:4CE5  88 36 30A0				mov	data_348,dh		; (020A:30A0=33h)
020A:4CE9  F6 06 30B0 1F			test	byte ptr ds:[30B0h],1Fh	; (020A:30B0=2Eh)
020A:4CEE  74 1D				jz	loc_561			; Jump if zero
020A:4CF0  C6 06 30B0 01			mov	byte ptr ds:[30B0h],1	; (020A:30B0=2Eh)
020A:4CF5  F6 C6 10				test	dh,10h
020A:4CF8  74 07				jz	loc_560			; Jump if zero
020A:4CFA  C6 06 30B0 02			mov	byte ptr ds:[30B0h],2	; (020A:30B0=2Eh)
020A:4CFF  EB 0C				jmp	short loc_561		; (4D0D)
020A:4D01			loc_560:
020A:4D01  F6 C6 20				test	dh,20h			; ' '
020A:4D04  74 07				jz	loc_561			; Jump if zero
020A:4D06  C6 06 30B0 04			mov	byte ptr ds:[30B0h],4	; (020A:30B0=2Eh)
020A:4D0B  EB 18				jmp	short loc_562		; (4D25)
020A:4D0D			loc_561:
020A:4D0D  F6 06 30A0 C0			test	data_348,0C0h		; (020A:30A0=33h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 156

020A:4D12  74 11				jz	loc_562			; Jump if zero
020A:4D14  C6 06 30B0 0C			mov	byte ptr ds:[30B0h],0Ch	; (020A:30B0=2Eh)
020A:4D19  F6 06 30A0 80			test	data_348,80h		; (020A:30A0=33h)
020A:4D1E  74 05				jz	loc_562			; Jump if zero
020A:4D20  C6 06 30B0 14			mov	byte ptr ds:[30B0h],14h	; (020A:30B0=2Eh)
020A:4D25			loc_562:
020A:4D25  B6 01				mov	dh,1
020A:4D27  E8 082E				call	sub_55			; (5558)
020A:4D2A  E9 E8AE				jmp	loc_283			; (35DB)
							                        ;* No entry point to code
020A:4D2D  80 3E 35DF 00			cmp	data_450,0		; (020A:35DF=80h)
020A:4D32  74 07				je	loc_563			; Jump if equal
020A:4D34  C6 06 35DF 00			mov	data_450,0		; (020A:35DF=80h)
020A:4D39  EB 05				jmp	short loc_564		; (4D40)
020A:4D3B			loc_563:
020A:4D3B  C6 06 35DF 60			mov	data_450,60h		; (020A:35DF=80h) '`'
020A:4D40			loc_564:
020A:4D40  E8 F5EE				call	sub_42			; (4331)
020A:4D43  CEE8					dw	0CEE8h
020A:4D45  E905			data_566	dw	0E905h
020A:4D47  92					xchg	dx,ax
020A:4D48  E8			data_567	db	0E8h
020A:4D49  80			data_568	db	80h
020A:4D4A  3E			data_569	db	3Eh
020A:4D4B  E6			data_570	db	0E6h
020A:4D4C  35			data_571	db	35h
020A:4D4D  00 74 23				add	[si+23h],dh
020A:4D50  8A 1E 4E7F				mov	bl,data_633		; (020A:4E7F=0E8h)
020A:4D54  F6 C3 07				test	bl,7
020A:4D57  74 07				jz	loc_565			; Jump if zero
020A:4D59  C6 06 4E7F 00			mov	byte ptr data_633,0	; (020A:4E7F=0E8h)
020A:4D5E  EB 0D				jmp	short loc_566		; (4D6D)
020A:4D60			loc_565:
020A:4D60  80 0E 4E7F 07			or	byte ptr data_633,7	; (020A:4E7F=0E8h)
020A:4D65  B0 0A				mov	al,0Ah
020A:4D67  E8 10D2				call	sub_75			; (5E3C)
020A:4D6A  E9 E86E				jmp	loc_283			; (35DB)
020A:4D6D			loc_566:
020A:4D6D  E8 0DA4				call	sub_66			; (5B14)
020A:4D70  E9 E868				jmp	loc_283			; (35DB)
020A:4D73			loc_567:
020A:4D73  E9 E8C0				jmp	loc_290			; (3636)
							                        ;* No entry point to code
020A:4D76  E8 08E7				call	sub_56			; (5660)
020A:4D79  B4 18				mov	ah,18h
020A:4D7B  E8 093E				call	sub_58			; (56BC)
020A:4D7E  E8 0593				call	sub_47			; (5314)
020A:4D81  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:4D81  9A					db	9Ah
020A:4D82  0760 14FC				dw	760h, 14FCh
020A:4D86  2C 30				sub	al,30h			; '0'
020A:4D88  3C 7F				cmp	al,7Fh
020A:4D8A  77 3A				ja	loc_569			; Jump if above
020A:4D8C  A2 35D3				mov	data_442,al		; (020A:35D3=0C6h)
020A:4D8F  A8 EB				test	al,0EBh
020A:4D91  74 2F				jz	loc_568			; Jump if zero
020A:4D93  80 3E 133E 01			cmp	data_152,1		; (020A:133E=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 157

020A:4D98  74 28				je	loc_568			; Jump if equal
020A:4D9A  50					push	ax
020A:4D9B  51					push	cx
020A:4D9C  57					push	di
020A:4D9D  06					push	es
020A:4D9E  1E					push	ds
020A:4D9F  07					pop	es
020A:4DA0  B9 001D				mov	cx,1Dh
020A:4DA3  B0 20				mov	al,20h			; ' '
020A:4DA5  BF 0708				mov	di,708h
020A:4DA8  FC					cld				; Clear direction
020A:4DA9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4DAB  BD 071C				mov	bp,71Ch
020A:4DAE  A1 4E82				mov	ax,data_635		; (020A:4E82=38E9h)
020A:4DB1  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:4DB1  9A					db	9Ah
020A:4DB2  021C 14FC				dw	21Ch, 14FCh
020A:4DB6  8B 3E 1326				mov	di,data_149		; (020A:1326=0)
020A:4DBA  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020A:4DBE  07					pop	es
020A:4DBF  5F					pop	di
020A:4DC0  59					pop	cx
020A:4DC1  58					pop	ax
020A:4DC2			loc_568:
020A:4DC2  A8 08				test	al,8
020A:4DC4  75 03				jnz	loc_570			; Jump if not zero
020A:4DC6			loc_569:
020A:4DC6  E9 00B3				jmp	loc_574			; (4E7C)
020A:4DC9			loc_570:
020A:4DC9  80 26 35D3 F7			and	data_442,0F7h		; (020A:35D3=0C6h)
020A:4DCE  B4 23				mov	ah,23h			; '#'
020A:4DD0  E8 08E9				call	sub_58			; (56BC)
020A:4DD3  E8 041A				call	sub_46			; (51F0)
020A:4DD6  B4 02				mov	ah,2
020A:4DD8  32 FF				xor	bh,bh			; Zero register
020A:4DDA  BA 1710				mov	dx,1710h
020A:4DDD  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:4DDD  9A					db	9Ah
020A:4DDE  2BA8 14FC				dw	2BA8h, 14FCh
020A:4DE2  E8 0C9B				call	sub_64			; (5A80)
020A:4DE5  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:4DE5  9A					db	9Ah
020A:4DE6  0760 14FC				dw	760h, 14FCh
020A:4DEA  8A D0				mov	dl,al
020A:4DEC  2C 30				sub	al,30h			; '0'
020A:4DEE  3C 10				cmp	al,10h
020A:4DF0  76 03				jbe	loc_571			; Jump if below or =
020A:4DF2  E9 0087				jmp	loc_574			; (4E7C)
020A:4DF5			loc_571:
020A:4DF5  D0 E0				shl	al,1			; Shift w/zeros fill
020A:4DF7  A2 35D4				mov	data_443,al		; (020A:35D4=6)
020A:4DFA  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:4DFA  9A					db	9Ah
020A:4DFB  07A0 14FC				dw	7A0h, 14FCh
020A:4DFF  B4 02				mov	ah,2
020A:4E01  32 FF				xor	bh,bh			; Zero register
020A:4E03  BA 1727				mov	dx,1727h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 158

020A:4E06  9A			data_574	db	9Ah
020A:4E07  A8			data_575	db	0A8h
020A:4E08  2B			data_576	db	2Bh
020A:4E09  FC					cld				; Clear direction
020A:4E0A  14			data_577	db	14h
020A:4E0B  04B1			data_578	dw	4B1h
020A:4E0D  02B3			data_579	dw	2B3h
020A:4E0F  BE			data_580	db	0BEh
020A:4E10  ED			data_581	db	0EDh
020A:4E11  07			data_582	db	7
020A:4E12  209A			data_583	dw	209Ah
020A:4E14  06					push	es
020A:4E15  FC			data_584	db	0FCh
020A:4E16  14			data_585	db	14h
020A:4E17  3C			data_586	db	3Ch
020A:4E18  1B 74 61				sbb	si,[si+61h]
020A:4E1B  3C 0D				cmp	al,0Dh
020A:4E1D  75 19				jne	loc_573			; Jump if not equal
020A:4E1F  A1 0699				mov	ax,word ptr ds:[699h]	; (020A:0699=0B050h)
020A:4E22  EDA3			data_591	dw	0EDA3h
020A:4E24  A107			data_592	dw	0A107h
020A:4E26  069B			data_593	dw	69Bh
020A:4E28  EFA3			data_594	dw	0EFA3h
020A:4E2A  B907			data_596	dw	0B907h
020A:4E2C  04			data_597	db	4
020A:4E2D  8A00			data_598	dw	8A00h
020A:4E2F  4614			data_599	dw	4614h
020A:4E31  A09A			data_600	dw	0A09Ah
020A:4E33  FC07			data_601	dw	0FC07h
020A:4E35  E214			data_602	dw	0E214h
020A:4E37  80F6			data_603	dw	80F6h
020A:4E39  00F9			data_604	dw	0F9h
020A:4E3B  3F75			data_605	dw	3F75h
020A:4E3D  80B9			data_606	dw	80B9h
020A:4E3F  BF00			data_607	dw	0BF00h
020A:4E41  07ED			data_608	dw	7EDh
020A:4E43  5AE8			data_609	dw	5AE8h
020A:4E45  73EC			data_610	dw	73ECh
020A:4E47  8934			data_611	dw	8934h
020A:4E49  D516			data_612	dw	0D516h
020A:4E4B  B235			data_613	dw	0B235h
020A:4E4D  9A3A			data_614	dw	9A3Ah
020A:4E4F  07A0			data_615	dw	7A0h
020A:4E51  14FC			data_616	dw	14FCh
020A:4E53  04B1			data_617	dw	4B1h
020A:4E55  02B3			data_618	dw	2B3h
020A:4E57  F2BE			data_619	dw	0F2BEh
020A:4E59  9A07			data_620	dw	9A07h
020A:4E5B  0620			data_621	dw	620h
020A:4E5D  FC			data_622	db	0FCh
020A:4E5E  3C14			data_623	dw	3C14h
020A:4E60  741B			data_624	dw	741Bh
020A:4E62  8019			data_625	dw	8019h
020A:4E64  00F9			data_626	dw	0F9h
020A:4E66  1475			data_627	dw	1475h
020A:4E68  B9 0080				mov	cx,80h
020A:4E6B  BF 07F2				mov	di,7F2h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 159

020A:4E6E  E8 EC2F		;*		call	sub_37			;*(3AA0)
020A:4E6E  E8 2F EC				db	0E8h, 2Fh,0ECh
020A:4E71  0973			data_630	dw	973h
020A:4E73  1689			data_631	dw	1689h
020A:4E75  35D7			data_632	dw	35D7h
020A:4E77  80 0E 35D3 08			or	data_442,8		; (020A:35D3=0C6h)
020A:4E7C			loc_574:
020A:4E7C  E8 0BF5				call	sub_63			; (5A74)
020A:4E7F  E8			data_633	db	0E8h
020A:4E80  0806			data_634	dw	806h
020A:4E82  38E9			data_635	dw	38E9h
020A:4E84  E7 2E				out	2Eh,ax			; port 2Eh ??I/O Non-standard
020A:4E86  FF 36 38A3				push	data_495		; (020A:38A3=6C7h)
020A:4E8A  06					push	es
020A:4E8B  3E80			data_638	dw	3E80h
020A:4E8D  29			data_639	db	29h
020A:4E8E  13			data_640	db	13h
020A:4E8F  01 75 37				add	[di+37h],si
020A:4E92  B4 02				mov	ah,2
020A:4E94  32 FF				xor	bh,bh			; Zero register
020A:4E96  BA 0500				mov	dx,500h
020A:4E99  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:4E99  9A					db	9Ah
020A:4E9A  2BA8 14FC				dw	2BA8h, 14FCh
020A:4E9E  BE 0033				mov	si,33h
020A:4EA1  B9 0623				mov	cx,623h
020A:4EA4  81 E9 0033				sub	cx,33h
020A:4EA8  49					dec	cx
020A:4EA9  E8 21B4				call	sub_96			; (7060)

020A:4EAC			locloop_576:
020A:4EAC  26: 8A 14				mov	dl,es:[si]
020A:4EAF  80 EA 23				sub	dl,23h			; '#'
020A:4EB2  80 FA 23				cmp	dl,23h			; '#'
020A:4EB5  74 05				je	loc_577			; Jump if equal
020A:4EB7  80 FA 40				cmp	dl,40h			; '@'
020A:4EBA  75 02				jne	loc_578			; Jump if not equal
020A:4EBC			loc_577:
020A:4EBC  B2 20				mov	dl,20h			; ' '
020A:4EBE			loc_578:
020A:4EBE  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:4EBE  9A					db	9Ah
020A:4EBF  07A0 14FC				dw	7A0h, 14FCh
020A:4EC3  46					inc	si
020A:4EC4  E2 E6				loop	locloop_576		; Loop if cx > 0

020A:4EC6  E9 00C9				jmp	loc_588			; (4F92)
							                        ;* No entry point to code
020A:4EC9  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:4ECD  BE 0033				mov	si,33h
020A:4ED0  B9 0623				mov	cx,623h
020A:4ED3  81 E9 0033				sub	cx,33h
020A:4ED7  E8 047E				call	sub_50			; (5358)
020A:4EDA  B7 07				mov	bh,7
020A:4EDC  8A 16 1206				mov	dl,data_140		; (020A:1206=0)
020A:4EE0  BF 0320				mov	di,320h
020A:4EE3  03 3E 131D				add	di,data_146		; (020A:131D=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 160

020A:4EE7  E8 215E				call	sub_92			; (7048)

020A:4EEA			locloop_579:
020A:4EEA  8A DF				mov	bl,bh
020A:4EEC  1E					push	ds
020A:4EED  E8 2155				call	sub_91			; (7045)
020A:4EF0  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:4EF5  1F					pop	ds
020A:4EF6  74 25				jz	loc_582			; Jump if zero
020A:4EF8  80 3C 63				cmp	byte ptr [si],63h	; 'c'
020A:4EFB  75 06				jne	loc_580			; Jump if not equal
020A:4EFD  B7 0F				mov	bh,0Fh
020A:4EFF  8A DF				mov	bl,bh
020A:4F01  EB 0E				jmp	short loc_581		; (4F11)
020A:4F03			loc_580:
020A:4F03  80 3C 46				cmp	byte ptr [si],46h	; 'F'
020A:4F06  75 23				jne	loc_583			; Jump if not equal
020A:4F08  1E					push	ds
020A:4F09  E8 2139				call	sub_91			; (7045)
020A:4F0C  8A 1E 1207				mov	bl,data_141		; (020A:1207=0)
020A:4F10  1F					pop	ds
020A:4F11			loc_581:
020A:4F11  FC					cld				; Clear direction
020A:4F12  B0 20				mov	al,20h			; ' '
020A:4F14  AA					stosb				; Store al to es:[di]
020A:4F15  46					inc	si
020A:4F16  26: 88 1D				mov	es:[di],bl
020A:4F19  47					inc	di
020A:4F1A  49					dec	cx
020A:4F1B  EB 1C				jmp	short loc_585		; (4F39)
020A:4F1D			loc_582:
020A:4F1D  81 3C 207C				cmp	word ptr [si],207Ch
020A:4F21  74 0D				je	loc_584			; Jump if equal
020A:4F23  81 3C 7C7C				cmp	word ptr [si],7C7Ch
020A:4F27  74 07				je	loc_584			; Jump if equal
020A:4F29  EB 0E				jmp	short loc_585		; (4F39)
020A:4F2B			loc_583:
020A:4F2B  80 3C A3				cmp	byte ptr [si],0A3h
020A:4F2E  72 09				jb	loc_585			; Jump if below
020A:4F30			loc_584:
020A:4F30  1E					push	ds
020A:4F31  E8 2111				call	sub_91			; (7045)
020A:4F34  8A 1E 1206				mov	bl,data_140		; (020A:1206=0)
020A:4F38  1F					pop	ds
020A:4F39			loc_585:
020A:4F39  FC					cld				; Clear direction
020A:4F3A  50					push	ax
020A:4F3B  AC					lodsb				; String [si] to al
020A:4F3C  2C 23				sub	al,23h			; '#'
020A:4F3E  AA					stosb				; Store al to es:[di]
020A:4F3F  58					pop	ax
020A:4F40  26: 88 1D				mov	es:[di],bl
020A:4F43  47					inc	di
020A:4F44  E2 A4				loop	locloop_579		; Loop if cx > 0

020A:4F46  BE 0001				mov	si,1
020A:4F49  B9 001A				mov	cx,1Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 161

020A:4F4C  81 E9 0001				sub	cx,1
020A:4F50  BF 016B				mov	di,16Bh
020A:4F53  81 EF 0096				sub	di,96h
020A:4F57  D1 E7				shl	di,1			; Shift w/zeros fill
020A:4F59  1E					push	ds
020A:4F5A  E8 20E8				call	sub_91			; (7045)
020A:4F5D  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:4F61  1F					pop	ds
020A:4F62  FC					cld				; Clear direction

020A:4F63			locloop_586:
020A:4F63  A4					movsb				; Mov [si] to es:[di]
020A:4F64  47					inc	di
020A:4F65  E2 FC				loop	locloop_586		; Loop if cx > 0

020A:4F67  BE 001A				mov	si,1Ah
020A:4F6A  B9 001A				mov	cx,1Ah
020A:4F6D  81 E9 0001				sub	cx,1
020A:4F71  BF 016B				mov	di,16Bh
020A:4F74  81 EF 0096				sub	di,96h
020A:4F78  D1 E7				shl	di,1			; Shift w/zeros fill
020A:4F7A  81 C7 00A0				add	di,0A0h
020A:4F7E  1E					push	ds
020A:4F7F  E8 20C3				call	sub_91			; (7045)
020A:4F82  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:4F86  1F					pop	ds
020A:4F87  FC					cld				; Clear direction

020A:4F88			locloop_587:
020A:4F88  A4					movsb				; Mov [si] to es:[di]
020A:4F89  47					inc	di
020A:4F8A  E2 FC				loop	locloop_587		; Loop if cx > 0

020A:4F8C  E8 20B6				call	sub_91			; (7045)
020A:4F8F  E8 03EA				call	sub_51			; (537C)
020A:4F92			loc_588:
020A:4F92  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:4F92  9A					db	9Ah
020A:4F93  0760 14FC				dw	760h, 14FCh
020A:4F97  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:4F9C  9C					pushf				; Push flags
020A:4F9D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:4FA2  5A					pop	dx
020A:4FA3  8E C2				mov	es,dx
020A:4FA5  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:4FAA  5A					pop	dx
020A:4FAB  75 0A				jnz	loc_589			; Jump if not zero
020A:4FAD  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:4FB2  74 03				je	loc_589			; Jump if equal
020A:4FB4  E8 2405				call	sub_103			; (73BC)
020A:4FB7			loc_589:
020A:4FB7  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:4FBC  9D					popf				; Pop flags
020A:4FBD  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:4FC2  E9 E5F8				jmp	loc_282			; (35BD)
020A:4FC5			loc_590:
020A:4FC5  FE 06 14FA				inc	data_157		; (020A:14FA=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 162

020A:4FC9  80 3E 14FA 03			cmp	data_157,3		; (020A:14FA=0)
020A:4FCE  72 05				jb	loc_591			; Jump if below
020A:4FD0  C6 06 14FA 00			mov	data_157,0		; (020A:14FA=0)
020A:4FD5			loc_591:
020A:4FD5  9A 14FC:2B34		;*		call	far ptr sub_183		;*(14FC:2B34)
020A:4FD5  9A					db	9Ah
020A:4FD6  2B34 14FC				dw	2B34h, 14FCh
020A:4FDA  E8 0337				call	sub_47			; (5314)
020A:4FDD  E9 E5FB				jmp	loc_283			; (35DB)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_44		proc	near
020A:4FE0  F7 06 35E9 0008			test	data_458,8		; (020A:35E9=3C21h)
020A:4FE6  75 03				jnz	loc_592			; Jump if not zero
020A:4FE8  E9 0089				jmp	loc_596			; (5074)
020A:4FEB			loc_592:
020A:4FEB  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:4FF1  75 08				jne	loc_593			; Jump if not equal
020A:4FF3  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:4FF9  74 79				je	loc_596			; Jump if equal
020A:4FFB			loc_593:
020A:4FFB  50					push	ax
020A:4FFC  53					push	bx
020A:4FFD  51					push	cx
020A:4FFE  52					push	dx
020A:4FFF  56					push	si
020A:5000  57					push	di
020A:5001  55					push	bp
020A:5002  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:5007  1E					push	ds
020A:5008  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:500D  06					push	es
020A:500E  BB 1CF8				mov	bx,1CF8h
020A:5011  BA 0007				mov	dx,7
020A:5014  E8 D809		;*		call	sub_30			;*(2820)
020A:5014  E8 09 D8				db	0E8h, 09h,0D8h
020A:5017  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:501C  9C					pushf				; Push flags
020A:501D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5022  5A					pop	dx
020A:5023  8E C2				mov	es,dx
020A:5025  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:502A  5A					pop	dx
020A:502B  75 0A				jnz	loc_594			; Jump if not zero
020A:502D  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:5032  74 03				je	loc_594			; Jump if equal
020A:5034  E8 2385				call	sub_103			; (73BC)
020A:5037			loc_594:
020A:5037  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:503C  9D					popf				; Pop flags
020A:503D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5042  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5047  9C					pushf				; Push flags
020A:5048  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 163

020A:504D  5A					pop	dx
020A:504E  8E DA				mov	ds,dx
020A:5050  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:5055  5A					pop	dx
020A:5056  75 0A				jnz	loc_595			; Jump if not zero
020A:5058  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:505D  74 03				je	loc_595			; Jump if equal
020A:505F  E8 235A				call	sub_103			; (73BC)
020A:5062			loc_595:
020A:5062  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5067  9D					popf				; Pop flags
020A:5068  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:506D  5D					pop	bp
020A:506E  5F					pop	di
020A:506F  5E					pop	si
020A:5070  5A					pop	dx
020A:5071  59					pop	cx
020A:5072  5B					pop	bx
020A:5073  58					pop	ax
020A:5074			loc_596:
020A:5074  C3					retn
				sub_44		endp

							                        ;* No entry point to code
020A:5075  87 DB				xchg	bx,bx
020A:5077  90					nop
020A:5078  50					push	ax
020A:5079  53					push	bx
020A:507A  51					push	cx
020A:507B  52					push	dx
020A:507C  56					push	si
020A:507D  57					push	di
020A:507E  55					push	bp
020A:507F  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:5084  1E					push	ds
020A:5085  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:508A  06					push	es
020A:508B  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (020A:0000=1828h)
020A:5090  BE 0008				mov	si,8
020A:5093  E8 1FAF				call	sub_91			; (7045)
020A:5096  83 3E 30BC 06			cmp	data_361,6		; (020A:30BC=5441h)
020A:509B  76 02				jbe	loc_597			; Jump if below or =
020A:509D  EB 78				jmp	short loc_606		; (5117)
020A:509F			loc_597:
020A:509F  BF 789B				mov	di,789Bh
020A:50A2  BB 40C2				mov	bx,40C2h
020A:50A5  26: 8A 44 05				mov	al,es:[si+5]
020A:50A9  25 000F				and	ax,0Fh
020A:50AC  D7					xlat				; al=[al+[bx]] table
020A:50AD  0A C0				or	al,al			; Zero ?
020A:50AF  75 04				jnz	loc_598			; Jump if not zero
020A:50B1  26: 8A 44 06				mov	al,es:[si+6]
020A:50B5			loc_598:
020A:50B5  3D 0006				cmp	ax,6
020A:50B8  77 03				ja	loc_599			; Jump if above
020A:50BA  E9 00B8				jmp	loc_609			; (5175)
020A:50BD			loc_599:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 164

020A:50BD  8B C8				mov	cx,ax
020A:50BF  26: 8A 44 05				mov	al,es:[si+5]
020A:50C3  24 0C				and	al,0Ch
020A:50C5  83 FE 08				cmp	si,8
020A:50C8  75 02				jne	loc_600			; Jump if not equal
020A:50CA  8A D0				mov	dl,al
020A:50CC			loc_600:
020A:50CC  BF 78AA				mov	di,78AAh
020A:50CF  3A C2				cmp	al,dl
020A:50D1  74 03				je	loc_601			; Jump if equal
020A:50D3  E9 009F				jmp	loc_609			; (5175)
020A:50D6			loc_601:
020A:50D6  3C 08				cmp	al,8
020A:50D8  74 0B				je	loc_602			; Jump if equal
020A:50DA  3C 04				cmp	al,4
020A:50DC  74 07				je	loc_602			; Jump if equal
020A:50DE  3C 00				cmp	al,0
020A:50E0  74 03				je	loc_602			; Jump if equal
020A:50E2  E9 0090				jmp	loc_609			; (5175)
020A:50E5			loc_602:
020A:50E5  BF 787D				mov	di,787Dh
020A:50E8  26: 8B 1C				mov	bx,es:[si]
020A:50EB  26: 8B 44 02				mov	ax,es:[si+2]
020A:50EF  83 FB FF				cmp	bx,0FFFFh
020A:50F2  75 07				jne	loc_603			; Jump if not equal
020A:50F4  3D FFFF				cmp	ax,0FFFFh
020A:50F7  75 02				jne	loc_603			; Jump if not equal
020A:50F9  EB 13				jmp	short loc_605		; (510E)
020A:50FB			loc_603:
020A:50FB  03 F1				add	si,cx
020A:50FD  26: 3B 1C				cmp	bx,es:[si]
020A:5100  72 0A				jb	loc_604			; Jump if below
020A:5102  77 71				ja	loc_609			; Jump if above
020A:5104  26: 3B 44 02				cmp	ax,es:[si+2]
020A:5108  76 02				jbe	loc_604			; Jump if below or =
020A:510A  77 69				ja	loc_609			; Jump if above
020A:510C			loc_604:
020A:510C  EB 91				jmp	short loc_597		; (509F)
020A:510E			loc_605:
020A:510E  BF 788C				mov	di,788Ch
020A:5111  03 F1				add	si,cx
020A:5113  3B F5				cmp	si,bp
020A:5115  75 5E				jne	loc_609			; Jump if not equal
020A:5117			loc_606:
020A:5117  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:511C  9C					pushf				; Push flags
020A:511D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5122  5A					pop	dx
020A:5123  8E C2				mov	es,dx
020A:5125  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:512A  5A					pop	dx
020A:512B  75 0A				jnz	loc_607			; Jump if not zero
020A:512D  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:5132  74 03				je	loc_607			; Jump if equal
020A:5134  E8 2285				call	sub_103			; (73BC)
020A:5137			loc_607:
020A:5137  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 165

020A:513C  9D					popf				; Pop flags
020A:513D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5142  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5147  9C					pushf				; Push flags
020A:5148  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:514D  5A					pop	dx
020A:514E  8E DA				mov	ds,dx
020A:5150  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:5155  5A					pop	dx
020A:5156  75 0A				jnz	loc_608			; Jump if not zero
020A:5158  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:515D  74 03				je	loc_608			; Jump if equal
020A:515F  E8 225A				call	sub_103			; (73BC)
020A:5162			loc_608:
020A:5162  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5167  9D					popf				; Pop flags
020A:5168  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:516D  5D					pop	bp
020A:516E  5F					pop	di
020A:516F  5E					pop	si
020A:5170  5A					pop	dx
020A:5171  59					pop	cx
020A:5172  5B					pop	bx
020A:5173  58					pop	ax
020A:5174  C3					retn
020A:5175			loc_609:
020A:5175  E8 1ECD				call	sub_91			; (7045)
020A:5178  56					push	si
020A:5179  BD 25B5				mov	bp,25B5h
020A:517C  80 FA 08				cmp	dl,8
020A:517F  74 0F				je	loc_610			; Jump if equal
020A:5181  80 FA 04				cmp	dl,4
020A:5184  74 0F				je	loc_611			; Jump if equal
020A:5186  80 FA 00				cmp	dl,0
020A:5189  74 0F				je	loc_612			; Jump if equal
020A:518B  BE 7851				mov	si,7851h
020A:518E  EB 0F				jmp	short loc_613		; (519F)
020A:5190			loc_610:
020A:5190  BE 7846				mov	si,7846h
020A:5193  EB 0A				jmp	short loc_613		; (519F)
020A:5195			loc_611:
020A:5195  BE 7830				mov	si,7830h
020A:5198  EB 05				jmp	short loc_613		; (519F)
020A:519A			loc_612:
020A:519A  BE 783B				mov	si,783Bh
020A:519D  EB 00				jmp	short loc_613		; (519F)
020A:519F			loc_613:
020A:519F  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:519F  9A					db	9Ah
020A:51A0  4160 14FC				dw	4160h, 14FCh
020A:51A4  BD 25C0				mov	bp,25C0h
020A:51A7  8C C0				mov	ax,es
020A:51A9  2E: 3B 06 38A1			cmp	ax,cs:data_494		; (020A:38A1=2619h)
020A:51AE  75 09				jne	loc_614			; Jump if not equal
020A:51B0  BE 7867				mov	si,7867h
020A:51B3  2E: A1 38A3				mov	ax,cs:data_495		; (020A:38A3=6C7h)
020A:51B7  EB 03				jmp	short loc_615		; (51BC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 166

020A:51B9			loc_614:
020A:51B9  BE 7872				mov	si,7872h
020A:51BC			loc_615:
020A:51BC  50					push	ax
020A:51BD  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:51BD  9A					db	9Ah
020A:51BE  4160 14FC				dw	4160h, 14FCh
020A:51C2  58					pop	ax
020A:51C3  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:51C3  9A					db	9Ah
020A:51C4  021C 14FC				dw	21Ch, 14FCh
020A:51C8  5E					pop	si
020A:51C9  8B C6				mov	ax,si
020A:51CB  BD 25DA				mov	bp,25DAh
020A:51CE  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:51CE  9A					db	9Ah
020A:51CF  021C 14FC				dw	21Ch, 14FCh
020A:51D3  BD 25E1				mov	bp,25E1h
020A:51D6  A0 2B39				mov	al,byte ptr data_241	; (020A:2B39=4Fh)
020A:51D9  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:51D9  9A					db	9Ah
020A:51DA  022C 14FC				dw	22Ch, 14FCh
020A:51DE  8B F7				mov	si,di
020A:51E0  BD 25E4				mov	bp,25E4h
020A:51E3  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:51E3  9A					db	9Ah
020A:51E4  4160 14FC				dw	4160h, 14FCh
020A:51E8  E9 19D8				jmp	loc_938			; (6BC3)
020A:51EB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_45		proc	near
020A:51EC  C3					retn
				sub_45		endp

020A:51ED  00 00				add	[bx+si],al
020A:51EF  00 50 53				add	[bx+si+53h],dl
020A:51F2  51					push	cx
020A:51F3  52					push	dx
020A:51F4  55					push	bp
020A:51F5  56					push	si
020A:51F6  57					push	di
020A:51F7  06					push	es
020A:51F8  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:51FD  74 6B				je	loc_623			; Jump if equal
020A:51FF  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5203  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5207  BE 0096				mov	si,96h
020A:520A  BA 0A36				mov	dx,0A36h
020A:520D  8B 3E 131D				mov	di,data_146		; (020A:131D=0)
020A:5211  E8 0144				call	sub_50			; (5358)
020A:5214  B9 0866				mov	cx,866h
020A:5217  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:521C  75 03				jne	loc_617			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 167

020A:521E  B9 0816				mov	cx,816h
020A:5221			loc_617:
020A:5221  81 E9 0096				sub	cx,96h
020A:5225  FC					cld				; Clear direction

020A:5226			locloop_618:
020A:5226  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:522B  75 28				jne	loc_621			; Jump if not equal
020A:522D  81 FE 036A				cmp	si,36Ah
020A:5231  72 12				jb	loc_619			; Jump if below
020A:5233  81 FE 0398				cmp	si,398h
020A:5237  76 1C				jbe	loc_621			; Jump if below or =
020A:5239  81 FE 0649				cmp	si,649h
020A:523D  72 06				jb	loc_619			; Jump if below
020A:523F  81 FE 0655				cmp	si,655h
020A:5243  76 10				jbe	loc_621			; Jump if below or =
020A:5245			loc_619:
020A:5245  AC					lodsb				; String [si] to al
020A:5246  3C 80				cmp	al,80h
020A:5248  72 08				jb	loc_620			; Jump if below
020A:524A  53					push	bx
020A:524B  BB 2B61				mov	bx,2B61h
020A:524E  2C 80				sub	al,80h
020A:5250  D7					xlat				; al=[al+[bx]] table
020A:5251  5B					pop	bx
020A:5252			loc_620:
020A:5252  AA					stosb				; Store al to es:[di]
020A:5253  EB 01				jmp	short loc_622		; (5256)
020A:5255			loc_621:
020A:5255  A4					movsb				; Mov [si] to es:[di]
020A:5256			loc_622:
020A:5256  87 D6				xchg	dx,si
020A:5258  8A 04				mov	al,[si]
020A:525A  87 F2				xchg	si,dx
020A:525C  42					inc	dx
020A:525D  D7					xlat				; al=[al+[bx]] table
020A:525E  26: 88 05				mov	es:[di],al
020A:5261  47					inc	di
020A:5262  E2 C2				loop	locloop_618		; Loop if cx > 0

020A:5264  E8 0115				call	sub_51			; (537C)
020A:5267  E9 009F				jmp	loc_634			; (5309)
020A:526A			loc_623:
020A:526A  33 ED				xor	bp,bp			; Zero register
020A:526C  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=5Ch)
020A:5271  75 05				jne	loc_624			; Jump if not equal
020A:5273  E8 0A0A				call	sub_70			; (5C80)
020A:5276  EB 0A				jmp	short loc_625		; (5282)
020A:5278			loc_624:
020A:5278  B4 03				mov	ah,3
020A:527A  32 FF				xor	bh,bh			; Zero register
020A:527C  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:527C  9A					db	9Ah
020A:527D  2BA8 14FC				dw	2BA8h, 14FCh
020A:5281  52					push	dx
020A:5282			loc_625:
020A:5282  B4 02				mov	ah,2
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 168

020A:5284  32 FF				xor	bh,bh			; Zero register
020A:5286  33 D2				xor	dx,dx			; Zero register
020A:5288  80 3E 2B45 01			cmp	byte ptr data_249,1	; (020A:2B45='NI 1\APPLIC 1')
020A:528D  75 03				jne	loc_626			; Jump if not equal
020A:528F  BA 1702				mov	dx,1702h
020A:5292			loc_626:
020A:5292  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5292  9A					db	9Ah
020A:5293  2BA8 14FC				dw	2BA8h, 14FCh
020A:5297  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:529B  B9 0866				mov	cx,866h
020A:529E  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=5Ch)
020A:52A3  75 03				jne	loc_627			; Jump if not equal
020A:52A5  B9 0816				mov	cx,816h
020A:52A8			loc_627:
020A:52A8  81 E9 0096				sub	cx,96h
020A:52AC  49					dec	cx
020A:52AD  BE 0096				mov	si,96h
020A:52B0  BF 0A36				mov	di,0A36h
020A:52B3  80 3E 2B45 01			cmp	byte ptr data_249,1	; (020A:2B45='NI 1\APPLIC 1')
020A:52B8  75 09				jne	locloop_628		; Jump if not equal
020A:52BA  B9 004C				mov	cx,4Ch
020A:52BD  BE 07C8				mov	si,7C8h
020A:52C0  BF 1168				mov	di,1168h

020A:52C3			locloop_628:
020A:52C3  8A 05				mov	al,[di]
020A:52C5  D7					xlat				; al=[al+[bx]] table
020A:52C6  3C 00				cmp	al,0
020A:52C8  75 04				jne	loc_629			; Jump if not equal
020A:52CA  B2 20				mov	dl,20h			; ' '
020A:52CC  EB 11				jmp	short loc_631		; (52DF)
020A:52CE			loc_629:
020A:52CE  3C 0F				cmp	al,0Fh
020A:52D0  75 0B				jne	loc_630			; Jump if not equal
020A:52D2  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:52D7  9A 14FC:0770		;*		call	far ptr sub_165		;*(14FC:0770)
020A:52D7  9A					db	9Ah
020A:52D8  0770 14FC				dw	770h, 14FCh
020A:52DC  45					inc	bp
020A:52DD			loc_630:
020A:52DD  8A 14				mov	dl,[si]
020A:52DF			loc_631:
020A:52DF  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:52DF  9A					db	9Ah
020A:52E0  07A0 14FC				dw	7A0h, 14FCh
020A:52E4  0B ED				or	bp,bp			; Zero ?
020A:52E6  74 07				jz	loc_632			; Jump if zero
020A:52E8  9A 14FC:0770		;*		call	far ptr sub_165		;*(14FC:0770)
020A:52E8  9A					db	9Ah
020A:52E9  0770 14FC				dw	770h, 14FCh
020A:52ED  33 ED				xor	bp,bp			; Zero register
020A:52EF			loc_632:
020A:52EF  46					inc	si
020A:52F0  47					inc	di
020A:52F1  E2 D0				loop	locloop_628		; Loop if cx > 0

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 169

020A:52F3  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=5Ch)
020A:52F8  75 05				jne	loc_633			; Jump if not equal
020A:52FA  E8 09C3				call	sub_71			; (5CC0)
020A:52FD  EB 0A				jmp	short loc_634		; (5309)
020A:52FF			loc_633:
020A:52FF  B4 02				mov	ah,2
020A:5301  32 FF				xor	bh,bh			; Zero register
020A:5303  5A					pop	dx
020A:5304  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5304  9A					db	9Ah
020A:5305  2BA8 14FC				dw	2BA8h, 14FCh
020A:5309			loc_634:
020A:5309  07					pop	es
020A:530A  5F					pop	di
020A:530B  5E					pop	si
020A:530C  5D					pop	bp
020A:530D  5A					pop	dx
020A:530E  59					pop	cx
020A:530F  5B					pop	bx
020A:5310  58					pop	ax
020A:5311  C3					retn
020A:5312  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_47		proc	near
020A:5314  E8 FED9		;*		call	sub_46			;*(51F0)
020A:5314  E8 D9 FE				db	0E8h,0D9h,0FEh
020A:5317  50					push	ax
020A:5318  53					push	bx
020A:5319  52					push	dx
020A:531A  B4 02				mov	ah,2
020A:531C  32 FF				xor	bh,bh			; Zero register
020A:531E  BA 184F				mov	dx,184Fh
020A:5321  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5321  9A					db	9Ah
020A:5322  2BA8 14FC				dw	2BA8h, 14FCh
020A:5326  5A					pop	dx
020A:5327  5B					pop	bx
020A:5328  58					pop	ax
020A:5329  C3					retn
				sub_47		endp

020A:532A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_48		proc	near
020A:532C			loc_635:
020A:532C  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:5331  75 05				jne	loc_636			; Jump if not equal
020A:5333  C6 06 2B45 01			mov	byte ptr data_249,1	; (020A:2B45='NI 1\APPLIC 1')
020A:5338			loc_636:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 170

020A:5338  E8 FFD9				call	sub_47			; (5314)
020A:533B  C6 06 2B45 00			mov	byte ptr data_249,0	; (020A:2B45='NI 1\APPLIC 1')
020A:5340  C3					retn
				sub_48		endp

020A:5341  87 DB				xchg	bx,bx
020A:5343  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_49		proc	near
020A:5344  80 3E 4394 01			cmp	byte ptr ds:[4394h],1	; (020A:4394=73h)
020A:5349  74 0A				je	loc_637			; Jump if equal
020A:534B  80 3E 4394 15			cmp	byte ptr ds:[4394h],15h	; (020A:4394=73h)
020A:5350  74 03				je	loc_637			; Jump if equal
020A:5352  E9 FE9B		;*		jmp	loc_616			;*(51F0)
020A:5352  E9 9B FE				db	0E9h, 9Bh,0FEh
020A:5355			loc_637:
020A:5355  EB D5				jmp	short loc_635		; (532C)
				sub_49		endp

020A:5357  8090					dw	8090h
020A:5359  3E: 28 13				sub	ds:[bp+di],dl
020A:535C  01 74 1C				add	[si+1Ch],si
020A:535F  52					push	dx
020A:5360  BA 03DA				mov	dx,3DAh
020A:5363			loc_638:
020A:5363  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:5364  A8 08				test	al,8
020A:5366  75 FB				jnz	loc_638			; Jump if not zero
020A:5368  BA 03D8				mov	dx,3D8h
020A:536B  1E					push	ds
020A:536C  33 C0				xor	ax,ax			; Zero register
020A:536E  8E D8				mov	ds,ax
020A:5370  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:5373  24 F7				and	al,0F7h
020A:5375  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:5378  EE					out	dx,al			; port 3D8h, CGA video control
020A:5379  1F					pop	ds
020A:537A  5A					pop	dx
020A:537B			loc_639:
020A:537B  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_51		proc	near
020A:537C  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:5381  75 17				jne	loc_640			; Jump if not equal
020A:5383  0E					push	cs
020A:5384  57					push	di
020A:5385  06					push	es
020A:5386  B4 FF				mov	ah,0FFh
020A:5388  B9 07D0				mov	cx,7D0h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 171

020A:538B  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:538F  8B 3E 131D				mov	di,data_146		; (020A:131D=0)
020A:5393  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:5395  07					pop	es
020A:5396  5F					pop	di
020A:5397  59					pop	cx
020A:5398  EB 1B				jmp	short loc_641		; (53B5)
020A:539A			loc_640:
020A:539A  80 3E 1328 01			cmp	data_150,1		; (020A:1328=0)
020A:539F  74 14				je	loc_641			; Jump if equal
020A:53A1  52					push	dx
020A:53A2  BA 03D8				mov	dx,3D8h
020A:53A5  1E					push	ds
020A:53A6  33 C0				xor	ax,ax			; Zero register
020A:53A8  8E D8				mov	ds,ax
020A:53AA  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:53AD  0C 08				or	al,8
020A:53AF  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:53B2  EE					out	dx,al			; port 3D8h, CGA video control
020A:53B3  1F					pop	ds
020A:53B4  5A					pop	dx
020A:53B5			loc_641:
020A:53B5  C3					retn
				sub_51		endp

020A:53B6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_52		proc	near
020A:53B8  80 3E 1328 01			cmp	data_150,1		; (020A:1328=0)
020A:53BD  75 22				jne	loc_643			; Jump if not equal
020A:53BF  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:53C4  74 1B				je	loc_643			; Jump if equal
020A:53C6  D1 E7				shl	di,1			; Shift w/zeros fill
020A:53C8  26: 88 25				mov	es:[di],ah
020A:53CB  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:53D0  74 03				je	loc_642			; Jump if equal
020A:53D2  D1 EF				shr	di,1			; Shift w/zeros fill
020A:53D4  C3			data_647	db	0C3h
020A:53D5			loc_642:
020A:53D5  51			data_648	db	51h
020A:53D6  B4			data_649	db	0B4h
020A:53D7  FF			data_650	db	0FFh
020A:53D8  B9			data_651	db	0B9h
020A:53D9  01			data_652	db	1
020A:53DA  00 CD				add	ch,cl
020A:53DC  10 D1				adc	cl,dl
020A:53DE  EF					out	dx,ax			; port 2E00h ??I/O Non-standard
020A:53DF  59					pop	cx
020A:53E0  C3					retn
020A:53E1			loc_643:
020A:53E1  51					push	cx
020A:53E2  52			data_653	db	52h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 172

020A:53E3  50					push	ax
020A:53E4  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:53E9  74 20				je	loc_647			; Jump if equal
020A:53EB  D1 E7				shl	di,1			; Shift w/zeros fill
020A:53ED  BA 03DA				mov	dx,3DAh
020A:53F0			loc_644:
020A:53F0  FB					sti				; Enable interrupts
020A:53F1  B5 09				mov	ch,9
020A:53F3  FA					cli				; Disable interrupts
020A:53F4  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:53F5  A8 08				test	al,8
020A:53F7  75 09				jnz	loc_646			; Jump if not zero
020A:53F9  A8 01				test	al,1
020A:53FB  75 F3				jnz	loc_644			; Jump if not zero
020A:53FD			loc_645:
020A:53FD  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:53FE  84 C5				test	al,ch
020A:5400  74 FB				jz	loc_645			; Jump if zero
020A:5402			loc_646:
020A:5402  FC					cld				; Clear direction
020A:5403  8A C4				mov	al,ah
020A:5405  AA					stosb				; Store al to es:[di]
020A:5406  D1FB			data_654	dw	0D1FBh
020A:5408  EBEF			data_655	dw	0EBEFh
020A:540A  8033			data_656	dw	8033h
020A:540C  20FC			data_657	dw	20FCh
020A:540E  72 2E				jc	loc_650			; Jump if carry Set
020A:5410  53					push	bx
020A:5411  50					push	ax
020A:5412  B2 50				mov	dl,50h			; 'P'
020A:5414  8B C7				mov	ax,di
020A:5416  F6 F2				div	dl			; al, ah rem = ax/reg
020A:5418  86 C4				xchg	al,ah
020A:541A  8B D0				mov	dx,ax
020A:541C  B4 02				mov	ah,2
020A:541E  32 FF				xor	bh,bh			; Zero register
020A:5420  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5420  9A					db	9Ah
020A:5421  2BA8 14FC				dw	2BA8h, 14FCh
020A:5425  58					pop	ax
020A:5426  80 3E 2B41 01			cmp	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:542B  75 09				jne	loc_648			; Jump if not equal
020A:542D  8A C4				mov	al,ah
020A:542F  9A 14FC:07C8		;*		call	far ptr sub_167		;*(14FC:07C8)
020A:542F  9A					db	9Ah
020A:5430  07C8 14FC				dw	7C8h, 14FCh
020A:5434  EB 07				jmp	short loc_649		; (543D)
020A:5436			loc_648:
020A:5436  8A D4				mov	dl,ah
020A:5438  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:5438  9A					db	9Ah
020A:5439  07A0 14FC				dw	7A0h, 14FCh
020A:543D			loc_649:
020A:543D  5B					pop	bx
020A:543E			loc_650:
020A:543E  58					pop	ax
020A:543F  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 173

020A:5440  59					pop	cx
020A:5441  C3					retn
				sub_52		endp

020A:5442  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_53		proc	near
020A:5444  80 3E 1328 01			cmp	data_150,1		; (020A:1328=0)
020A:5449  75 25				jne	loc_652			; Jump if not equal
020A:544B  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:5450  74 1E				je	loc_652			; Jump if equal
020A:5452  D1 E7				shl	di,1			; Shift w/zeros fill
020A:5454  26: 88 65 01				mov	es:[di+1],ah
020A:5458  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:545D  74 04				je	loc_651			; Jump if equal
020A:545F  D1 EF				shr	di,1			; Shift w/zeros fill
020A:5461  47					inc	di
020A:5462  C3					retn
020A:5463			loc_651:
020A:5463  51					push	cx
020A:5464  B4 FF				mov	ah,0FFh
020A:5466  B9 0001				mov	cx,1
020A:5469  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:546B  D1 EF				shr	di,1			; Shift w/zeros fill
020A:546D  47					inc	di
020A:546E  59					pop	cx
020A:546F  C3					retn
020A:5470			loc_652:
020A:5470  51					push	cx
020A:5471  52					push	dx
020A:5472  50					push	ax
020A:5473  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:5478  74 20				je	loc_656			; Jump if equal
020A:547A  D1 E7				shl	di,1			; Shift w/zeros fill
020A:547C  47					inc	di
020A:547D  BA 03DA				mov	dx,3DAh
020A:5480			loc_653:
020A:5480  FB					sti				; Enable interrupts
020A:5481  B5 09				mov	ch,9
020A:5483  FA					cli				; Disable interrupts
020A:5484  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:5485  A8 08				test	al,8
020A:5487  75 09				jnz	loc_655			; Jump if not zero
020A:5489  A8 01				test	al,1
020A:548B  75 F3				jnz	loc_653			; Jump if not zero
020A:548D			loc_654:
020A:548D  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:548E  84 C5				test	al,ch
020A:5490  74 FB				jz	loc_654			; Jump if zero
020A:5492			loc_655:
020A:5492  FC					cld				; Clear direction
020A:5493  8A C4				mov	al,ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 174

020A:5495  AA					stosb				; Store al to es:[di]
020A:5496  FB					sti				; Enable interrupts
020A:5497  4F					dec	di
020A:5498  D1 EF				shr	di,1			; Shift w/zeros fill
020A:549A			loc_656:
020A:549A  47					inc	di
020A:549B  58					pop	ax
020A:549C  5A					pop	dx
020A:549D  59					pop	cx
020A:549E  C3					retn
				sub_53		endp

020A:549F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_54		proc	near
020A:54A0  52					push	dx
020A:54A1  E8 1BB9				call	sub_95			; (705D)
020A:54A4  BF 06B9				mov	di,6B9h
020A:54A7  B9 000A				mov	cx,0Ah
020A:54AA  B0 20				mov	al,20h			; ' '
020A:54AC  FC					cld				; Clear direction
020A:54AD  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:54AF  B4 36				mov	ah,36h			; '6'
020A:54B1  32 D2				xor	dl,dl			; Zero register
020A:54B3  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get drive info, drive dl,1=a:
										;   returns ax=sectors per clust
										;   bx=avail clust,cx=bytes/sect
										;   dx=clusters per drive
020A:54B5  3D FFFF				cmp	ax,0FFFFh
020A:54B8  75 03				jne	loc_657			; Jump if not equal
020A:54BA  E9 0096				jmp	loc_663			; (5553)
020A:54BD			loc_657:
020A:54BD  F7 E1				mul	cx			; dx:ax = reg * ax
020A:54BF  F7 E3				mul	bx			; dx:ax = reg * ax
020A:54C1  81 FA 05F5				cmp	dx,5F5h
020A:54C5  72 0F				jb	loc_658			; Jump if below
020A:54C7  56					push	si
020A:54C8  BD 06BE				mov	bp,6BEh
020A:54CB  BE 564A				mov	si,564Ah
020A:54CE  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:54CE  9A					db	9Ah
020A:54CF  4160 14FC				dw	4160h, 14FCh
020A:54D3  5E					pop	si
020A:54D4  EB 7D				jmp	short loc_663		; (5553)
020A:54D6			loc_658:
020A:54D6  B9 2710				mov	cx,2710h
020A:54D9  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:54DB  50					push	ax
020A:54DC  BD 06BE				mov	bp,6BEh
020A:54DF  B3 01				mov	bl,1
020A:54E1  8B C2				mov	ax,dx
020A:54E3  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 175

020A:54E3  9A					db	9Ah
020A:54E4  0288 14FC				dw	288h, 14FCh
020A:54E8  83 ED 04				sub	bp,4
020A:54EB  3E: 8A 4E 00				mov	cl,ds:[bp]
020A:54EF  58					pop	ax
020A:54F0  3D 0000				cmp	ax,0
020A:54F3  75 11				jne	loc_659			; Jump if not equal
020A:54F5  80 F9 20				cmp	cl,20h			; ' '
020A:54F8  74 59				je	loc_663			; Jump if equal
020A:54FA  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:54FF  4D					dec	bp
020A:5500  3E: 88 4E 00				mov	ds:[bp],cl
020A:5504  EB 4D				jmp	short loc_663		; (5553)
020A:5506			loc_659:
020A:5506  80 F9 20				cmp	cl,20h			; ' '
020A:5509  75 02				jne	loc_660			; Jump if not equal
020A:550B  B1 30				mov	cl,30h			; '0'
020A:550D			loc_660:
020A:550D  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:5512  4D					dec	bp
020A:5513  3E: 88 4E 00				mov	ds:[bp],cl
020A:5517  83 C5 02				add	bp,2
020A:551A  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:551F  75 05				jne	loc_661			; Jump if not equal
020A:5521  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:5526			loc_661:
020A:5526  45					inc	bp
020A:5527  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:552C  75 05				jne	loc_662			; Jump if not equal
020A:552E  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:5533			loc_662:
020A:5533  BD 06B9				mov	bp,6B9h
020A:5536  B3 01				mov	bl,1
020A:5538  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:5538  9A					db	9Ah
020A:5539  0288 14FC				dw	288h, 14FCh
020A:553D  83 ED 04				sub	bp,4
020A:5540  3E: 8B 46 00				mov	ax,ds:[bp]
020A:5544  80 FC 20				cmp	ah,20h			; ' '
020A:5547  74 0A				je	loc_663			; Jump if equal
020A:5549  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020A:554E  4D					dec	bp
020A:554F  3E: 89 46 00				mov	ds:[bp],ax
020A:5553			loc_663:
020A:5553  5A					pop	dx
020A:5554  C3					retn
				sub_54		endp

020A:5555  87 DB				xchg	bx,bx
020A:5557  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_55		proc	near
020A:5558  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 176

020A:555D  06					push	es
020A:555E  E8 1AFC				call	sub_95			; (705D)
020A:5561  8A E6				mov	ah,dh
020A:5563  8A 36 30A0				mov	dh,data_348		; (020A:30A0=33h)
020A:5567  BE 1349				mov	si,1349h
020A:556A  BF 0739				mov	di,739h
020A:556D  B9 1355				mov	cx,1355h
020A:5570  81 E9 1349				sub	cx,1349h
020A:5574  BB 1926				mov	bx,1926h
020A:5577			loc_664:
020A:5577  2E: 3A 37				cmp	dh,cs:[bx]
020A:557A  74 0B				je	loc_665			; Jump if equal
020A:557C  43					inc	bx
020A:557D  03 F1				add	si,cx
020A:557F  2E: 80 3F 00				cmp	byte ptr cs:[bx],0
020A:5583  74 02				je	loc_665			; Jump if equal
020A:5585  EB F0				jmp	short loc_664		; (5577)
020A:5587			loc_665:
020A:5587  FC					cld				; Clear direction
020A:5588  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:558A  8A 36 30B0				mov	dh,byte ptr ds:[30B0h]	; (020A:30B0=2Eh)
020A:558E  BE 13C1				mov	si,13C1h
020A:5591  BF 072E				mov	di,72Eh
020A:5594  B9 13C6				mov	cx,13C6h
020A:5597  81 E9 13C1				sub	cx,13C1h
020A:559B  F6 C6 1F				test	dh,1Fh
020A:559E  75 0B				jnz	loc_666			; Jump if not zero
020A:55A0  F6 06 30B2 80			test	data_352,80h		; (020A:30B2=4Fh)
020A:55A5  74 36				jz	loc_668			; Jump if zero
020A:55A7  03 F1				add	si,cx
020A:55A9  EB 32				jmp	short loc_668		; (55DD)
020A:55AB			loc_666:
020A:55AB  03 F1				add	si,cx
020A:55AD  03 F1				add	si,cx
020A:55AF  F6 C6 01				test	dh,1
020A:55B2  75 29				jnz	loc_668			; Jump if not zero
020A:55B4  03 F1				add	si,cx
020A:55B6  F6 C6 02				test	dh,2
020A:55B9  75 22				jnz	loc_668			; Jump if not zero
020A:55BB  03 F1				add	si,cx
020A:55BD  52					push	dx
020A:55BE  8A D6				mov	dl,dh
020A:55C0  80 E2 FB				and	dl,0FBh
020A:55C3  F6 C2 14				test	dl,14h
020A:55C6  5A					pop	dx
020A:55C7  74 06				jz	loc_667			; Jump if zero
020A:55C9  03 F1				add	si,cx
020A:55CB  03 F1				add	si,cx
020A:55CD  EB 0E				jmp	short loc_668		; (55DD)
020A:55CF			loc_667:
020A:55CF  52					push	dx
020A:55D0  8A D6				mov	dl,dh
020A:55D2  80 E2 FB				and	dl,0FBh
020A:55D5  F6 C2 0C				test	dl,0Ch
020A:55D8  5A					pop	dx
020A:55D9  74 02				jz	loc_668			; Jump if zero
020A:55DB  03 F1				add	si,cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 177

020A:55DD			loc_668:
020A:55DD  FC					cld				; Clear direction
020A:55DE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:55E0  80 FC 00				cmp	ah,0
020A:55E3  74 4C				je	loc_672			; Jump if equal
020A:55E5  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:55EA  74 05				je	loc_669			; Jump if equal
020A:55EC  E8 FD55				call	sub_49			; (5344)
020A:55EF  EB 40				jmp	short loc_672		; (5631)
020A:55F1			loc_669:
020A:55F1  BE 0739				mov	si,739h
020A:55F4  BF 0739				mov	di,739h
020A:55F7  81 EF 0096				sub	di,96h
020A:55FB  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:55FF  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5603  B9 1355				mov	cx,1355h
020A:5606  81 E9 1349				sub	cx,1349h

020A:560A			locloop_670:
020A:560A  8A 24				mov	ah,[si]
020A:560C  E8 FDA9				call	sub_52			; (53B8)
020A:560F  47					inc	di
020A:5610  46					inc	si
020A:5611  E2 F7				loop	locloop_670		; Loop if cx > 0

020A:5613  BE			data_658	db	0BEh
020A:5614  2E			data_659	db	2Eh
020A:5615  07					pop	es
020A:5616  2EBF			data_660	dw	2EBFh
020A:5618  8107			data_661	dw	8107h
020A:561A  EF					out	dx,ax			; port 2EFFh ??I/O Non-standard
020A:561B  96					xchg	si,ax
020A:561C  00 03				add	[bp+di],al
020A:561E  3E					db	3Eh
020A:561F  1D B913				sbb	ax,0B913h
020A:5622  C6					db	0C6h
020A:5623  13 81 C1E9				adc	ax,word ptr ds:[0C1E9h][bx+di]	; (020A:C1E9=9A04h)
020A:5627  13 8A E824				adc	cx,[bp+si-17DCh]
020A:562B  8B FD				mov	di,bp
020A:562D  47					inc	di
020A:562E  46					inc	si
020A:562F  E2 F7		;*		loop	locloop_671		;*Loop if cx > 0

020A:562F  E2 F7				db	0E2h,0F7h
020A:5631			loc_672:
020A:5631  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5636  9C					pushf				; Push flags
020A:5637  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:563C  5A					pop	dx
020A:563D  8E C2				mov	es,dx
020A:563F  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:5644  5A					pop	dx
020A:5645  75 0A				jnz	loc_673			; Jump if not zero
020A:5647  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:564C  74 03				je	loc_673			; Jump if equal
020A:564E  E8 1D6B				call	sub_103			; (73BC)
020A:5651			loc_673:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 178

020A:5651  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5656  9D					popf				; Pop flags
020A:5657  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:565C  C3					retn
				sub_55		endp

020A:565D  87 DB				xchg	bx,bx
020A:565F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_56		proc	near
020A:5660  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5664  B9 0011				mov	cx,11h

020A:5667			locloop_674:
020A:5667  C6 47 30 07				mov	byte ptr [bx+30h],7
020A:566B  43					inc	bx
020A:566C  E2 F9				loop	locloop_674		; Loop if cx > 0

020A:566E  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5672  80 3E 35E6 01			cmp	data_456,1		; (020A:35E6=0B4h)
020A:5677  74 0C				je	loc_675			; Jump if equal
020A:5679  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:567D  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:5681  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:5685			loc_675:
020A:5685  C3					retn
				sub_56		endp

020A:5686  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_57		proc	near
020A:5688  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:568C  B9					db	0B9h
020A:568D  11 00				adc	[bx+si],ax

020A:568F			locloop_676:
020A:568F  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:5693  43					inc	bx
020A:5694  E2 F9				loop	locloop_676		; Loop if cx > 0

020A:5696  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:569A  80 3E 35E6 01			cmp	data_456,1		; (020A:35E6=0B4h)
020A:569F  74 0C				je	loc_677			; Jump if equal
020A:56A1  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:56A5  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:56A9  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:56AD			loc_677:
020A:56AD  2E: 80 3E 3E64 01			cmp	byte ptr cs:[3E64h],1	; (020A:3E64=0ACh)
020A:56B3  75 04				jne	loc_678			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 179

020A:56B5  47C6			data_662	dw	47C6h
020A:56B7  0738			data_663	dw	738h
020A:56B9			loc_678:
020A:56B9  87C3			data_664	dw	87C3h
020A:56BB  57DB			data_665	dw	57DBh
020A:56BD  2E56			data_666	dw	2E56h
020A:56BF  FF			data_667	db	0FFh
020A:56C0  36			data_668	db	36h
020A:56C1  A3			data_669	db	0A3h
020A:56C2  38			data_670	db	38h
020A:56C3  06					push	es
020A:56C4  E8 1996				call	sub_95			; (705D)
020A:56C7  88 26 1732				mov	data_175,ah		; (020A:1732=0)
020A:56CB  B9 177E				mov	cx,177Eh
020A:56CE  81 E9 1734				sub	cx,1734h
020A:56D2  BE 1734				mov	si,1734h
020A:56D5  8A C1				mov	al,cl
020A:56D7  F6 E4				mul	ah			; ax = reg * al
020A:56D9  03 F0				add	si,ax
020A:56DB  BF 07C9				mov	di,7C9h
020A:56DE  FC					cld				; Clear direction
020A:56DF  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:56E1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:56E6  9C					pushf				; Push flags
020A:56E7  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:56EC  5A					pop	dx
020A:56ED  8E C2				mov	es,dx
020A:56EF  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:56F4  5A					pop	dx
020A:56F5  75 0A				jnz	loc_679			; Jump if not zero
020A:56F7  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:56FC  74 03				je	loc_679			; Jump if equal
020A:56FE  E8 1CBB				call	sub_103			; (73BC)
020A:5701			loc_679:
020A:5701  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5706  9D					popf				; Pop flags
020A:5707  2E: 8B		data_671	db	8Bh
020A:5709  16			data_672	db	16h
020A:570A  92					xchg	dx,ax
020A:570B  00 5E 5F				add	[bp+5Fh],bl
020A:570E  C3					retn
				sub_57		endp

020A:570F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_59		proc	near
020A:5710  50					push	ax
020A:5711  53					push	bx
020A:5712  51					push	cx
020A:5713  52					push	dx
020A:5714  56					push	si
020A:5715  57					push	di
020A:5716  55					push	bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 180

020A:5717  06					push	es
020A:5718  BD 06AE				mov	bp,6AEh
020A:571B  A1 3084				mov	ax,data_334		; (020A:3084=3A43h)
020A:571E  B3 01				mov	bl,1
020A:5720  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:5720  9A					db	9Ah
020A:5721  0288 14FC				dw	288h, 14FCh
020A:5725  BD 074E				mov	bp,74Eh
020A:5728  A1 3088				mov	ax,data_336		; (020A:3088=4E49h)
020A:572B  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:5731  75 04				jne	loc_680			; Jump if not equal
020A:5733  03 06 3098				add	ax,data_344		; (020A:3098=5C53h)
020A:5737			loc_680:
020A:5737  A3 3096				mov	data_343,ax		; (020A:3096=574Fh)
020A:573A  B3 01				mov	bl,1
020A:573C  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:573C  9A					db	9Ah
020A:573D  0288 14FC				dw	288h, 14FCh
020A:5741  BD 06FE				mov	bp,6FEh
020A:5744  A1 308C				mov	ax,data_338		; (020A:308C=5357h)
020A:5747  B3 01				mov	bl,1
020A:5749  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:5749  9A					db	9Ah
020A:574A  0288 14FC				dw	288h, 14FCh
020A:574E  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5752  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020A:5756  75 03				jne	loc_681			; Jump if not equal
020A:5758  E9 00F7				jmp	loc_697			; (5852)
020A:575B			loc_681:
020A:575B  BE 06AE				mov	si,6AEh
020A:575E  B9 0005				mov	cx,5
020A:5761  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:5766  75 6F				jne	loc_689			; Jump if not equal
020A:5768  B3 03				mov	bl,3
020A:576A  BA 1328				mov	dx,1328h
020A:576D			loc_682:
020A:576D  F6 06 586E 80			test	byte ptr data_674,80h	; (020A:586E=6)
020A:5772  74 0C				jz	loc_683			; Jump if zero
020A:5774  A1 3054				mov	ax,data_311		; (020A:3054=5345h)
020A:5777  39 06 344C				cmp	data_402,ax		; (020A:344C=6C6h)
020A:577B  74 32				je	loc_686			; Jump if equal
020A:577D  E9 00D2				jmp	loc_697			; (5852)
020A:5780			loc_683:
020A:5780  80 FB 02				cmp	bl,2
020A:5783  72 1E				jb	loc_685			; Jump if below
020A:5785  74 0E				jz	loc_684			; Jump if zero
020A:5787  A1 3084				mov	ax,data_334		; (020A:3084=3A43h)
020A:578A  3B 06 3090				cmp	ax,data_340		; (020A:3090=5C3Ah)
020A:578E  74 3A				je	loc_688			; Jump if equal
020A:5790  A3 3090				mov	data_340,ax		; (020A:3090=5C3Ah)
020A:5793  EB 1A				jmp	short loc_686		; (57AF)
020A:5795			loc_684:
020A:5795  A1 308C				mov	ax,data_338		; (020A:308C=5357h)
020A:5798  3B 06 3092				cmp	ax,data_341		; (020A:3092=4957h)
020A:579C  74 2C				je	loc_688			; Jump if equal
020A:579E  A3 3092				mov	data_341,ax		; (020A:3092=4957h)
020A:57A1  EB 0C				jmp	short loc_686		; (57AF)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 181

020A:57A3			loc_685:
020A:57A3  A1 3096				mov	ax,data_343		; (020A:3096=574Fh)
020A:57A6  3B 06 3094				cmp	ax,data_342		; (020A:3094=444Eh)
020A:57AA  74 1E				je	loc_688			; Jump if equal
020A:57AC  A3 3094				mov	data_342,ax		; (020A:3094=444Eh)
020A:57AF			loc_686:
020A:57AF  B4 02				mov	ah,2
020A:57B1  32 FF				xor	bh,bh			; Zero register
020A:57B3  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:57B3  9A					db	9Ah
020A:57B4  2BA8 14FC				dw	2BA8h, 14FCh
020A:57B8  B9 0005				mov	cx,5
020A:57BB  52					push	dx
020A:57BC  56					push	si
020A:57BD  FC					cld				; Clear direction

020A:57BE			locloop_687:
020A:57BE  AC					lodsb				; String [si] to al
020A:57BF  8A D0				mov	dl,al
020A:57C1  9A 14FC:07A0		;*		call	far ptr sub_166		;*(14FC:07A0)
020A:57C1  9A					db	9Ah
020A:57C2  07A0 14FC				dw	7A0h, 14FCh
020A:57C6  E2 F6				loop	locloop_687		; Loop if cx > 0

020A:57C8  5E					pop	si
020A:57C9  5A					pop	dx
020A:57CA			loc_688:
020A:57CA  83 C6 50				add	si,50h
020A:57CD  81 C2 0100				add	dx,100h
020A:57D1  FE CB				dec	bl
020A:57D3  75 98				jnz	loc_682			; Jump if not zero
020A:57D5  EB 7B				jmp	short loc_697		; (5852)
020A:57D7			loc_689:
020A:57D7  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:57DB  A1 3084				mov	ax,data_334		; (020A:3084=3A43h)
020A:57DE  3B 06 3090				cmp	ax,data_340		; (020A:3090=5C3Ah)
020A:57E2  74 18				je	loc_691			; Jump if equal
020A:57E4  A3 3090				mov	data_340,ax		; (020A:3090=5C3Ah)
020A:57E7  BF 06AE				mov	di,6AEh
020A:57EA  81 EF 0096				sub	di,96h
020A:57EE  03 3E 131D				add	di,data_146		; (020A:131D=0)

020A:57F2			locloop_690:
020A:57F2  FC					cld				; Clear direction
020A:57F3  AC					lodsb				; String [si] to al
020A:57F4  8A E0				mov	ah,al
020A:57F6  E8 FBBF				call	sub_52			; (53B8)
020A:57F9  47					inc	di
020A:57FA  E2 F6				loop	locloop_690		; Loop if cx > 0

020A:57FC			loc_691:
020A:57FC  A1 308C				mov	ax,data_338		; (020A:308C=5357h)
020A:57FF  3B 06 3092				cmp	ax,data_341		; (020A:3092=4957h)
020A:5803  74 27				je	loc_695			; Jump if equal
020A:5805  A3 3092				mov	data_341,ax		; (020A:3092=4957h)
020A:5808  BE 06FE				mov	si,6FEh
020A:580B  BF 06FE				mov	di,6FEh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 182

020A:580E  81 EF 0096				sub	di,96h
020A:5812  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5816  B9 0005				mov	cx,5

020A:5819			locloop_692:
020A:5819  AC					lodsb				; String [si] to al
020A:581A  83 F9 01				cmp	cx,1
020A:581D  76 05				jbe	loc_693			; Jump if below or =
020A:581F  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5822  74 05				je	loc_694			; Jump if equal
020A:5824			loc_693:
020A:5824  8A E0				mov	ah,al
020A:5826  E8 FB8F				call	sub_52			; (53B8)
020A:5829			loc_694:
020A:5829  47					inc	di
020A:582A  E2 ED				loop	locloop_692		; Loop if cx > 0

020A:582C			loc_695:
020A:582C  A1 3096				mov	ax,data_343		; (020A:3096=574Fh)
020A:582F  3B 06 3094				cmp	ax,data_342		; (020A:3094=444Eh)
020A:5833  74 1D				je	loc_697			; Jump if equal
020A:5835  A3 3094				mov	data_342,ax		; (020A:3094=444Eh)
020A:5838  BE 074E				mov	si,74Eh
020A:583B  BF 074E				mov	di,74Eh
020A:583E  81 EF 0096				sub	di,96h
020A:5842  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5846  B9 0005				mov	cx,5

020A:5849			locloop_696:
020A:5849  AC					lodsb				; String [si] to al
020A:584A  8A E0				mov	ah,al
020A:584C  E8 FB69				call	sub_52			; (53B8)
020A:584F  47					inc	di
020A:5850  E2 F7				loop	locloop_696		; Loop if cx > 0

020A:5852			loc_697:
020A:5852  07					pop	es
020A:5853  5D					pop	bp
020A:5854  5F					pop	di
020A:5855  5E					pop	si
020A:5856  5A					pop	dx
020A:5857  59					pop	cx
020A:5858  5B					pop	bx
020A:5859  58					pop	ax
020A:585A  C3					retn
				sub_59		endp

020A:585B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_60		proc	near
020A:585C  50					push	ax
020A:585D  53					push	bx
020A:585E  51					push	cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 183

020A:585F  52					push	dx
020A:5860  57					push	di
020A:5861  55					push	bp
020A:5862  06					push	es
020A:5863  F6 06 586E 80			test	byte ptr data_674,80h	; (020A:586E=6)
020A:5868  74 0B				jz	loc_698			; Jump if zero
020A:586A  A1 3054				mov	ax,data_311		; (020A:3054=5345h)
020A:586D  39			data_673	db	39h
020A:586E  06			data_674	db	6
020A:586F  4C					dec	sp
020A:5870  34 74				xor	al,74h			; 't'
020A:5872  02 EB				add	ch,bl
020A:5874  74 BD				jz	$-41h			; Jump if zero
020A:5876  DC					db	0DCh
020A:5877  07					pop	es
020A:5878  56					push	si
020A:5879  BE 405B				mov	si,405Bh
020A:587C  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:587C  9A					db	9Ah
020A:587D  4160 14FC				dw	4160h, 14FCh
020A:5881  5E					pop	si
020A:5882  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:5885  3E: 8B 56 00				mov	dx,ds:[bp]
020A:5889  3E: 8B 5E 02				mov	bx,ds:[bp+2]
020A:588D  53					push	bx
020A:588E  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:588E  9A					db	9Ah
020A:588F  021C 14FC				dw	21Ch, 14FCh
020A:5893  5B					pop	bx
020A:5894  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5898  BF 07C9				mov	di,7C9h
020A:589B  83 C7 13				add	di,13h
020A:589E  81 EF 0096				sub	di,96h
020A:58A2  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:58A6  BD 07DC				mov	bp,7DCh
020A:58A9  B9 0009				mov	cx,9
020A:58AC  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:58AF  3B 06 344E				cmp	ax,data_403		; (020A:344E=2B36h)
020A:58B3  A3 344E				mov	data_403,ax		; (020A:344E=2B36h)
020A:58B6  75 21				jnz	locloop_699		; Jump if not zero
020A:58B8  83 C7 05				add	di,5
020A:58BB  83 C5 05				add	bp,5
020A:58BE  B9 0004				mov	cx,4
020A:58C1  3E: 3B 56 00				cmp	dx,ds:[bp]
020A:58C5  75 12				jne	locloop_699		; Jump if not equal
020A:58C7  83 C7 02				add	di,2
020A:58CA  83 C5 02				add	bp,2
020A:58CD  B9 0002				mov	cx,2
020A:58D0  3E: 3A 5E 00				cmp	bl,ds:[bp]
020A:58D4  75 03				jne	locloop_699		; Jump if not equal
020A:58D6  47					inc	di
020A:58D7  45					inc	bp
020A:58D8  49					dec	cx

020A:58D9			locloop_699:
020A:58D9  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:58DE  3E: 8A 66 00				mov	ah,ds:[bp]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 184

020A:58E2  E8 FAD3				call	sub_52			; (53B8)
020A:58E5  47					inc	di
020A:58E6  45					inc	bp
020A:58E7  E2 F0				loop	locloop_699		; Loop if cx > 0

020A:58E9			loc_700:
020A:58E9  8B 1E 3454				mov	bx,data_406		; (020A:3454=13h)
020A:58ED  2B 1E 3452				sub	bx,data_405		; (020A:3452=213Eh)
020A:58F1  75 03				jnz	loc_701			; Jump if not zero
020A:58F3  E9 00B0				jmp	loc_707			; (59A6)
020A:58F6			loc_701:
020A:58F6  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:58F9  2B 06 3452				sub	ax,data_405		; (020A:3452=213Eh)
020A:58FD  B9 0040				mov	cx,40h
020A:5900  F7 E1				mul	cx			; dx:ax = reg * ax
020A:5902  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:5904  8B 0E 344C				mov	cx,data_402		; (020A:344C=6C6h)
020A:5908  3B 0E 3054				cmp	cx,data_311		; (020A:3054=5345h)
020A:590C  74 31				je	loc_704			; Jump if equal
020A:590E  3B 06 3456				cmp	ax,data_407		; (020A:3456=1474h)
020A:5912  75 03				jne	loc_702			; Jump if not equal
020A:5914  E9 008F				jmp	loc_707			; (59A6)
020A:5917			loc_702:
020A:5917  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:591C  75 21				jne	loc_704			; Jump if not equal
020A:591E  8B 1E 3454				mov	bx,data_406		; (020A:3454=13h)
020A:5922  2B 1E 3452				sub	bx,data_405		; (020A:3452=213Eh)
020A:5926  8B D0				mov	dx,ax
020A:5928  81 FB 0200				cmp	bx,200h
020A:592C  77 08				ja	loc_703			; Jump if above
020A:592E  F7 C2 0003				test	dx,3
020A:5932  74 0B				jz	loc_704			; Jump if zero
020A:5934  EB 70				jmp	short loc_707		; (59A6)
020A:5936			loc_703:
020A:5936  80 CA 01				or	dl,1
020A:5939  3B 16 3456				cmp	dx,data_407		; (020A:3456=1474h)
020A:593D  74 67				je	loc_707			; Jump if equal
020A:593F			loc_704:
020A:593F  8B D0				mov	dx,ax
020A:5941  BF 07C9				mov	di,7C9h
020A:5944  83 C7 1E				add	di,1Eh
020A:5947  81 EF 0096				sub	di,96h
020A:594B  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:594F  A1 3456				mov	ax,data_407		; (020A:3456=1474h)
020A:5952  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:5954  03 F8				add	di,ax
020A:5956  B4 FA				mov	ah,0FAh
020A:5958  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:595D  75 02				jne	loc_705			; Jump if not equal
020A:595F  B4 2E				mov	ah,2Eh			; '.'
020A:5961			loc_705:
020A:5961  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:5966  E8 FA4F				call	sub_52			; (53B8)
020A:5969  B4 0F				mov	ah,0Fh
020A:596B  E8 FAD6				call	sub_53			; (5444)
020A:596E  89 16 3456				mov	data_407,dx		; (020A:3456=1474h)
020A:5972  BF 07C9				mov	di,7C9h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 185

020A:5975  83 C7 1E				add	di,1Eh
020A:5978  81 EF 0096				sub	di,96h
020A:597C  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5980  B4 2A				mov	ah,2Ah			; '*'
020A:5982  80 3E 2B44 02			cmp	data_248,2		; (020A:2B44=49h)
020A:5987  74 0A				je	loc_706			; Jump if equal
020A:5989  B4 DD				mov	ah,0DDh
020A:598B  F7 C2 0001				test	dx,1
020A:598F  74 02				jz	loc_706			; Jump if zero
020A:5991  B4 DE				mov	ah,0DEh
020A:5993			loc_706:
020A:5993  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:5995  03 FA				add	di,dx
020A:5997  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:599C  E8 FA19				call	sub_52			; (53B8)
020A:599F  8A 26 1207				mov	ah,data_141		; (020A:1207=0)
020A:59A3  E8 FA9E				call	sub_53			; (5444)
020A:59A6			loc_707:
020A:59A6  07					pop	es
020A:59A7  5D					pop	bp
020A:59A8  5F					pop	di
020A:59A9  5A					pop	dx
020A:59AA  59					pop	cx
020A:59AB  5B					pop	bx
020A:59AC  58					pop	ax
020A:59AD  C3					retn
				sub_60		endp

020A:59AE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_61		proc	near
020A:59B0  52					push	dx
020A:59B1  51					push	cx
020A:59B2  56					push	si
020A:59B3  57					push	di
020A:59B4  06					push	es
020A:59B5  E8 16A5				call	sub_95			; (705D)
020A:59B8  BE 1716				mov	si,1716h
020A:59BB  F6 06 1715 03			test	data_173,3		; (020A:1715=0)
020A:59C0  75 03				jnz	loc_708			; Jump if not zero
020A:59C2  BE 1724				mov	si,1724h
020A:59C5			loc_708:
020A:59C5  BF 06D9				mov	di,6D9h
020A:59C8  B9 1724				mov	cx,1724h
020A:59CB  81 E9 1716				sub	cx,1716h
020A:59CF  FC					cld				; Clear direction
020A:59D0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:59D2  32 D2				xor	dl,dl			; Zero register
020A:59D4  E8 167D				call	sub_93			; (7054)
020A:59D7  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:59DB  3D FFFF				cmp	ax,0FFFFh
020A:59DE  75 04				jne	loc_709			; Jump if not equal
020A:59E0  B2 01				mov	dl,1
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 186

020A:59E2  33 C0				xor	ax,ax			; Zero register
020A:59E4			loc_709:
020A:59E4  BD 0699				mov	bp,699h
020A:59E7  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:59E7  9A					db	9Ah
020A:59E8  021C 14FC				dw	21Ch, 14FCh
020A:59EC  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:59F0  0A D2				or	dl,dl			; Zero ?
020A:59F2  74 02				jz	loc_710			; Jump if zero
020A:59F4  33 C0				xor	ax,ax			; Zero register
020A:59F6			loc_710:
020A:59F6  BD 069E				mov	bp,69Eh
020A:59F9  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:59F9  9A					db	9Ah
020A:59FA  021C 14FC				dw	21Ch, 14FCh
020A:59FE  BE 0000				mov	si,0
020A:5A01  F6 06 1715 03			test	data_173,3		; (020A:1715=0)
020A:5A06  75 0B				jnz	loc_711			; Jump if not zero
020A:5A08  A0 3040				mov	al,data_298		; (020A:3040=33h)
020A:5A0B  FE C8				dec	al
020A:5A0D  B3 15				mov	bl,15h
020A:5A0F  F6 E3				mul	bl			; ax = reg * al
020A:5A11  03 F0				add	si,ax
020A:5A13			loc_711:
020A:5A13  26: 8B 04				mov	ax,es:[si]
020A:5A16  0A D2				or	dl,dl			; Zero ?
020A:5A18  74 02				jz	loc_712			; Jump if zero
020A:5A1A  33 C0				xor	ax,ax			; Zero register
020A:5A1C			loc_712:
020A:5A1C  BD 06E9				mov	bp,6E9h
020A:5A1F  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:5A1F  9A					db	9Ah
020A:5A20  021C 14FC				dw	21Ch, 14FCh
020A:5A24  26: 8B 44 04				mov	ax,es:[si+4]
020A:5A28  BD 06EE				mov	bp,6EEh
020A:5A2B  0A D2				or	dl,dl			; Zero ?
020A:5A2D  74 02				jz	loc_713			; Jump if zero
020A:5A2F  33 C0				xor	ax,ax			; Zero register
020A:5A31			loc_713:
020A:5A31  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:5A31  9A					db	9Ah
020A:5A32  021C 14FC				dw	21Ch, 14FCh
020A:5A36  07					pop	es
020A:5A37  5F					pop	di
020A:5A38  5A5E			data_675	dw	5A5Eh
020A:5A3A  59					pop	cx
020A:5A3B  E8 1607				call	sub_91			; (7045)
020A:5A3E  C3					retn
				sub_61		endp

020A:5A3F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_62		proc	near
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 187

020A:5A40  BF 33FE				mov	di,33FEh
020A:5A43  57					push	di
020A:5A44  B9 003C				mov	cx,3Ch
020A:5A47  B3 00				mov	bl,0

020A:5A49			locloop_714:
020A:5A49  26: 8A 04				mov	al,es:[si]
020A:5A4C  3C 20				cmp	al,20h			; ' '
020A:5A4E  72 0B				jb	loc_715			; Jump if below
020A:5A50  3C 80				cmp	al,80h
020A:5A52  73 07				jae	loc_715			; Jump if above or =
020A:5A54  88 05				mov	[di],al
020A:5A56  FE C3				inc	bl
020A:5A58  47					inc	di
020A:5A59  EB 0E				jmp	short loc_716		; (5A69)
020A:5A5B			loc_715:
020A:5A5B  80 FB 00				cmp	bl,0
020A:5A5E  74 09				je	loc_716			; Jump if equal
020A:5A60  80 FB 08				cmp	bl,8
020A:5A63  77 0C				ja	loc_717			; Jump if above
020A:5A65  5F					pop	di
020A:5A66  57					push	di
020A:5A67  B3 00				mov	bl,0
020A:5A69			loc_716:
020A:5A69  46					inc	si
020A:5A6A  80 FB 20				cmp	bl,20h			; ' '
020A:5A6D  77 02				ja	loc_717			; Jump if above
020A:5A6F  E2 D8				loop	locloop_714		; Loop if cx > 0

020A:5A71			loc_717:
020A:5A71  5F					pop	di
020A:5A72  C3					retn
				sub_62		endp

020A:5A73  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_63		proc	near
020A:5A74  50					push	ax
020A:5A75  B5 20				mov	ch,20h			; ' '
020A:5A77  B4 01				mov	ah,1
020A:5A79  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5A79  9A					db	9Ah
020A:5A7A  2BA8 14FC				dw	2BA8h, 14FCh
020A:5A7E  58					pop	ax
020A:5A7F  C3					retn
				sub_63		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_64		proc	near
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 188

020A:5A80  50					push	ax
020A:5A81  8B 0E 30CB				mov	cx,word ptr ds:[30CBh]	; (020A:30CB=4542h)
020A:5A85  B4 01				mov	ah,1
020A:5A87  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5A87  9A					db	9Ah
020A:5A88  2BA8 14FC				dw	2BA8h, 14FCh
020A:5A8C  58					pop	ax
020A:5A8D  C3					retn
				sub_64		endp

020A:5A8E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_65		proc	near
020A:5A90  06					push	es
020A:5A91  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5A95  BF 06C7				mov	di,6C7h
020A:5A98  81 EF 0623				sub	di,623h
020A:5A9C  81 C7 0190				add	di,190h
020A:5AA0  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5AA4  B9 001A				mov	cx,1Ah
020A:5AA7  B2 41				mov	dl,41h			; 'A'
020A:5AA9  B6 61				mov	dh,61h			; 'a'

020A:5AAB			locloop_718:
020A:5AAB  8A E2				mov	ah,dl
020A:5AAD  A0 1207				mov	al,data_141		; (020A:1207=0)
020A:5AB0  F7 C3 8000				test	bx,8000h
020A:5AB4  75 04				jnz	loc_719			; Jump if not zero
020A:5AB6  8A E6				mov	ah,dh
020A:5AB8  B0 07				mov	al,7
020A:5ABA			loc_719:
020A:5ABA  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:5ABF  75 0B				jne	loc_720			; Jump if not equal
020A:5AC1  3A 06 1207				cmp	al,data_141		; (020A:1207=0)
020A:5AC5  75 05				jne	loc_720			; Jump if not equal
020A:5AC7  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (020A:2B41=41h)
020A:5ACC			loc_720:
020A:5ACC  E8 F8E9				call	sub_52			; (53B8)
020A:5ACF  8A E0				mov	ah,al
020A:5AD1  E8 F970				call	sub_53			; (5444)
020A:5AD4  83 C7 4F				add	di,4Fh
020A:5AD7  FE C2				inc	dl
020A:5AD9  FE C6				inc	dh
020A:5ADB  D1 C3				rol	bx,1			; Rotate
020A:5ADD  83 F9 0D				cmp	cx,0Dh
020A:5AE0  75 0F				jne	loc_721			; Jump if not equal
020A:5AE2  BF 06ED				mov	di,6EDh
020A:5AE5  81 EF 0623				sub	di,623h
020A:5AE9  81 C7 0190				add	di,190h
020A:5AED  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5AF1			loc_721:
020A:5AF1  83 F9 0B				cmp	cx,0Bh
020A:5AF4  75 0E				jne	loc_722			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 189

020A:5AF6  81 C7 00A0				add	di,0A0h
020A:5AFA  8A 3E 4E7F				mov	bh,data_633		; (020A:4E7F=0E8h)
020A:5AFE  D0 CF				ror	bh,1			; Rotate
020A:5B00  D0 CF				ror	bh,1			; Rotate
020A:5B02  D0 CF				ror	bh,1			; Rotate
020A:5B04			loc_722:
020A:5B04  83 F9 07				cmp	cx,7
020A:5B07  75 04				jne	loc_723			; Jump if not equal
020A:5B09  8A 3E 4E24				mov	bh,byte ptr data_592	; (020A:4E24=7)
020A:5B0D			loc_723:
020A:5B0D  E2 9C				loop	locloop_718		; Loop if cx > 0

020A:5B0F  07					pop	es
020A:5B10  C3					retn
				sub_65		endp

020A:5B11  87 DB				xchg	bx,bx
020A:5B13  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_66		proc	near
020A:5B14  53					push	bx
020A:5B15  51					push	cx
020A:5B16  52					push	dx
020A:5B17  57					push	di
020A:5B18  56					push	si
020A:5B19  06					push	es
020A:5B1A  E8 1540				call	sub_95			; (705D)
020A:5B1D  BE 15C8				mov	si,15C8h
020A:5B20  BF 030F				mov	di,30Fh
020A:5B23  B9 0003				mov	cx,3
020A:5B26  F6 06 4E7F 07			test	data_633,7		; (020A:4E7F=0E8h)
020A:5B2B  75 02				jnz	loc_724			; Jump if not zero
020A:5B2D  03 F1				add	si,cx
020A:5B2F			loc_724:
020A:5B2F  FC					cld				; Clear direction
020A:5B30  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5B32  BE 030F				mov	si,30Fh
020A:5B35  BF 030F				mov	di,30Fh
020A:5B38  81 EF 0096				sub	di,96h
020A:5B3C  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5B40  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5B44  B9 0003				mov	cx,3

020A:5B47			locloop_725:
020A:5B47  8A 24				mov	ah,[si]
020A:5B49  E8 F86C				call	sub_52			; (53B8)
020A:5B4C  47					inc	di
020A:5B4D  46					inc	si
020A:5B4E  E2 F7				loop	locloop_725		; Loop if cx > 0

020A:5B50  B4 02				mov	ah,2
020A:5B52  32 FF				xor	bh,bh			; Zero register
020A:5B54  BA 184F				mov	dx,184Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 190

020A:5B57  9A 14FC:2BA8		;*		call	far ptr sub_185		;*(14FC:2BA8)
020A:5B57  9A					db	9Ah
020A:5B58  2BA8 14FC				dw	2BA8h, 14FCh
020A:5B5C  07					pop	es
020A:5B5D  5E					pop	si
020A:5B5E  5F					pop	di
020A:5B5F  5A					pop	dx
020A:5B60  59					pop	cx
020A:5B61  5B					pop	bx
020A:5B62  C3					retn
				sub_66		endp

020A:5B63  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_67		proc	near
020A:5B64  E8 14F6				call	sub_95			; (705D)
020A:5B67  A0 15D0				mov	al,data_161		; (020A:15D0=0)
020A:5B6A  B9 15E8				mov	cx,15E8h
020A:5B6D  81 E9 15D1				sub	cx,15D1h
020A:5B71  F6 E1				mul	cl			; ax = reg * al
020A:5B73  05 15D1				add	ax,15D1h
020A:5B76  8B F0				mov	si,ax
020A:5B78  80 3E 15D0 02			cmp	data_161,2		; (020A:15D0=0)
020A:5B7D  74 13				je	loc_726			; Jump if equal
020A:5B7F  80 3E 15D0 03			cmp	data_161,3		; (020A:15D0=0)
020A:5B84  75 16				jne	loc_727			; Jump if not equal
020A:5B86  F6 06 35E4 10			test	data_454,10h		; (020A:35E4=74h)
020A:5B8B  74 0F				jz	loc_727			; Jump if zero
020A:5B8D  BE 1644				mov	si,1644h
020A:5B90  EB 0A				jmp	short loc_727		; (5B9C)
020A:5B92			loc_726:
020A:5B92  F6 06 35E4 04			test	data_454,4		; (020A:35E4=74h)
020A:5B97  74 03				jz	loc_727			; Jump if zero
020A:5B99  BE 162D				mov	si,162Dh
020A:5B9C			loc_727:
020A:5B9C  BF 0480				mov	di,480h
020A:5B9F  B9 15DC				mov	cx,15DCh
020A:5BA2  81 E9 15D1				sub	cx,15D1h
020A:5BA6  FC					cld				; Clear direction
020A:5BA7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5BA9  B9 15E8				mov	cx,15E8h
020A:5BAC  81 E9 15DC				sub	cx,15DCh
020A:5BB0  BF 0572				mov	di,572h
020A:5BB3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5BB5  B9 166B				mov	cx,166Bh
020A:5BB8  81 E9 165B				sub	cx,165Bh
020A:5BBC  BE 165B				mov	si,165Bh
020A:5BBF  F6 06 35E4 02			test	data_454,2		; (020A:35E4=74h)
020A:5BC4  75 17				jnz	loc_728			; Jump if not zero
020A:5BC6  BE 167B				mov	si,167Bh
020A:5BC9  F6 06 35E4 04			test	data_454,4		; (020A:35E4=74h)
020A:5BCE  75 0D				jnz	loc_728			; Jump if not zero
020A:5BD0  BE 169B				mov	si,169Bh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 191

020A:5BD3  F6 06 35E4 08			test	data_454,8		; (020A:35E4=74h)
020A:5BD8  75 03				jnz	loc_728			; Jump if not zero
020A:5BDA  BE 168B				mov	si,168Bh
020A:5BDD			loc_728:
020A:5BDD  BF 048F				mov	di,48Fh
020A:5BE0  F6 06 15D0 02			test	data_161,2		; (020A:15D0=0)
020A:5BE5  74 03				jz	loc_729			; Jump if zero
020A:5BE7  BE 166B				mov	si,166Bh
020A:5BEA			loc_729:
020A:5BEA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5BEC  C3					retn
				sub_67		endp

020A:5BED  87 DB				xchg	bx,bx
020A:5BEF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_68		proc	near
020A:5BF0  E8 146A				call	sub_95			; (705D)
020A:5BF3  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5BF7  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020A:5BFB  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020A:5BFF  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020A:5C03  A0 16AB				mov	al,data_166		; (020A:16AB=41h)
020A:5C06  A8 01				test	al,1
020A:5C08  74 04				jz	loc_730			; Jump if zero
020A:5C0A  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020A:5C0E			loc_730:
020A:5C0E  A8 02				test	al,2
020A:5C10  74 04				jz	loc_731			; Jump if zero
020A:5C12  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020A:5C16			loc_731:
020A:5C16  A8 04				test	al,4
020A:5C18  74 04				jz	loc_732			; Jump if zero
020A:5C1A  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020A:5C1E			loc_732:
020A:5C1E  BB 16B5				mov	bx,16B5h
020A:5C21  D7					xlat				; al=[al+[bx]] table
020A:5C22  8A E0				mov	ah,al
020A:5C24  25 0FF0				and	ax,0FF0h
020A:5C27  B1 04				mov	cl,4
020A:5C29  D2 C8				ror	al,cl			; Rotate
020A:5C2B  8A DC				mov	bl,ah
020A:5C2D  32 E4				xor	ah,ah			; Zero register
020A:5C2F  B9 16C3				mov	cx,16C3h
020A:5C32  81 E9 16BD				sub	cx,16BDh
020A:5C36  F6 E1				mul	cl			; ax = reg * al
020A:5C38  05 16BD				add	ax,16BDh
020A:5C3B  8B F0				mov	si,ax
020A:5C3D  BF 053D				mov	di,53Dh
020A:5C40  FC					cld				; Clear direction
020A:5C41  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C43  B8 16E5				mov	ax,16E5h
020A:5C46  2D 16D5				sub	ax,16D5h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 192

020A:5C49  8B C8				mov	cx,ax
020A:5C4B  F6 E3				mul	bl			; ax = reg * al
020A:5C4D  8B F0				mov	si,ax
020A:5C4F  81 C6 16D5				add	si,16D5h
020A:5C53  BF 0583				mov	di,583h
020A:5C56  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C58  C3					retn
				sub_68		endp

020A:5C59  87 DB				xchg	bx,bx
020A:5C5B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_69		proc	near
020A:5C5C  50					push	ax
020A:5C5D  53					push	bx
020A:5C5E  8A E0				mov	ah,al
020A:5C60  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5C64  A0 1208				mov	al,data_142		; (020A:1208=0)
020A:5C67  88 47 52				mov	[bx+52h],al
020A:5C6A  E8 FA4F		;*		call	sub_58			;*(56BC)
020A:5C6A  E8 4F FA				db	0E8h, 4Fh,0FAh
020A:5C6D  E8 F580		;*		call	sub_46			;*(51F0)
020A:5C6D  E8 80 F5				db	0E8h, 80h,0F5h
020A:5C70  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:5C70  9A					db	9Ah
020A:5C71  0760 14FC				dw	760h, 14FCh
020A:5C75  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:5C79  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5C7D  5B					pop	bx
020A:5C7E  58					pop	ax
020A:5C7F  C3					retn
				sub_69		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_70		proc	near
020A:5C80  52					push	dx
020A:5C81  50					push	ax
020A:5C82  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:5C87  1E					push	ds
020A:5C88  E8 13BA				call	sub_91			; (7045)
020A:5C8B  BA 2B53				mov	dx,2B53h
020A:5C8E  B4 09				mov	ah,9
020A:5C90  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:5C92  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5C97  9C					pushf				; Push flags
020A:5C98  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5C9D  5A					pop	dx
020A:5C9E  8E DA				mov	ds,dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 193

020A:5CA0  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:5CA5  5A					pop	dx
020A:5CA6  75 0A				jnz	loc_733			; Jump if not zero
020A:5CA8  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:5CAD  74 03				je	loc_733			; Jump if equal
020A:5CAF  E8 170A				call	sub_103			; (73BC)
020A:5CB2			loc_733:
020A:5CB2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5CB7  9D					popf				; Pop flags
020A:5CB8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5CBD  58					pop	ax
020A:5CBE  5A					pop	dx
020A:5CBF  C3					retn
				sub_70		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_71		proc	near
020A:5CC0  52					push	dx
020A:5CC1  50					push	ax
020A:5CC2  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:5CC7  1E					push	ds
020A:5CC8  E8 137A				call	sub_91			; (7045)
020A:5CCB  BA 2B4F				mov	dx,2B4Fh
020A:5CCE  B4 09				mov	ah,9
020A:5CD0  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:5CD2  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5CD7  9C					pushf				; Push flags
020A:5CD8  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5CDD  5A					pop	dx
020A:5CDE  8E DA				mov	ds,dx
020A:5CE0  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:5CE5  5A					pop	dx
020A:5CE6  75 0A				jnz	loc_734			; Jump if not zero
020A:5CE8  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:5CED  74 03				je	loc_734			; Jump if equal
020A:5CEF  E8 16CA				call	sub_103			; (73BC)
020A:5CF2			loc_734:
020A:5CF2  2E: 36FF		data_676	dw	36FFh
020A:5CF5  96			data_677	db	96h
020A:5CF6  00 9D 8B2E				add	byte ptr ds:[8B2Eh][di],bl	; (020A:8B2E=0)
020A:5CFA  16					push	ss
020A:5CFB  92					xchg	dx,ax
020A:5CFC  00 58 5A				add	[bx+si+5Ah],bl
020A:5CFF  C3					retn
				sub_71		endp

020A:5D00  50					push	ax
020A:5D01			loc_735:
020A:5D01  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020A:5D07  74 05				je	loc_736			; Jump if equal
020A:5D09  FE45					dw	0FE45h
020A:5D0B  C8					db	0C8h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 194

020A:5D0C  75 F3				jnz	loc_735			; Jump if not zero
020A:5D0E			loc_736:
020A:5D0E  58					pop	ax
020A:5D0F  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_72		proc	near
020A:5D10  E8 134A				call	sub_95			; (705D)
020A:5D13  8B 36 344C				mov	si,data_402		; (020A:344C=6C6h)
020A:5D17  BF 2CCA				mov	di,2CCAh
020A:5D1A  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:5D1D  8E D8				mov	ds,ax
020A:5D1F  0B F6				or	si,si			; Zero ?
020A:5D21  74 09				jz	loc_737			; Jump if zero
020A:5D23  33 C9				xor	cx,cx			; Zero register
020A:5D25  2B CE				sub	cx,si
020A:5D27  83 F9 28				cmp	cx,28h
020A:5D2A  72 03				jb	loc_738			; Jump if below
020A:5D2C			loc_737:
020A:5D2C  B9 0028				mov	cx,28h
020A:5D2F			loc_738:
020A:5D2F  FC					cld				; Clear direction
020A:5D30  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5D32  E8 1310				call	sub_91			; (7045)
020A:5D35  BE 2CCA				mov	si,2CCAh
020A:5D38  C3					retn
				sub_72		endp

020A:5D39  87 DB				xchg	bx,bx
020A:5D3B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_73		proc	near
020A:5D3C  06					push	es
020A:5D3D  F6 06 35D3 01			test	data_442,1		; (020A:35D3=0C6h)
020A:5D42  74 34				jz	loc_740			; Jump if zero
020A:5D44  BF 0708				mov	di,708h
020A:5D47  81			data_682	db	81h
020A:5D48  EF					out	dx,ax			; port 0D1h ??I/O Non-standard
020A:5D49  96					xchg	si,ax
020A:5D4A  00 03				add	[bp+di],al
020A:5D4C  3E					db	3Eh
020A:5D4D  1D 8E13				sbb	ax,8E13h
020A:5D50  06					push	es
020A:5D51  1B 13				sbb	dx,[bp+di]
020A:5D53  BE 2CCA				mov	si,2CCAh
020A:5D56  B9 0004				mov	cx,4

020A:5D59			locloop_739:
020A:5D59  8A 04				mov	al,[si]
020A:5D5B  9A 14FC:00B0		;*		call	far ptr sub_150		;*(14FC:00B0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 195

020A:5D5B  9A					db	9Ah
020A:5D5C  00B0 14FC				dw	0B0h, 14FCh
020A:5D60  8A E3				mov	ah,bl
020A:5D62  E8 F653				call	sub_52			; (53B8)
020A:5D65  B4 0F				mov	ah,0Fh
020A:5D67  E8 F6DA				call	sub_53			; (5444)
020A:5D6A  8A E7				mov	ah,bh
020A:5D6C  E8 F649				call	sub_52			; (53B8)
020A:5D6F  B4 0F				mov	ah,0Fh
020A:5D71  E8 F6D0				call	sub_53			; (5444)
020A:5D74  47					inc	di
020A:5D75  46					inc	si
020A:5D76  E2 E1				loop	locloop_739		; Loop if cx > 0

020A:5D78			loc_740:
020A:5D78  F6 06 35D3 02			test	data_442,2		; (020A:35D3=0C6h)
020A:5D7D  74 15				jz	loc_742			; Jump if zero
020A:5D7F  B9 5000				mov	cx,5000h
020A:5D82  F6 06 30A1 F0			test	data_349,0F0h		; (020A:30A1=32h)
020A:5D87  75 03				jnz	locloop_741		; Jump if not zero
020A:5D89  B9 1000				mov	cx,1000h

020A:5D8C			locloop_741:
020A:5D8C  EB 00				jmp	short $+2		; delay for I/O
020A:5D8E  EB 00				jmp	short $+2		; delay for I/O
020A:5D90  EB 00				jmp	short $+2		; delay for I/O
020A:5D92  E2 F8				loop	locloop_741		; Loop if cx > 0

020A:5D94			loc_742:
020A:5D94  F6 06 35D3 08			test	data_442,8		; (020A:35D3=0C6h)
020A:5D99  74 2C				jz	loc_744			; Jump if zero
020A:5D9B  A0 35D4				mov	al,data_443		; (020A:35D4=6)
020A:5D9E  3A 06 2B3B				cmp	al,data_242		; (020A:2B3B=55h)
020A:5DA2  77 06				ja	loc_743			; Jump if above
020A:5DA4  3A 06 2B36				cmp	al,byte ptr ds:[2B36h]	; (020A:2B36=3Ah)
020A:5DA8  75 1D				jne	loc_744			; Jump if not equal
020A:5DAA			loc_743:
020A:5DAA  A1 35D5				mov	ax,data_444		; (020A:35D5=4F13h)
020A:5DAD  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:5DB1  75 14				jne	loc_744			; Jump if not equal
020A:5DB3  A1 35D7				mov	ax,data_445		; (020A:35D7=0E900h)
020A:5DB6  3B 06 344C				cmp	ax,data_402		; (020A:344C=6C6h)
020A:5DBA  75 0B				jne	loc_744			; Jump if not equal
020A:5DBC  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:5DBC  9A					db	9Ah
020A:5DBD  2B10 14FC				dw	2B10h, 14FCh
020A:5DC1  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:5DC1  9A					db	9Ah
020A:5DC2  0760 14FC				dw	760h, 14FCh
020A:5DC6  90					nop
020A:5DC7			loc_744:
020A:5DC7  07					pop	es
020A:5DC8  C3					retn
				sub_73		endp

020A:5DC9  87 DB				xchg	bx,bx
020A:5DCB  90					nop
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 196


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_74		proc	near
020A:5DCC  F7 06 4E22 0100			test	data_591,100h		; (020A:4E22=0EDA3h)
020A:5DD2  74 67				jz	loc_747			; Jump if zero
020A:5DD4  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:5DD9  75 60				jne	loc_747			; Jump if not equal
020A:5DDB  06					push	es
020A:5DDC  1E					push	ds
020A:5DDD  07					pop	es
020A:5DDE  A0 35DD				mov	al,data_448		; (020A:35DD=3Ah)
020A:5DE1  B9 57DD				mov	cx,57DDh
020A:5DE4  81 E9 57CD				sub	cx,57CDh
020A:5DE8  F6 E1				mul	cl			; ax = reg * al
020A:5DEA  BF 7628				mov	di,7628h
020A:5DED  BE 57CD				mov	si,57CDh
020A:5DF0  03 F0				add	si,ax
020A:5DF2  FC					cld				; Clear direction
020A:5DF3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5DF5  A1 361A				mov	ax,data_477		; (020A:361A=69B9h)
020A:5DF8  3B 06 35D9				cmp	ax,data_446		; (020A:35D9=0E95h)
020A:5DFC  74 17				je	loc_745			; Jump if equal
020A:5DFE  A3 35D9				mov	data_446,ax		; (020A:35D9=0E95h)
020A:5E01  C6 06 763A 44			mov	byte ptr data_701,44h	; (020A:763A=58h) 'D'
020A:5E06  BD 7641				mov	bp,7641h
020A:5E09  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:5E09  9A					db	9Ah
020A:5E0A  021C 14FC				dw	21Ch, 14FCh
020A:5E0E  B0 52				mov	al,52h			; 'R'
020A:5E10  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:5E10  9A					db	9Ah
020A:5E11  2280 14FC				dw	2280h, 14FCh
020A:5E15			loc_745:
020A:5E15  A1 3618				mov	ax,data_476		; (020A:3618=5F24h)
020A:5E18  3B 06 35DB				cmp	ax,data_447		; (020A:35DB=7FE8h)
020A:5E1C  74 17				je	loc_746			; Jump if equal
020A:5E1E  A3 35DB				mov	data_447,ax		; (020A:35DB=7FE8h)
020A:5E21  C6 06 763A 45			mov	byte ptr data_701,45h	; (020A:763A=58h) 'E'
020A:5E26  BD 7641				mov	bp,7641h
020A:5E29  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:5E29  9A					db	9Ah
020A:5E2A  021C 14FC				dw	21Ch, 14FCh
020A:5E2E  B0 52				mov	al,52h			; 'R'
020A:5E30  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:5E30  9A					db	9Ah
020A:5E31  2280 14FC				dw	2280h, 14FCh
020A:5E35			loc_746:
020A:5E35  C6 06 35DD 00			mov	data_448,0		; (020A:35DD=3Ah)
020A:5E3A  07					pop	es
020A:5E3B			loc_747:
020A:5E3B  C3					retn
				sub_74		endp


           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 197

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_75		proc	near
020A:5E3C  57					push	di
020A:5E3D  06					push	es
020A:5E3E  A2 2B3B				mov	data_242,al		; (020A:2B3B=55h)
020A:5E41  8A E0				mov	ah,al
020A:5E43  D0 EC				shr	ah,1			; Shift w/zeros fill
020A:5E45  80 C4 30				add	ah,30h			; '0'
020A:5E48  88 26 67A9				mov	data_693,ah		; (020A:67A9=87h)
020A:5E4C  BD 0772				mov	bp,772h
020A:5E4F  3E: 88 66 00				mov	ds:[bp],ah
020A:5E53  8E 06 131B				mov	es,data_145		; (020A:131B=0)
020A:5E57  BF 0772				mov	di,772h
020A:5E5A  81 EF 0096				sub	di,96h
020A:5E5E  03 3E 131D				add	di,data_146		; (020A:131D=0)
020A:5E62  E8 F553				call	sub_52			; (53B8)
020A:5E65  07					pop	es
020A:5E66  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:5E6B  74 1D				je	loc_750			; Jump if equal
020A:5E6D  80 3E 2B3B 0A			cmp	data_242,0Ah		; (020A:2B3B=55h)
020A:5E72  72 0E				jb	loc_748			; Jump if below
020A:5E74  F6 06 4E7F 07			test	data_633,7		; (020A:4E7F=0E8h)
020A:5E79  75 0C				jnz	loc_749			; Jump if not zero
020A:5E7B  80 0E 4E7F 07			or	data_633,7		; (020A:4E7F=0E8h)
020A:5E80  EB 05				jmp	short loc_749		; (5E87)
020A:5E82			loc_748:
020A:5E82  80 26 4E7F F8			and	data_633,0F8h		; (020A:4E7F=0E8h)
020A:5E87			loc_749:
020A:5E87  E8 FC8A				call	sub_66			; (5B14)
020A:5E8A			loc_750:
020A:5E8A  5F					pop	di
020A:5E8B  C3					retn
				sub_75		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_76		proc	near
020A:5E8C  50					push	ax
020A:5E8D  53					push	bx
020A:5E8E  56					push	si
020A:5E8F  55					push	bp
020A:5E90  C6 06 53D6 00			mov	data_649,0		; (020A:53D6=0B4h)
020A:5E95  BD 0002				mov	bp,2
020A:5E98  8B F0				mov	si,ax
020A:5E9A  A3 40F7				mov	data_524,ax		; (020A:40F7=7545h)
020A:5E9D  8B CB				mov	cx,bx
020A:5E9F  89 1E 40F5				mov	data_523,bx		; (020A:40F5=3C26h)
020A:5EA3  83 FA 20				cmp	dx,20h
020A:5EA6  75 0B				jne	loc_751			; Jump if not equal
020A:5EA8  E8 11B2				call	sub_95			; (705D)
020A:5EAB  BA 002C				mov	dx,2Ch
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 198

020A:5EAE  BF 47C4				mov	di,47C4h
020A:5EB1  EB 64				jmp	short loc_758		; (5F17)
020A:5EB3			loc_751:
020A:5EB3  83 FA 10				cmp	dx,10h
020A:5EB6  75 0B				jne	loc_752			; Jump if not equal
020A:5EB8  E8 1199				call	sub_93			; (7054)
020A:5EBB  BA 0015				mov	dx,15h
020A:5EBE  BF 0000				mov	di,0
020A:5EC1  EB 54				jmp	short loc_758		; (5F17)
020A:5EC3			loc_752:
020A:5EC3  83 FA 01				cmp	dx,1
020A:5EC6  74 31				je	loc_755			; Jump if equal
020A:5EC8  83 FA 02				cmp	dx,2
020A:5ECB  74 3B				je	loc_757			; Jump if equal
020A:5ECD  83 FA 04				cmp	dx,4
020A:5ED0  74 0B				je	loc_753			; Jump if equal
020A:5ED2  83 FA 40				cmp	dx,40h
020A:5ED5  74 15				je	loc_754			; Jump if equal
020A:5ED7  BB 0004				mov	bx,4
020A:5EDA  E9 0BFB				jmp	loc_927			; (6AD8)
020A:5EDD			loc_753:
020A:5EDD  E8 15F8				call	sub_106			; (74D8)
020A:5EE0  BB 003B				mov	bx,3Bh
020A:5EE3  03 1E 2B42				add	bx,data_247		; (020A:2B42=4D44h)
020A:5EE7  BA 004A				mov	dx,4Ah
020A:5EEA  EB 5A				jmp	short loc_768		; (5F46)
020A:5EEC			loc_754:
020A:5EEC  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:5EF2  74 05				je	loc_755			; Jump if equal
020A:5EF4  E8 116F				call	sub_97			; (7066)
020A:5EF7  EB 03				jmp	short loc_756		; (5EFC)
020A:5EF9			loc_755:
020A:5EF9  E8 1568				call	sub_105			; (7464)
020A:5EFC			loc_756:
020A:5EFC  BB 0007				mov	bx,7
020A:5EFF  03 1E 2B42				add	bx,data_247		; (020A:2B42=4D44h)
020A:5F03  BA 0016				mov	dx,16h
020A:5F06  EB 3E				jmp	short loc_768		; (5F46)
020A:5F08			loc_757:
020A:5F08  E8 14E5				call	sub_104			; (73F0)
020A:5F0B  BB 000A				mov	bx,0Ah
020A:5F0E  BA 0019				mov	dx,19h
020A:5F11  03 16 2B42				add	dx,data_247		; (020A:2B42=4D44h)
020A:5F15  EB 2F				jmp	short loc_768		; (5F46)
020A:5F17			loc_758:
020A:5F17  33 ED				xor	bp,bp			; Zero register
020A:5F19  06					push	es
020A:5F1A  8C D8				mov	ax,ds
020A:5F1C  8E C0				mov	es,ax
020A:5F1E  1F					pop	ds
020A:5F1F  BB FFFF				mov	bx,0FFFFh
020A:5F22			loc_759:
020A:5F22  39 75 02				cmp	[di+2],si
020A:5F25  74 09				je	loc_762			; Jump if equal
020A:5F27			loc_760:
020A:5F27  39 1D				cmp	[di],bx
020A:5F29  74 0B				je	loc_763			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 199

020A:5F2B			loc_761:
020A:5F2B  03 FA				add	di,dx
020A:5F2D  45					inc	bp
020A:5F2E  EB F2				jmp	short loc_759		; (5F22)
020A:5F30			loc_762:
020A:5F30  39 0D				cmp	[di],cx
020A:5F32  75 F3				jne	loc_760			; Jump if not equal
020A:5F34  EB 09				jmp	short loc_765		; (5F3F)
020A:5F36			loc_763:
020A:5F36  39 5D 02				cmp	[di+2],bx
020A:5F39  75 02				jne	loc_764			; Jump if not equal
020A:5F3B  EB 05				jmp	short loc_766		; (5F42)
020A:5F3D			loc_764:
020A:5F3D  EB EC				jmp	short loc_761		; (5F2B)
020A:5F3F			loc_765:
020A:5F3F  F9					stc				; Set carry flag
020A:5F40  EB 01				jmp	short loc_767		; (5F43)
020A:5F42			loc_766:
020A:5F42  F8					clc				; Clear carry flag
020A:5F43			loc_767:
020A:5F43  E9 0297				jmp	loc_815			; (61DD)
020A:5F46			loc_768:
020A:5F46  BF 0008				mov	di,8
020A:5F49  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:5F4D  3B C1				cmp	ax,cx
020A:5F4F  77 0F				ja	loc_770			; Jump if above
020A:5F51  72 08				jc	loc_769			; Jump if carry Set
020A:5F53  26: A1 0004				mov	ax,word ptr es:[4]	; (020A:0004=808h)
020A:5F57  3B C6				cmp	ax,si
020A:5F59  77 05				ja	loc_770			; Jump if above
020A:5F5B			loc_769:
020A:5F5B  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020A:0006=3)
020A:5F60			loc_770:
020A:5F60  06					push	es
020A:5F61  8C D8				mov	ax,ds
020A:5F63  8E C0				mov	es,ax
020A:5F65  1F					pop	ds
020A:5F66  B4 03				mov	ah,3
020A:5F68  26: 80 3E 15D0 01			cmp	es:data_161,1		; (020A:15D0=0)
020A:5F6E  77 05				ja	loc_771			; Jump if above
020A:5F70  03 DD				add	bx,bp
020A:5F72  E9 00BD				jmp	loc_787			; (6032)
020A:5F75			loc_771:
020A:5F75  39 0D				cmp	[di],cx
020A:5F77  73 35				jae	loc_775			; Jump if above or =
020A:5F79  8A 45 05				mov	al,[di+5]
020A:5F7C  84 C4				test	al,ah
020A:5F7E  75 11				jnz	loc_772			; Jump if not zero
020A:5F80  03 FB				add	di,bx
020A:5F82  39 0D				cmp	[di],cx
020A:5F84  73 28				jae	loc_775			; Jump if above or =
020A:5F86  8A 45 05				mov	al,[di+5]
020A:5F89  84 C4				test	al,ah
020A:5F8B  75 04				jnz	loc_772			; Jump if not zero
020A:5F8D  03 FB				add	di,bx
020A:5F8F  EB E4				jmp	short loc_771		; (5F75)
020A:5F91			loc_772:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 200

020A:5F91  A8 02				test	al,2
020A:5F93  75 06				jnz	loc_773			; Jump if not zero
020A:5F95  03 FB				add	di,bx
020A:5F97  03 FD				add	di,bp
020A:5F99  EB DA				jmp	short loc_771		; (5F75)
020A:5F9B			loc_773:
020A:5F9B  A8 01				test	al,1
020A:5F9D  75 04				jnz	loc_774			; Jump if not zero
020A:5F9F  03 FA				add	di,dx
020A:5FA1  EB D2				jmp	short loc_771		; (5F75)
020A:5FA3			loc_774:
020A:5FA3  8A 45 06				mov	al,[di+6]
020A:5FA6  32 E4				xor	ah,ah			; Zero register
020A:5FA8  03 F8				add	di,ax
020A:5FAA  B4 03				mov	ah,3
020A:5FAC  EB C7				jmp	short loc_771		; (5F75)
020A:5FAE			loc_775:
020A:5FAE  74 0B				jz	loc_776			; Jump if zero
020A:5FB0  83 3D FF				cmp	word ptr [di],0FFFFh
020A:5FB3  75 4B				jne	loc_782			; Jump if not equal
020A:5FB5  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:5FB9  73 45				jae	loc_782			; Jump if above or =
020A:5FBB			loc_776:
020A:5FBB  39 0D				cmp	[di],cx
020A:5FBD  75 41				jne	loc_782			; Jump if not equal
020A:5FBF  39 75 02				cmp	[di+2],si
020A:5FC2  73 3A				jae	loc_781			; Jump if above or =
020A:5FC4			loc_777:
020A:5FC4  8A 45 05				mov	al,[di+5]
020A:5FC7  84 C4				test	al,ah
020A:5FC9  75 16				jnz	loc_778			; Jump if not zero
020A:5FCB  03 FB				add	di,bx
020A:5FCD  39 0D				cmp	[di],cx
020A:5FCF  75 2F				jne	loc_782			; Jump if not equal
020A:5FD1  39 75 02				cmp	[di+2],si
020A:5FD4  73 28				jae	loc_781			; Jump if above or =
020A:5FD6  8A 45 05				mov	al,[di+5]
020A:5FD9  84 C4				test	al,ah
020A:5FDB  75 04				jnz	loc_778			; Jump if not zero
020A:5FDD  03 FB				add	di,bx
020A:5FDF  EB DA				jmp	short loc_776		; (5FBB)
020A:5FE1			loc_778:
020A:5FE1  A8 02				test	al,2
020A:5FE3  75 06				jnz	loc_779			; Jump if not zero
020A:5FE5  03 FB				add	di,bx
020A:5FE7  03 FD				add	di,bp
020A:5FE9  EB D0				jmp	short loc_776		; (5FBB)
020A:5FEB			loc_779:
020A:5FEB  A8 01				test	al,1
020A:5FED  75 04				jnz	loc_780			; Jump if not zero
020A:5FEF  03 FA				add	di,dx
020A:5FF1  EB C8				jmp	short loc_776		; (5FBB)
020A:5FF3			loc_780:
020A:5FF3  8A 45 06				mov	al,[di+6]
020A:5FF6  32 E4				xor	ah,ah			; Zero register
020A:5FF8  03 F8				add	di,ax
020A:5FFA  B4 03				mov	ah,3
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 201

020A:5FFC  EB BD				jmp	short loc_776		; (5FBB)
020A:5FFE			loc_781:
020A:5FFE  74 02				jz	loc_783			; Jump if zero
020A:6000			loc_782:
020A:6000  EB 2D				jmp	short loc_786		; (602F)
020A:6002			loc_783:
020A:6002  83 FA 16				cmp	dx,16h
020A:6005  75 25				jne	loc_785			; Jump if not equal
020A:6007  26: 80 3E 4D4B 01			cmp	es:data_570,1		; (020A:4D4B=0E6h)
020A:600D  74 1D				je	loc_785			; Jump if equal
020A:600F  26: 80 3E 53D6 00			cmp	es:data_649,0		; (020A:53D6=0B4h)
020A:6015  75 0A				jne	loc_784			; Jump if not equal
020A:6017  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:601B  26: C6 06 53D6 01			mov	es:data_649,1		; (020A:53D6=0B4h)
020A:6021			loc_784:
020A:6021  8A 45 04				mov	al,[di+4]
020A:6024  24 1F				and	al,1Fh
020A:6026  3C 1F				cmp	al,1Fh
020A:6028  75 02				jne	loc_785			; Jump if not equal
020A:602A  EB 98				jmp	short loc_777		; (5FC4)
020A:602C			loc_785:
020A:602C  E9 00BF				jmp	loc_801			; (60EE)
020A:602F			loc_786:
020A:602F  E9 014A				jmp	loc_809			; (617C)
020A:6032			loc_787:
020A:6032  39 0D				cmp	[di],cx
020A:6034  73 37				jae	loc_791			; Jump if above or =
020A:6036  8A 45 05				mov	al,[di+5]
020A:6039  22 C4				and	al,ah
020A:603B  3C 01				cmp	al,1
020A:603D  75 13				jne	loc_788			; Jump if not equal
020A:603F  03 FB				add	di,bx
020A:6041  39 0D				cmp	[di],cx
020A:6043  73 28				jae	loc_791			; Jump if above or =
020A:6045  8A 45 05				mov	al,[di+5]
020A:6048  22 C4				and	al,ah
020A:604A  3C 01				cmp	al,1
020A:604C  75 04				jne	loc_788			; Jump if not equal
020A:604E  03 FB				add	di,bx
020A:6050  E0EB			data_685	dw	0E0EBh
020A:6052			loc_788:
020A:6052  0677			data_686	dw	677h
020A:6054  03 FB				add	di,bx
020A:6056  2B FD				sub	di,bp
020A:6058  EB D8				jmp	short loc_787		; (6032)
020A:605A			loc_789:
020A:605A  3C 02				cmp	al,2
020A:605C  75 04				jne	loc_790			; Jump if not equal
020A:605E  03 FA				add	di,dx
020A:6060  EB D0				jmp	short loc_787		; (6032)
020A:6062			loc_790:
020A:6062  8A 45 06				mov	al,[di+6]
020A:6065  32 E4				xor	ah,ah			; Zero register
020A:6067  03 F8				add	di,ax
020A:6069  B4 03				mov	ah,3
020A:606B  EB C5				jmp	short loc_787		; (6032)
020A:606D			loc_791:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 202

020A:606D  74 0B				jz	loc_792			; Jump if zero
020A:606F  83 3D FF				cmp	word ptr [di],0FFFFh
020A:6072  75 4D				jne	loc_798			; Jump if not equal
020A:6074  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:6078  73 47				jae	loc_798			; Jump if above or =
020A:607A			loc_792:
020A:607A  39 0D				cmp	[di],cx
020A:607C  75 43				jne	loc_798			; Jump if not equal
020A:607E  39 75 02				cmp	[di+2],si
020A:6081  73 3C				jae	loc_797			; Jump if above or =
020A:6083			loc_793:
020A:6083  8A 45 05				mov	al,[di+5]
020A:6086  22 C4				and	al,ah
020A:6088  3C 01				cmp	al,1
020A:608A  75 18				jne	loc_794			; Jump if not equal
020A:608C  03 FB				add	di,bx
020A:608E  39 0D				cmp	[di],cx
020A:6090  75 2F				jne	loc_798			; Jump if not equal
020A:6092  39 75 02				cmp	[di+2],si
020A:6095  73 28				jae	loc_797			; Jump if above or =
020A:6097  8A 45 05				mov	al,[di+5]
020A:609A  22 C4				and	al,ah
020A:609C  3C 01				cmp	al,1
020A:609E  75 04				jne	loc_794			; Jump if not equal
020A:60A0  03 FB				add	di,bx
020A:60A2  EB D6				jmp	short loc_792		; (607A)
020A:60A4			loc_794:
020A:60A4  77 06				ja	loc_795			; Jump if above
020A:60A6  03 FB				add	di,bx
020A:60A8  2B FD				sub	di,bp
020A:60AA  EB CE				jmp	short loc_792		; (607A)
020A:60AC			loc_795:
020A:60AC  3C 02				cmp	al,2
020A:60AE  75 04				jne	loc_796			; Jump if not equal
020A:60B0  03 FA				add	di,dx
020A:60B2  C6EB			data_687	dw	0C6EBh
020A:60B4			loc_796:
020A:60B4  458A			data_688	dw	458Ah
020A:60B6  06					push	es
020A:60B7  32 E4				xor	ah,ah			; Zero register
020A:60B9  03 F8				add	di,ax
020A:60BB  B4 03				mov	ah,3
020A:60BD  EB BB				jmp	short loc_792		; (607A)
020A:60BF			loc_797:
020A:60BF  74 03				jz	loc_799			; Jump if zero
020A:60C1			loc_798:
020A:60C1  E9 00B8				jmp	loc_809			; (617C)
020A:60C4			loc_799:
020A:60C4  83 FA 16				cmp	dx,16h
020A:60C7  75 25				jne	loc_801			; Jump if not equal
020A:60C9  26: 80 3E 4D4B 01			cmp	es:data_570,1		; (020A:4D4B=0E6h)
020A:60CF  74 1D				je	loc_801			; Jump if equal
020A:60D1  26: 80 3E 53D6 00			cmp	es:data_649,0		; (020A:53D6=0B4h)
020A:60D7  75 0A				jne	loc_800			; Jump if not equal
020A:60D9  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:60DD  26: C6 06 53D6 01			mov	es:data_649,1		; (020A:53D6=0B4h)
020A:60E3			loc_800:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 203

020A:60E3  8A 45 04				mov	al,[di+4]
020A:60E6  24 1F				and	al,1Fh
020A:60E8  3C 1F				cmp	al,1Fh
020A:60EA  75 02				jne	loc_801			; Jump if not equal
020A:60EC  EB 95				jmp	short loc_793		; (6083)
020A:60EE			loc_801:
020A:60EE  8B 05				mov	ax,[di]
020A:60F0  A3 0002				mov	word ptr ds:[2],ax	; (020A:0002=10h)
020A:60F3  8B 45 02				mov	ax,[di+2]
020A:60F6  A3 0004				mov	word ptr ds:[4],ax	; (020A:0004=808h)
020A:60F9  26: 80 3E 53D6 00			cmp	es:data_649,0		; (020A:53D6=0B4h)
020A:60FF  75 04				jne	loc_802			; Jump if not equal
020A:6101  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:6105			loc_802:
020A:6105  26: A1 40F5				mov	ax,es:data_523		; (020A:40F5=3C26h)
020A:6109  26: 3B 06 344A			cmp	ax,es:data_401		; (020A:344A=0CD01h)
020A:610E  75 69				jne	loc_808			; Jump if not equal
020A:6110  26: A1 40F7				mov	ax,es:data_524		; (020A:40F7=7545h)
020A:6114  26: 3B 06 344C			cmp	ax,es:data_402		; (020A:344C=6C6h)
020A:6119  75 5E				jne	loc_808			; Jump if not equal
020A:611B  BB 40C2				mov	bx,40C2h
020A:611E  8A 45 05				mov	al,[di+5]
020A:6121  25 000F				and	ax,0Fh
020A:6124  26: D7				xlat	es:[bx]			; al=[al+[bx]] table
020A:6126  0A C0				or	al,al			; Zero ?
020A:6128  75 03				jnz	loc_803			; Jump if not zero
020A:612A  8A 45 06				mov	al,[di+6]
020A:612D			loc_803:
020A:612D  8B D8				mov	bx,ax
020A:612F  8B 01				mov	ax,[bx+di]
020A:6131  26: 3B 06 344A			cmp	ax,es:data_401		; (020A:344A=0CD01h)
020A:6136  8B 41 02				mov	ax,[bx+di+2]
020A:6139  74 03				jz	loc_804			; Jump if zero
020A:613B  B8 FFFF				mov	ax,0FFFFh
020A:613E			loc_804:
020A:613E  8A 51 05				mov	dl,[bx+di+5]
020A:6141  80 E2 0C				and	dl,0Ch
020A:6144  80 FA 00				cmp	dl,0
020A:6147  74 10				je	loc_805			; Jump if equal
020A:6149  80 FA 04				cmp	dl,4
020A:614C  74 27				je	loc_807			; Jump if equal
020A:614E  80 FA 08				cmp	dl,8
020A:6151  75 26				jne	loc_808			; Jump if not equal
020A:6153  26: A3 4E8B				mov	es:data_638,ax		; (020A:4E8B=3E80h)
020A:6157  EB 20				jmp	short loc_808		; (6179)
020A:6159			loc_805:
020A:6159  26: A3 4E89				mov	word ptr es:[4E89h],ax	; (020A:4E89=638h)
020A:615D  8A 41 04				mov	al,[bx+di+4]
020A:6160  26: A2 4E8D				mov	es:data_639,al		; (020A:4E8D=29h)
020A:6164  32 C0				xor	al,al			; Zero register
020A:6166  F6 41 05 0F				test	byte ptr [bx+di+5],0Fh
020A:616A  74 03				jz	loc_806			; Jump if zero
020A:616C  8A 41 09				mov	al,[bx+di+9]
020A:616F			loc_806:
020A:616F  26: A2 4E8E				mov	es:data_640,al		; (020A:4E8E=13h)
020A:6173  EB 04				jmp	short loc_808		; (6179)
020A:6175			loc_807:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 204

020A:6175  26: A3 4E87				mov	word ptr es:[4E87h],ax	; (020A:4E87=0A336h)
020A:6179			loc_808:
020A:6179  F9					stc				; Set carry flag
020A:617A  EB 61				jmp	short loc_815		; (61DD)
020A:617C			loc_809:
020A:617C  26: A1 40F5				mov	ax,es:data_523		; (020A:40F5=3C26h)
020A:6180  26: 3B 06 344A			cmp	ax,es:data_401		; (020A:344A=0CD01h)
020A:6185  75 55				jne	loc_814			; Jump if not equal
020A:6187  26: A1 40F7				mov	ax,es:data_524		; (020A:40F7=7545h)
020A:618B  26: 3B 06 344C			cmp	ax,es:data_402		; (020A:344C=6C6h)
020A:6190  75 4A				jne	loc_814			; Jump if not equal
020A:6192  B8 FFFF				mov	ax,0FFFFh
020A:6195  8B 1D				mov	bx,[di]
020A:6197  26: 3B 1E 344A			cmp	bx,es:data_401		; (020A:344A=0CD01h)
020A:619C  75 03				jne	loc_810			; Jump if not equal
020A:619E  8B 45 02				mov	ax,[di+2]
020A:61A1			loc_810:
020A:61A1  8A 55 05				mov	dl,[di+5]
020A:61A4  80 E2 0C				and	dl,0Ch
020A:61A7  80 FA 00				cmp	dl,0
020A:61AA  74 10				je	loc_811			; Jump if equal
020A:61AC  80 FA 04				cmp	dl,4
020A:61AF  74 27				je	loc_813			; Jump if equal
020A:61B1  80 FA 08				cmp	dl,8
020A:61B4  75 26				jne	loc_814			; Jump if not equal
020A:61B6  26: A3 4E8B				mov	es:data_638,ax		; (020A:4E8B=3E80h)
020A:61BA  EB 20				jmp	short loc_814		; (61DC)
020A:61BC			loc_811:
020A:61BC  26: A3 4E89				mov	word ptr es:[4E89h],ax	; (020A:4E89=638h)
020A:61C0  8A 45 04				mov	al,[di+4]
020A:61C3  26: A2 4E8D				mov	es:data_639,al		; (020A:4E8D=29h)
020A:61C7  32 C0				xor	al,al			; Zero register
020A:61C9  F6 45 05 0F				test	byte ptr [di+5],0Fh
020A:61CD  74 03				jz	loc_812			; Jump if zero
020A:61CF  8A 45 09				mov	al,[di+9]
020A:61D2			loc_812:
020A:61D2  26: A2 4E8E				mov	es:data_640,al		; (020A:4E8E=13h)
020A:61D6  EB 04				jmp	short loc_814		; (61DC)
020A:61D8			loc_813:
020A:61D8  26: A3 4E87				mov	word ptr es:[4E87h],ax	; (020A:4E87=0A336h)
020A:61DC			loc_814:
020A:61DC  F8					clc				; Clear carry flag
020A:61DD			loc_815:
020A:61DD  1E					push	ds
020A:61DE  8C C0				mov	ax,es
020A:61E0  8E D8				mov	ds,ax
020A:61E2  07					pop	es
020A:61E3  8B CD				mov	cx,bp
020A:61E5  5D					pop	bp
020A:61E6  5E					pop	si
020A:61E7  5B					pop	bx
020A:61E8  58					pop	ax
020A:61E9  C3					retn
				sub_76		endp

020A:61EA  87 DB				xchg	bx,bx

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 205

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_77		proc	near

020A:61EC			locloop_816:
020A:61EC  8A 04				mov	al,[si]
020A:61EE  A8 40				test	al,40h			; '@'
020A:61F0  74 18				jz	loc_818			; Jump if zero
020A:61F2  3C 40				cmp	al,40h			; '@'
020A:61F4  74 14				je	loc_818			; Jump if equal
020A:61F6  3C 5B				cmp	al,5Bh			; '['
020A:61F8  72 08				jb	loc_817			; Jump if below
020A:61FA  3C 7B				cmp	al,7Bh			; '{'
020A:61FC  73 0C				jae	loc_818			; Jump if above or =
020A:61FE  3C 60				cmp	al,60h			; '`'
020A:6200  76 08				jbe	loc_818			; Jump if below or =
020A:6202			loc_817:
020A:6202  24 DF				and	al,0DFh
020A:6204  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:6208  88 04				mov	[si],al
020A:620A			loc_818:
020A:620A  46					inc	si
020A:620B  E2 DF				loop	locloop_816		; Loop if cx > 0

020A:620D  C3					retn
				sub_77		endp

							                        ;* No entry point to code
020A:620E  87 DB				xchg	bx,bx
020A:6210  C6 06 304A 00			mov	data_305,0		; (020A:304A=45h)
020A:6215  BA 0002				mov	dx,2
020A:6218  BB 2EA0				mov	bx,2EA0h
020A:621B  E8 C602		;*		call	sub_30			;*(2820)
020A:621B  E8 02 C6				db	0E8h, 02h,0C6h
020A:621E  C3					retn
							                        ;* No entry point to code
020A:621F  90					nop
020A:6220  BF 0008				mov	di,8
020A:6223  BE 0000				mov	si,0
020A:6226  E8 0E13				call	sub_90			; (703C)
020A:6229			loc_819:
020A:6229  8B 04				mov	ax,[si]
020A:622B  8B 5C 02				mov	bx,[si+2]
020A:622E  8B 4C 04				mov	cx,[si+4]
020A:6231  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:6236  73 64				jae	loc_821			; Jump if above or =
020A:6238  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:623D  74 60				jz	loc_822			; Jump if zero
020A:623F  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:6244  75 59				jnz	loc_822			; Jump if not zero
020A:6246  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:624B  75 4D				jnz	loc_820			; Jump if not zero
020A:624D  26: 3B 05				cmp	ax,es:[di]
020A:6250  72 4F				jb	loc_823			; Jump if below
020A:6252  77 46				ja	loc_820			; Jump if above
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 206

020A:6254  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:6258  77 40				ja	loc_820			; Jump if above
020A:625A  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:625E  72 41				jb	loc_823			; Jump if below
020A:6260  1E					push	ds
020A:6261  E8 0DE1				call	sub_91			; (7045)
020A:6264  F7 06 4E22 0200			test	data_591,200h		; (020A:4E22=0EDA3h)
020A:626A  1F					pop	ds
020A:626B  74 3F				jz	loc_824			; Jump if zero
020A:626D  8B 54 0A				mov	dx,[si+0Ah]
020A:6270  80 E2 03				and	dl,3
020A:6273  80 FA 01				cmp	dl,1
020A:6276  77 34				ja	loc_824			; Jump if above
020A:6278  26: 8A 55 04				mov	dl,es:[di+4]
020A:627C  F6 C2 80				test	dl,80h
020A:627F  74 2B				jz	loc_824			; Jump if zero
020A:6281  F6 C2 10				test	dl,10h
020A:6284  75 26				jnz	loc_824			; Jump if not zero
020A:6286  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:6286  9A					db	9Ah
020A:6287  55E4 14FC				dw	55E4h, 14FCh
020A:628B  72 1F				jc	loc_824			; Jump if carry Set
020A:628D  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:6293  73 17				jae	loc_824			; Jump if above or =
020A:6295  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020A:629A			loc_820:
020A:629A  EB 3C				jmp	short loc_826		; (62D8)
020A:629C			loc_821:
020A:629C  E9 016A				jmp	loc_839			; (6409)
020A:629F			loc_822:
020A:629F  EB 0B				jmp	short loc_824		; (62AC)
020A:62A1			loc_823:
020A:62A1  83 C6 15				add	si,15h
020A:62A4  83 3C FF				cmp	word ptr [si],0FFFFh
020A:62A7  74 2F				je	loc_826			; Jump if equal
020A:62A9  E9 FF7D				jmp	loc_819			; (6229)
020A:62AC			loc_824:
020A:62AC  E8 0D8D				call	sub_90			; (703C)
020A:62AF  BB 40C2				mov	bx,40C2h
020A:62B2  26: 8A 45 05				mov	al,es:[di+5]
020A:62B6  25 000F				and	ax,0Fh
020A:62B9  1E					push	ds
020A:62BA  E8 0D88				call	sub_91			; (7045)
020A:62BD  D7					xlat				; al=[al+[bx]] table
020A:62BE  1F					pop	ds
020A:62BF  0A C0				or	al,al			; Zero ?
020A:62C1  75 04				jnz	loc_825			; Jump if not zero
020A:62C3  26: 8A 45 06				mov	al,es:[di+6]
020A:62C7			loc_825:
020A:62C7  03 F8				add	di,ax
020A:62C9  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:62CE  73 CC				jae	loc_821			; Jump if above or =
020A:62D0  83 3C FF				cmp	word ptr [si],0FFFFh
020A:62D3  74 03				je	loc_826			; Jump if equal
020A:62D5  E9 FF51				jmp	loc_819			; (6229)
020A:62D8			loc_826:
020A:62D8  E8 0D6A				call	sub_91			; (7045)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 207

020A:62DB  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:62E0  74 CA				jz	loc_824			; Jump if zero
020A:62E2  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020A:62E7  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:62EC  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:62F1  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:62F6  75 B4				jnz	loc_824			; Jump if not zero
020A:62F8  E8 0401				call	sub_81			; (66FC)
020A:62FB  BD 2D20				mov	bp,2D20h
020A:62FE  80 3E 35E3 01			cmp	data_453,1		; (020A:35E3=1)
020A:6303  75 09				jne	loc_827			; Jump if not equal
020A:6305  4D					dec	bp
020A:6306  80 3E 35E4 00			cmp	data_454,0		; (020A:35E4=74h)
020A:630B  74 08				je	loc_828			; Jump if equal
020A:630D  4D					dec	bp
020A:630E			loc_827:
020A:630E  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:6313  45					inc	bp
020A:6314  45					inc	bp
020A:6315			loc_828:
020A:6315  26: 8B 45 02				mov	ax,es:[di+2]
020A:6319  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6319  9A					db	9Ah
020A:631A  021C 14FC				dw	21Ch, 14FCh
020A:631E  BD 2D3B				mov	bp,2D3Bh
020A:6321  B9 000A				mov	cx,0Ah
020A:6324  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:6324  9A					db	9Ah
020A:6325  2D70 14FC				dw	2D70h, 14FCh
020A:6329  B1 00				mov	cl,0
020A:632B  C6 06 2D5B 65			mov	data_273,65h		; (020A:2D5B=3Dh) 'e'
020A:6330  C7 06 2D5C 7571			mov	data_274,7571h		; (020A:2D5C=6F43h)
020A:6336  80 3E 35DF 00			cmp	data_450,0		; (020A:35DF=80h)
020A:633B  75 0B				jne	loc_829			; Jump if not equal
020A:633D  C6 06 2D5B 45			mov	data_273,45h		; (020A:2D5B=3Dh) 'E'
020A:6342  C7 06 2D5C 5551			mov	data_274,5551h		; (020A:2D5C=6F43h)
020A:6348			loc_829:
020A:6348  BD 2D63				mov	bp,2D63h
020A:634B  26: 8B 45 02				mov	ax,es:[di+2]
020A:634F  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:634F  9A					db	9Ah
020A:6350  023C 14FC				dw	23Ch, 14FCh
020A:6354  B7 00				mov	bh,0
020A:6356  26: 8A 45 04				mov	al,es:[di+4]
020A:635A  24 3F				and	al,3Fh			; '?'
020A:635C  3C 02				cmp	al,2
020A:635E  74 0B				je	loc_830			; Jump if equal
020A:6360  3C 00				cmp	al,0
020A:6362  75 09				jne	loc_831			; Jump if not equal
020A:6364  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:6369  75 02				jne	loc_831			; Jump if not equal
020A:636B			loc_830:
020A:636B  B7 20				mov	bh,20h			; ' '
020A:636D			loc_831:
020A:636D  E8 009C				call	sub_78			; (640C)
020A:6370  F7 06 4E24 0020			test	data_592,20h		; (020A:4E24=0A107h)
020A:6376  75 42				jnz	loc_836			; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 208

020A:6378  26: 8B 05				mov	ax,es:[di]
020A:637B  26: 8B 5D 02				mov	bx,es:[di+2]
020A:637F  3D A000				cmp	ax,0A000h
020A:6382  73 36				jae	loc_836			; Jump if above or =
020A:6384  0B C0				or	ax,ax			; Zero ?
020A:6386  75 08				jnz	loc_832			; Jump if not zero
020A:6388  81 FB 0500				cmp	bx,500h
020A:638C  76 2C				jbe	loc_836			; Jump if below or =
020A:638E  EB 24				jmp	short loc_835		; (63B4)
020A:6390			loc_832:
020A:6390  3D 0040				cmp	ax,40h
020A:6393  75 08				jne	loc_833			; Jump if not equal
020A:6395  81 FB 0100				cmp	bx,100h
020A:6399  76 1F				jbe	loc_836			; Jump if below or =
020A:639B  EB 17				jmp	short loc_835		; (63B4)
020A:639D			loc_833:
020A:639D  3D 0050				cmp	ax,50h
020A:63A0  75 06				jne	loc_834			; Jump if not equal
020A:63A2  0B DB				or	bx,bx			; Zero ?
020A:63A4  74 14				jz	loc_836			; Jump if zero
020A:63A6  EB 0C				jmp	short loc_835		; (63B4)
020A:63A8			loc_834:
020A:63A8  81 FB 00FF				cmp	bx,0FFh
020A:63AC  77 06				ja	loc_835			; Jump if above
020A:63AE  3B 06 3039				cmp	ax,data_293		; (020A:3039=4E49h)
020A:63B2  74 06				je	loc_836			; Jump if equal
020A:63B4			loc_835:
020A:63B4  C7 06 2DAB 2A3B			mov	data_275,2A3Bh		; (020A:2DAB=5C53h)
020A:63BA			loc_836:
020A:63BA  80 3E 586D 01			cmp	data_673,1		; (020A:586D=39h)
020A:63BF  74 0C				je	loc_837			; Jump if equal
020A:63C1  C6 06 586D 01			mov	data_673,1		; (020A:586D=39h)
020A:63C6  B0 58				mov	al,58h			; 'X'
020A:63C8  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:63C8  9A					db	9Ah
020A:63C9  2280 14FC				dw	2280h, 14FCh
020A:63CD			loc_837:
020A:63CD  BA 2D1B				mov	dx,2D1Bh
020A:63D0  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:63D5  06					push	es
020A:63D6  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:63D6  9A					db	9Ah
020A:63D7  233C 14FC				dw	233Ch, 14FCh
020A:63DB  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:63E0  9C					pushf				; Push flags
020A:63E1  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:63E6  5A					pop	dx
020A:63E7  8E C2				mov	es,dx
020A:63E9  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:63EE  5A					pop	dx
020A:63EF  75 0A				jnz	loc_838			; Jump if not zero
020A:63F1  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:63F6  74 03				je	loc_838			; Jump if equal
020A:63F8  E8 0FC1				call	sub_103			; (73BC)
020A:63FB			loc_838:
020A:63FB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6400  9D					popf				; Pop flags
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 209

020A:6401  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6406  E9 FEA3				jmp	loc_824			; (62AC)
020A:6409			loc_839:
020A:6409  C3					retn
020A:640A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_78		proc	near
020A:640C  51					push	cx
020A:640D  52					push	dx
020A:640E  06					push	es
020A:640F  55					push	bp
020A:6410  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:6415  75 0A				jne	loc_840			; Jump if not equal
020A:6417  26: 8A 45 04				mov	al,es:[di+4]
020A:641B  24 3F				and	al,3Fh			; '?'
020A:641D  3C 20				cmp	al,20h			; ' '
020A:641F  75 15				jne	loc_841			; Jump if not equal
020A:6421			loc_840:
020A:6421  F6 06 16AB 01			test	data_166,1		; (020A:16AB=41h)
020A:6426  74 0E				jz	loc_841			; Jump if zero
020A:6428  80 3E 16AC 01			cmp	byte ptr data_167,1	; (020A:16AC='AAAAAAAAAAAAAA')
020A:642D  74 07				je	loc_841			; Jump if equal
020A:642F  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:6434  75 03				jne	loc_842			; Jump if not equal
020A:6436			loc_841:
020A:6436  E9 01D5				jmp	loc_874			; (660E)
020A:6439			loc_842:
020A:6439  E8 01DC				call	sub_79			; (6618)
020A:643C  32 C9				xor	cl,cl			; Zero register
020A:643E  B0 28				mov	al,28h			; '('
020A:6440  80 3E 304A 00			cmp	data_305,0		; (020A:304A=45h)
020A:6445  74 02				je	loc_843			; Jump if equal
020A:6447  B0 5B				mov	al,5Bh			; '['
020A:6449			loc_843:
020A:6449  3E: 88 46 00				mov	ds:[bp],al
020A:644D  45					inc	bp
020A:644E  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:6453  75 03				jne	loc_844			; Jump if not equal
020A:6455  E9 0108				jmp	loc_861			; (6560)
020A:6458			loc_844:
020A:6458  53					push	bx
020A:6459  8C C8				mov	ax,cs
020A:645B  26: 3B 05				cmp	ax,es:[di]
020A:645E  75 0A				jne	loc_845			; Jump if not equal
020A:6460  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
020A:6466  45					inc	bp
020A:6467  45					inc	bp
020A:6468  EB 59				jmp	short loc_851		; (64C3)
020A:646A			loc_845:
020A:646A  26: 8B 05				mov	ax,es:[di]
020A:646D  25 FFF0				and	ax,0FFF0h
020A:6470  3D FBA0				cmp	ax,0FBA0h
020A:6473  75 22				jne	loc_848			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 210

020A:6475  FE C1				inc	cl
020A:6477  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:647D  45					inc	bp
020A:647E  45					inc	bp
020A:647F  26: 8B 05				mov	ax,es:[di]
020A:6482  24 0F				and	al,0Fh
020A:6484  3C 0F				cmp	al,0Fh
020A:6486  74 0D				je	loc_847			; Jump if equal
020A:6488  04 30				add	al,30h			; '0'
020A:648A  3C 39				cmp	al,39h			; '9'
020A:648C  76 02				jbe	loc_846			; Jump if below or =
020A:648E  04 07				add	al,7
020A:6490			loc_846:
020A:6490  3E: 88 46 00				mov	ds:[bp],al
020A:6494  45					inc	bp
020A:6495			loc_847:
020A:6495  EB 2C				jmp	short loc_851		; (64C3)
020A:6497			loc_848:
020A:6497  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:6497  9A					db	9Ah
020A:6498  55E4 14FC				dw	55E4h, 14FCh
020A:649C  72 10				jc	loc_849			; Jump if carry Set
020A:649E  80 3E 15D0 02			cmp	data_161,2		; (020A:15D0=0)
020A:64A3  72 09				jb	loc_849			; Jump if below
020A:64A5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:64AA  74 02				jz	loc_849			; Jump if zero
020A:64AC  EB 42				jmp	short loc_854		; (64F0)
020A:64AE			loc_849:
020A:64AE  26: 8B 05				mov	ax,es:[di]
020A:64B1  83 3E 3450 FF			cmp	data_404,0FFFFh		; (020A:3450=8300h)
020A:64B6  74 04				je	loc_850			; Jump if equal
020A:64B8  2B 06 3450				sub	ax,data_404		; (020A:3450=8300h)
020A:64BC			loc_850:
020A:64BC  9A 14FC:0118		;*		call	far ptr sub_153		;*(14FC:0118)
020A:64BC  9A					db	9Ah
020A:64BD  0118 14FC				dw	118h, 14FCh
020A:64C1  EB 06				jmp	short loc_852		; (64C9)
020A:64C3			loc_851:
020A:64C3  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:64C8  45					inc	bp
020A:64C9			loc_852:
020A:64C9  83 3E 3450 FF			cmp	data_404,0FFFFh		; (020A:3450=8300h)
020A:64CE  74 17				je	loc_853			; Jump if equal
020A:64D0  A1 3450				mov	ax,data_404		; (020A:3450=8300h)
020A:64D3  0B C0				or	ax,ax			; Zero ?
020A:64D5  74 10				jz	loc_853			; Jump if zero
020A:64D7  51					push	cx
020A:64D8  B1 0C				mov	cl,0Ch
020A:64DA  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:64DC  59					pop	cx
020A:64DD  9A 14FC:00B0		;*		call	far ptr sub_150		;*(14FC:00B0)
020A:64DD  9A					db	9Ah
020A:64DE  00B0 14FC				dw	0B0h, 14FCh
020A:64E2  3E: 88 7E 00				mov	ds:[bp],bh
020A:64E6  45					inc	bp
020A:64E7			loc_853:
020A:64E7  26: 8B 45 02				mov	ax,es:[di+2]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 211

020A:64EB  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:64EB  9A					db	9Ah
020A:64EC  021C 14FC				dw	21Ch, 14FCh
020A:64F0			loc_854:
020A:64F0  5B					pop	bx
020A:64F1  0A C9				or	cl,cl			; Zero ?
020A:64F3  75 0C				jnz	loc_855			; Jump if not zero
020A:64F5  F6 C7 30				test	bh,30h			; '0'
020A:64F8  74 0A				jz	loc_856			; Jump if zero
020A:64FA  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:64FF  75 03				jne	loc_856			; Jump if not equal
020A:6501			loc_855:
020A:6501  E9 00FA				jmp	loc_872			; (65FE)
020A:6504			loc_856:
020A:6504  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:6509  45					inc	bp
020A:650A  F6 C7 30				test	bh,30h			; '0'
020A:650D  74 3B				jz	loc_859			; Jump if zero
020A:650F  F6 C7 20				test	bh,20h			; ' '
020A:6512  74 24				jz	loc_858			; Jump if zero
020A:6514  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:6519  74 1D				jz	loc_858			; Jump if zero
020A:651B  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020A:6520  77 13				ja	loc_857			; Jump if above
020A:6522  26: 8B 5D 02				mov	bx,es:[di+2]
020A:6526  26: 8E 05				mov	es,es:[di]
020A:6529  26: 8B 47 02				mov	ax,es:[bx+2]
020A:652D  26: 8B 1F				mov	bx,es:[bx]
020A:6530  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:6530  9A					db	9Ah
020A:6531  039C 14FC				dw	39Ch, 14FCh
020A:6535			loc_857:
020A:6535  E9 00C6				jmp	loc_872			; (65FE)
020A:6538			loc_858:
020A:6538  26: 8B 5D 02				mov	bx,es:[di+2]
020A:653C  26: 8E 05				mov	es,es:[di]
020A:653F  26: 8B 07				mov	ax,es:[bx]
020A:6542  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:6542  9A					db	9Ah
020A:6543  023C 14FC				dw	23Ch, 14FCh
020A:6547  E9 00B4				jmp	loc_872			; (65FE)
020A:654A			loc_859:
020A:654A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:654E  26: 8A 45 04				mov	al,es:[di+4]
020A:6552  24 3F				and	al,3Fh			; '?'
020A:6554  3C 20				cmp	al,20h			; ' '
020A:6556  74 03				je	loc_860			; Jump if equal
020A:6558  E9 0098				jmp	loc_871			; (65F3)
020A:655B			loc_860:
020A:655B  BA 0010				mov	dx,10h
020A:655E  EB 07				jmp	short loc_862		; (6567)
020A:6560			loc_861:
020A:6560  26: 8B 5D 02				mov	bx,es:[di+2]
020A:6564  BA 0018				mov	dx,18h
020A:6567			loc_862:
020A:6567  26: 8B 4D 08				mov	cx,es:[di+8]
020A:656B  3B CA				cmp	cx,dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 212

020A:656D  72 02				jb	loc_863			; Jump if below
020A:656F  8B CA				mov	cx,dx
020A:6571			loc_863:
020A:6571  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:6576  45					inc	bp
020A:6577  26: 8E 05				mov	es,es:[di]
020A:657A  57					push	di
020A:657B  8B FB				mov	di,bx
020A:657D  BB 5413				mov	bx,5413h

020A:6580			locloop_864:
020A:6580  83 F9 01				cmp	cx,1
020A:6583  76 31				jbe	loc_865			; Jump if below or =
020A:6585  80 3E 53D9 00			cmp	data_652,0		; (020A:53D9=1)
020A:658A  74 2A				je	loc_865			; Jump if equal
020A:658C  F7 06 4E22 0002			test	data_591,2		; (020A:4E22=0EDA3h)
020A:6592  74 22				jz	loc_865			; Jump if zero
020A:6594  26: 8B 05				mov	ax,es:[di]
020A:6597  3C 00				cmp	al,0
020A:6599  74 4F				je	loc_870			; Jump if equal
020A:659B  50					push	ax
020A:659C  86 E0				xchg	ah,al
020A:659E  9A 14FC:38EC		;*		call	far ptr sub_195		;*(14FC:38EC)
020A:659E  9A					db	9Ah
020A:659F  38EC 14FC				dw	38ECh, 14FCh
020A:65A3  3D 0001				cmp	ax,1
020A:65A6  58					pop	ax
020A:65A7  72 41				jc	loc_870			; Jump if carry Set
020A:65A9  74 0E				jz	loc_866			; Jump if zero
020A:65AB  3E: 88 46 00				mov	ds:[bp],al
020A:65AF  45					inc	bp
020A:65B0  47					inc	di
020A:65B1  49					dec	cx
020A:65B2  8A C4				mov	al,ah
020A:65B4  EB 27				jmp	short loc_868		; (65DD)
020A:65B6			loc_865:
020A:65B6  26: 8A 05				mov	al,es:[di]
020A:65B9			loc_866:
020A:65B9  0A C0				or	al,al			; Zero ?
020A:65BB  74 2D				jz	loc_870			; Jump if zero
020A:65BD  3C 0D				cmp	al,0Dh
020A:65BF  74 29				je	loc_870			; Jump if equal
020A:65C1  3C 0A				cmp	al,0Ah
020A:65C3  74 25				je	loc_870			; Jump if equal
020A:65C5  80 3E 53D9 01			cmp	data_652,1		; (020A:53D9=1)
020A:65CA  74 04				je	loc_867			; Jump if equal
020A:65CC  3C 7E				cmp	al,7Eh			; '~'
020A:65CE  73 11				jae	loc_869			; Jump if above or =
020A:65D0			loc_867:
020A:65D0  3C 20				cmp	al,20h			; ' '
020A:65D2  72 0D				jb	loc_869			; Jump if below
020A:65D4  83 F9 01				cmp	cx,1
020A:65D7  77 04				ja	loc_868			; Jump if above
020A:65D9  3C 24				cmp	al,24h			; '$'
020A:65DB  74 0D				je	loc_870			; Jump if equal
020A:65DD			loc_868:
020A:65DD  3E: 88 46 00				mov	ds:[bp],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 213

020A:65E1			loc_869:
020A:65E1  83 FF FE				cmp	di,0FFFEh
020A:65E4  73 04				jae	loc_870			; Jump if above or =
020A:65E6  47					inc	di
020A:65E7  45					inc	bp
020A:65E8  E2 96				loop	locloop_864		; Loop if cx > 0

020A:65EA			loc_870:
020A:65EA  5F					pop	di
020A:65EB  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:65F0  45					inc	bp
020A:65F1  EB 0B				jmp	short loc_872		; (65FE)
020A:65F3			loc_871:
020A:65F3  26: 8E 05				mov	es,es:[di]
020A:65F6  26: 8A 07				mov	al,es:[bx]
020A:65F9  9A 14FC:00E4		;*		call	far ptr sub_152		;*(14FC:00E4)
020A:65F9  9A					db	9Ah
020A:65FA  00E4 14FC				dw	0E4h, 14FCh
020A:65FE			loc_872:
020A:65FE  B0 29				mov	al,29h			; ')'
020A:6600  80 3E 304A 00			cmp	data_305,0		; (020A:304A=45h)
020A:6605  74 02				je	loc_873			; Jump if equal
020A:6607  B0 5D				mov	al,5Dh			; ']'
020A:6609			loc_873:
020A:6609  3E: 88 46 00				mov	ds:[bp],al
020A:660D  45					inc	bp
020A:660E			loc_874:
020A:660E  5D					pop	bp
020A:660F  07					pop	es
020A:6610  5A					pop	dx
020A:6611  59					pop	cx
020A:6612  C6 06 304A 00			mov	data_305,0		; (020A:304A=45h)
020A:6617  C3					retn
				sub_78		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_79		proc	near
020A:6618  50					push	ax
020A:6619  51					push	cx
020A:661A  57					push	di
020A:661B  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:6620  06					push	es
020A:6621  E8 0A39				call	sub_95			; (705D)
020A:6624  32 E4				xor	ah,ah			; Zero register
020A:6626  BF 2DCF				mov	di,2DCFh
020A:6629  B9 0026				mov	cx,26h
020A:662C  B0 3B				mov	al,3Bh			; ';'
020A:662E  FD					std				; Set direction flag
020A:662F  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6631  0B C9				or	cx,cx			; Zero ?
020A:6633  75 02				jnz	loc_875			; Jump if not zero
020A:6635  FE C4				inc	ah
020A:6637			loc_875:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 214

020A:6637  BF 2DCF				mov	di,2DCFh
020A:663A  B9 0026				mov	cx,26h
020A:663D  B0 20				mov	al,20h			; ' '
020A:663F  FD					std				; Set direction flag
020A:6640  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:6642  47					inc	di
020A:6643  47					inc	di
020A:6644  0A E4				or	ah,ah			; Zero ?
020A:6646  74 04				jz	loc_876			; Jump if zero
020A:6648  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:664B  47					inc	di
020A:664C			loc_876:
020A:664C  47					inc	di
020A:664D  FC					cld				; Clear direction
020A:664E  8B EF				mov	bp,di
020A:6650  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6655  9C					pushf				; Push flags
020A:6656  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:665B  5A					pop	dx
020A:665C  8E C2				mov	es,dx
020A:665E  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:6663  5A					pop	dx
020A:6664  75 0A				jnz	loc_877			; Jump if not zero
020A:6666  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:666B  74 03				je	loc_877			; Jump if equal
020A:666D  E8 0D4C				call	sub_103			; (73BC)
020A:6670			loc_877:
020A:6670  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6675  9D					popf				; Pop flags
020A:6676  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:667B  5F					pop	di
020A:667C  59					pop	cx
020A:667D  58					pop	ax
020A:667E  C3					retn
				sub_79		endp

020A:667F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_80		proc	near
020A:6680  80 3E 2B3B 06			cmp	data_242,6		; (020A:2B3B=55h)
020A:6685  73 02				jae	loc_878			; Jump if above or =
020A:6687  EB 19				jmp	short loc_880		; (66A2)
020A:6689			loc_878:
020A:6689  80					db	80h
020A:668A  3E					db	3Eh
020A:668B  36: 2B 04				sub	ax,ss:[si]
020A:668E  76 12				jbe	loc_880			; Jump if below or =
020A:6690  F6 06 2B36 01			test	byte ptr ds:[2B36h],1	; (020A:2B36=3Ah)
020A:6695  75 02				jnz	loc_879			; Jump if not zero
020A:6697  EB 09				jmp	short loc_880		; (66A2)
020A:6699			loc_879:
020A:6699  BA 0007				mov	dx,7
020A:669C  BB 3324				mov	bx,3324h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 215

020A:669F  E8 C17E		;*		call	sub_30			;*(2820)
020A:669F  E8 7E C1				db	0E8h, 7Eh,0C1h
020A:66A2			loc_880:
020A:66A2  C3					retn
				sub_80		endp

							                        ;* No entry point to code
020A:66A3  90					nop
020A:66A4  50					push	ax
020A:66A5  53					push	bx
020A:66A6  51					push	cx
020A:66A7  52					push	dx
020A:66A8  56					push	si
020A:66A9  57					push	di
020A:66AA  55					push	bp
020A:66AB  BF 0008				mov	di,8
020A:66AE			loc_881:
020A:66AE  26: 39 3E 0000			cmp	word ptr es:[0],di	; (020A:0000=1828h)
020A:66B3  76 3E				jbe	loc_885			; Jump if below or =
020A:66B5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:66BA  75 20				jnz	loc_883			; Jump if not zero
020A:66BC  26: 8A 65 05				mov	ah,es:[di+5]
020A:66C0  80 E4 0C				and	ah,0Ch
020A:66C3  80 FC 04				cmp	ah,4
020A:66C6  75 07				jne	loc_882			; Jump if not equal
020A:66C8  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:66CD  75 0D				jnz	loc_883			; Jump if not zero
020A:66CF			loc_882:
020A:66CF  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:66D3  74 07				je	loc_883			; Jump if equal
020A:66D5  8B F7				mov	si,di
020A:66D7  E8 1FAE				call	sub_115			; (8688)
020A:66DA  EB D2				jmp	short loc_881		; (66AE)
020A:66DC			loc_883:
020A:66DC  BB 40C2				mov	bx,40C2h
020A:66DF  26: 8A 45 05				mov	al,es:[di+5]
020A:66E3  25 000F				and	ax,0Fh
020A:66E6  D7					xlat				; al=[al+[bx]] table
020A:66E7  0A C0				or	al,al			; Zero ?
020A:66E9  75 04				jnz	loc_884			; Jump if not zero
020A:66EB  26: 8A 45 06				mov	al,es:[di+6]
020A:66EF			loc_884:
020A:66EF  03 F8				add	di,ax
020A:66F1  EB BB				jmp	short loc_881		; (66AE)
020A:66F3			loc_885:
020A:66F3  5D					pop	bp
020A:66F4  5F					pop	di
020A:66F5  5E					pop	si
020A:66F6  5A					pop	dx
020A:66F7  59					pop	cx
020A:66F8  5B					pop	bx
020A:66F9  58					pop	ax
020A:66FA  C3					retn
020A:66FB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 216

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_81		proc	near
020A:66FC  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:6701  06					push	es
020A:6702  57					push	di
020A:6703  B0 20				mov	al,20h			; ' '
020A:6705  E8 0955				call	sub_95			; (705D)
020A:6708  BF 2D1B				mov	di,2D1Bh
020A:670B  B9 2DD1				mov	cx,2DD1h
020A:670E  81 E9 2D1B				sub	cx,2D1Bh
020A:6712  FC					cld				; Clear direction
020A:6713  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6715  5F					pop	di
020A:6716  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:671B  9C					pushf				; Push flags
020A:671C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6721  5A					pop	dx
020A:6722  8E C2				mov	es,dx
020A:6724  2E: 3B		data_690	db	3Bh
020A:6726  16					push	ss
020A:6727  A1 5A38				mov	ax,data_675		; (020A:5A38=5A5Eh)
020A:672A  75 0A				jnz	loc_886			; Jump if not zero
020A:672C  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:6731  74 03				je	loc_886			; Jump if equal
020A:6733  E8 0C86				call	sub_103			; (73BC)
020A:6736			loc_886:
020A:6736  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:673B  9D					popf				; Pop flags
020A:673C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6741  C3					retn
				sub_81		endp

020A:6742  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_82		proc	near
020A:6744  50					push	ax
020A:6745  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:674A  06					push	es
020A:674B  E8 0906				call	sub_93			; (7054)
020A:674E  C6 06 327D 01			mov	byte ptr ds:[327Dh],1	; (020A:327D=1Eh)
020A:6753  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:6757  3D 0000				cmp	ax,0
020A:675A  75 08				jne	loc_887			; Jump if not equal
020A:675C  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (020A:0004=808h)
020A:6762  74 18				je	loc_888			; Jump if equal
020A:6764			loc_887:
020A:6764  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (020A:0002=10h)
020A:676A  74 10				je	loc_888			; Jump if equal
020A:676C  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:6770  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (020A:0004=808h)
020A:6775  73 05				jae	loc_888			; Jump if above or =
020A:6777  C6 06 327D 00			mov	byte ptr ds:[327Dh],0	; (020A:327D=1Eh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 217

020A:677C			loc_888:
020A:677C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6781  9C					pushf				; Push flags
020A:6782  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6787  5A					pop	dx
020A:6788  8E C2				mov	es,dx
020A:678A  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:678F  5A					pop	dx
020A:6790  75 0A				jnz	loc_889			; Jump if not zero
020A:6792  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:6797  74 03				je	loc_889			; Jump if equal
020A:6799  E8 0C20				call	sub_103			; (73BC)
020A:679C			loc_889:
020A:679C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:67A1  9D					popf				; Pop flags
020A:67A2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:67A7  58					pop	ax
020A:67A8  C3					retn
				sub_82		endp

020A:67A9  87			data_693	db	87h
020A:67AA  DB					db	0DBh
020A:67AB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_83		proc	near
020A:67AC  E8 08BA				call	sub_98			; (7069)
020A:67AF  BF 12D0				mov	di,12D0h
020A:67B2  BE 2CCA				mov	si,2CCAh
020A:67B5  8B 04				mov	ax,[si]
020A:67B7  0B C0				or	ax,ax			; Zero ?
020A:67B9  75 13				jnz	loc_890			; Jump if not zero
020A:67BB  80 3E 345C 01			cmp	byte ptr ds:[345Ch],1	; (020A:345C=0C6h)
020A:67C0  74 0C				je	loc_890			; Jump if equal
020A:67C2  83 3E 344C FC			cmp	data_402,0FFFCh		; (020A:344C=6C6h)
020A:67C7  73 05				jae	loc_890			; Jump if above or =
020A:67C9  39 44 02				cmp	[si+2],ax
020A:67CC  74 26				je	loc_892			; Jump if equal
020A:67CE			loc_890:
020A:67CE  24 F8				and	al,0F8h
020A:67D0  D0 E8				shr	al,1			; Shift w/zeros fill
020A:67D2  D0 E8				shr	al,1			; Shift w/zeros fill
020A:67D4  32 E4				xor	ah,ah			; Zero register
020A:67D6  03 F8				add	di,ax
020A:67D8  26: 8B 3D				mov	di,es:[di]
020A:67DB  8B 04				mov	ax,[si]
020A:67DD			loc_891:
020A:67DD  26: 3A 05				cmp	al,es:[di]
020A:67E0  74 15				je	loc_893			; Jump if equal
020A:67E2  72 10				jc	loc_892			; Jump if carry Set
020A:67E4  50					push	ax
020A:67E5  B8 1324				mov	ax,1324h
020A:67E8  2D 1310				sub	ax,1310h
020A:67EB  03 F8				add	di,ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 218

020A:67ED  58					pop	ax
020A:67EE  26: 83 3D 00				cmp	word ptr es:[di],0
020A:67F2  75 E9				jne	loc_891			; Jump if not equal
020A:67F4			loc_892:
020A:67F4  F8					clc				; Clear carry flag
020A:67F5  EB 01				jmp	short loc_894		; (67F8)
020A:67F7			loc_893:
020A:67F7  F9					stc				; Set carry flag
020A:67F8			loc_894:
020A:67F8  C3					retn
				sub_83		endp

020A:67F9  87 DB				xchg	bx,bx
020A:67FB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_84		proc	near
020A:67FC  50					push	ax
020A:67FD  51					push	cx
020A:67FE  56					push	si
020A:67FF  B9 1324				mov	cx,1324h
020A:6802  81 E9 1310				sub	cx,1310h
020A:6806  BE 2CF2				mov	si,2CF2h

020A:6809			locloop_895:
020A:6809  26: 8A 05				mov	al,es:[di]
020A:680C  88 04				mov	[si],al
020A:680E  47					inc	di
020A:680F  46					inc	si
020A:6810  E2 F7				loop	locloop_895		; Loop if cx > 0

020A:6812  BF 2CF2				mov	di,2CF2h
020A:6815  E8 0845				call	sub_95			; (705D)
020A:6818  5E					pop	si
020A:6819  59					pop	cx
020A:681A  58					pop	ax
020A:681B  C3					retn
				sub_84		endp

020A:681C  00 87 90DB				add	byte ptr data_730[bx],al	; (020A:90DB=6)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_85		proc	near
020A:6820  06					push	es
020A:6821  57					push	di
020A:6822  2E			data_694	db	2Eh
020A:6823  C4 3E 34DF				les	di,dword ptr ds:[34DFh]	; (020A:34DF=1209h) Load 32 bit ptr
020A:6827			loc_896:
020A:6827  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:682B  75 09				jne	loc_897			; Jump if not equal
020A:682D  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 219

020A:6832  75 02				jne	loc_897			; Jump if not equal
020A:6834  EB 24				jmp	short loc_900		; (685A)
020A:6836			loc_897:
020A:6836  26: 39 1D				cmp	es:[di],bx
020A:6839  75 1A				jne	loc_899			; Jump if not equal
020A:683B  2E: 80 3E 349C 01			cmp	byte ptr cs:[349Ch],1	; (020A:349C=0EFh)
020A:6841  74 0C				je	loc_898			; Jump if equal
020A:6843  26: 3B 45 04				cmp	ax,es:[di+4]
020A:6847  77 0C				ja	loc_899			; Jump if above
020A:6849  26: 3B 45 02				cmp	ax,es:[di+2]
020A:684D  72 06				jb	loc_899			; Jump if below
020A:684F			loc_898:
020A:684F  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:6853  EB 07				jmp	short loc_901		; (685C)
020A:6855			loc_899:
020A:6855  83 C7 15				add	di,15h
020A:6858  EB CD				jmp	short loc_896		; (6827)
020A:685A			loc_900:
020A:685A  33 C0				xor	ax,ax			; Zero register
020A:685C			loc_901:
020A:685C  5F					pop	di
020A:685D  07					pop	es
020A:685E  C3					retn
				sub_85		endp

020A:685F  00 00				add	[bx+si],al
020A:6861  88 24				mov	[si],ah
020A:6863  000D[00]				db	13 dup (0)
020A:6870			loc_902:
020A:6870  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:6875  74 57				je	loc_906			; Jump if equal
020A:6877  BE 3233				mov	si,3233h
020A:687A  BF 08C9				mov	di,8C9h
020A:687D  B9 0040				mov	cx,40h
020A:6880  E8 07DA				call	sub_95			; (705D)
020A:6883  33 DB				xor	bx,bx			; Zero register
020A:6885  FC					cld				; Clear direction

020A:6886			locloop_903:
020A:6886  80 3C 00				cmp	byte ptr [si],0
020A:6889  74 04				je	loc_904			; Jump if equal
020A:688B  43					inc	bx
020A:688C  A4					movsb				; Mov [si] to es:[di]
020A:688D  E2 F7				loop	locloop_903		; Loop if cx > 0

020A:688F			loc_904:
020A:688F  83 3E 3277 00			cmp	word ptr ds:[3277h],0	; (020A:3277=5325h)
020A:6894  74 26				je	loc_905			; Jump if equal
020A:6896  32 E4				xor	ah,ah			; Zero register
020A:6898  A0 0906				mov	al,data_111		; (020A:0906=3Ch)
020A:689B  2B C3				sub	ax,bx
020A:689D  2D 0002				sub	ax,2
020A:68A0  2B C3				sub	ax,bx
020A:68A2  7C 18				jl	loc_905			; Jump if <
020A:68A4  B0 2C				mov	al,2Ch			; ','
020A:68A6  AA					stosb				; Store al to es:[di]
020A:68A7  B0 20				mov	al,20h			; ' '
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 220

020A:68A9  AA					stosb				; Store al to es:[di]
020A:68AA  8B CB				mov	cx,bx
020A:68AC  83 E9 03				sub	cx,3
020A:68AF  BE 3233				mov	si,3233h
020A:68B2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:68B4  BE 3274				mov	si,3274h
020A:68B7  B9 0003				mov	cx,3
020A:68BA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:68BC			loc_905:
020A:68BC  BE 0866				mov	si,866h
020A:68BF  BF 01D6				mov	di,1D6h
020A:68C2  B9 00A0				mov	cx,0A0h
020A:68C5  FC					cld				; Clear direction
020A:68C6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:68C8  C7 06 1345 00A0			mov	data_153,0A0h		; (020A:1345=0)
020A:68CE			loc_906:
020A:68CE  80 3E 348E 00			cmp	byte ptr ds:[348Eh],0	; (020A:348E=0E8h)
020A:68D3  74 11				je	loc_907			; Jump if equal
020A:68D5  C7 06 19A8 6170			mov	data_182,6170h		; (020A:19A8=3EBh)
020A:68DB  C7 06 19AA 6567			mov	data_183,6567h		; (020A:19AA=0EBFAh)
020A:68E1  A1 33FC				mov	ax,data_393		; (020A:33FC=3A30h)
020A:68E4  EB 03				jmp	short loc_908		; (68E9)
020A:68E6			loc_907:
020A:68E6  A1 348C				mov	ax,word ptr ds:[348Ch]	; (020A:348C=0B6h)
020A:68E9			loc_908:
020A:68E9  BD 19B0				mov	bp,19B0h
020A:68EC  B3 00				mov	bl,0
020A:68EE  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:68EE  9A					db	9Ah
020A:68EF  0288 14FC				dw	288h, 14FCh
020A:68F3  80 3E 348E 00			cmp	byte ptr ds:[348Eh],0	; (020A:348E=0E8h)
020A:68F8  74 03				je	loc_909			; Jump if equal
020A:68FA  E9 00B9				jmp	loc_915			; (69B6)
020A:68FD			loc_909:
020A:68FD  B4 2C				mov	ah,2Ch
020A:68FF  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:6901  8B 1E 4E73				mov	bx,data_631		; (020A:4E73=1689h)
020A:6905  3A FD				cmp	bh,ch
020A:6907  76 03				jbe	loc_910			; Jump if below or =
020A:6909  80 C5 18				add	ch,18h
020A:690C			loc_910:
020A:690C  8B DA				mov	bx,dx
020A:690E  B0 3C				mov	al,3Ch			; '<'
020A:6910  F6 E5				mul	ch			; ax = reg * al
020A:6912  32 ED				xor	ch,ch			; Zero register
020A:6914  03 C1				add	ax,cx
020A:6916  B9 003C				mov	cx,3Ch
020A:6919  F7 E1				mul	cx			; dx:ax = reg * ax
020A:691B  53					push	bx
020A:691C  32 DB				xor	bl,bl			; Zero register
020A:691E  86 DF				xchg	bl,bh
020A:6920  03 C3				add	ax,bx
020A:6922  73 01				jnc	loc_911			; Jump if carry=0
020A:6924  42					inc	dx
020A:6925			loc_911:
020A:6925  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 221

020A:6926  B9 000A				mov	cx,0Ah
020A:6929  F7 E1				mul	cx			; dx:ax = reg * ax
020A:692B  59					pop	cx
020A:692C  03 D1				add	dx,cx
020A:692E  5B					pop	bx
020A:692F  52					push	dx
020A:6930  50					push	ax
020A:6931  32 FF				xor	bh,bh			; Zero register
020A:6933  8B C3				mov	ax,bx
020A:6935  33 D2				xor	dx,dx			; Zero register
020A:6937  B9 000A				mov	cx,0Ah
020A:693A  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:693C  8B D8				mov	bx,ax
020A:693E  58					pop	ax
020A:693F  5A					pop	dx
020A:6940  03 C3				add	ax,bx
020A:6942  73 01				jnc	loc_912			; Jump if carry=0
020A:6944  42					inc	dx
020A:6945			loc_912:
020A:6945  52					push	dx
020A:6946  50					push	ax
020A:6947  8B 0E 4E73				mov	cx,data_631		; (020A:4E73=1689h)
020A:694B  8B 1E 4E75				mov	bx,data_632		; (020A:4E75=35D7h)
020A:694F  B0 3C				mov	al,3Ch			; '<'
020A:6951  F6 E5				mul	ch			; ax = reg * al
020A:6953  32 ED				xor	ch,ch			; Zero register
020A:6955  03 C1				add	ax,cx
020A:6957  B9 003C				mov	cx,3Ch
020A:695A  F7 E1				mul	cx			; dx:ax = reg * ax
020A:695C  53					push	bx
020A:695D  32 DB				xor	bl,bl			; Zero register
020A:695F  86 DF				xchg	bl,bh
020A:6961  03 C3				add	ax,bx
020A:6963  73 01				jnc	loc_913			; Jump if carry=0
020A:6965  42					inc	dx
020A:6966			loc_913:
020A:6966  52					push	dx
020A:6967  B9 000A				mov	cx,0Ah
020A:696A  F7 E1				mul	cx			; dx:ax = reg * ax
020A:696C  59					pop	cx
020A:696D  03 D1				add	dx,cx
020A:696F  5B					pop	bx
020A:6970  52					push	dx
020A:6971  50					push	ax
020A:6972  32 FF				xor	bh,bh			; Zero register
020A:6974  8B C3				mov	ax,bx
020A:6976  33 D2				xor	dx,dx			; Zero register
020A:6978  B9 000A				mov	cx,0Ah
020A:697B  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:697D  8B D8				mov	bx,ax
020A:697F  58					pop	ax
020A:6980  5A					pop	dx
020A:6981  03 C3				add	ax,bx
020A:6983  73 01				jnc	loc_914			; Jump if carry=0
020A:6985  42					inc	dx
020A:6986			loc_914:
020A:6986  5B					pop	bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 222

020A:6987  59					pop	cx
020A:6988  2B D8				sub	bx,ax
020A:698A  1B CA				sbb	cx,dx
020A:698C  75 28				jnz	loc_915			; Jump if not zero
020A:698E  0B DB				or	bx,bx			; Zero ?
020A:6990  74 24				jz	loc_915			; Jump if zero
020A:6992  33 D2				xor	dx,dx			; Zero register
020A:6994  8B CB				mov	cx,bx
020A:6996  A1 348C				mov	ax,word ptr ds:[348Ch]	; (020A:348C=0B6h)
020A:6999  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:699B  B9 0258				mov	cx,258h
020A:699E  F7 E1				mul	cx			; dx:ax = reg * ax
020A:69A0  0B C0				or	ax,ax			; Zero ?
020A:69A2  74 12				jz	loc_915			; Jump if zero
020A:69A4  BE 348F				mov	si,348Fh
020A:69A7  BD 19B9				mov	bp,19B9h
020A:69AA  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:69AA  9A					db	9Ah
020A:69AB  4160 14FC				dw	4160h, 14FCh
020A:69AF  32 DB				xor	bl,bl			; Zero register
020A:69B1  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:69B1  9A					db	9Ah
020A:69B2  0288 14FC				dw	288h, 14FCh
020A:69B6			loc_915:
020A:69B6  B4 08				mov	ah,8
020A:69B8  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:69BC  A0 120A				mov	al,data_144		; (020A:120A=0)
020A:69BF  88 47 52				mov	[bx+52h],al
020A:69C2  E8 ECF7		;*		call	sub_58			;*(56BC)
020A:69C2  E8 F7 EC				db	0E8h,0F7h,0ECh
020A:69C5  9A 14FC:2AC0		;*		call	far ptr sub_181		;*(14FC:2AC0)
020A:69C5  9A					db	9Ah
020A:69C6  2AC0 14FC				dw	2AC0h, 14FCh
020A:69CA  8A 16 30CE				mov	dl,byte ptr data_369	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:69CE  B4 0E				mov	ah,0Eh
020A:69D0  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:69D2  E8 EACB				call	sub_54			; (54A0)
020A:69D5  EA 14FC:3060		;*		jmp	far ptr loc_2616	;*(14FC:3060)
020A:69D5  EA					db	0EAh
020A:69D6  3060 14FC				dw	3060h, 14FCh
020A:69DA			loc_916:
020A:69DA  B4 0E				mov	ah,0Eh
020A:69DC  C6 06 35ED 01			mov	data_460,1		; (020A:35ED=0Dh)
020A:69E1  E9 0214				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:69E4  C6 06 35ED 02			mov	data_460,2		; (020A:35ED=0Dh)
020A:69E9  B4 38				mov	ah,38h			; '8'
020A:69EB  E9 020A				jmp	loc_941			; (6BF8)
020A:69EE			loc_917:
020A:69EE  C6 06 35ED 02			mov	data_460,2		; (020A:35ED=0Dh)
020A:69F3  26: A0 000D				mov	al,byte ptr es:data_10+1	; (020A:000D=90h)
020A:69F7  24 0C				and	al,0Ch
020A:69F9  3C 04				cmp	al,4
020A:69FB  74 19				je	loc_918			; Jump if equal
020A:69FD  C7 06 1A4F 6F6C			mov	data_184,6F6Ch		; (020A:1A4F=2E83h)
020A:6A03  C7 06 1A51 2063			mov	data_185,2063h		; (020A:1A51=10h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 223

020A:6A09  72 0B				jc	loc_918			; Jump if carry Set
020A:6A0B  C7 06 1A4F 7573			mov	data_184,7573h		; (020A:1A4F=2E83h)
020A:6A11  C6 06 1A51 62			mov	byte ptr data_185,62h	; (020A:1A51=10h) 'b'
020A:6A16			loc_918:
020A:6A16  1E					push	ds
020A:6A17  B8 0542				mov	ax,542h
020A:6A1A  8E D8				mov	ds,ax
020A:6A1C  A1 38A3				mov	ax,word ptr ds:[38A3h]	; (ss:38A3=0FFFFh)
020A:6A1F  1F					pop	ds
020A:6A20  BD 1A5A				mov	bp,1A5Ah
020A:6A23  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6A23  9A					db	9Ah
020A:6A24  021C 14FC				dw	21Ch, 14FCh
020A:6A28  B4 0A				mov	ah,0Ah
020A:6A2A  E9 01CB				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:6A2D  BD 1A0D				mov	bp,1A0Dh
020A:6A30  B6 09				mov	dh,9
020A:6A32  80 3E 4FD6 09			cmp	byte ptr ds:[4FD6h],9	; (020A:4FD6=34h)
020A:6A37  74 57				je	loc_922			; Jump if equal
020A:6A39  80 3E 4FD6 31			cmp	byte ptr ds:[4FD6h],31h	; (020A:4FD6=34h) '1'
020A:6A3E  74 39				je	loc_921			; Jump if equal
020A:6A40  80 3E 4FD6 12			cmp	byte ptr ds:[4FD6h],12h	; (020A:4FD6=34h)
020A:6A45  74 1B				je	loc_920			; Jump if equal
020A:6A47  80 3E 4FD6 00			cmp	byte ptr ds:[4FD6h],0	; (020A:4FD6=34h)
020A:6A4C  74 42				je	loc_922			; Jump if equal
020A:6A4E  80 3E 4FD6 08			cmp	byte ptr ds:[4FD6h],8	; (020A:4FD6=34h)
020A:6A53  74 07				je	loc_919			; Jump if equal
020A:6A55  BD 2B30				mov	bp,2B30h
020A:6A58  32 F6				xor	dh,dh			; Zero register
020A:6A5A  EB 40				jmp	short loc_923		; (6A9C)
020A:6A5C			loc_919:
020A:6A5C  B8 0008				mov	ax,8
020A:6A5F  E9 00A1				jmp	loc_928			; (6B03)
020A:6A62			loc_920:
020A:6A62  C6 06 35ED 13			mov	data_460,13h		; (020A:35ED=0Dh)
020A:6A67  BD 1C89				mov	bp,1C89h
020A:6A6A  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0A2Bh)
020A:6A6D  B3 00				mov	bl,0
020A:6A6F  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6A6F  9A					db	9Ah
020A:6A70  0288 14FC				dw	288h, 14FCh
020A:6A74  B4 12				mov	ah,12h
020A:6A76  E9 017F				jmp	loc_941			; (6BF8)
020A:6A79			loc_921:
020A:6A79  C6 06 35ED 0F			mov	data_460,0Fh		; (020A:35ED=0Dh)
020A:6A7E  BD 25A1				mov	bp,25A1h
020A:6A81  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0A2Bh)
020A:6A84  B3 00				mov	bl,0
020A:6A86  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6A86  9A					db	9Ah
020A:6A87  0288 14FC				dw	288h, 14FCh
020A:6A8B  B4 31				mov	ah,31h			; '1'
020A:6A8D  E9 0168				jmp	loc_941			; (6BF8)
020A:6A90			loc_922:
020A:6A90  80 3E 4FD7 01			cmp	byte ptr ds:[4FD7h],1	; (020A:4FD7=2Bh)
020A:6A95  75 05				jne	loc_923			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 224

020A:6A97  BD 2429				mov	bp,2429h
020A:6A9A  B6 2C				mov	dh,2Ch			; ','
020A:6A9C			loc_923:
020A:6A9C  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0A2Bh)
020A:6A9F  B3 00				mov	bl,0
020A:6AA1  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6AA1  9A					db	9Ah
020A:6AA2  0288 14FC				dw	288h, 14FCh
020A:6AA6  A0 4FD6				mov	al,byte ptr ds:[4FD6h]	; (020A:4FD6=34h)
020A:6AA9  32 E4				xor	ah,ah			; Zero register
020A:6AAB  0A F6				or	dh,dh			; Zero ?
020A:6AAD  74 59				jz	loc_929			; Jump if zero
020A:6AAF  8A E6				mov	ah,dh
020A:6AB1  C6 06 35ED 03			mov	data_460,3		; (020A:35ED=0Dh)
020A:6AB6  E9 013F				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:6AB9  BD 1AE2				mov	bp,1AE2h
020A:6ABC  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6ABC  9A					db	9Ah
020A:6ABD  021C 14FC				dw	21Ch, 14FCh
020A:6AC1  B4 0C				mov	ah,0Ch
020A:6AC3  C6 06 35ED 04			mov	data_460,4		; (020A:35ED=0Dh)
020A:6AC8  E9 012D				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:6ACB  E8 0577				call	sub_91			; (7045)
020A:6ACE  B4 2E				mov	ah,2Eh			; '.'
020A:6AD0  C6 06 35ED 05			mov	data_460,5		; (020A:35ED=0Dh)
020A:6AD5  E9 0120				jmp	loc_941			; (6BF8)
020A:6AD8			loc_927:
020A:6AD8  E8 056A				call	sub_91			; (7045)
020A:6ADB  8B C3				mov	ax,bx
020A:6ADD  BD 1B3B				mov	bp,1B3Bh
020A:6AE0  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6AE0  9A					db	9Ah
020A:6AE1  021C 14FC				dw	21Ch, 14FCh
020A:6AE5  B4 0D				mov	ah,0Dh
020A:6AE7  C6 06 35ED 06			mov	data_460,6		; (020A:35ED=0Dh)
020A:6AEC  E9 0109				jmp	loc_941			; (6BF8)
							                        ;* No entry point to code
020A:6AEF  BD 1BBC				mov	bp,1BBCh
020A:6AF2  A1 2B39				mov	ax,data_241		; (020A:2B39=434Fh)
020A:6AF5  8A 26 2B36				mov	ah,byte ptr ds:[2B36h]	; (020A:2B36=3Ah)
020A:6AF9  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6AF9  9A					db	9Ah
020A:6AFA  021C 14FC				dw	21Ch, 14FCh
020A:6AFE  B4 0F				mov	ah,0Fh
020A:6B00  E9 00F5				jmp	loc_941			; (6BF8)
020A:6B03			loc_928:
020A:6B03  C6 06 4FD6 00			mov	byte ptr ds:[4FD6h],0	; (020A:4FD6=34h)
020A:6B08			loc_929:
020A:6B08  8B D8				mov	bx,ax
020A:6B0A  B4 14				mov	ah,14h
020A:6B0C  BD 1CFC				mov	bp,1CFCh
020A:6B0F  83 FB 02				cmp	bx,2
020A:6B12  74 2D				je	loc_930			; Jump if equal
020A:6B14  B4 15				mov	ah,15h
020A:6B16  BD 1D46				mov	bp,1D46h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 225

020A:6B19  83 FB 05				cmp	bx,5
020A:6B1C  74 23				je	loc_930			; Jump if equal
020A:6B1E  B4 16				mov	ah,16h
020A:6B20  BD 1D90				mov	bp,1D90h
020A:6B23  83 FB 08				cmp	bx,8
020A:6B26  74 19				je	loc_930			; Jump if equal
020A:6B28  B4 1D				mov	ah,1Dh
020A:6B2A  BD 1F96				mov	bp,1F96h
020A:6B2D  83 FB 14				cmp	bx,14h
020A:6B30  74 0F				je	loc_930			; Jump if equal
020A:6B32  8A C3				mov	al,bl
020A:6B34  BD 1E0F				mov	bp,1E0Fh
020A:6B37  9A 14FC:00D4		;*		call	far ptr sub_151		;*(14FC:00D4)
020A:6B37  9A					db	9Ah
020A:6B38  00D4 14FC				dw	0D4h, 14FCh
020A:6B3C  B4 17				mov	ah,17h
020A:6B3E  BD 1DDA				mov	bp,1DDAh
020A:6B41			loc_930:
020A:6B41  80 3E 4FD6 00			cmp	byte ptr ds:[4FD6h],0	; (020A:4FD6=34h)
020A:6B46  74 19				je	loc_932			; Jump if equal
020A:6B48  8B FD				mov	di,bp
020A:6B4A  1E					push	ds
020A:6B4B  E8 04F7				call	sub_91			; (7045)
020A:6B4E  1E					push	ds
020A:6B4F  07					pop	es
020A:6B50  1F					pop	ds
020A:6B51  83 C7 3B				add	di,3Bh
020A:6B54  BE 2B27				mov	si,2B27h
020A:6B57  B9 2B35				mov	cx,2B35h
020A:6B5A  81 E9 2B27				sub	cx,2B27h
020A:6B5E  FC					cld				; Clear direction
020A:6B5F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6B61			loc_932:
020A:6B61  C6 06 35ED 08			mov	data_460,8		; (020A:35ED=0Dh)
020A:6B66  E9 008F				jmp	loc_941			; (6BF8)
020A:6B69			loc_933:
020A:6B69  B4 1B				mov	ah,1Bh
020A:6B6B  C6 06 35ED 09			mov	data_460,9		; (020A:35ED=0Dh)
020A:6B70  E9 0085				jmp	loc_941			; (6BF8)
020A:6B73			loc_934:
020A:6B73  B4 1C				mov	ah,1Ch
020A:6B75  C6 06 35ED 0A			mov	data_460,0Ah		; (020A:35ED=0Dh)
020A:6B7A  EB 7C				jmp	short loc_941		; (6BF8)
020A:6B7C			loc_935:
020A:6B7C  B4 24				mov	ah,24h			; '$'
020A:6B7E  C6 06 35ED 0B			mov	data_460,0Bh		; (020A:35ED=0Dh)
020A:6B83  EB 73				jmp	short loc_941		; (6BF8)
							                        ;* No entry point to code
020A:6B85  BD 22FF				mov	bp,22FFh
020A:6B88  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0A2Bh)
020A:6B8B  B3 00				mov	bl,0
020A:6B8D  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6B8D  9A					db	9Ah
020A:6B8E  0288 14FC				dw	288h, 14FCh
020A:6B92  B4 28				mov	ah,28h			; '('
020A:6B94  C6 06 35ED 0C			mov	data_460,0Ch		; (020A:35ED=0Dh)
020A:6B99  EB 5D				jmp	short loc_941		; (6BF8)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 226

							                        ;* No entry point to code
020A:6B9B  BD 234C				mov	bp,234Ch
020A:6B9E  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0A2Bh)
020A:6BA1  B3 00				mov	bl,0
020A:6BA3  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6BA3  9A					db	9Ah
020A:6BA4  0288 14FC				dw	288h, 14FCh
020A:6BA8  B4 29				mov	ah,29h			; ')'
020A:6BAA  C6 06 35ED 0D			mov	data_460,0Dh		; (020A:35ED=0Dh)
020A:6BAF  EB 47				jmp	short loc_941		; (6BF8)
020A:6BB1			loc_936:
020A:6BB1  B4 13				mov	ah,13h
020A:6BB3  C6 06 35ED 0E			mov	data_460,0Eh		; (020A:35ED=0Dh)
020A:6BB8  EB 3E				jmp	short loc_941		; (6BF8)
020A:6BBA			loc_937:
020A:6BBA  B4 11				mov	ah,11h
020A:6BBC  C6 06 35ED 0E			mov	data_460,0Eh		; (020A:35ED=0Dh)
020A:6BC1  EB 35				jmp	short loc_941		; (6BF8)
020A:6BC3			loc_938:
020A:6BC3  B4 32				mov	ah,32h			; '2'
020A:6BC5  C6 06 35ED 10			mov	data_460,10h		; (020A:35ED=0Dh)
020A:6BCA  EB 2C				jmp	short loc_941		; (6BF8)
020A:6BCC			loc_939:
020A:6BCC  B4 33				mov	ah,33h			; '3'
020A:6BCE  C6 06 35ED 11			mov	data_460,11h		; (020A:35ED=0Dh)
020A:6BD3  EB 23				jmp	short loc_941		; (6BF8)
							                        ;* No entry point to code
020A:6BD5  C6 06 35ED 10			mov	data_460,10h		; (020A:35ED=0Dh)
020A:6BDA  EB 1C				jmp	short loc_941		; (6BF8)
							                        ;* No entry point to code
020A:6BDC  B4 3B				mov	ah,3Bh			; ';'
020A:6BDE  EB 0A				jmp	short loc_940		; (6BEA)
							                        ;* No entry point to code
020A:6BE0  B4 3A				mov	ah,3Ah			; ':'
020A:6BE2  EB 06				jmp	short loc_940		; (6BEA)
							                        ;* No entry point to code
020A:6BE4  B4 3C				mov	ah,3Ch			; '<'
020A:6BE6  EB 02				jmp	short loc_940		; (6BEA)
020A:6BE8  B4 3D				mov	ah,3Dh			; '='
020A:6BEA			loc_940:
020A:6BEA  C6 06 35ED 12			mov	data_460,12h		; (020A:35ED=0Dh)
020A:6BEF  EB 07				jmp	short loc_941		; (6BF8)
							                        ;* No entry point to code
020A:6BF1  B4 11				mov	ah,11h
020A:6BF3  C6 06 35ED 14			mov	data_460,14h		; (020A:35ED=0Dh)
020A:6BF8			loc_941:
020A:6BF8  E8 044A				call	sub_91			; (7045)
020A:6BFB  E8 EABE		;*		call	sub_58			;*(56BC)
020A:6BFB  E8 BE EA				db	0E8h,0BEh,0EAh
020A:6BFE  80 3E 1329 01			cmp	data_151,1		; (020A:1329=0)
020A:6C03  74 0A				je	loc_942			; Jump if equal
020A:6C05  80 3E 35ED 14			cmp	data_460,14h		; (020A:35ED=0Dh)
020A:6C0A  74 03				je	loc_942			; Jump if equal
020A:6C0C  E8 EA51				call	sub_56			; (5660)
020A:6C0F			loc_942:
020A:6C0F  A0 1208				mov	al,data_142		; (020A:1208=0)
020A:6C12  88 47 52				mov	[bx+52h],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 227

020A:6C15  9A 14FC:2B10		;*		call	far ptr sub_182		;*(14FC:2B10)
020A:6C15  9A					db	9Ah
020A:6C16  2B10 14FC				dw	2B10h, 14FCh
020A:6C1A  EA 14FC:3060		;*		jmp	far ptr loc_2616	;*(14FC:3060)
020A:6C1A  EA					db	0EAh
020A:6C1B  3060 14FC				dw	3060h, 14FCh
020A:6C1F  00					db	0
020A:6C20  00 00				add	[bx+si],al
020A:6C22  00 FF				add	bh,bh
020A:6C24  FF 00				inc	word ptr [bx+si]
020A:6C26  6E					db	6Eh
020A:6C27  C5 70 BA				lds	si,dword ptr [bx+si-46h]	; Load 32 bit ptr
020A:6C2A  28 30				sub	[bx+si],dh
020A:6C2C  35 0000				xor	ax,0
020A:6C2F  88 24				mov	[si],ah
020A:6C31  3A 27				cmp	ah,[bx]
020A:6C33  E9 FF1C		;*		jmp	loc_931			;*(6B52)
020A:6C33  E9 1C FF				db	0E9h, 1Ch,0FFh
020A:6C36  FF					db	0FFh
020A:6C37  FF					db	0FFh
020A:6C38  FF					db	0FFh
020A:6C39  FF					db	0FFh
							                        ;* No entry point to code
020A:6C3A  FF 90 41E8				call	word ptr ds:[41E8h][bx+si]	;*(020A:41E8=3CC4h)
020A:6C3E  00 2E 168B				add	byte ptr data_163,ch	; (020A:168B='AAAAAAAAAAAAAA')
020A:6C42  AD					lodsw				; String [si] to ax
020A:6C43  38 B8 0001				cmp	byte ptr data_1+1[bx+si],bh	; (020A:0001=18h)
020A:6C47  E8 1B52				call	sub_116			; (879C)
020A:6C4A  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:6C50  75 15				jne	loc_943			; Jump if not equal
020A:6C52  BA FFFF				mov	dx,0FFFFh
020A:6C55  B8 0002				mov	ax,2
020A:6C58  E8 1B41				call	sub_116			; (879C)
020A:6C5B  B8 0001				mov	ax,1
020A:6C5E  E8 1B3B				call	sub_116			; (879C)
020A:6C61  B8 0004				mov	ax,4
020A:6C64  E8 1B35				call	sub_116			; (879C)
020A:6C67			loc_943:
020A:6C67  2E: C7 06 38AF 2488			mov	cs:data_501,2488h	; (020A:38AF=8000h)
020A:6C6E  2E: C7 06 38B1 273A			mov	cs:data_502,273Ah	; (020A:38B1=403Eh)
020A:6C75  C3					retn
020A:6C76  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_87		proc	near
020A:6C78  2E: C7 06 38B3 1CE9			mov	cs:data_503,1CE9h	; (020A:38B3=30h)
020A:6C7F  C3					retn
				sub_87		endp

							                        ;* No entry point to code
020A:6C80  50					push	ax
020A:6C81  53					push	bx
020A:6C82  51					push	cx
020A:6C83  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 228

020A:6C84  56					push	si
020A:6C85  57					push	di
020A:6C86  55					push	bp
020A:6C87  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:6C8C  1E					push	ds
020A:6C8D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:6C92  06					push	es
020A:6C93  2E: 80 3E 38A0 FF			cmp	cs:data_493,0FFh	; (020A:38A0=75h)
020A:6C99  2E: C6 06 38A0 00			mov	cs:data_493,0		; (020A:38A0=75h)
020A:6C9F  75 03				jnz	loc_944			; Jump if not zero
020A:6CA1  E9 0220				jmp	loc_964			; (6EC4)
020A:6CA4			loc_944:
020A:6CA4  B8 1CE9				mov	ax,1CE9h
020A:6CA7  8E D8				mov	ds,ax
020A:6CA9  B8 3D00				mov	ax,3D00h
020A:6CAC  BA 78C0				mov	dx,78C0h
020A:6CAF  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:6CB1  73 03				jnc	loc_945			; Jump if carry=0
020A:6CB3  E9 020E				jmp	loc_964			; (6EC4)
020A:6CB6			loc_945:
020A:6CB6  8B D8				mov	bx,ax
020A:6CB8  B4 44				mov	ah,44h			; 'D'
020A:6CBA  B0 07				mov	al,7
020A:6CBC  B9 0000				mov	cx,0
020A:6CBF  BA 78C9				mov	dx,78C9h
020A:6CC2  CD 21				int	21h			; DOS Services  ah=function 44h
										;  IOctl-7 check output status
										;   bx=handle, returns al status
020A:6CC4  50					push	ax
020A:6CC5  B4 3E				mov	ah,3Eh
020A:6CC7  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:6CC9  73 09				jnc	loc_947			; Jump if carry=0
020A:6CCB  58					pop	ax
020A:6CCC			loc_946:
020A:6CCC  9A 14FC:3240		;*		call	far ptr sub_190		;*(14FC:3240)
020A:6CCC  9A					db	9Ah
020A:6CCD  3240 14FC				dw	3240h, 14FCh
020A:6CD1  E9 01F0				jmp	loc_964			; (6EC4)
020A:6CD4			loc_947:
020A:6CD4  58					pop	ax
020A:6CD5  0A C0				or	al,al			; Zero ?
020A:6CD7  74 F3				jz	loc_946			; Jump if zero
020A:6CD9  B4 40				mov	ah,40h
020A:6CDB  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020A:6CDD  80 FC 00				cmp	ah,0
020A:6CE0  75 EA				jne	loc_946			; Jump if not equal
020A:6CE2  B4 42				mov	ah,42h
020A:6CE4  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:6CE6  0A E4				or	ah,ah			; Zero ?
020A:6CE8  75 E2				jnz	loc_946			; Jump if not zero
020A:6CEA  83 FB 18				cmp	bx,18h
020A:6CED  72 DD				jb	loc_946			; Jump if below
020A:6CEF  B4 41				mov	ah,41h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 229

020A:6CF1  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020A:6CF3  0A E4				or	ah,ah			; Zero ?
020A:6CF5  75 D5				jnz	loc_946			; Jump if not zero
020A:6CF7  2E: 89 1E 38A1			mov	cs:data_494,bx		; (020A:38A1=2619h)
020A:6CFC  C6 06 7911 01			mov	byte ptr ds:[7911h],1	; (1CE9:7911=0)
020A:6D01  B4 43				mov	ah,43h			; 'C'
020A:6D03  BB 0004				mov	bx,4
020A:6D06  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D08  0A E4				or	ah,ah			; Zero ?
020A:6D0A  75 C0				jnz	loc_946			; Jump if not zero
020A:6D0C  2E: 89 16 38AD			mov	cs:data_500,dx		; (020A:38AD=4100h)
020A:6D11  89 16 7912				mov	word ptr ds:[7912h],dx	; (1CE9:7912=0FFFFh)
020A:6D15  B4 43				mov	ah,43h			; 'C'
020A:6D17  BB 0004				mov	bx,4
020A:6D1A  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D1C  0A E4				or	ah,ah			; Zero ?
020A:6D1E  75 AC				jnz	loc_946			; Jump if not zero
020A:6D20  2E: 89 16 38A9			mov	cs:data_498,dx		; (020A:38A9=0C726h)
020A:6D25  89 16 7914				mov	word ptr ds:[7914h],dx	; (1CE9:7914=0FFFFh)
020A:6D29  B4 43				mov	ah,43h			; 'C'
020A:6D2B  BB 0004				mov	bx,4
020A:6D2E  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D30  0A E4				or	ah,ah			; Zero ?
020A:6D32  75 98				jnz	loc_946			; Jump if not zero
020A:6D34  2E: 89 16 38AB			mov	cs:data_499,dx		; (020A:38AB=0C06h)
020A:6D39  89 16 7916				mov	word ptr ds:[7916h],dx	; (1CE9:7916=0FFFFh)
020A:6D3D  B4 43				mov	ah,43h			; 'C'
020A:6D3F  BB 0004				mov	bx,4
020A:6D42  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D44  0A E4				or	ah,ah			; Zero ?
020A:6D46  75 84				jnz	loc_946			; Jump if not zero
020A:6D48  89 16 7918				mov	word ptr ds:[7918h],dx	; (1CE9:7918=0FFFFh)
020A:6D4C  B4 43				mov	ah,43h			; 'C'
020A:6D4E  BB 0004				mov	bx,4
020A:6D51  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D53  0A E4				or	ah,ah			; Zero ?
020A:6D55  74 03				jz	loc_948			; Jump if zero
020A:6D57  E9 FF72				jmp	loc_946			; (6CCC)
020A:6D5A			loc_948:
020A:6D5A  89 16 791A				mov	word ptr ds:[791Ah],dx	; (1CE9:791A=0FFFFh)
020A:6D5E  B4 43				mov	ah,43h			; 'C'
020A:6D60  BB 0004				mov	bx,4
020A:6D63  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6D65  0A E4				or	ah,ah			; Zero ?
020A:6D67  75 11				jnz	loc_949			; Jump if not zero
020A:6D69  89 16 791C				mov	word ptr ds:[791Ch],dx	; (1CE9:791C=0FFFFh)
020A:6D6D  C6 06 79DA 03			mov	byte ptr ds:[79DAh],3	; (1CE9:79DA=0)
020A:6D72  C6 06 79DB 01			mov	byte ptr ds:[79DBh],1	; (1CE9:79DB=0)
020A:6D77  EB 09				jmp	short loc_950		; (6D82)
020A:6D79  90					nop
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 230

020A:6D7A			loc_949:
020A:6D7A  9A 14FC:3240		;*		call	far ptr sub_190		;*(14FC:3240)
020A:6D7A  9A					db	9Ah
020A:6D7B  3240 14FC				dw	3240h, 14FCh
020A:6D7F  E9 0142				jmp	loc_964			; (6EC4)
020A:6D82			loc_950:
020A:6D82  BA 5655				mov	dx,5655h
020A:6D85  B4 09				mov	ah,9
020A:6D87  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:6D89  B9 0004				mov	cx,4
020A:6D8C  BD 0000				mov	bp,0
020A:6D8F  8B 16 7912				mov	dx,word ptr ds:[7912h]	; (1CE9:7912=0FFFFh)
020A:6D93  BE 78FB				mov	si,78FBh
020A:6D96  E8 01F7				call	sub_88			; (6F90)
020A:6D99  72 DF				jc	loc_949			; Jump if carry Set
020A:6D9B  BA 28BA				mov	dx,28BAh
020A:6D9E  8E C2				mov	es,dx
020A:6DA0  8B 16 7914				mov	dx,word ptr ds:[7914h]	; (1CE9:7914=0FFFFh)
020A:6DA4  E8 024D				call	sub_89			; (6FF4)
020A:6DA7  72 D1				jc	loc_949			; Jump if carry Set
020A:6DA9  BA 3530				mov	dx,3530h
020A:6DAC  8E C2				mov	es,dx
020A:6DAE  8B 16 7916				mov	dx,word ptr ds:[7916h]	; (1CE9:7916=0FFFFh)
020A:6DB2  E8 023F				call	sub_89			; (6FF4)
020A:6DB5  72 C3				jc	loc_949			; Jump if carry Set
020A:6DB7  8B 16 7918				mov	dx,word ptr ds:[7918h]	; (1CE9:7918=0FFFFh)
020A:6DBB  BE 78CB				mov	si,78CBh
020A:6DBE  E8 01CF				call	sub_88			; (6F90)
020A:6DC1  72 B7				jc	loc_949			; Jump if carry Set
020A:6DC3  8B 16 791A				mov	dx,word ptr ds:[791Ah]	; (1CE9:791A=0FFFFh)
020A:6DC7  BE 78EB				mov	si,78EBh
020A:6DCA  E8 01C3				call	sub_88			; (6F90)
020A:6DCD  72 AB				jc	loc_949			; Jump if carry Set
020A:6DCF  8B 16 791C				mov	dx,word ptr ds:[791Ch]	; (1CE9:791C=0FFFFh)
020A:6DD3  BE 78DB				mov	si,78DBh
020A:6DD6  E8 01B7				call	sub_88			; (6F90)
020A:6DD9  72 9F				jc	loc_949			; Jump if carry Set
020A:6DDB  2E: C6 06 38A0 01			mov	cs:data_493,1		; (020A:38A0=75h)
020A:6DE1  B8 28BA				mov	ax,28BAh
020A:6DE4  8E C0				mov	es,ax
020A:6DE6  B8 6E00				mov	ax,6E00h
020A:6DE9  8E D8				mov	ds,ax
020A:6DEB  33 FF				xor	di,di			; Zero register
020A:6DED  8B F7				mov	si,di
020A:6DEF  FC					cld				; Clear direction
020A:6DF0  B9 2C44				mov	cx,2C44h
020A:6DF3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6DF5  2E: 8C 06 38A5			mov	cs:data_496,es		; (020A:38A5=0Ah)
020A:6DFA  8C C0				mov	ax,es
020A:6DFC  BB 2C44				mov	bx,2C44h
020A:6DFF  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6E01  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6E03  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6E05  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6E07  03 C3				add	ax,bx
020A:6E09  40					inc	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 231

020A:6E0A  2E: A3 38A7				mov	cs:data_497,ax		; (020A:38A7=0)
020A:6E0E  B8 1CE9				mov	ax,1CE9h
020A:6E11  8E D8				mov	ds,ax
020A:6E13  B4 42				mov	ah,42h
020A:6E15  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:6E17  0A E4				or	ah,ah			; Zero ?
020A:6E19  74 03				jz	loc_951			; Jump if zero
020A:6E1B  E9 00D9				jmp	loc_965			; (6EF7)
020A:6E1E			loc_951:
020A:6E1E  F6 06 15CF 01			test	byte ptr ds:[15CFh],1	; (1CE9:15CF=0)
020A:6E23  75 4E				jnz	loc_957			; Jump if not zero
020A:6E25  8B C3				mov	ax,bx
020A:6E27  B1 04				mov	cl,4
020A:6E29  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:6E2B  74 11				jz	loc_953			; Jump if zero
020A:6E2D  3D 0004				cmp	ax,4
020A:6E30  76 03				jbe	loc_952			; Jump if below or =
020A:6E32  B8 0004				mov	ax,4
020A:6E35			loc_952:
020A:6E35  B1 02				mov	cl,2
020A:6E37  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:6E39  2B D8				sub	bx,ax
020A:6E3B  EB 05				jmp	short loc_954		; (6E42)
020A:6E3D  90					nop
020A:6E3E			loc_953:
020A:6E3E  8B C3				mov	ax,bx
020A:6E40  33 DB				xor	bx,bx			; Zero register
020A:6E42			loc_954:
020A:6E42  8B EB				mov	bp,bx
020A:6E44  B1 02				mov	cl,2
020A:6E46  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:6E48  8B C8				mov	cx,ax
020A:6E4A  E3 25				jcxz	loc_956			; Jump if cx=0
020A:6E4C  BF 00C0				mov	di,0C0h
020A:6E4F  89 3E 79DD				mov	word ptr ds:[79DDh],di	; (1CE9:79DD=0)

020A:6E53			locloop_955:
020A:6E53  B4 43				mov	ah,43h			; 'C'
020A:6E55  BB 0004				mov	bx,4
020A:6E58  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E5A  0A E4				or	ah,ah			; Zero ?
020A:6E5C  75 24				jnz	loc_958			; Jump if not zero
020A:6E5E  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1CE9:7912=0FFFFh)
020A:6E62  33 F6				xor	si,si			; Zero register
020A:6E64  E8 0129				call	sub_88			; (6F90)
020A:6E67  72 19				jc	loc_958			; Jump if carry Set
020A:6E69  FE 06 79DC				inc	byte ptr ds:[79DCh]	; (1CE9:79DC=0)
020A:6E6D  47					inc	di
020A:6E6E  47					inc	di
020A:6E6F  E2 E2				loop	locloop_955		; Loop if cx > 0

020A:6E71			loc_956:
020A:6E71  8B DD				mov	bx,bp
020A:6E73			loc_957:
020A:6E73  83 FB 0C				cmp	bx,0Ch
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 232

020A:6E76  72 0A				jb	loc_958			; Jump if below
020A:6E78  8B C3				mov	ax,bx
020A:6E7A  B3 0C				mov	bl,0Ch
020A:6E7C  F6 F3				div	bl			; al, ah rem = ax/reg
020A:6E7E  3C 00				cmp	al,0
020A:6E80  75 03				jne	loc_959			; Jump if not equal
020A:6E82			loc_958:
020A:6E82  EB 73				jmp	short loc_965		; (6EF7)
020A:6E84  90					nop
020A:6E85			loc_959:
020A:6E85  32 E4				xor	ah,ah			; Zero register
020A:6E87  3D 001E				cmp	ax,1Eh
020A:6E8A  72 03				jb	loc_960			; Jump if below
020A:6E8C  B8 001E				mov	ax,1Eh
020A:6E8F			loc_960:
020A:6E8F  8B C8				mov	cx,ax
020A:6E91  BF 000C				mov	di,0Ch

020A:6E94			locloop_961:
020A:6E94  51					push	cx
020A:6E95  B9 0003				mov	cx,3

020A:6E98			locloop_962:
020A:6E98  B4 43				mov	ah,43h			; 'C'
020A:6E9A  BB 0004				mov	bx,4
020A:6E9D  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E9F  0A E4				or	ah,ah			; Zero ?
020A:6EA1  75 1D				jnz	loc_963			; Jump if not zero
020A:6EA3  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1CE9:7912=0FFFFh)
020A:6EA7  FE 06 79DA				inc	byte ptr ds:[79DAh]	; (1CE9:79DA=0)
020A:6EAB  33 F6				xor	si,si			; Zero register
020A:6EAD  E8 00E0				call	sub_88			; (6F90)
020A:6EB0  72 0E				jc	loc_963			; Jump if carry Set
020A:6EB2  47					inc	di
020A:6EB3  47					inc	di
020A:6EB4  E2 E2				loop	locloop_962		; Loop if cx > 0

020A:6EB6  59					pop	cx
020A:6EB7  FE 06 79DB				inc	byte ptr ds:[79DBh]	; (1CE9:79DB=0)
020A:6EBB  E2 D7				loop	locloop_961		; Loop if cx > 0

020A:6EBD  EB 38				jmp	short loc_965		; (6EF7)
020A:6EBF  90					nop
020A:6EC0			loc_963:
020A:6EC0  59					pop	cx
020A:6EC1  EB 34				jmp	short loc_965		; (6EF7)
020A:6EC3  90					nop
020A:6EC4			loc_964:
020A:6EC4  2E: C7 06 38A5 6E00			mov	cs:data_496,6E00h	; (020A:38A5=0Ah)
020A:6ECB  B8 6E00				mov	ax,6E00h
020A:6ECE  BB 2C44				mov	bx,2C44h
020A:6ED1  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6ED3  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6ED5  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6ED7  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6ED9  03 C3				add	ax,bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 233

020A:6EDB  40					inc	ax
020A:6EDC  2E: A3 38A7				mov	cs:data_497,ax		; (020A:38A7=0)
020A:6EE0  2E: C7 06 38A9 28BA			mov	cs:data_498,28BAh	; (020A:38A9=0C726h)
020A:6EE7  2E: C7 06 38AB 3530			mov	cs:data_499,3530h	; (020A:38AB=0C06h)
020A:6EEE  2E: C6 06 38A0 00			mov	cs:data_493,0		; (020A:38A0=75h)
020A:6EF4  EB 3A				jmp	short loc_966		; (6F30)
020A:6EF6  90					nop
020A:6EF7			loc_965:
020A:6EF7  A0 79DA				mov	al,byte ptr ds:[79DAh]	; (1CE9:79DA=0)
020A:6EFA  02 06 79DC				add	al,byte ptr ds:[79DCh]	; (1CE9:79DC=0)
020A:6EFE  04 03				add	al,3
020A:6F00  32 E4				xor	ah,ah			; Zero register
020A:6F02  B1 06				mov	cl,6
020A:6F04  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:6F06  B3 62				mov	bl,62h			; 'b'
020A:6F08  F6 F3				div	bl			; al, ah rem = ax/reg
020A:6F0A  32 E4				xor	ah,ah			; Zero register
020A:6F0C  B3 01				mov	bl,1
020A:6F0E  C6 06 0720 20			mov	byte ptr ds:[720h],20h	; (1CE9:0720=66h) ' '
020A:6F13  BD 071D				mov	bp,71Dh
020A:6F16  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:6F16  9A					db	9Ah
020A:6F17  0288 14FC				dw	288h, 14FCh
020A:6F1B  A1 0720				mov	ax,word ptr ds:[720h]	; (1CE9:0720=2066h)
020A:6F1E  A2 071D				mov	byte ptr ds:[71Dh],al	; (1CE9:071D=20h)
020A:6F21  C6 06 071E 2E			mov	byte ptr ds:[71Eh],2Eh	; (1CE9:071E=6Fh) '.'
020A:6F26  88 26 071F				mov	byte ptr ds:[71Fh],ah	; (1CE9:071F=66h)
020A:6F2A  C7 06 0720 424D			mov	word ptr ds:[720h],424Dh	; (1CE9:0720=2066h)
020A:6F30			loc_966:
020A:6F30  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6F35  9C					pushf				; Push flags
020A:6F36  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6F3B  5A					pop	dx
020A:6F3C  8E C2				mov	es,dx
020A:6F3E  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:6F43  5A					pop	dx
020A:6F44  75 0A				jnz	loc_967			; Jump if not zero
020A:6F46  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:6F4B  74 03				je	loc_967			; Jump if equal
020A:6F4D  E8 046C				call	sub_103			; (73BC)
020A:6F50			loc_967:
020A:6F50  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6F55  9D					popf				; Pop flags
020A:6F56  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6F5B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6F60  9C					pushf				; Push flags
020A:6F61  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6F66  5A					pop	dx
020A:6F67  8E DA				mov	ds,dx
020A:6F69  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:6F6E  5A					pop	dx
020A:6F6F  75 0A				jnz	loc_968			; Jump if not zero
020A:6F71  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:6F76  74 03				je	loc_968			; Jump if equal
020A:6F78  E8 0441				call	sub_103			; (73BC)
020A:6F7B			loc_968:
020A:6F7B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 234

020A:6F80  9D					popf				; Pop flags
020A:6F81  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6F86  5D					pop	bp
020A:6F87  5F					pop	di
020A:6F88  5E					pop	si
020A:6F89  5A					pop	dx
020A:6F8A  59					pop	cx
020A:6F8B  5B					pop	bx
020A:6F8C  58					pop	ax
020A:6F8D  C3					retn
020A:6F8E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_88		proc	near
020A:6F90  50					push	ax
020A:6F91  53					push	bx
020A:6F92  51					push	cx
020A:6F93  55					push	bp
020A:6F94  33 ED				xor	bp,bp			; Zero register
020A:6F96  B9 0004				mov	cx,4

020A:6F99			locloop_969:
020A:6F99  B4 44				mov	ah,44h			; 'D'
020A:6F9B  8B DD				mov	bx,bp
020A:6F9D  8A C3				mov	al,bl
020A:6F9F  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:6FA1  0A E4				or	ah,ah			; Zero ?
020A:6FA3  75 46				jnz	loc_972			; Jump if not zero
020A:6FA5  45					inc	bp
020A:6FA6  E2 F1				loop	locloop_969		; Loop if cx > 0

020A:6FA8  06					push	es
020A:6FA9  57					push	di
020A:6FAA  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:6FAF  33 FF				xor	di,di			; Zero register
020A:6FB1  B8 FFFF				mov	ax,0FFFFh
020A:6FB4  B9 8000				mov	cx,8000h
020A:6FB7  FC					cld				; Clear direction
020A:6FB8  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:6FBA  B9 0010				mov	cx,10h
020A:6FBD  83 FE 00				cmp	si,0
020A:6FC0  74 08				je	loc_970			; Jump if equal
020A:6FC2  BF FFF0				mov	di,0FFF0h
020A:6FC5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6FC7  EB 03				jmp	short loc_971		; (6FCC)
020A:6FC9  90					nop
020A:6FCA			loc_970:
020A:6FCA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6FCC			loc_971:
020A:6FCC  1E					push	ds
020A:6FCD  2E: 8E 1E 38A1			mov	ds,cs:data_494		; (020A:38A1=2619h)
020A:6FD2  BD FFFC				mov	bp,0FFFCh
020A:6FD5  8B C2				mov	ax,dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 235

020A:6FD7  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:6FD7  9A					db	9Ah
020A:6FD8  021C 14FC				dw	21Ch, 14FCh
020A:6FDC  1F					pop	ds
020A:6FDD  5F					pop	di
020A:6FDE  07					pop	es
020A:6FDF  B4 47				mov	ah,47h
020A:6FE1  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:6FE3  0A E4				or	ah,ah			; Zero ?
020A:6FE5  75 04				jnz	loc_972			; Jump if not zero
020A:6FE7  F8					clc				; Clear carry flag
020A:6FE8  EB 02				jmp	short loc_973		; (6FEC)
020A:6FEA  90					nop
020A:6FEB			loc_972:
020A:6FEB  F9					stc				; Set carry flag
020A:6FEC			loc_973:
020A:6FEC  5D					pop	bp
020A:6FED  59					pop	cx
020A:6FEE  5B					pop	bx
020A:6FEF  58					pop	ax
020A:6FF0  C3					retn
				sub_88		endp

020A:6FF1  87 DB				xchg	bx,bx
020A:6FF3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_89		proc	near
020A:6FF4  50					push	ax
020A:6FF5  53					push	bx
020A:6FF6  51					push	cx
020A:6FF7  55					push	bp
020A:6FF8  33 ED				xor	bp,bp			; Zero register
020A:6FFA  B9 0004				mov	cx,4

020A:6FFD			locloop_974:
020A:6FFD  B4 44				mov	ah,44h			; 'D'
020A:6FFF  8B DD				mov	bx,bp
020A:7001  8A C3				mov	al,bl
020A:7003  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:7005  0A E4				or	ah,ah			; Zero ?
020A:7007  75 28				jnz	loc_975			; Jump if not zero
020A:7009  45					inc	bp
020A:700A  E2 F1				loop	locloop_974		; Loop if cx > 0

020A:700C  06					push	es
020A:700D  1E					push	ds
020A:700E  57					push	di
020A:700F  56					push	si
020A:7010  06					push	es
020A:7011  1F					pop	ds
020A:7012  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 236

020A:7017  33 FF				xor	di,di			; Zero register
020A:7019  8B F7				mov	si,di
020A:701B  B9 8000				mov	cx,8000h
020A:701E  FC					cld				; Clear direction
020A:701F  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:7021  5E					pop	si
020A:7022  5F					pop	di
020A:7023  1F					pop	ds
020A:7024  07					pop	es
020A:7025  B4 47				mov	ah,47h
020A:7027  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:7029  0A E4				or	ah,ah			; Zero ?
020A:702B  75 04				jnz	loc_975			; Jump if not zero
020A:702D  F8					clc				; Clear carry flag
020A:702E  EB 05				jmp	short loc_976		; (7035)
020A:7030  90					nop
020A:7031			loc_975:
020A:7031  F9					stc				; Set carry flag
020A:7032  EB 01				jmp	short loc_976		; (7035)
020A:7034  90					nop
020A:7035			loc_976:
020A:7035  5D					pop	bp
020A:7036  59					pop	cx
020A:7037  5B					pop	bx
020A:7038  58					pop	ax
020A:7039  C3					retn
				sub_89		endp

020A:703A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_90		proc	near
020A:703C  EB 46				jmp	short loc_977		; (7084)
020A:703E  90					nop
020A:703F  EB 49				jmp	short loc_978		; (708A)
020A:7041  90					nop
020A:7042  EB 4C				jmp	short loc_979		; (7090)
020A:7044  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_91:
020A:7045  EB 67				jmp	short loc_981		; (70AE)
020A:7047  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_92:
020A:7048  EB 6A				jmp	short loc_982		; (70B4)
020A:704A  90					nop
020A:704B  EB 6D				jmp	short loc_983		; (70BA)
020A:704D  90					nop
020A:704E  EB 70				jmp	short loc_984		; (70C0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 237

020A:7050  90					nop
020A:7051  E9 008C				jmp	loc_986			; (70E0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_93:
020A:7054  E9 00A7				jmp	loc_988			; (70FE)
020A:7057  E9 00AA				jmp	loc_989			; (7104)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_94:
020A:705A  E9 00AD				jmp	loc_990			; (710A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_95:
020A:705D  E9 00C8				jmp	loc_992			; (7128)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_96:
020A:7060  E9 00CB				jmp	loc_993			; (712E)
020A:7063  E9 00CE				jmp	loc_994			; (7134)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_97:
020A:7066  E9 00D1				jmp	loc_995			; (713A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_98:
020A:7069  E9 00EE				jmp	loc_997			; (715A)
020A:706C  E9 0109				jmp	loc_999			; (7178)
020A:706F  E9 010B				jmp	loc_1000		; (717D)
020A:7072  E9 010D				jmp	loc_1001		; (7182)
020A:7075  E9 0126				jmp	loc_1003		; (719E)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_99:
020A:7078  E9 0128				jmp	loc_1004		; (71A3)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_100:
020A:707B  E9 012A				jmp	loc_1005		; (71A8)
020A:707E  E9 012C				jmp	loc_1006		; (71AD)
020A:7081  E9 0144				jmp	loc_1008		; (71C8)
020A:7084			loc_977:
020A:7084  2E: 8E 1E 38AF			mov	ds,cs:data_501		; (020A:38AF=8000h)
020A:7089  C3					retn
020A:708A			loc_978:
020A:708A  2E: 8E 1E 38B1			mov	ds,cs:data_502		; (020A:38B1=403Eh)
020A:708F  C3					retn
020A:7090			loc_979:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 238

020A:7090  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7096  75 06				jne	loc_980			; Jump if not equal
020A:7098  2E: 8E 1E 38A9			mov	ds,cs:data_498		; (020A:38A9=0C726h)
020A:709D  C3					retn
020A:709E			loc_980:
020A:709E  52					push	dx
020A:709F  2E: 8B 16 38A9			mov	dx,cs:data_498		; (020A:38A9=0C726h)
020A:70A4  E8 0315				call	sub_103			; (73BC)
020A:70A7  2E: 8E 1E 38A1			mov	ds,cs:data_494		; (020A:38A1=2619h)
020A:70AC  5A					pop	dx
020A:70AD  C3					retn
020A:70AE			loc_981:
020A:70AE  2E: 8E 1E 38B3			mov	ds,cs:data_503		; (020A:38B3=30h)
020A:70B3  C3					retn
020A:70B4			loc_982:
020A:70B4  2E: 8E 1E 38A5			mov	ds,cs:data_496		; (020A:38A5=0Ah)
020A:70B9  C3					retn
020A:70BA			loc_983:
020A:70BA  2E: 8E 1E 38A7			mov	ds,cs:data_497		; (020A:38A7=0)
020A:70BF  C3					retn
020A:70C0			loc_984:
020A:70C0  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:70C6  75 08				jne	loc_985			; Jump if not equal
020A:70C8  50					push	ax
020A:70C9  B8 5E00				mov	ax,5E00h
020A:70CC  8E D8				mov	ds,ax
020A:70CE  58					pop	ax
020A:70CF  C3					retn
020A:70D0			loc_985:
020A:70D0  52					push	dx
020A:70D1  2E: 8B 16 38AD			mov	dx,cs:data_500		; (020A:38AD=4100h)
020A:70D6  E8 02E3				call	sub_103			; (73BC)
020A:70D9  2E: 8E 1E 38A1			mov	ds,cs:data_494		; (020A:38A1=2619h)
020A:70DE  5A					pop	dx
020A:70DF  C3					retn
020A:70E0			loc_986:
020A:70E0  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:70E6  75 06				jne	loc_987			; Jump if not equal
020A:70E8  2E: 8E 1E 38AB			mov	ds,cs:data_499		; (020A:38AB=0C06h)
020A:70ED  C3					retn
020A:70EE			loc_987:
020A:70EE  52					push	dx
020A:70EF  2E: 8B 16 38AB			mov	dx,cs:data_499		; (020A:38AB=0C06h)
020A:70F4  E8 02C5				call	sub_103			; (73BC)
020A:70F7  2E: 8E 1E 38A1			mov	ds,cs:data_494		; (020A:38A1=2619h)
020A:70FC  5A					pop	dx
020A:70FD  C3					retn
020A:70FE			loc_988:
020A:70FE  2E: 8E 06 38AF			mov	es,cs:data_501		; (020A:38AF=8000h)
020A:7103  C3					retn
020A:7104			loc_989:
020A:7104  2E: 8E 06 38B1			mov	es,cs:data_502		; (020A:38B1=403Eh)
020A:7109  C3					retn
020A:710A			loc_990:
020A:710A  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7110  75 06				jne	loc_991			; Jump if not equal
020A:7112  2E: 8E 06 38A9			mov	es,cs:data_498		; (020A:38A9=0C726h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 239

020A:7117  C3					retn
020A:7118			loc_991:
020A:7118  52					push	dx
020A:7119  2E: 8B 16 38A9			mov	dx,cs:data_498		; (020A:38A9=0C726h)
020A:711E  E8 029B				call	sub_103			; (73BC)
020A:7121  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7126  5A					pop	dx
020A:7127  C3					retn
020A:7128			loc_992:
020A:7128  2E: 8E 06 38B3			mov	es,cs:data_503		; (020A:38B3=30h)
020A:712D  C3					retn
020A:712E			loc_993:
020A:712E  2E: 8E 06 38A5			mov	es,cs:data_496		; (020A:38A5=0Ah)
020A:7133  C3					retn
020A:7134			loc_994:
020A:7134  2E: 8E 06 38A7			mov	es,cs:data_497		; (020A:38A7=0)
020A:7139  C3					retn
020A:713A			loc_995:
020A:713A  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7140  75 08				jne	loc_996			; Jump if not equal
020A:7142  50					push	ax
020A:7143  B8 5E00				mov	ax,5E00h
020A:7146  8E C0				mov	es,ax
020A:7148  58					pop	ax
020A:7149  C3					retn
020A:714A			loc_996:
020A:714A  52					push	dx
020A:714B  2E: 8B 16 38AD			mov	dx,cs:data_500		; (020A:38AD=4100h)
020A:7150  E8 0269				call	sub_103			; (73BC)
020A:7153  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7158  5A					pop	dx
020A:7159  C3					retn
020A:715A			loc_997:
020A:715A  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7160  75 06				jne	loc_998			; Jump if not equal
020A:7162  2E: 8E 06 38AB			mov	es,cs:data_499		; (020A:38AB=0C06h)
020A:7167  C3					retn
020A:7168			loc_998:
020A:7168  52					push	dx
020A:7169  2E: 8B 16 38AB			mov	dx,cs:data_499		; (020A:38AB=0C06h)
020A:716E  E8 024B				call	sub_103			; (73BC)
020A:7171  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7176  5A					pop	dx
020A:7177  C3					retn
020A:7178			loc_999:
020A:7178  2E: A1 38AF				mov	ax,cs:data_501		; (020A:38AF=8000h)
020A:717C  C3					retn
020A:717D			loc_1000:
020A:717D  2E: A1 38B1				mov	ax,cs:data_502		; (020A:38B1=403Eh)
020A:7181  C3					retn
020A:7182			loc_1001:
020A:7182  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7188  75 05				jne	loc_1002		; Jump if not equal
020A:718A  2E: A1 38A9				mov	ax,cs:data_498		; (020A:38A9=0C726h)
020A:718E  C3					retn
020A:718F			loc_1002:
020A:718F  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 240

020A:7190  2E: 8B 16 38A9			mov	dx,cs:data_498		; (020A:38A9=0C726h)
020A:7195  E8 0224				call	sub_103			; (73BC)
020A:7198  2E: A1 38A1				mov	ax,cs:data_494		; (020A:38A1=2619h)
020A:719C  5A					pop	dx
020A:719D  C3					retn
020A:719E			loc_1003:
020A:719E  2E: A1 38B3				mov	ax,cs:data_503		; (020A:38B3=30h)
020A:71A2  C3					retn
020A:71A3			loc_1004:
020A:71A3  2E: A1 38A5				mov	ax,cs:data_496		; (020A:38A5=0Ah)
020A:71A7  C3					retn
020A:71A8			loc_1005:
020A:71A8  2E: A1 38A7				mov	ax,cs:data_497		; (020A:38A7=0)
020A:71AC  C3					retn
020A:71AD			loc_1006:
020A:71AD  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:71B3  75 04				jne	loc_1007		; Jump if not equal
020A:71B5  B8 5E00				mov	ax,5E00h
020A:71B8  C3					retn
020A:71B9			loc_1007:
020A:71B9  52					push	dx
020A:71BA  2E: 8B 16 38AD			mov	dx,cs:data_500		; (020A:38AD=4100h)
020A:71BF  E8 01FA				call	sub_103			; (73BC)
020A:71C2  2E: A1 38A1				mov	ax,cs:data_494		; (020A:38A1=2619h)
020A:71C6  5A					pop	dx
020A:71C7  C3					retn
020A:71C8			loc_1008:
020A:71C8  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:71CE  75 05				jne	loc_1009		; Jump if not equal
020A:71D0  2E: A1 38AB				mov	ax,cs:data_499		; (020A:38AB=0C06h)
020A:71D4  C3					retn
020A:71D5			loc_1009:
020A:71D5  52					push	dx
020A:71D6  2E: 8B 16 38AB			mov	dx,cs:data_499		; (020A:38AB=0C06h)
020A:71DB  E8 01DE				call	sub_103			; (73BC)
020A:71DE  2E: A1 38A1				mov	ax,cs:data_494		; (020A:38A1=2619h)
020A:71E2  5A					pop	dx
020A:71E3  C3					retn
				sub_90		endp

020A:71E4  01 87 90DB				add	data_730[bx],ax		; (020A:90DB=0F606h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_101		proc	near
020A:71E8  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:71EE  74 03				je	loc_1010		; Jump if equal
020A:71F0  E9 01C5				jmp	loc_1027		; (73B8)
020A:71F3			loc_1010:
020A:71F3  2E: FE 06 3E64			inc	byte ptr cs:[3E64h]	; (020A:3E64=0ACh)
020A:71F8  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:71FE  75 03				jne	loc_1011		; Jump if not equal
020A:7200  E9 01B5				jmp	loc_1027		; (73B8)
020A:7203			loc_1011:
020A:7203  50					push	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 241

020A:7204  53					push	bx
020A:7205  51					push	cx
020A:7206  52					push	dx
020A:7207  56					push	si
020A:7208  57					push	di
020A:7209  55					push	bp
020A:720A  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:720F  06					push	es
020A:7210  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7215  1E					push	ds
020A:7216  E8 FE3B				call	sub_93			; (7054)
020A:7219  E8 FE29				call	sub_91			; (7045)
020A:721C  33 F6				xor	si,si			; Zero register
020A:721E  33 C9				xor	cx,cx			; Zero register
020A:7220  26: 8B 44 04				mov	ax,es:[si+4]
020A:7224  26: 3B 44 02				cmp	ax,es:[si+2]
020A:7228  75 09				jne	loc_1012		; Jump if not equal
020A:722A  2E: C6 06 3E64 00			mov	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:7230  E9 0128				jmp	loc_1024		; (735B)
020A:7233			loc_1012:
020A:7233  26: 8B 04				mov	ax,es:[si]
020A:7236  3D FFFF				cmp	ax,0FFFFh
020A:7239  74 1C				je	loc_1013		; Jump if equal
020A:723B  26: 8B 54 04				mov	dx,es:[si+4]
020A:723F  26: 2B 54 02				sub	dx,es:[si+2]
020A:7243  01 16 790B				add	data_702,dx		; (020A:790B=5BE9h)
020A:7247  83 16 790D 00			adc	data_703,0		; (020A:790D=0A104h)
020A:724C  83 C6 15				add	si,15h
020A:724F  26: 3B 04				cmp	ax,es:[si]
020A:7252  74 DF				je	loc_1012		; Jump if equal
020A:7254  41					inc	cx
020A:7255  EB DC				jmp	short loc_1012		; (7233)
020A:7257			loc_1013:
020A:7257  89 0E 790F				mov	data_704,cx		; (020A:790F=40E9h)
020A:725B  3A 0E 79DB				cmp	cl,data_713		; (020A:79DB=4Ah)
020A:725F  77 49				ja	loc_1016		; Jump if above
020A:7261  33 F6				xor	si,si			; Zero register
020A:7263  BB 0006				mov	bx,6
020A:7266			loc_1014:
020A:7266  26: 8B 04				mov	ax,es:[si]
020A:7269  3D FFFF				cmp	ax,0FFFFh
020A:726C  74 39				je	loc_1015		; Jump if equal
020A:726E  50					push	ax
020A:726F  8B 97 7912				mov	dx,data_706[bx]		; (020A:7912=50h)
020A:7273  26: 89 54 11				mov	es:[si+11h],dx
020A:7277  B8 0002				mov	ax,2
020A:727A  E8 151F				call	sub_116			; (879C)
020A:727D  8B 97 7914				mov	dx,data_707[bx]		; (020A:7914=377h)
020A:7281  26: 89 54 13				mov	es:[si+13h],dx
020A:7285  B8 0001				mov	ax,1
020A:7288  E8 1511				call	sub_116			; (879C)
020A:728B  8B 97 7916				mov	dx,data_708[bx]		; (020A:7916=50E9h)
020A:728F  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:7293  B8 0004				mov	ax,4
020A:7296  E8 1503				call	sub_116			; (879C)
020A:7299  58					pop	ax
020A:729A  83 C6 15				add	si,15h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 242

020A:729D  26: 3B 04				cmp	ax,es:[si]
020A:72A0  74 C4				je	loc_1014		; Jump if equal
020A:72A2  83 C3 06				add	bx,6
020A:72A5  EB BF				jmp	short loc_1014		; (7266)
020A:72A7			loc_1015:
020A:72A7  E9 00B1				jmp	loc_1024		; (735B)
020A:72AA			loc_1016:
020A:72AA  32 FF				xor	bh,bh			; Zero register
020A:72AC  8A 1E 79DB				mov	bl,data_713		; (020A:79DB=4Ah)
020A:72B0  B8 FFFF				mov	ax,0FFFFh
020A:72B3  F7 E3				mul	bx			; dx:ax = reg * ax
020A:72B5  3B 16 790D				cmp	dx,data_703		; (020A:790D=0A104h)
020A:72B9  77 0E				ja	loc_1018		; Jump if above
020A:72BB  72 06				jc	loc_1017		; Jump if carry Set
020A:72BD  3B 06 790B				cmp	ax,data_702		; (020A:790B=5BE9h)
020A:72C1  77 06				ja	loc_1018		; Jump if above
020A:72C3			loc_1017:
020A:72C3  B8 FFFF				mov	ax,0FFFFh
020A:72C6  EB 10				jmp	short loc_1019		; (72D8)
020A:72C8  90					nop
020A:72C9			loc_1018:
020A:72C9  32 FF				xor	bh,bh			; Zero register
020A:72CB  8A 1E 79DB				mov	bl,data_713		; (020A:79DB=4Ah)
020A:72CF  8B 16 790D				mov	dx,data_703		; (020A:790D=0A104h)
020A:72D3  A1 790B				mov	ax,data_702		; (020A:790B=5BE9h)
020A:72D6  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:72D8			loc_1019:
020A:72D8  8B E8				mov	bp,ax
020A:72DA  33 C9				xor	cx,cx			; Zero register
020A:72DC  33 D2				xor	dx,dx			; Zero register
020A:72DE  FE C6				inc	dh
020A:72E0  33 F6				xor	si,si			; Zero register
020A:72E2  BF 0006				mov	di,6
020A:72E5			loc_1020:
020A:72E5  26: 8B 1C				mov	bx,es:[si]
020A:72E8  83 FB FF				cmp	bx,0FFFFh
020A:72EB  74 6E				je	loc_1024		; Jump if equal
020A:72ED  26: 8B 44 04				mov	ax,es:[si+4]
020A:72F1  26: 2B 44 02				sub	ax,es:[si+2]
020A:72F5  03 C8				add	cx,ax
020A:72F7  9C					pushf				; Push flags
020A:72F8  8B 85 7912				mov	ax,data_706[di]		; (020A:7912=50h)
020A:72FC  26: 89 44 11				mov	es:[si+11h],ax
020A:7300  50					push	ax
020A:7301  52					push	dx
020A:7302  8B D0				mov	dx,ax
020A:7304  B8 0002				mov	ax,2
020A:7307  E8 1492				call	sub_116			; (879C)
020A:730A  5A					pop	dx
020A:730B  58					pop	ax
020A:730C  8B 85 7914				mov	ax,data_707[di]		; (020A:7914=377h)
020A:7310  26: 89 44 13				mov	es:[si+13h],ax
020A:7314  50					push	ax
020A:7315  52					push	dx
020A:7316  8B D0				mov	dx,ax
020A:7318  B8 0001				mov	ax,1
020A:731B  E8 147E				call	sub_116			; (879C)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 243

020A:731E  5A					pop	dx
020A:731F  58					pop	ax
020A:7320  8B 85 7916				mov	ax,data_708[di]		; (020A:7916=50E9h)
020A:7324  26: 89 44 0F				mov	es:[si+0Fh],ax
020A:7328  50					push	ax
020A:7329  52					push	dx
020A:732A  8B D0				mov	dx,ax
020A:732C  B8 0004				mov	ax,4
020A:732F  E8 146A				call	sub_116			; (879C)
020A:7332  5A					pop	dx
020A:7333  58					pop	ax
020A:7334  83 C6 15				add	si,15h
020A:7337  26: 3B 1C				cmp	bx,es:[si]
020A:733A  75 09				jne	loc_1021		; Jump if not equal
020A:733C  9D					popf				; Pop flags
020A:733D  73 1A				jnc	loc_1023		; Jump if carry=0
020A:733F  B9 FFFF				mov	cx,0FFFFh
020A:7342  EB 15				jmp	short loc_1023		; (7359)
020A:7344  90					nop
020A:7345			loc_1021:
020A:7345  9D					popf				; Pop flags
020A:7346  72 04				jc	loc_1022		; Jump if carry Set
020A:7348  3B CD				cmp	cx,bp
020A:734A  72 0D				jb	loc_1023		; Jump if below
020A:734C			loc_1022:
020A:734C  33 C9				xor	cx,cx			; Zero register
020A:734E  3A 36 79DB				cmp	dh,data_713		; (020A:79DB=4Ah)
020A:7352  73 05				jae	loc_1023		; Jump if above or =
020A:7354  83 C7 06				add	di,6
020A:7357  FE C6				inc	dh
020A:7359			loc_1023:
020A:7359  EB 8A				jmp	short loc_1020		; (72E5)
020A:735B			loc_1024:
020A:735B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7360  9C					pushf				; Push flags
020A:7361  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7366  5A					pop	dx
020A:7367  8E DA				mov	ds,dx
020A:7369  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:736E  5A					pop	dx
020A:736F  75 0A				jnz	loc_1025		; Jump if not zero
020A:7371  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7376  74 03				je	loc_1025		; Jump if equal
020A:7378  E8 0041				call	sub_103			; (73BC)
020A:737B			loc_1025:
020A:737B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7380  9D					popf				; Pop flags
020A:7381  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7386  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:738B  9C					pushf				; Push flags
020A:738C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7391  5A					pop	dx
020A:7392  8E C2				mov	es,dx
020A:7394  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7399  5A					pop	dx
020A:739A  75 0A				jnz	loc_1026		; Jump if not zero
020A:739C  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 244

020A:73A1  74 03				je	loc_1026		; Jump if equal
020A:73A3  E8 0016				call	sub_103			; (73BC)
020A:73A6			loc_1026:
020A:73A6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:73AB  9D					popf				; Pop flags
020A:73AC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:73B1  5D					pop	bp
020A:73B2  5F					pop	di
020A:73B3  5E					pop	si
020A:73B4  5A					pop	dx
020A:73B5  59					pop	cx
020A:73B6  5B					pop	bx
020A:73B7  58					pop	ax
020A:73B8			loc_1027:
020A:73B8  C3					retn
				sub_101		endp

020A:73B9  87 DB				xchg	bx,bx
020A:73BB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_103		proc	near
020A:73BC  2E: 39 16 38A3			cmp	cs:data_495,dx		; (020A:38A3=6C7h)
020A:73C1  74 19				je	loc_1028		; Jump if equal
020A:73C3  2E: 89 16 38A3			mov	cs:data_495,dx		; (020A:38A3=6C7h)
020A:73C8  50					push	ax
020A:73C9  B4 48				mov	ah,48h
020A:73CB  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020A:73CD  80 FC 00				cmp	ah,0
020A:73D0  75 0B				jne	loc_1029		; Jump if not equal
020A:73D2  B4 47				mov	ah,47h
020A:73D4  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:73D6  80 FC 00				cmp	ah,0
020A:73D9  75 02				jne	loc_1029		; Jump if not equal
020A:73DB  58					pop	ax
020A:73DC			loc_1028:
020A:73DC  C3					retn
020A:73DD			loc_1029:
020A:73DD  E8 FC65				call	sub_91			; (7045)
020A:73E0  BD 2629				mov	bp,2629h
020A:73E3  32 C0				xor	al,al			; Zero register
020A:73E5  86 C4				xchg	al,ah
020A:73E7  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:73E7  9A					db	9Ah
020A:73E8  021C 14FC				dw	21Ch, 14FCh
020A:73EC  E9 F7DD				jmp	loc_939			; (6BCC)
				sub_103		endp

020A:73EF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 245

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_104		proc	near
020A:73F0  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:73F6  75 0A				jne	loc_1030		; Jump if not equal
020A:73F8  50					push	ax
020A:73F9  B8 4E00				mov	ax,4E00h
020A:73FC  8E C0				mov	es,ax
020A:73FE  58					pop	ax
020A:73FF  EB 60				jmp	short loc_1039		; (7461)
020A:7401  90					nop
020A:7402			loc_1030:
020A:7402  E8 FC58				call	sub_95			; (705D)
020A:7405  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (4E00:344A=0FFFFh)
020A:740A  75 1C				jne	loc_1032		; Jump if not equal
020A:740C  2E: 83 3E 38B5 FF			cmp	cs:data_504,0FFFFh	; (020A:38B5=477h)
020A:7412  74 14				je	loc_1032		; Jump if equal
020A:7414  52					push	dx
020A:7415  2E: 8B 16 38B5			mov	dx,cs:data_504		; (020A:38B5=477h)
020A:741A  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:741F  74 03				je	loc_1031		; Jump if equal
020A:7421  E8 FF98				call	sub_103			; (73BC)
020A:7424			loc_1031:
020A:7424  5A					pop	dx
020A:7425  EB 35				jmp	short loc_1038		; (745C)
020A:7427  90					nop
020A:7428			loc_1032:
020A:7428  E8 FC29				call	sub_93			; (7054)
020A:742B  56					push	si
020A:742C  33 F6				xor	si,si			; Zero register
020A:742E			loc_1033:
020A:742E  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:7432  75 07				jne	loc_1034		; Jump if not equal
020A:7434  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:7439  74 0C				je	loc_1035		; Jump if equal
020A:743B			loc_1034:
020A:743B  26: 39 1C				cmp	es:[si],bx
020A:743E  77 07				ja	loc_1035		; Jump if above
020A:7440  74 10				jz	loc_1037		; Jump if zero
020A:7442  83 C6 15				add	si,15h
020A:7445  EB E7				jmp	short loc_1033		; (742E)
020A:7447			loc_1035:
020A:7447  83 FE 15				cmp	si,15h
020A:744A  73 03				jae	loc_1036		; Jump if above or =
020A:744C  BE 0015				mov	si,15h
020A:744F			loc_1036:
020A:744F  83 EE 15				sub	si,15h
020A:7452			loc_1037:
020A:7452  52					push	dx
020A:7453  26: 8B 54 11				mov	dx,es:[si+11h]
020A:7457  E8 FF62				call	sub_103			; (73BC)
020A:745A  5A					pop	dx
020A:745B  5E					pop	si
020A:745C			loc_1038:
020A:745C  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7461			loc_1039:
020A:7461  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 246

				sub_104		endp

020A:7462  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_105		proc	near
020A:7464  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:746A  75 0A				jne	loc_1040		; Jump if not equal
020A:746C  50					push	ax
020A:746D  B8 5E00				mov	ax,5E00h
020A:7470  8E C0				mov	es,ax
020A:7472  58					pop	ax
020A:7473  EB 60				jmp	short loc_1049		; (74D5)
020A:7475  90					nop
020A:7476			loc_1040:
020A:7476  E8 FBE4				call	sub_95			; (705D)
020A:7479  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (5E00:344A=140h)
020A:747E  75 1C				jne	loc_1042		; Jump if not equal
020A:7480  2E: 83 3E 38B7 FF			cmp	cs:data_505,0FFFFh	; (020A:38B7=6FEh)
020A:7486  74 14				je	loc_1042		; Jump if equal
020A:7488  52					push	dx
020A:7489  2E: 8B 16 38B7			mov	dx,cs:data_505		; (020A:38B7=6FEh)
020A:748E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7493  74 03				je	loc_1041		; Jump if equal
020A:7495  E8 FF24				call	sub_103			; (73BC)
020A:7498			loc_1041:
020A:7498  5A					pop	dx
020A:7499  EB 35				jmp	short loc_1048		; (74D0)
020A:749B  90					nop
020A:749C			loc_1042:
020A:749C  E8 FBB5				call	sub_93			; (7054)
020A:749F  56					push	si
020A:74A0  33 F6				xor	si,si			; Zero register
020A:74A2			loc_1043:
020A:74A2  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:74A6  75 07				jne	loc_1044		; Jump if not equal
020A:74A8  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:74AD  74 0C				je	loc_1045		; Jump if equal
020A:74AF			loc_1044:
020A:74AF  26: 39 1C				cmp	es:[si],bx
020A:74B2  77 07				ja	loc_1045		; Jump if above
020A:74B4  74 10				jz	loc_1047		; Jump if zero
020A:74B6  83 C6 15				add	si,15h
020A:74B9  EB E7				jmp	short loc_1043		; (74A2)
020A:74BB			loc_1045:
020A:74BB  83 FE 15				cmp	si,15h
020A:74BE  73 03				jae	loc_1046		; Jump if above or =
020A:74C0  BE 0015				mov	si,15h
020A:74C3			loc_1046:
020A:74C3  83 EE 15				sub	si,15h
020A:74C6			loc_1047:
020A:74C6  52					push	dx
020A:74C7  26: 8B 54 13				mov	dx,es:[si+13h]
020A:74CB  E8 FEEE				call	sub_103			; (73BC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 247

020A:74CE  5A					pop	dx
020A:74CF  5E					pop	si
020A:74D0			loc_1048:
020A:74D0  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:74D5			loc_1049:
020A:74D5  C3					retn
				sub_105		endp

020A:74D6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_106		proc	near
020A:74D8  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:74DE  75 0A				jne	loc_1050		; Jump if not equal
020A:74E0  50					push	ax
020A:74E1  B8 3E00				mov	ax,3E00h
020A:74E4  8E C0				mov	es,ax
020A:74E6  58					pop	ax
020A:74E7  EB 60				jmp	short loc_1059		; (7549)
020A:74E9  90					nop
020A:74EA			loc_1050:
020A:74EA  E8 FB70				call	sub_95			; (705D)
020A:74ED  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (3E00:344A=0)
020A:74F2  75 1C				jne	loc_1052		; Jump if not equal
020A:74F4  2E: 83 3E 38B9 FF			cmp	cs:data_506,0FFFFh	; (020A:38B9=3040h)
020A:74FA  74 14				je	loc_1052		; Jump if equal
020A:74FC  52					push	dx
020A:74FD  2E: 8B 16 38B9			mov	dx,cs:data_506		; (020A:38B9=3040h)
020A:7502  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7507  74 03				je	loc_1051		; Jump if equal
020A:7509  E8 FEB0				call	sub_103			; (73BC)
020A:750C			loc_1051:
020A:750C  5A					pop	dx
020A:750D  EB 35				jmp	short loc_1058		; (7544)
020A:750F  90					nop
020A:7510			loc_1052:
020A:7510  E8 FB41				call	sub_93			; (7054)
020A:7513  56					push	si
020A:7514  33 F6				xor	si,si			; Zero register
020A:7516			loc_1053:
020A:7516  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:751A  75 07				jne	loc_1054		; Jump if not equal
020A:751C  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:7521  74 0C				je	loc_1055		; Jump if equal
020A:7523			loc_1054:
020A:7523  26: 39 1C				cmp	es:[si],bx
020A:7526  77 07				ja	loc_1055		; Jump if above
020A:7528  74 10				jz	loc_1057		; Jump if zero
020A:752A  83 C6 15				add	si,15h
020A:752D  EB E7				jmp	short loc_1053		; (7516)
020A:752F			loc_1055:
020A:752F  83 FE 15				cmp	si,15h
020A:7532  73 03				jae	loc_1056		; Jump if above or =
020A:7534  BE 0015				mov	si,15h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 248

020A:7537			loc_1056:
020A:7537  83 EE 15				sub	si,15h
020A:753A			loc_1057:
020A:753A  52					push	dx
020A:753B  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020A:753F  E8 FE7A				call	sub_103			; (73BC)
020A:7542  5A					pop	dx
020A:7543  5E					pop	si
020A:7544			loc_1058:
020A:7544  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7549			loc_1059:
020A:7549  C3					retn
				sub_106		endp

							                        ;* No entry point to code
020A:754A  87 DB				xchg	bx,bx
020A:754C  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7552  75 0A				jne	loc_1060		; Jump if not equal
020A:7554  50					push	ax
020A:7555  B8 4E00				mov	ax,4E00h
020A:7558  8E D8				mov	ds,ax
020A:755A  58					pop	ax
020A:755B  EB 5B				jmp	short loc_1069		; (75B8)
020A:755D  90					nop
020A:755E			loc_1060:
020A:755E  E8 FAE4				call	sub_91			; (7045)
020A:7561  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (4E00:344A=0FFFFh)
020A:7565  75 1C				jne	loc_1062		; Jump if not equal
020A:7567  2E: 83 3E 38B5 FF			cmp	cs:data_504,0FFFFh	; (020A:38B5=477h)
020A:756D  74 14				je	loc_1062		; Jump if equal
020A:756F  52					push	dx
020A:7570  2E: 8B 16 38B5			mov	dx,cs:data_504		; (020A:38B5=477h)
020A:7575  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:757A  74 03				je	loc_1061		; Jump if equal
020A:757C  E8 FE3D				call	sub_103			; (73BC)
020A:757F			loc_1061:
020A:757F  5A					pop	dx
020A:7580  EB 31				jmp	short loc_1068		; (75B3)
020A:7582  90					nop
020A:7583			loc_1062:
020A:7583  E8 FAB6				call	sub_90			; (703C)
020A:7586  56					push	si
020A:7587  33 F6				xor	si,si			; Zero register
020A:7589			loc_1063:
020A:7589  83 3C FF				cmp	word ptr [si],0FFFFh
020A:758C  75 06				jne	loc_1064		; Jump if not equal
020A:758E  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:7592  74 0B				je	loc_1065		; Jump if equal
020A:7594			loc_1064:
020A:7594  39 1C				cmp	[si],bx
020A:7596  77 07				ja	loc_1065		; Jump if above
020A:7598  74 10				jz	loc_1067		; Jump if zero
020A:759A  83 C6 15				add	si,15h
020A:759D  EB EA				jmp	short loc_1063		; (7589)
020A:759F			loc_1065:
020A:759F  83 FE 15				cmp	si,15h
020A:75A2  73 03				jae	loc_1066		; Jump if above or =
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 249

020A:75A4  BE 0015				mov	si,15h
020A:75A7			loc_1066:
020A:75A7  83 EE 15				sub	si,15h
020A:75AA			loc_1067:
020A:75AA  52					push	dx
020A:75AB  8B 54 11				mov	dx,[si+11h]
020A:75AE  E8 FE0B				call	sub_103			; (73BC)
020A:75B1  5A					pop	dx
020A:75B2  5E					pop	si
020A:75B3			loc_1068:
020A:75B3  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:75B8			loc_1069:
020A:75B8  C3					retn
							                        ;* No entry point to code
020A:75B9  87 DB				xchg	bx,bx
020A:75BB  90					nop
020A:75BC  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:75C2  75 0A				jne	loc_1070		; Jump if not equal
020A:75C4  50					push	ax
020A:75C5  B8 5E00				mov	ax,5E00h
020A:75C8  8E D8				mov	ds,ax
020A:75CA  58					pop	ax
020A:75CB  EB 5B				jmp	short loc_1079		; (7628)
020A:75CD  90					nop
020A:75CE			loc_1070:
020A:75CE  E8 FA74				call	sub_91			; (7045)
020A:75D1  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (5E00:344A=140h)
020A:75D5  75 1C				jne	loc_1072		; Jump if not equal
020A:75D7  2E: 83 3E 38B7 FF			cmp	cs:data_505,0FFFFh	; (020A:38B7=6FEh)
020A:75DD  74 14				je	loc_1072		; Jump if equal
020A:75DF  52					push	dx
020A:75E0  2E: 8B 16 38B7			mov	dx,cs:data_505		; (020A:38B7=6FEh)
020A:75E5  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:75EA  74 03				je	loc_1071		; Jump if equal
020A:75EC  E8 FDCD				call	sub_103			; (73BC)
020A:75EF			loc_1071:
020A:75EF  5A					pop	dx
020A:75F0  EB 31				jmp	short loc_1078		; (7623)
020A:75F2  90					nop
020A:75F3			loc_1072:
020A:75F3  E8 FA46				call	sub_90			; (703C)
020A:75F6  56					push	si
020A:75F7  33 F6				xor	si,si			; Zero register
020A:75F9			loc_1073:
020A:75F9  83 3C FF				cmp	word ptr [si],0FFFFh
020A:75FC  75 06				jne	loc_1074		; Jump if not equal
020A:75FE  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:7602  74 0B				je	loc_1075		; Jump if equal
020A:7604			loc_1074:
020A:7604  39 1C				cmp	[si],bx
020A:7606  77 07				ja	loc_1075		; Jump if above
020A:7608  74 10				jz	loc_1077		; Jump if zero
020A:760A  83 C6 15				add	si,15h
020A:760D  EB EA				jmp	short loc_1073		; (75F9)
020A:760F			loc_1075:
020A:760F  83 FE 15				cmp	si,15h
020A:7612  73 03				jae	loc_1076		; Jump if above or =
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 250

020A:7614  BE 0015				mov	si,15h
020A:7617			loc_1076:
020A:7617  83 EE 15				sub	si,15h
020A:761A			loc_1077:
020A:761A  52					push	dx
020A:761B  8B 54 13				mov	dx,[si+13h]
020A:761E  E8 FD9B				call	sub_103			; (73BC)
020A:7621  5A					pop	dx
020A:7622  5E					pop	si
020A:7623			loc_1078:
020A:7623  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7628			loc_1079:
020A:7628  C3					retn
							                        ;* No entry point to code
020A:7629  87 DB				xchg	bx,bx
020A:762B  90					nop
020A:762C  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:7632  75 0A				jne	loc_1080		; Jump if not equal
020A:7634  50					push	ax
020A:7635  B8 3E00				mov	ax,3E00h
020A:7638  8E D8				mov	ds,ax
020A:763A  58			data_701	db	58h
020A:763B  EB 5B				jmp	short loc_1089		; (7698)
020A:763D  90					nop
020A:763E			loc_1080:
020A:763E  E8 FA04				call	sub_91			; (7045)
020A:7641  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (3E00:344A=0)
020A:7645  75 1C				jne	loc_1082		; Jump if not equal
020A:7647  2E: 83 3E 38B9 FF			cmp	cs:data_506,0FFFFh	; (020A:38B9=3040h)
020A:764D  74 14				je	loc_1082		; Jump if equal
020A:764F  52					push	dx
020A:7650  2E: 8B 16 38B9			mov	dx,cs:data_506		; (020A:38B9=3040h)
020A:7655  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:765A  74 03				je	loc_1081		; Jump if equal
020A:765C  E8 FD5D				call	sub_103			; (73BC)
020A:765F			loc_1081:
020A:765F  5A					pop	dx
020A:7660  EB 31				jmp	short loc_1088		; (7693)
020A:7662  90					nop
020A:7663			loc_1082:
020A:7663  E8 F9D6				call	sub_90			; (703C)
020A:7666  56					push	si
020A:7667  33 F6				xor	si,si			; Zero register
020A:7669			loc_1083:
020A:7669  83 3C FF				cmp	word ptr [si],0FFFFh
020A:766C  75 06				jne	loc_1084		; Jump if not equal
020A:766E  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:7672  74 0B				je	loc_1085		; Jump if equal
020A:7674			loc_1084:
020A:7674  39 1C				cmp	[si],bx
020A:7676  77 07				ja	loc_1085		; Jump if above
020A:7678  74 10				jz	loc_1087		; Jump if zero
020A:767A  83 C6 15				add	si,15h
020A:767D  EB EA				jmp	short loc_1083		; (7669)
020A:767F			loc_1085:
020A:767F  83 FE 15				cmp	si,15h
020A:7682  73 03				jae	loc_1086		; Jump if above or =
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 251

020A:7684  BE 0015				mov	si,15h
020A:7687			loc_1086:
020A:7687  83 EE 15				sub	si,15h
020A:768A			loc_1087:
020A:768A  52					push	dx
020A:768B  8B 54 0F				mov	dx,[si+0Fh]
020A:768E  E8 FD2B				call	sub_103			; (73BC)
020A:7691  5A					pop	dx
020A:7692  5E					pop	si
020A:7693			loc_1088:
020A:7693  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:7698			loc_1089:
020A:7698  C3					retn
020A:7699  87 DB				xchg	bx,bx
020A:769B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_107		proc	near
020A:769C  FF D3				call	bx			;*
020A:769E  CB					retf
				sub_107		endp

							                        ;* No entry point to code
020A:769F  90					nop
020A:76A0  FF D5				call	bp			;*
020A:76A2  CB					retf
							                        ;* No entry point to code
020A:76A3  90					nop
020A:76A4  2E: A1 38A3				mov	ax,cs:data_495		; (020A:38A3=6C7h)
020A:76A8  CB					retf
							                        ;* No entry point to code
020A:76A9  87 DB				xchg	bx,bx
020A:76AB  90					nop
020A:76AC  9C					pushf				; Push flags
020A:76AD  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:76B2  75 0C				jne	loc_1090		; Jump if not equal
020A:76B4  2E: 3B 06 38A3			cmp	ax,cs:data_495		; (020A:38A3=6C7h)
020A:76B9  74 05				je	loc_1090		; Jump if equal
020A:76BB  8B D0				mov	dx,ax
020A:76BD  E8 FCFC				call	sub_103			; (73BC)
020A:76C0			loc_1090:
020A:76C0  9D					popf				; Pop flags
020A:76C1  CB					retf
							                        ;* No entry point to code
020A:76C2  87 DB				xchg	bx,bx
020A:76C4  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:76CA  74 1F				je	loc_1091		; Jump if equal
020A:76CC  E8 FB19				call	sub_101			; (71E8)
020A:76CF  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:76D5  75 14				jne	loc_1091		; Jump if not equal
020A:76D7  E8 D2DA				call	sub_43			; (49B4)
020A:76DA  E8 FB0B				call	sub_101			; (71E8)
020A:76DD  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=0ACh)
020A:76E3  75 06				jne	loc_1091		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 252

020A:76E5  BB 0002				mov	bx,2
020A:76E8  E9 F418				jmp	loc_928			; (6B03)
020A:76EB			loc_1091:
020A:76EB  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_108		proc	near
020A:76EC  53					push	bx
020A:76ED  51					push	cx
020A:76EE  52					push	dx
020A:76EF  25 3FFF				and	ax,3FFFh
020A:76F2  8B F8				mov	di,ax
020A:76F4  57					push	di
020A:76F5  B1 0C				mov	cl,0Ch
020A:76F7  D3 EF				shr	di,cl			; Shift w/zeros fill
020A:76F9  D1 E7				shl	di,1			; Shift w/zeros fill
020A:76FB  03 3E 79DD				add	di,data_715		; (020A:79DD=375h)
020A:76FF  8B 95 7912				mov	dx,data_706[di]		; (020A:7912=50h)
020A:7703  53					push	bx
020A:7704  BB 403C				mov	bx,403Ch
020A:7707  0E E8 FF91				callf	sub_107			; (769C)
020A:770B  5B					pop	bx
020A:770C  5F					pop	di
020A:770D  81 E7 0FFF				and	di,0FFFh
020A:7711  B1 04				mov	cl,4
020A:7713  D3 E7				shl	di,cl			; Shift w/zeros fill
020A:7715  5A					pop	dx
020A:7716  59					pop	cx
020A:7717  5B					pop	bx
020A:7718  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:771D  C3					retn
				sub_108		endp

020A:771E  00 00				add	[bx+si],al

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_109		proc	near
020A:7720  51					push	cx
020A:7721  52					push	dx
020A:7722  57					push	di
020A:7723  55					push	bp
020A:7724  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7729  06					push	es
020A:772A  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:772F  74 12				je	loc_1093		; Jump if equal
020A:7731  F7 06 4E22 0020			test	data_591,20h		; (020A:4E22=0EDA3h)
020A:7737  75 07				jnz	loc_1092		; Jump if not zero
020A:7739  80 3E 4D49 02			cmp	data_568,2		; (020A:4D49=80h)
020A:773E  75 03				jne	loc_1093		; Jump if not equal
020A:7740			loc_1092:
020A:7740  E9 06A9				jmp	loc_1184		; (7DEC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 253

020A:7743			loc_1093:
020A:7743  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:7746  A3 4D45				mov	data_566,ax		; (020A:4D45=0E905h)
020A:7749  A0 16AB				mov	al,data_166		; (020A:16AB=41h)
020A:774C  A2 4D44				mov	byte ptr ds:[4D44h],al	; (020A:4D44=0CEh)
020A:774F  C6 06 16AB 00			mov	data_166,0		; (020A:16AB=41h)
020A:7754  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:7759  74 6A				je	loc_1096		; Jump if equal
020A:775B  53					push	bx
020A:775C  52					push	dx
020A:775D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7762  06					push	es
020A:7763  E8 F8F7				call	sub_95			; (705D)
020A:7766  C6 06 47C3 00			mov	data_560,0		; (020A:47C3=0Eh)
020A:776B  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:776E  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:7772  BA 0020				mov	dx,20h
020A:7775  E8 E714				call	sub_76			; (5E8C)
020A:7778  83 F9 1D				cmp	cx,1Dh
020A:777B  73 1B				jae	loc_1094		; Jump if above or =
020A:777D  41					inc	cx
020A:777E  80 E1 1F				and	cl,1Fh
020A:7781  88 0E 47C3				mov	data_560,cl		; (020A:47C3=0Eh)
020A:7785  56					push	si
020A:7786  89 1D				mov	[di],bx
020A:7788  89 45 02				mov	[di+2],ax
020A:778B  B9 0028				mov	cx,28h
020A:778E  83 C7 04				add	di,4
020A:7791  BE 35FA				mov	si,35FAh
020A:7794  FC					cld				; Clear direction
020A:7795  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7797  5E					pop	si
020A:7798			loc_1094:
020A:7798  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:779D  9C					pushf				; Push flags
020A:779E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:77A3  5A					pop	dx
020A:77A4  8E C2				mov	es,dx
020A:77A6  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:77AB  5A					pop	dx
020A:77AC  75 0A				jnz	loc_1095		; Jump if not zero
020A:77AE  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:77B3  74 03				je	loc_1095		; Jump if equal
020A:77B5  E8 FC04				call	sub_103			; (73BC)
020A:77B8			loc_1095:
020A:77B8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:77BD  9D					popf				; Pop flags
020A:77BE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:77C3  5A					pop	dx
020A:77C4  5B					pop	bx
020A:77C5			loc_1096:
020A:77C5  C6 06 47BF 00			mov	data_556,0		; (020A:47BF=0Ch)
020A:77CA  C6 06 47C0 10			mov	data_557,10h		; (020A:47C0=26h)
020A:77CF  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:77D4  74 05				je	loc_1097		; Jump if equal
020A:77D6  C6 06 47C0 12			mov	data_557,12h		; (020A:47C0=26h)
020A:77DB			loc_1097:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 254

020A:77DB  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:77E0  74 0A				jz	loc_1098		; Jump if zero
020A:77E2  80 0E 47C0 08			or	data_557,8		; (020A:47C0=26h)
020A:77E7  B7 20				mov	bh,20h			; ' '
020A:77E9  E9 0112				jmp	loc_1122		; (78FE)
020A:77EC			loc_1098:
020A:77EC  F6 C7 10				test	bh,10h
020A:77EF  74 05				jz	loc_1099		; Jump if zero
020A:77F1  80 0E 47C0 01			or	data_557,1		; (020A:47C0=26h)
020A:77F6			loc_1099:
020A:77F6  33 FF				xor	di,di			; Zero register
020A:77F8  26: 8A 44 01				mov	al,es:[si+1]
020A:77FC  24 C7				and	al,0C7h
020A:77FE  3C 06				cmp	al,6
020A:7800  75 03				jne	loc_1100		; Jump if not equal
020A:7802  E9 0098				jmp	loc_1113		; (789D)
020A:7805			loc_1100:
020A:7805  24 07				and	al,7
020A:7807  A8 04				test	al,4
020A:7809  75 30				jnz	loc_1104		; Jump if not zero
020A:780B  A8 02				test	al,2
020A:780D  75 16				jnz	loc_1102		; Jump if not zero
020A:780F  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:7815  75 08				jnz	loc_1101		; Jump if not zero
020A:7817  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0E903h)
020A:781D  72 20				jb	loc_1105		; Jump if below
020A:781F			loc_1101:
020A:781F  8B 3E 35FE				mov	di,word ptr ds:[35FEh]	; (020A:35FE=0E903h)
020A:7823  EB 1A				jmp	short loc_1105		; (783F)
020A:7825			loc_1102:
020A:7825  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:782B  75 08				jnz	loc_1103		; Jump if not zero
020A:782D  81 3E 3612 0180			cmp	data_475,180h		; (020A:3612=0E573h)
020A:7833  72 0A				jb	loc_1105		; Jump if below
020A:7835			loc_1103:
020A:7835  8B 3E 3612				mov	di,data_475		; (020A:3612=0E573h)
020A:7839  EB 04				jmp	short loc_1105		; (783F)
020A:783B			loc_1104:
020A:783B  3C 06				cmp	al,6
020A:783D  73 30				jae	loc_1109		; Jump if above or =
020A:783F			loc_1105:
020A:783F  A8 01				test	al,1
020A:7841  74 16				jz	loc_1107		; Jump if zero
020A:7843  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:7849  75 08				jnz	loc_1106		; Jump if not zero
020A:784B  81 3E 360E 0180			cmp	data_474,180h		; (020A:360E=19B5h)
020A:7851  72 4A				jb	loc_1113		; Jump if below
020A:7853			loc_1106:
020A:7853  03 3E 360E				add	di,data_474		; (020A:360E=19B5h)
020A:7857  EB 44				jmp	short loc_1113		; (789D)
020A:7859			loc_1107:
020A:7859  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:785F  75 08				jnz	loc_1108		; Jump if not zero
020A:7861  81 3E 360A 0180			cmp	data_473,180h		; (020A:360A=752Bh)
020A:7867  72 34				jb	loc_1113		; Jump if below
020A:7869			loc_1108:
020A:7869  03 3E 360A				add	di,data_473		; (020A:360A=752Bh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 255

020A:786D  EB 2E				jmp	short loc_1113		; (789D)
020A:786F			loc_1109:
020A:786F  A8 01				test	al,1
020A:7871  74 16				jz	loc_1111		; Jump if zero
020A:7873  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:7879  75 08				jnz	loc_1110		; Jump if not zero
020A:787B  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0E903h)
020A:7881  72 1A				jb	loc_1113		; Jump if below
020A:7883			loc_1110:
020A:7883  03 3E 35FE				add	di,word ptr ds:[35FEh]	; (020A:35FE=0E903h)
020A:7887  EB 14				jmp	short loc_1113		; (789D)
020A:7889			loc_1111:
020A:7889  F7 06 4E22 0010			test	data_591,10h		; (020A:4E22=0EDA3h)
020A:788F  75 08				jnz	loc_1112		; Jump if not zero
020A:7891  81 3E 3612 0180			cmp	data_475,180h		; (020A:3612=0E573h)
020A:7897  72 04				jb	loc_1113		; Jump if below
020A:7899			loc_1112:
020A:7899  03 3E 3612				add	di,data_475		; (020A:3612=0E573h)
020A:789D			loc_1113:
020A:789D  80 FA 3D				cmp	dl,3Dh			; '='
020A:78A0  74 02				je	loc_1114		; Jump if equal
020A:78A2  EB 4C				jmp	short loc_1121		; (78F0)
020A:78A4			loc_1114:
020A:78A4  F6 C7 10				test	bh,10h
020A:78A7  74 02				jz	loc_1115		; Jump if zero
020A:78A9  EB 5B				jmp	short loc_1124		; (7906)
020A:78AB			loc_1115:
020A:78AB  83 FF 40				cmp	di,40h
020A:78AE  73 02				jae	loc_1116		; Jump if above or =
020A:78B0  EB 59				jmp	short loc_1125		; (790B)
020A:78B2			loc_1116:
020A:78B2  83 FF FC				cmp	di,0FFFCh
020A:78B5  76 02				jbe	loc_1117		; Jump if below or =
020A:78B7  EB 52				jmp	short loc_1125		; (790B)
020A:78B9			loc_1117:
020A:78B9  06					push	es
020A:78BA  53					push	bx
020A:78BB  51					push	cx
020A:78BC  8E 06 40E9				mov	es,data_518		; (020A:40E9=0B432h)
020A:78C0  B9 0019				mov	cx,19h
020A:78C3  26: 8B 05				mov	ax,es:[di]

020A:78C6			locloop_1118:
020A:78C6  8B D8				mov	bx,ax
020A:78C8  26: 2B 5D FE				sub	bx,es:[di-2]
020A:78CC  73 02				jnc	loc_1119		; Jump if carry=0
020A:78CE  F7 D3				not	bx
020A:78D0			loc_1119:
020A:78D0  81 FB 0200				cmp	bx,200h
020A:78D4  73 15				jae	loc_1120		; Jump if above or =
020A:78D6  8B DF				mov	bx,di
020A:78D8  4B					dec	bx
020A:78D9  3B 1E 344C				cmp	bx,data_402		; (020A:344C=6C6h)
020A:78DD  74 0C				je	loc_1120		; Jump if equal
020A:78DF  4B					dec	bx
020A:78E0  3B 1E 344C				cmp	bx,data_402		; (020A:344C=6C6h)
020A:78E4  74 05				je	loc_1120		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 256

020A:78E6  83 EF 02				sub	di,2
020A:78E9  E2 DB				loop	locloop_1118		; Loop if cx > 0

020A:78EB			loc_1120:
020A:78EB  07					pop	es
020A:78EC  5B					pop	bx
020A:78ED  07					pop	es
020A:78EE  EB 16				jmp	short loc_1124		; (7906)
020A:78F0			loc_1121:
020A:78F0  81 FF FE00				cmp	di,0FE00h
020A:78F4  72 0A				jb	loc_1123		; Jump if below
020A:78F6  81 3E 4D45 0080			cmp	data_566,80h		; (020A:4D45=0E905h)
020A:78FC  72 02				jb	loc_1123		; Jump if below
020A:78FE			loc_1122:
020A:78FE  33 FF				xor	di,di			; Zero register
020A:7900			loc_1123:
020A:7900  03 3E 4D45				add	di,data_566		; (020A:4D45=0E905h)
020A:7904  72 F8				jc	loc_1122		; Jump if carry Set
020A:7906			loc_1124:
020A:7906  83 FF FC				cmp	di,0FFFCh
020A:7909  76 03				jbe	loc_1126		; Jump if below or =
020A:790B			loc_1125:
020A:790B  5BE9			data_702	dw	5BE9h
020A:790D  A104			data_703	dw	0A104h
020A:790F  40E9			data_704	dw	40E9h
020A:7911  3D			data_705	db	3Dh
020A:7912  0050			data_706	dw	50h			; Data table (indexed access)
020A:7914  0377			data_707	dw	377h			; Data table (indexed access)
020A:7916  50E9			data_708	dw	50E9h			; Data table (indexed access)
020A:7918  A304			data_709	dw	0A304h
020A:791A  47B8			data_710	dw	47B8h
020A:791C  2BA0			data_711	dw	2BA0h
020A:791E  36: A2 47BA				mov	ss:data_553,al		; (020A:47BA=55h)
020A:7922  C6 06 362B 90			mov	data_483,90h		; (020A:362B=0EFh)
020A:7927  A1 361A				mov	ax,data_477		; (020A:361A=69B9h)
020A:792A  A3 47BB				mov	data_554,ax		; (020A:47BB=260Ch)
020A:792D  A1 3618				mov	ax,data_476		; (020A:3618=5F24h)
020A:7930  A3 47BD				mov	data_555,ax		; (020A:47BD=5489h)
020A:7933  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:7938  74 20				je	loc_1128		; Jump if equal
020A:793A  F6 C7 10				test	bh,10h
020A:793D  75 1B				jnz	loc_1128		; Jump if not zero
020A:793F  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:7942  3B 06 47B8				cmp	ax,data_552		; (020A:47B8=8B26h)
020A:7946  75 12				jne	loc_1128		; Jump if not equal
020A:7948  8B C7				mov	ax,di
020A:794A  2B 06 344C				sub	ax,data_402		; (020A:344C=6C6h)
020A:794E  73 02				jnc	loc_1127		; Jump if carry=0
020A:7950  F7 D0				not	ax
020A:7952			loc_1127:
020A:7952  3D 1500				cmp	ax,1500h
020A:7955  72 03				jb	loc_1128		; Jump if below
020A:7957  E9 040F				jmp	loc_1176		; (7D69)
020A:795A			loc_1128:
020A:795A  53					push	bx
020A:795B  8B 1E 47B8				mov	bx,data_552		; (020A:47B8=8B26h)
020A:795F  E8 FB02				call	sub_105			; (7464)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 257

020A:7962  8B C3				mov	ax,bx
020A:7964  5B					pop	bx
020A:7965  E8 04BC				call	sub_110			; (7E24)
020A:7968  8B D0				mov	dx,ax
020A:796A  53					push	bx
020A:796B  8B 1E 47B8				mov	bx,data_552		; (020A:47B8=8B26h)
020A:796F  E8 FA7E				call	sub_104			; (73F0)
020A:7972  8B C3				mov	ax,bx
020A:7974  5B					pop	bx
020A:7975  E8 04AC				call	sub_110			; (7E24)
020A:7978  3B C2				cmp	ax,dx
020A:797A  73 02				jae	loc_1129		; Jump if above or =
020A:797C  8B D0				mov	dx,ax
020A:797E			loc_1129:
020A:797E  53					push	bx
020A:797F  8B 1E 47B8				mov	bx,data_552		; (020A:47B8=8B26h)
020A:7983  E8 FB52				call	sub_106			; (74D8)
020A:7986  8B C3				mov	ax,bx
020A:7988  5B					pop	bx
020A:7989  E8 0498				call	sub_110			; (7E24)
020A:798C  3B C2				cmp	ax,dx
020A:798E  73 02				jae	loc_1130		; Jump if above or =
020A:7990  8B D0				mov	dx,ax
020A:7992			loc_1130:
020A:7992  2B D7				sub	dx,di
020A:7994  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:7996  83 FA 00				cmp	dx,0
020A:7999  75 03				jne	loc_1132		; Jump if not equal
020A:799B			loc_1131:
020A:799B  E9 03CB				jmp	loc_1176		; (7D69)
020A:799E			loc_1132:
020A:799E  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:79A3  75 05				jnz	loc_1133		; Jump if not zero
020A:79A5  F6 C7 10				test	bh,10h
020A:79A8  74 07				jz	loc_1134		; Jump if zero
020A:79AA			loc_1133:
020A:79AA  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:79AC  83 FA 00				cmp	dx,0
020A:79AF  74 EA				je	loc_1131		; Jump if equal
020A:79B1			loc_1134:
020A:79B1  80 3E 4D4A 00			cmp	data_569,0		; (020A:4D4A=3Eh)
020A:79B6  75 08				jne	loc_1135		; Jump if not equal
020A:79B8  83 FA 3C				cmp	dx,3Ch
020A:79BB  76 03				jbe	loc_1135		; Jump if below or =
020A:79BD  BA 003C				mov	dx,3Ch
020A:79C0			loc_1135:
020A:79C0  88 16 47C1				mov	data_558,dl		; (020A:47C1=8Ah)
020A:79C4			loc_1136:
020A:79C4  80 3E 4D4A 00			cmp	data_569,0		; (020A:4D4A=3Eh)
020A:79C9  74 03				je	loc_1137		; Jump if equal
020A:79CB  E9 015B				jmp	loc_1150		; (7B29)
020A:79CE			loc_1137:
020A:79CE  F6 C7 10				test	bh,10h
020A:79D1  74 03				jz	loc_1138		; Jump if zero
020A:79D3  E9 0143				jmp	loc_1149		; (7B19)
020A:79D6			loc_1138:
020A:79D6  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 258

020A:79D9  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:79DD  0375			data_715	dw	375h
020A:79DF  87E9			data_716	dw	87E9h
020A:79E1  00 F6				add	dh,dh
020A:79E3  06					push	es
020A:79E4  EE					out	dx,al			; port 3Ch ??I/O Non-standard
020A:79E5  35 7402				xor	ax,7402h
020A:79E8  44					inc	sp
020A:79E9  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:79EE  06					push	es
020A:79EF  8E C0				mov	es,ax
020A:79F1  26: 8B 45 02				mov	ax,es:[di+2]
020A:79F5  26: 83 3D 00				cmp	word ptr es:[di],0
020A:79F9  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:79FE  9C					pushf				; Push flags
020A:79FF  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7A04  5A					pop	dx
020A:7A05  8E C2				mov	es,dx
020A:7A07  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7A0C  5A					pop	dx
020A:7A0D  75 0A				jnz	loc_1139		; Jump if not zero
020A:7A0F  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7A14  74 03				je	loc_1139		; Jump if equal
020A:7A16  E8 F9A3				call	sub_103			; (73BC)
020A:7A19			loc_1139:
020A:7A19  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7A1E  9D					popf				; Pop flags
020A:7A1F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7A24  74 64				jz	loc_1143		; Jump if zero
020A:7A26  0B C0				or	ax,ax			; Zero ?
020A:7A28  75 60				jnz	loc_1143		; Jump if not zero
020A:7A2A  E9 00FC				jmp	loc_1150		; (7B29)
020A:7A2D			loc_1140:
020A:7A2D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7A32  06					push	es
020A:7A33  8E C0				mov	es,ax
020A:7A35  26: 83 3D 00				cmp	word ptr es:[di],0
020A:7A39  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7A3E  9C					pushf				; Push flags
020A:7A3F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7A44  5A					pop	dx
020A:7A45  8E C2				mov	es,dx
020A:7A47  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7A4C  5A					pop	dx
020A:7A4D  75 0A				jnz	loc_1141		; Jump if not zero
020A:7A4F  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7A54  74 03				je	loc_1141		; Jump if equal
020A:7A56  E8 F963				call	sub_103			; (73BC)
020A:7A59			loc_1141:
020A:7A59  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7A5E  9D					popf				; Pop flags
020A:7A5F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7A64  74 24				jz	loc_1143		; Jump if zero
020A:7A66  E9 00C0				jmp	loc_1150		; (7B29)
020A:7A69			loc_1142:
020A:7A69  3B 3E 3058				cmp	di,data_313		; (020A:3058=5352h)
020A:7A6D  72 1B				jb	loc_1143		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 259

020A:7A6F  3B 3E 305A				cmp	di,data_314		; (020A:305A=313Dh)
020A:7A73  72 18				jb	loc_1144		; Jump if below
020A:7A75  80 FA 39				cmp	dl,39h			; '9'
020A:7A78  74 10				je	loc_1143		; Jump if equal
020A:7A7A  8B 3E 4D45				mov	di,data_566		; (020A:4D45=0E905h)
020A:7A7E  3B 3E 3058				cmp	di,data_313		; (020A:3058=5352h)
020A:7A82  72 06				jb	loc_1143		; Jump if below
020A:7A84  3B 3E 305A				cmp	di,data_314		; (020A:305A=313Dh)
020A:7A88  76 03				jbe	loc_1144		; Jump if below or =
020A:7A8A			loc_1143:
020A:7A8A  E9 02D0				jmp	loc_1175		; (7D5D)
020A:7A8D			loc_1144:
020A:7A8D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7A92  06					push	es
020A:7A93  8E C0				mov	es,ax
020A:7A95  26: 8B 05				mov	ax,es:[di]
020A:7A98  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7A9D  9C					pushf				; Push flags
020A:7A9E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7AA3  5A					pop	dx
020A:7AA4  8E C2				mov	es,dx
020A:7AA6  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7AAB  5A					pop	dx
020A:7AAC  75 0A				jnz	loc_1145		; Jump if not zero
020A:7AAE  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7AB3  74 03				je	loc_1145		; Jump if equal
020A:7AB5  E8 F904				call	sub_103			; (73BC)
020A:7AB8			loc_1145:
020A:7AB8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7ABD  9D					popf				; Pop flags
020A:7ABE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7AC3  0B C0				or	ax,ax			; Zero ?
020A:7AC5  74 4F				jz	loc_1148		; Jump if zero
020A:7AC7  2B C7				sub	ax,di
020A:7AC9  73 02				jnc	loc_1146		; Jump if carry=0
020A:7ACB  F7 D0				not	ax
020A:7ACD			loc_1146:
020A:7ACD  3D 4000				cmp	ax,4000h
020A:7AD0  73 44				jae	loc_1148		; Jump if above or =
020A:7AD2  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7AD7  74 50				jz	loc_1150		; Jump if zero
020A:7AD9  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
020A:7ADC  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7AE1  06					push	es
020A:7AE2  8E C0				mov	es,ax
020A:7AE4  26: 83 7D 02 00			cmp	word ptr es:[di+2],0
020A:7AE9  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7AEE  9C					pushf				; Push flags
020A:7AEF  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7AF4  5A					pop	dx
020A:7AF5  8E C2				mov	es,dx
020A:7AF7  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7AFC  5A					pop	dx
020A:7AFD  75 0A				jnz	loc_1147		; Jump if not zero
020A:7AFF  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7B04  74 03				je	loc_1147		; Jump if equal
020A:7B06  E8 F8B3				call	sub_103			; (73BC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 260

020A:7B09			loc_1147:
020A:7B09  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7B0E  9D					popf				; Pop flags
020A:7B0F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7B14  74 13				jz	loc_1150		; Jump if zero
020A:7B16			loc_1148:
020A:7B16  E9 0244				jmp	loc_1175		; (7D5D)
020A:7B19			loc_1149:
020A:7B19  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
020A:7B1C  3D FFFF				cmp	ax,0FFFFh
020A:7B1F  74 F5				je	loc_1148		; Jump if equal
020A:7B21  25 FFF0				and	ax,0FFF0h
020A:7B24  3D FBA0				cmp	ax,0FBA0h
020A:7B27  74 ED				je	loc_1148		; Jump if equal
020A:7B29			loc_1150:
020A:7B29  8B C7				mov	ax,di
020A:7B2B  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7B2D  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7B2F  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7B31  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7B33  03 06 47B8				add	ax,data_552		; (020A:47B8=8B26h)
020A:7B37  72 DD				jc	loc_1148		; Jump if carry Set
020A:7B39  8B C7				mov	ax,di
020A:7B3B  32 DB				xor	bl,bl			; Zero register
020A:7B3D  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:7B42  74 0B				je	loc_1151		; Jump if equal
020A:7B44  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7B49  75 04				jnz	loc_1151		; Jump if not zero
020A:7B4B  26: 8A 5C 01				mov	bl,es:[si+1]
020A:7B4F			loc_1151:
020A:7B4F  BD 4702				mov	bp,4702h
020A:7B52  E8 0DBB				call	sub_117			; (8910)
020A:7B55  83 3E 30C9 00			cmp	word ptr ds:[30C9h],0	; (020A:30C9=562Eh)
020A:7B5A  75 03				jne	loc_1152		; Jump if not equal
020A:7B5C  E9 01FE				jmp	loc_1175		; (7D5D)
020A:7B5F			loc_1152:
020A:7B5F  53					push	bx
020A:7B60  57					push	di
020A:7B61  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7B66  06					push	es
020A:7B67  8B 1E 40E9				mov	bx,data_518		; (020A:40E9=0B432h)
020A:7B6B  E8 F882				call	sub_104			; (73F0)
020A:7B6E  8B 3E 30C9				mov	di,word ptr ds:[30C9h]	; (020A:30C9=562Eh)
020A:7B72  26: 80 25 C0				and	byte ptr es:[di],0C0h
020A:7B76  A0 47C0				mov	al,data_557		; (020A:47C0=26h)
020A:7B79  26: 08 05				or	es:[di],al
020A:7B7C  A8 01				test	al,1
020A:7B7E  75 2A				jnz	loc_1154		; Jump if not zero
020A:7B80  83 EF 04				sub	di,4
020A:7B83  3B 1E 344A				cmp	bx,data_401		; (020A:344A=0CD01h)
020A:7B87  74 14				je	loc_1153		; Jump if equal
020A:7B89  26: F7 45 06 03FF			test	word ptr es:[di+6],3FFh
020A:7B8F  75 19				jnz	loc_1154		; Jump if not zero
020A:7B91  A0 303F				mov	al,data_297		; (020A:303F=35h)
020A:7B94  26: 88 45 06				mov	es:[di+6],al
020A:7B98  26: 80 4D 07 04			or	byte ptr es:[di+7],4
020A:7B9D			loc_1153:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 261

020A:7B9D  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7BA2  74 06				jz	loc_1154		; Jump if zero
020A:7BA4  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:7BAA			loc_1154:
020A:7BAA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7BAF  9C					pushf				; Push flags
020A:7BB0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7BB5  5A					pop	dx
020A:7BB6  8E C2				mov	es,dx
020A:7BB8  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7BBD  5A					pop	dx
020A:7BBE  75 0A				jnz	loc_1155		; Jump if not zero
020A:7BC0  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7BC5  74 03				je	loc_1155		; Jump if equal
020A:7BC7  E8 F7F2				call	sub_103			; (73BC)
020A:7BCA			loc_1155:
020A:7BCA  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7BCF  9D					popf				; Pop flags
020A:7BD0  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7BD5  5F					pop	di
020A:7BD6  5B					pop	bx
020A:7BD7  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7BDC  06					push	es
020A:7BDD  53					push	bx
020A:7BDE  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
020A:7BE1  8E C0				mov	es,ax
020A:7BE3  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:7BE6  32 C9				xor	cl,cl			; Zero register
020A:7BE8  F6 C7 10				test	bh,10h
020A:7BEB  74 06				jz	loc_1156		; Jump if zero
020A:7BED  26: 8B 45 02				mov	ax,es:[di+2]
020A:7BF1  B1 01				mov	cl,1
020A:7BF3			loc_1156:
020A:7BF3  8B D8				mov	bx,ax
020A:7BF5  83 FB FF				cmp	bx,0FFFFh
020A:7BF8  74 17				je	loc_1157		; Jump if equal
020A:7BFA  26: 8B 05				mov	ax,es:[di]
020A:7BFD  3D FFFC				cmp	ax,0FFFCh
020A:7C00  73 0F				jae	loc_1157		; Jump if above or =
020A:7C02  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C04  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C06  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C08  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C0A  03 C3				add	ax,bx
020A:7C0C  26: 8B 05				mov	ax,es:[di]
020A:7C0F  73 04				jnc	loc_1158		; Jump if carry=0
020A:7C11			loc_1157:
020A:7C11  5B					pop	bx
020A:7C12  E9 011D				jmp	loc_1173		; (7D32)
020A:7C15			loc_1158:
020A:7C15  BD 4702				mov	bp,4702h
020A:7C18  E8 13A5				call	sub_118			; (8FC0)
020A:7C1B  80 3E 4E0A 01			cmp	data_577,1		; (020A:4E0A=14h)
020A:7C20  74 07				je	loc_1159		; Jump if equal
020A:7C22  80 3E 4E08 00			cmp	data_576,0		; (020A:4E08=2Bh)
020A:7C27  74 07				je	loc_1160		; Jump if equal
020A:7C29			loc_1159:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 262

020A:7C29  C6 06 4E08 00			mov	data_576,0		; (020A:4E08=2Bh)
020A:7C2E  EB E1				jmp	short loc_1157		; (7C11)
020A:7C30			loc_1160:
020A:7C30  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:7C35  74 46				je	loc_1162		; Jump if equal
020A:7C37  57					push	di
020A:7C38  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7C3D  06					push	es
020A:7C3E  E8 F823				call	sub_105			; (7464)
020A:7C41  8B 3E 4E0B				mov	di,data_578		; (020A:4E0B=4B1h)
020A:7C45  26: 80 65 04 E0			and	byte ptr es:[di+4],0E0h
020A:7C4A  A0 47C3				mov	al,data_560		; (020A:47C3=0Eh)
020A:7C4D  26: 08 45 04				or	es:[di+4],al
020A:7C51  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7C56  9C					pushf				; Push flags
020A:7C57  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7C5C  5A					pop	dx
020A:7C5D  8E C2				mov	es,dx
020A:7C5F  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7C64  5A					pop	dx
020A:7C65  75 0A				jnz	loc_1161		; Jump if not zero
020A:7C67  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7C6C  74 03				je	loc_1161		; Jump if equal
020A:7C6E  E8 F74B				call	sub_103			; (73BC)
020A:7C71			loc_1161:
020A:7C71  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7C76  9D					popf				; Pop flags
020A:7C77  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7C7C  5F					pop	di
020A:7C7D			loc_1162:
020A:7C7D  5B					pop	bx
020A:7C7E  FE 06 47BF				inc	data_556		; (020A:47BF=0Ch)
020A:7C82  83 FF F8				cmp	di,0FFF8h
020A:7C85  77 21				ja	loc_1165		; Jump if above
020A:7C87  80 3E 4D4A 00			cmp	data_569,0		; (020A:4D4A=3Eh)
020A:7C8C  74 1D				je	loc_1166		; Jump if equal
020A:7C8E  FE 0E 4D4A				dec	data_569		; (020A:4D4A=3Eh)
020A:7C92  74 14				jz	loc_1165		; Jump if zero
020A:7C94  83 C7 02				add	di,2
020A:7C97  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7C9C  75 05				jnz	loc_1163		; Jump if not zero
020A:7C9E  F6 C7 10				test	bh,10h
020A:7CA1  74 03				jz	loc_1164		; Jump if zero
020A:7CA3			loc_1163:
020A:7CA3  83 C7 02				add	di,2
020A:7CA6			loc_1164:
020A:7CA6  EB 4A				jmp	short loc_1171		; (7CF2)
020A:7CA8			loc_1165:
020A:7CA8  E9 0087				jmp	loc_1173		; (7D32)
020A:7CAB			loc_1166:
020A:7CAB  A0 47C1				mov	al,data_558		; (020A:47C1=8Ah)
020A:7CAE  38 06 47BF				cmp	data_556,al		; (020A:47BF=0Ch)
020A:7CB2  72 02				jb	loc_1167		; Jump if below
020A:7CB4  EB 7C				jmp	short loc_1173		; (7D32)
020A:7CB6			loc_1167:
020A:7CB6  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7CBB  74 09				jz	loc_1168		; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 263

020A:7CBD  26: 83 7D 06 00			cmp	word ptr es:[di+6],0
020A:7CC2  74 0E				je	loc_1169		; Jump if equal
020A:7CC4  EB 6C				jmp	short loc_1173		; (7D32)
020A:7CC6			loc_1168:
020A:7CC6  F6 C7 10				test	bh,10h
020A:7CC9  74 0A				jz	loc_1170		; Jump if zero
020A:7CCB  26: 83 7D 06 00			cmp	word ptr es:[di+6],0
020A:7CD0  74 60				je	loc_1173		; Jump if equal
020A:7CD2			loc_1169:
020A:7CD2  83 C7 02				add	di,2
020A:7CD5			loc_1170:
020A:7CD5  83 C7 02				add	di,2
020A:7CD8  26: 83 3D 00				cmp	word ptr es:[di],0
020A:7CDC  74 54				je	loc_1173		; Jump if equal
020A:7CDE  F6 C7 10				test	bh,10h
020A:7CE1  75 0F				jnz	loc_1171		; Jump if not zero
020A:7CE3  26: 8B 05				mov	ax,es:[di]
020A:7CE6  3B 06 3058				cmp	ax,data_313		; (020A:3058=5352h)
020A:7CEA  72 46				jb	loc_1173		; Jump if below
020A:7CEC  3B 06 305A				cmp	ax,data_314		; (020A:305A=313Dh)
020A:7CF0  77 40				ja	loc_1173		; Jump if above
020A:7CF2			loc_1171:
020A:7CF2  A1 47BB				mov	ax,data_554		; (020A:47BB=260Ch)
020A:7CF5  A3 361A				mov	data_477,ax		; (020A:361A=69B9h)
020A:7CF8  A1 47BD				mov	ax,data_555		; (020A:47BD=5489h)
020A:7CFB  A3 3618				mov	data_476,ax		; (020A:3618=5F24h)
020A:7CFE  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
020A:7D01  A3 40E9				mov	data_518,ax		; (020A:40E9=0B432h)
020A:7D04  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7D09  9C					pushf				; Push flags
020A:7D0A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7D0F  5A					pop	dx
020A:7D10  8E C2				mov	es,dx
020A:7D12  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7D17  5A					pop	dx
020A:7D18  75 0A				jnz	loc_1172		; Jump if not zero
020A:7D1A  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7D1F  74 03				je	loc_1172		; Jump if equal
020A:7D21  E8 F698				call	sub_103			; (73BC)
020A:7D24			loc_1172:
020A:7D24  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7D29  9D					popf				; Pop flags
020A:7D2A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7D2F  E9 FC92				jmp	loc_1136		; (79C4)
020A:7D32			loc_1173:
020A:7D32  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7D37  9C					pushf				; Push flags
020A:7D38  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7D3D  5A					pop	dx
020A:7D3E  8E C2				mov	es,dx
020A:7D40  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7D45  5A					pop	dx
020A:7D46  75 0A				jnz	loc_1174		; Jump if not zero
020A:7D48  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7D4D  74 03				je	loc_1174		; Jump if equal
020A:7D4F  E8 F66A				call	sub_103			; (73BC)
020A:7D52			loc_1174:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 264

020A:7D52  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7D57  9D					popf				; Pop flags
020A:7D58  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7D5D			loc_1175:
020A:7D5D  A1 47B8				mov	ax,data_552		; (020A:47B8=8B26h)
020A:7D60  A3 40E9				mov	data_518,ax		; (020A:40E9=0B432h)
020A:7D63  A0 47BA				mov	al,data_553		; (020A:47BA=55h)
020A:7D66  A2 362B				mov	data_483,al		; (020A:362B=0EFh)
020A:7D69			loc_1176:
020A:7D69  80 3E 47BF 00			cmp	data_556,0		; (020A:47BF=0Ch)
020A:7D6E  74 76				je	loc_1183		; Jump if equal
020A:7D70  BD 2DAB				mov	bp,2DABh
020A:7D73  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:7D78  74 07				je	loc_1177		; Jump if equal
020A:7D7A  3E: 80 7E 00 3B			cmp	byte ptr ds:[bp],3Bh	; ';'
020A:7D7F  74 09				je	loc_1178		; Jump if equal
020A:7D81			loc_1177:
020A:7D81  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:7D86  45					inc	bp
020A:7D87  45					inc	bp
020A:7D88  EB 08				jmp	short loc_1179		; (7D92)
020A:7D8A			loc_1178:
020A:7D8A  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:7D8F  BD 2DC0				mov	bp,2DC0h
020A:7D92			loc_1179:
020A:7D92  A0 47BF				mov	al,data_556		; (020A:47BF=0Ch)
020A:7D95  32 E4				xor	ah,ah			; Zero register
020A:7D97  B3 00				mov	bl,0
020A:7D99  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:7D99  9A					db	9Ah
020A:7D9A  0288 14FC				dw	288h, 14FCh
020A:7D9E  45					inc	bp
020A:7D9F  3E: C7 46 00 6E65			mov	word ptr ds:[bp],6E65h
020A:7DA5  45					inc	bp
020A:7DA6  45					inc	bp
020A:7DA7  3E: C7 46 00 7274			mov	word ptr ds:[bp],7274h
020A:7DAD  45					inc	bp
020A:7DAE  45					inc	bp
020A:7DAF  80 3E 47BF 01			cmp	data_556,1		; (020A:47BF=0Ch)
020A:7DB4  74 0F				je	loc_1180		; Jump if equal
020A:7DB6  3E: C7 46 00 6569			mov	word ptr ds:[bp],6569h
020A:7DBC  45					inc	bp
020A:7DBD  45					inc	bp
020A:7DBE  3E: C6 46 00 73			mov	byte ptr ds:[bp],73h	; 's'
020A:7DC3  EB 05				jmp	short loc_1181		; (7DCA)
020A:7DC5			loc_1180:
020A:7DC5  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:7DCA			loc_1181:
020A:7DCA  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:7DCF  75 15				jne	loc_1183		; Jump if not equal
020A:7DD1  45					inc	bp
020A:7DD2  B9 40C2				mov	cx,40C2h
020A:7DD5  81 E9 40BB				sub	cx,40BBh
020A:7DD9  BF 40BB				mov	di,40BBh

020A:7DDC			locloop_1182:
020A:7DDC  8A 05				mov	al,[di]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 265

020A:7DDE  3E: 88 46 00				mov	ds:[bp],al
020A:7DE2  47					inc	di
020A:7DE3  45					inc	bp
020A:7DE4  E2 F6				loop	locloop_1182		; Loop if cx > 0

020A:7DE6			loc_1183:
020A:7DE6  A0 4D44				mov	al,byte ptr ds:[4D44h]	; (020A:4D44=0CEh)
020A:7DE9  A2 16AB				mov	data_166,al		; (020A:16AB=41h)
020A:7DEC			loc_1184:
020A:7DEC  C6 06 35DE 01			mov	data_449,1		; (020A:35DE=2Eh)
020A:7DF1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7DF6  9C					pushf				; Push flags
020A:7DF7  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7DFC  5A					pop	dx
020A:7DFD  8E C2				mov	es,dx
020A:7DFF  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7E04  5A					pop	dx
020A:7E05  75 0A				jnz	loc_1185		; Jump if not zero
020A:7E07  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7E0C  74 03				je	loc_1185		; Jump if equal
020A:7E0E  E8 F5AB				call	sub_103			; (73BC)
020A:7E11			loc_1185:
020A:7E11  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7E16  9D					popf				; Pop flags
020A:7E17  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7E1C  5D					pop	bp
020A:7E1D  5F					pop	di
020A:7E1E  5A					pop	dx
020A:7E1F  59					pop	cx
020A:7E20  C3					retn
				sub_109		endp

020A:7E21  87 DB				xchg	bx,bx
020A:7E23  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_110		proc	near
020A:7E24  53					push	bx
020A:7E25  52					push	dx
020A:7E26  57					push	di
020A:7E27  8B CF				mov	cx,di
020A:7E29  BF 0008				mov	di,8
020A:7E2C			loc_1186:
020A:7E2C  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:7E31  72 02				jb	loc_1187		; Jump if below
020A:7E33  EB 69				jmp	short loc_1195		; (7E9E)
020A:7E35			loc_1187:
020A:7E35  26: 8A 55 05				mov	dl,es:[di+5]
020A:7E39  80 E2 0C				and	dl,0Ch
020A:7E3C  80 FA 04				cmp	dl,4
020A:7E3F  75 56				jne	loc_1194		; Jump if not equal
020A:7E41  26: 8A 75 04				mov	dh,es:[di+4]
020A:7E45  80 E6 36				and	dh,36h			; '6'
020A:7E48  80 FE 10				cmp	dh,10h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 266

020A:7E4B  74 07				je	loc_1188		; Jump if equal
020A:7E4D  80 FE 12				cmp	dh,12h
020A:7E50  74 0B				je	loc_1189		; Jump if equal
020A:7E52  EB 12				jmp	short loc_1190		; (7E66)
020A:7E54			loc_1188:
020A:7E54  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:7E59  74 6C				je	loc_1198		; Jump if equal
020A:7E5B  EB 3A				jmp	short loc_1194		; (7E97)
020A:7E5D			loc_1189:
020A:7E5D  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:7E62  75 63				jne	loc_1198		; Jump if not equal
020A:7E64  EB 31				jmp	short loc_1194		; (7E97)
020A:7E66			loc_1190:
020A:7E66  26: 8A 75 04				mov	dh,es:[di+4]
020A:7E6A  80 E6 3F				and	dh,3Fh			; '?'
020A:7E6D  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:7E72  75 13				jnz	loc_1191		; Jump if not zero
020A:7E74  F6 06 47C0 01			test	data_557,1		; (020A:47C0=26h)
020A:7E79  74 11				jz	loc_1192		; Jump if zero
020A:7E7B  26: 83 7D 08 04			cmp	word ptr es:[di+8],4
020A:7E80  75 15				jne	loc_1194		; Jump if not equal
020A:7E82  80 FE 02				cmp	dh,2
020A:7E85  74 08				je	loc_1193		; Jump if equal
020A:7E87			loc_1191:
020A:7E87  80 FE 04				cmp	dh,4
020A:7E8A  EB 03				jmp	short loc_1193		; (7E8F)
020A:7E8C			loc_1192:
020A:7E8C  80 FE 02				cmp	dh,2
020A:7E8F			loc_1193:
020A:7E8F  75 06				jne	loc_1194		; Jump if not equal
020A:7E91  26: 39 4D 02				cmp	es:[di+2],cx
020A:7E95  74 30				je	loc_1198		; Jump if equal
020A:7E97			loc_1194:
020A:7E97  26: 39 05				cmp	es:[di],ax
020A:7E9A  72 2B				jb	loc_1198		; Jump if below
020A:7E9C  74 05				jz	loc_1196		; Jump if zero
020A:7E9E			loc_1195:
020A:7E9E  B8 FFFF				mov	ax,0FFFFh
020A:7EA1  EB 40				jmp	short loc_1200		; (7EE3)
020A:7EA3			loc_1196:
020A:7EA3  26: 39 4D 02				cmp	es:[di+2],cx
020A:7EA7  72 1E				jb	loc_1198		; Jump if below
020A:7EA9  80 FA 00				cmp	dl,0
020A:7EAC  75 13				jne	loc_1197		; Jump if not equal
020A:7EAE  26: 8A 5D 04				mov	bl,es:[di+4]
020A:7EB2  80 E3 5F				and	bl,5Fh			; '_'
020A:7EB5  80 FB 5F				cmp	bl,5Fh			; '_'
020A:7EB8  75 07				jne	loc_1197		; Jump if not equal
020A:7EBA  26: F6 45 05 03			test	byte ptr es:[di+5],3
020A:7EBF  74 06				jz	loc_1198		; Jump if zero
020A:7EC1			loc_1197:
020A:7EC1  26: 8B 45 02				mov	ax,es:[di+2]
020A:7EC5  EB 1C				jmp	short loc_1200		; (7EE3)
020A:7EC7			loc_1198:
020A:7EC7  50					push	ax
020A:7EC8  26: 8A 45 05				mov	al,es:[di+5]
020A:7ECC  25 000F				and	ax,0Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 267

020A:7ECF  53					push	bx
020A:7ED0  BB 40C2				mov	bx,40C2h
020A:7ED3  D7					xlat				; al=[al+[bx]] table
020A:7ED4  5B					pop	bx
020A:7ED5  0A C0				or	al,al			; Zero ?
020A:7ED7  75 04				jnz	loc_1199		; Jump if not zero
020A:7ED9  26: 8A 45 06				mov	al,es:[di+6]
020A:7EDD			loc_1199:
020A:7EDD  03 F8				add	di,ax
020A:7EDF  58					pop	ax
020A:7EE0  E9 FF49				jmp	loc_1186		; (7E2C)
020A:7EE3			loc_1200:
020A:7EE3  5F					pop	di
020A:7EE4  5A					pop	dx
020A:7EE5  5B					pop	bx
020A:7EE6  C3					retn
				sub_110		endp

020A:7EE7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_111		proc	near
020A:7EE8  56					push	si
020A:7EE9  57					push	di
020A:7EEA  51					push	cx
020A:7EEB  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7EF0  06					push	es
020A:7EF1  26: 8A 45 04				mov	al,es:[di+4]
020A:7EF5  24 1F				and	al,1Fh
020A:7EF7  3C 1F				cmp	al,1Fh
020A:7EF9  74 17				je	loc_1201		; Jump if equal
020A:7EFB  FE C8				dec	al
020A:7EFD  B4 2C				mov	ah,2Ch			; ','
020A:7EFF  F6 E4				mul	ah			; ax = reg * al
020A:7F01  BE 47C8				mov	si,47C8h
020A:7F04  03 F0				add	si,ax
020A:7F06  BF 35FA				mov	di,35FAh
020A:7F09  B9 0028				mov	cx,28h
020A:7F0C  E8 F14E				call	sub_95			; (705D)
020A:7F0F  FC					cld				; Clear direction
020A:7F10  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7F12			loc_1201:
020A:7F12  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7F17  9C					pushf				; Push flags
020A:7F18  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7F1D  5A					pop	dx
020A:7F1E  8E C2				mov	es,dx
020A:7F20  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:7F25  5A					pop	dx
020A:7F26  75 0A				jnz	loc_1202		; Jump if not zero
020A:7F28  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:7F2D  74 03				je	loc_1202		; Jump if equal
020A:7F2F  E8 F48A				call	sub_103			; (73BC)
020A:7F32			loc_1202:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 268

020A:7F32  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7F37  9D					popf				; Pop flags
020A:7F38  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7F3D  59					pop	cx
020A:7F3E  5F					pop	di
020A:7F3F  5E					pop	si
020A:7F40  C3					retn
				sub_111		endp

020A:7F41  87 DB				xchg	bx,bx
020A:7F43  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_112		proc	near
020A:7F44  F7 06 4E22 0040			test	data_591,40h		; (020A:4E22=0EDA3h)
020A:7F4A  75 34				jnz	loc_1204		; Jump if not zero
020A:7F4C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:7F51  74 25				je	loc_1203		; Jump if equal
020A:7F53  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:7F58  75 26				jne	loc_1204		; Jump if not equal
020A:7F5A  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:7F5F  75 1F				jne	loc_1204		; Jump if not equal
020A:7F61  26: 83 7C 04 01			cmp	word ptr es:[si+4],1
020A:7F66  75 18				jne	loc_1204		; Jump if not equal
020A:7F68  26: 83 7C 02 43			cmp	word ptr es:[si+2],43h
020A:7F6D  74 14				je	loc_1205		; Jump if equal
020A:7F6F  26: 83 7C 02 45			cmp	word ptr es:[si+2],45h
020A:7F74  75 0A				jne	loc_1204		; Jump if not equal
020A:7F76  EB 0B				jmp	short loc_1205		; (7F83)
020A:7F78			loc_1203:
020A:7F78  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (020A:35FA=3C3Bh)
020A:7F7B  80 FC 25				cmp	ah,25h			; '%'
020A:7F7E  74 03				je	loc_1205		; Jump if equal
020A:7F80			loc_1204:
020A:7F80  E9 0188				jmp	loc_1223		; (810B)
020A:7F83			loc_1205:
020A:7F83  53					push	bx
020A:7F84  51					push	cx
020A:7F85  52					push	dx
020A:7F86  57					push	di
020A:7F87  56					push	si
020A:7F88  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:7F8D  06					push	es
020A:7F8E  8B 1E 361A				mov	bx,data_477		; (020A:361A=69B9h)
020A:7F92  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:7F97  75 12				jne	loc_1206		; Jump if not equal
020A:7F99  8B 1E 3602				mov	bx,data_470		; (020A:3602=1B3Ch)
020A:7F9D  A1 3608				mov	ax,data_472		; (020A:3608=3C16h)
020A:7FA0  3D 0006				cmp	ax,6
020A:7FA3  77 06				ja	loc_1206		; Jump if above
020A:7FA5  B1 0C				mov	cl,0Ch
020A:7FA7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:7FA9  03 D8				add	bx,ax
020A:7FAB			loc_1206:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 269

020A:7FAB  A1 3606				mov	ax,data_471		; (020A:3606=1CE9h)
020A:7FAE  3D 0000				cmp	ax,0
020A:7FB1  75 15				jne	loc_1209		; Jump if not equal
020A:7FB3  83 FB 00				cmp	bx,0
020A:7FB6  75 03				jne	loc_1208		; Jump if not equal
020A:7FB8			loc_1207:
020A:7FB8  E9 0120				jmp	loc_1221		; (80DB)
020A:7FBB			loc_1208:
020A:7FBB  3B 1E 3033				cmp	bx,data_290		; (020A:3033=5C3Dh)
020A:7FBF  75 07				jne	loc_1209		; Jump if not equal
020A:7FC1  80 3E 327F 05			cmp	byte ptr ds:[327Fh],5	; (020A:327F=0)
020A:7FC6  74 F0				je	loc_1207		; Jump if equal
020A:7FC8			loc_1209:
020A:7FC8  89 1E 40F9				mov	data_525,bx		; (020A:40F9=462Bh)
020A:7FCC  A3 40FB				mov	data_526,ax		; (020A:40FB=744Bh)
020A:7FCF  BF 40F9				mov	di,40F9h
020A:7FD2  E8 F088				call	sub_95			; (705D)
020A:7FD5  E8 2980				call	sub_127			; (A958)
020A:7FD8  72 03				jc	loc_1210		; Jump if carry Set
020A:7FDA  E9 00FE				jmp	loc_1221		; (80DB)
020A:7FDD			loc_1210:
020A:7FDD  A1 3606				mov	ax,data_471		; (020A:3606=1CE9h)
020A:7FE0  BA 0001				mov	dx,1
020A:7FE3  E8 DEA6				call	sub_76			; (5E8C)
020A:7FE6  72 05				jc	loc_1212		; Jump if carry Set
020A:7FE8  EB 44				jmp	short loc_1213		; (802E)
020A:7FEA			loc_1211:
020A:7FEA  E9 00EE				jmp	loc_1221		; (80DB)
020A:7FED			loc_1212:
020A:7FED  26: 80 4D 05 30			or	byte ptr es:[di+5],30h	; '0'
020A:7FF2  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (020A:2B36=3Ah)
020A:7FF7  72 F1				jb	loc_1211		; Jump if below
020A:7FF9  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:7FFE  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:7FFE  9A					db	9Ah
020A:7FFF  55E4 14FC				dw	55E4h, 14FCh
020A:8003  72 E5				jc	loc_1211		; Jump if carry Set
020A:8005  57					push	di
020A:8006  8B F7				mov	si,di
020A:8008  BF 532E				mov	di,532Eh
020A:800B  B9 007F				mov	cx,7Fh
020A:800E  8C C0				mov	ax,es
020A:8010  1E					push	ds
020A:8011  07					pop	es
020A:8012  8E D8				mov	ds,ax
020A:8014  FC					cld				; Clear direction
020A:8015  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8017  8C C0				mov	ax,es
020A:8019  1E					push	ds
020A:801A  07					pop	es
020A:801B  8E D8				mov	ds,ax
020A:801D  5E					pop	si
020A:801E  E8 0667				call	sub_115			; (8688)
020A:8021  BF 532E				mov	di,532Eh
020A:8024  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:8028  80 4D 05 02				or	byte ptr [di+5],2
020A:802C  EB 49				jmp	short loc_1218		; (8077)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 270

020A:802E			loc_1213:
020A:802E  3D FFF0				cmp	ax,0FFF0h
020A:8031  74 1F				je	loc_1216		; Jump if equal
020A:8033  8E C3				mov	es,bx
020A:8035  8B F0				mov	si,ax
020A:8037  26: 83 3C 00				cmp	word ptr es:[si],0
020A:803B  74 12				je	loc_1215		; Jump if equal
020A:803D  B9 000A				mov	cx,0Ah

020A:8040			locloop_1214:
020A:8040  26: 80 3C 20				cmp	byte ptr es:[si],20h	; ' '
020A:8044  72 09				jb	loc_1215		; Jump if below
020A:8046  26: 80 3C 7E				cmp	byte ptr es:[si],7Eh	; '~'
020A:804A  77 03				ja	loc_1215		; Jump if above
020A:804C  46					inc	si
020A:804D  E2 F1				loop	locloop_1214		; Loop if cx > 0

020A:804F			loc_1215:
020A:804F  E9 0089				jmp	loc_1221		; (80DB)
020A:8052			loc_1216:
020A:8052  BF 532E				mov	di,532Eh
020A:8055  89 1D				mov	[di],bx
020A:8057  89 45 02				mov	[di+2],ax
020A:805A  B0 40				mov	al,40h			; '@'
020A:805C  80 3E 2B3B 06			cmp	data_242,6		; (020A:2B3B=55h)
020A:8061  72 09				jb	loc_1217		; Jump if below
020A:8063  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (020A:2B36=3Ah)
020A:8068  73 02				jae	loc_1217		; Jump if above or =
020A:806A  B0 00				mov	al,0
020A:806C			loc_1217:
020A:806C  88 45 04				mov	[di+4],al
020A:806F  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020A:8073  C6 45 06 00				mov	byte ptr [di+6],0
020A:8077			loc_1218:
020A:8077  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (020A:35FA=3C3Bh)
020A:807A  BD 3B5C				mov	bp,3B5Ch
020A:807D  9A 14FC:00D4		;*		call	far ptr sub_151		;*(14FC:00D4)
020A:807D  9A					db	9Ah
020A:807E  00D4 14FC				dw	0D4h, 14FCh
020A:8082  BD 3B58				mov	bp,3B58h
020A:8085  83 C7 07				add	di,7
020A:8088  B9 3B67				mov	cx,3B67h
020A:808B  81 E9 3B58				sub	cx,3B58h
020A:808F  9A 14FC:44C0		;*		call	far ptr sub_208		;*(14FC:44C0)
020A:808F  9A					db	9Ah
020A:8090  44C0 14FC				dw	44C0h, 14FCh
020A:8094  3C 00				cmp	al,0
020A:8096  74 1B				je	locloop_1219		; Jump if equal
020A:8098  55					push	bp
020A:8099  53					push	bx
020A:809A  BD 3B63				mov	bp,3B63h
020A:809D  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:80A2  45					inc	bp
020A:80A3  32 E4				xor	ah,ah			; Zero register
020A:80A5  33 DB				xor	bx,bx			; Zero register
020A:80A7  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:80A7  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 271

020A:80A8  0288 14FC				dw	288h, 14FCh
020A:80AC  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:80B1  5B					pop	bx
020A:80B2  5D					pop	bp

020A:80B3			locloop_1219:
020A:80B3  3E: 8A 46 00				mov	al,ds:[bp]
020A:80B7  88 05				mov	[di],al
020A:80B9  45					inc	bp
020A:80BA  47					inc	di
020A:80BB  E2 F6				loop	locloop_1219		; Loop if cx > 0

020A:80BD  E8 03E0				call	sub_114			; (84A0)
020A:80C0  BD 3B63				mov	bp,3B63h
020A:80C3  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
020A:80C8  45					inc	bp
020A:80C9  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:80CE  45					inc	bp
020A:80CF			loc_1220:
020A:80CF  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:80D4  45					inc	bp
020A:80D5  81 FD 3B67				cmp	bp,3B67h
020A:80D9  72 F4				jb	loc_1220		; Jump if below
020A:80DB			loc_1221:
020A:80DB  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:80E0  9C					pushf				; Push flags
020A:80E1  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:80E6  5A					pop	dx
020A:80E7  8E C2				mov	es,dx
020A:80E9  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:80EE  5A					pop	dx
020A:80EF  75 0A				jnz	loc_1222		; Jump if not zero
020A:80F1  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:80F6  74 03				je	loc_1222		; Jump if equal
020A:80F8  E8 F2C1				call	sub_103			; (73BC)
020A:80FB			loc_1222:
020A:80FB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8100  9D					popf				; Pop flags
020A:8101  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8106  5E					pop	si
020A:8107  5F					pop	di
020A:8108  5A					pop	dx
020A:8109  59					pop	cx
020A:810A  5B					pop	bx
020A:810B			loc_1223:
020A:810B  C3					retn
				sub_112		endp

							                        ;* No entry point to code
020A:810C  8B F7				mov	si,di
020A:810E  E8 0577				call	sub_115			; (8688)
020A:8111  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:8115  BA 0001				mov	dx,1
020A:8118  A8 02				test	al,2
020A:811A  75 03				jnz	loc_1224		; Jump if not zero
020A:811C  BA 0004				mov	dx,4
020A:811F			loc_1224:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 272

020A:811F  06					push	es
020A:8120  8E 06 344A				mov	es,data_401		; (020A:344A=0CD01h)
020A:8124  8B 3E 344C				mov	di,data_402		; (020A:344C=6C6h)
020A:8128  A8 01				test	al,1
020A:812A  74 04				jz	loc_1225		; Jump if zero
020A:812C  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8130			loc_1225:
020A:8130  26: 8B 05				mov	ax,es:[di]
020A:8133  07					pop	es
020A:8134  E8 DD55				call	sub_76			; (5E8C)
020A:8137  73 0F				jnc	loc_1226		; Jump if carry=0
020A:8139  8B F7				mov	si,di
020A:813B  E8 054A				call	sub_115			; (8688)
020A:813E  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:8141  40					inc	ax
020A:8142  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=638h)
020A:8145  A3 4E8B				mov	data_638,ax		; (020A:4E8B=3E80h)
020A:8148			loc_1226:
020A:8148  C3					retn
							                        ;* No entry point to code
020A:8149  50					push	ax
020A:814A  4E					dec	si
020A:814B  5D					pop	bp
020A:814C  4E					dec	si
020A:814D  6A					db	6Ah
020A:814E  4E					dec	si
020A:814F  79 4E				jns	loc_1228		; Jump if not sign
020A:8151  88 4E B2				mov	[bp-4Eh],cl
020A:8154  4E					dec	si
020A:8155  D7					xlat				; al=[al+[bx]] table
020A:8156  4E					dec	si
020A:8157  0F			;*		pop	cs			; Dangerous-8088 only
020A:8157  0F					db	0Fh
020A:8158  4F					dec	di
020A:8159  41					inc	cx
020A:815A  4F					dec	di
020A:815B  41					inc	cx
020A:815C  4F					dec	di
020A:815D  41					inc	cx
020A:815E  4F					dec	di
020A:815F  4F					dec	di
020A:8160  E94F			data_717	dw	0E94Fh
020A:8162  50					push	ax
020A:8163  E9 E950				jmp	$-16ADh
020A:8166  50					push	ax
020A:8167  E9 6B50				jmp	$+6B53h
							                        ;* No entry point to code
020A:816A  4F					dec	di
020A:816B  6B					db	6Bh
020A:816C  4F					dec	di
020A:816D  6B					db	6Bh
020A:816E  4F					dec	di
020A:816F  6B					db	6Bh
020A:8170  4F					dec	di
020A:8171  E9 E950		;*		jmp	loc_926			;*(6AC4)
020A:8171  E9 50 E9				db	0E9h, 50h,0E9h
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 273

020A:8174  50					push	ax
020A:8175  1E					push	ds
020A:8176  50					push	ax
020A:8177  26					db	26h
020A:8178  50					push	ax
020A:8179  41					inc	cx
020A:817A  50					push	ax
020A:817B  49					dec	cx
020A:817C  50					push	ax
020A:817D  51					push	cx
020A:817E  50					push	ax
020A:817F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_113		proc	near
020A:8180  50					push	ax
020A:8181  53					push	bx
020A:8182  57					push	di
020A:8183  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:8188  06					push	es
020A:8189  26: 8A 45 05				mov	al,es:[di+5]
020A:818D  24 0F				and	al,0Fh
020A:818F  75 03				jnz	loc_1227		; Jump if not zero
020A:8191  E9 02D5				jmp	loc_1252		; (8469)
020A:8194			loc_1227:
020A:8194  B0 2E				mov	al,2Eh			; '.'
020A:8196  26: 80 7D 08 3F			cmp	byte ptr es:[di+8],3Fh	; '?'
020A:819B  74 0C				je	loc_1229		; Jump if equal
020A:819D  B0 FA				mov	al,0FAh
020A:819F			loc_1228:
020A:819F  F7 06 4E24 0080			test	data_592,80h		; (020A:4E24=0A107h)
020A:81A5  74 02				jz	loc_1229		; Jump if zero
020A:81A7  B0 2C				mov	al,2Ch			; ','
020A:81A9			loc_1229:
020A:81A9  A2 2D25				mov	data_271,al		; (020A:2D25=3Dh)
020A:81AC  80 3E 35E3 00			cmp	data_453,0		; (020A:35E3=1)
020A:81B1  74 03				je	loc_1230		; Jump if equal
020A:81B3  A2 2D3A				mov	byte ptr data_272,al	; (020A:2D3A='\PROGRA 1')
020A:81B6			loc_1230:
020A:81B6  26: 8A 45 09				mov	al,es:[di+9]
020A:81BA  3C 20				cmp	al,20h			; ' '
020A:81BC  76 03				jbe	loc_1231		; Jump if below or =
020A:81BE  E9 0234				jmp	loc_1244		; (83F5)
020A:81C1			loc_1231:
020A:81C1  8A D8				mov	bl,al
020A:81C3  32 FF				xor	bh,bh			; Zero register
020A:81C5  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:81C7  81 C3 4DC9				add	bx,4DC9h
020A:81CB  2E: 8B 1F				mov	bx,cs:[bx]
020A:81CE  FF E3				jmp	bx			;*
							                        ;* No entry point to code
020A:81D0  C6 06 3459 00			mov	data_409,0		; (020A:3459=21h)
020A:81D5  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0C6h)
020A:81DA  E9 028C				jmp	loc_1252		; (8469)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 274

							                        ;* No entry point to code
020A:81DD  C6 06 3459 05			mov	data_409,5		; (020A:3459=21h)
020A:81E2  C6 06 5709 04			mov	data_672,4		; (020A:5709=16h)
020A:81E7  E9 027F				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:81EA  F6 06 35A0 05			test	byte ptr ds:[35A0h],5	; (020A:35A0=1)
020A:81EF  74 05				jz	loc_1232		; Jump if zero
020A:81F1  C6 06 4D4C 01			mov	data_571,1		; (020A:4D4C=35h)
020A:81F6			loc_1232:
020A:81F6  E9 0270				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:81F9  9A 14FC:3A47		;*		call	far ptr sub_197		;*(14FC:3A47)
020A:81F9  9A					db	9Ah
020A:81FA  3A47 14FC				dw	3A47h, 14FCh
020A:81FE  B0 03				mov	al,3
020A:8200  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:8200  9A					db	9Ah
020A:8201  2280 14FC				dw	2280h, 14FCh
020A:8205  E9 0261				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:8208  C6 06 3459 00			mov	data_409,0		; (020A:3459=21h)
020A:820D  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0C6h)
020A:8212  F6 06 35EE 04			test	data_461,4		; (020A:35EE=0B4h)
020A:8217  74 16				jz	loc_1233		; Jump if zero
020A:8219  80 26 35EE CF			and	data_461,0CFh		; (020A:35EE=0B4h)
020A:821E  80 26 35EE FC			and	data_461,0FCh		; (020A:35EE=0B4h)
020A:8223  80 26 35EE FB			and	data_461,0FBh		; (020A:35EE=0B4h)
020A:8228  B0 42				mov	al,42h			; 'B'
020A:822A  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:822A  9A					db	9Ah
020A:822B  2280 14FC				dw	2280h, 14FCh
020A:822F			loc_1233:
020A:822F  E9 0237				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:8232  C6 06 3459 00			mov	data_409,0		; (020A:3459=21h)
020A:8237  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0C6h)
020A:823C  F6 06 35EE 04			test	data_461,4		; (020A:35EE=0B4h)
020A:8241  75 11				jnz	loc_1234		; Jump if not zero
020A:8243  80 0E 35EE 04			or	data_461,4		; (020A:35EE=0B4h)
020A:8248  80 0E 35EE 03			or	data_461,3		; (020A:35EE=0B4h)
020A:824D  B0 41				mov	al,41h			; 'A'
020A:824F  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:824F  9A					db	9Ah
020A:8250  2280 14FC				dw	2280h, 14FCh
020A:8254			loc_1234:
020A:8254  E9 0212				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:8257  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:825B  09 06 4E22				or	data_591,ax		; (020A:4E22=0EDA3h)
020A:825F  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:8263  32 E4				xor	ah,ah			; Zero register
020A:8265  09 06 4E24				or	data_592,ax		; (020A:4E24=0A107h)
020A:8269  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020A:826D  21 06 4E22				and	data_591,ax		; (020A:4E22=0EDA3h)
020A:8271  26: 8A 45 0F				mov	al,es:[di+0Fh]
020A:8275  B4 FF				mov	ah,0FFh
020A:8277  21 06 4E24				and	data_592,ax		; (020A:4E24=0A107h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 275

020A:827B  B0 00				mov	al,0
020A:827D  F7 06 4E22 0002			test	data_591,2		; (020A:4E22=0EDA3h)
020A:8283  74 02				jz	loc_1235		; Jump if zero
020A:8285  B0 01				mov	al,1
020A:8287			loc_1235:
020A:8287  9A 14FC:45B8		;*		call	far ptr sub_212		;*(14FC:45B8)
020A:8287  9A					db	9Ah
020A:8288  45B8 14FC				dw	45B8h, 14FCh
020A:828C  E9 01DA				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:828F  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:8293  A3 361A				mov	data_477,ax		; (020A:361A=69B9h)
020A:8296  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:829A  A3 3618				mov	data_476,ax		; (020A:3618=5F24h)
020A:829D  26: 8B 45 0E				mov	ax,es:[di+0Eh]
020A:82A1  A3 35FA				mov	word ptr ds:[35FAh],ax	; (020A:35FA=3C3Bh)
020A:82A4  26: 8B 45 10				mov	ax,es:[di+10h]
020A:82A8  A3 35FE				mov	word ptr ds:[35FEh],ax	; (020A:35FE=0E903h)
020A:82AB  26: 8B 45 12				mov	ax,es:[di+12h]
020A:82AF  A3 360A				mov	data_473,ax		; (020A:360A=752Bh)
020A:82B2  26: 8B 45 14				mov	ax,es:[di+14h]
020A:82B6  A3 360E				mov	data_474,ax		; (020A:360E=19B5h)
020A:82B9  C6 06 35DD 05			mov	data_448,5		; (020A:35DD=3Ah)
020A:82BE  E9 01A8				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:82C1  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:82C5  89 1E 4E02				mov	word ptr ds:[4E02h],bx	; (020A:4E02=0BAFFh)
020A:82C9  A2 4E04				mov	byte ptr ds:[4E04h],al	; (020A:4E04=27h)
020A:82CC  E9 019A				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:82CF  F7 06 4E22 4000			test	data_591,4000h		; (020A:4E22=0EDA3h)
020A:82D5  75 0C				jnz	loc_1236		; Jump if not zero
020A:82D7  81 0E 4E22 4000			or	data_591,4000h		; (020A:4E22=0EDA3h)
020A:82DD  C7 06 4E20 BFFF			mov	word ptr ds:[4E20h],0BFFFh	; (020A:4E20=699h)
020A:82E3			loc_1236:
020A:82E3  C6 06 345D 00			mov	data_412,0		; (020A:345D=5)
020A:82E8  E9 017E				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:82EB  FF 36 40F7				push	data_524		; (020A:40F7=7545h)
020A:82EF  FF 36 40E9				push	data_518		; (020A:40E9=0B432h)
020A:82F3  FF 36 30C9				push	word ptr ds:[30C9h]	; (020A:30C9=562Eh)
020A:82F7  C6 06 4D49 01			mov	data_568,1		; (020A:4D49=80h)
020A:82FC  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:8300  A3 40F7				mov	data_524,ax		; (020A:40F7=7545h)
020A:8303  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:8307  A3 40E9				mov	data_518,ax		; (020A:40E9=0B432h)
020A:830A  26: 8A 45 0E				mov	al,es:[di+0Eh]
020A:830E  A2 4D4A				mov	data_569,al		; (020A:4D4A=3Eh)
020A:8311  26: 8A 45 09				mov	al,es:[di+9]
020A:8315  B7 20				mov	bh,20h			; ' '
020A:8317  A8 01				test	al,1
020A:8319  74 03				jz	loc_1237		; Jump if zero
020A:831B  80 CF 10				or	bh,10h
020A:831E			loc_1237:
020A:831E  C6 06 309E 00			mov	data_346,0		; (020A:309E=65h)
020A:8323  3C 11				cmp	al,11h
020A:8325  77 05				ja	loc_1238		; Jump if above
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 276

020A:8327  C6 06 309E 4F			mov	data_346,4Fh		; (020A:309E=65h) 'O'
020A:832C			loc_1238:
020A:832C  B2 00				mov	dl,0
020A:832E  E8 ED2C				call	sub_95			; (705D)
020A:8331  BE 4D46				mov	si,4D46h
020A:8334  E8 F3E9				call	sub_109			; (7720)
020A:8337  C6 06 4D49 02			mov	data_568,2		; (020A:4D49=80h)
020A:833C  C6 06 4D4A 00			mov	data_569,0		; (020A:4D4A=3Eh)
020A:8341  C6 06 309E 00			mov	data_346,0		; (020A:309E=65h)
020A:8346  8F 06 30C9				pop	word ptr ds:[30C9h]	; (020A:30C9=562Eh)
020A:834A  8F 06 40E9				pop	data_518		; (020A:40E9=0B432h)
020A:834E  8F 06 40F7				pop	data_524		; (020A:40F7=7545h)
020A:8352  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8357  9C					pushf				; Push flags
020A:8358  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:835D  5A					pop	dx
020A:835E  8E C2				mov	es,dx
020A:8360  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:8365  5A					pop	dx
020A:8366  75 0A				jnz	loc_1239		; Jump if not zero
020A:8368  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:836D  74 03				je	loc_1239		; Jump if equal
020A:836F  E8 F04A				call	sub_103			; (73BC)
020A:8372			loc_1239:
020A:8372  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8377  9D					popf				; Pop flags
020A:8378  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:837D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:8382  06					push	es
020A:8383  BA 0001				mov	dx,1
020A:8386  26: 8A 45 09				mov	al,es:[di+9]
020A:838A  3C 11				cmp	al,11h
020A:838C  77 03				ja	loc_1240		; Jump if above
020A:838E  BA 0004				mov	dx,4
020A:8391			loc_1240:
020A:8391  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:8394  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:8398  E8 DAF1				call	sub_76			; (5E8C)
020A:839B  E9 00CB				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:839E  9A 14FC:3BC0		;*		call	far ptr sub_199		;*(14FC:3BC0)
020A:839E  9A					db	9Ah
020A:839F  3BC0 14FC				dw	3BC0h, 14FCh
020A:83A3  E9 00C3				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
020A:83A6  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:83AB  75 11				jne	loc_1241		; Jump if not equal
020A:83AD  26: 8A 45 06				mov	al,es:[di+6]
020A:83B1  B4 13				mov	ah,13h
020A:83B3  BB 0007				mov	bx,7
020A:83B6  BE 43A3				mov	si,43A3h
020A:83B9  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:83B9  9A					db	9Ah
020A:83BA  42AC 14FC				dw	42ACh, 14FCh
020A:83BE			loc_1241:
020A:83BE  E9 00A8				jmp	loc_1252		; (8469)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 277

020A:83C1  9A 14FC:5614		;*		call	far ptr sub_225		;*(14FC:5614)
020A:83C1  9A					db	9Ah
020A:83C2  5614 14FC				dw	5614h, 14FCh
020A:83C6  E9 00A1				jmp	loc_1253		; (846A)
							                        ;* No entry point to code
020A:83C9  C7 06 2CCA 0000			mov	data_269,0		; (020A:2CCA=4954h)
020A:83CF  EB 06				jmp	short loc_1242		; (83D7)
							                        ;* No entry point to code
020A:83D1  C7 06 2CCA FFFF			mov	data_269,0FFFFh		; (020A:2CCA=4954h)
020A:83D7			loc_1242:
020A:83D7  80 3E 2B37 02			cmp	data_239,2		; (020A:2B37=5Ch)
020A:83DC  75 05				jne	loc_1243		; Jump if not equal
020A:83DE  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:83E3			loc_1243:
020A:83E3  C6 06 4E17 01			mov	data_586,1		; (020A:4E17=3Ch)
020A:83E8  BD 2DAB				mov	bp,2DABh
020A:83EB  BE 4061				mov	si,4061h
020A:83EE  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:83EE  9A					db	9Ah
020A:83EF  4160 14FC				dw	4160h, 14FCh
020A:83F3  EB 74				jmp	short loc_1252		; (8469)
020A:83F5			loc_1244:
020A:83F5  3C 40				cmp	al,40h			; '@'
020A:83F7  72 14				jb	loc_1245		; Jump if below
020A:83F9  3C 44				cmp	al,44h			; 'D'
020A:83FB  76 12				jbe	loc_1246		; Jump if below or =
020A:83FD  3C 80				cmp	al,80h
020A:83FF  72 0C				jb	loc_1245		; Jump if below
020A:8401  3C 8C				cmp	al,8Ch
020A:8403  76 1F				jbe	loc_1248		; Jump if below or =
020A:8405  3C 90				cmp	al,90h
020A:8407  72 04				jb	loc_1245		; Jump if below
020A:8409  3C 96				cmp	al,96h
020A:840B  76 42				jbe	loc_1251		; Jump if below or =
020A:840D			loc_1245:
020A:840D  EB 5A				jmp	short loc_1252		; (8469)
020A:840F			loc_1246:
020A:840F  F7 06 4E22 4000			test	data_591,4000h		; (020A:4E22=0EDA3h)
020A:8415  75 0B				jnz	loc_1247		; Jump if not zero
020A:8417  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:841B  89 1E 345E				mov	data_413,bx		; (020A:345E=4)
020A:841F  A2 345D				mov	data_412,al		; (020A:345D=5)
020A:8422			loc_1247:
020A:8422  EB 45				jmp	short loc_1252		; (8469)
020A:8424			loc_1248:
020A:8424  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:8428  BE 35FA				mov	si,35FAh
020A:842B  24 0F				and	al,0Fh
020A:842D  3C 07				cmp	al,7
020A:842F  72 12				jb	loc_1249		; Jump if below
020A:8431  BE 3616				mov	si,3616h
020A:8434  2C 07				sub	al,7
020A:8436  74 0D				jz	loc_1250		; Jump if zero
020A:8438  3C 02				cmp	al,2
020A:843A  77 09				ja	loc_1250		; Jump if above
020A:843C  C6 06 35DD 03			mov	data_448,3		; (020A:35DD=3Ah)
020A:8441  EB 02				jmp	short loc_1250		; (8445)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 278

020A:8443			loc_1249:
020A:8443  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8445			loc_1250:
020A:8445  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8447  32 E4				xor	ah,ah			; Zero register
020A:8449  03 F0				add	si,ax
020A:844B  89 1C				mov	[si],bx
020A:844D  EB 1A				jmp	short loc_1252		; (8469)
020A:844F			loc_1251:
020A:844F  2C 90				sub	al,90h
020A:8451  32 E4				xor	ah,ah			; Zero register
020A:8453  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:8455  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:8457  BE 35FA				mov	si,35FAh
020A:845A  03 F0				add	si,ax
020A:845C  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:8460  89 1C				mov	[si],bx
020A:8462  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020A:8466  89 5C 02				mov	[si+2],bx
020A:8469			loc_1252:
020A:8469  F8					clc				; Clear carry flag
020A:846A			loc_1253:
020A:846A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:846F  9C					pushf				; Push flags
020A:8470  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8475  5A					pop	dx
020A:8476  8E C2				mov	es,dx
020A:8478  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:847D  5A					pop	dx
020A:847E  75 0A				jnz	loc_1254		; Jump if not zero
020A:8480  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:8485  74 03				je	loc_1254		; Jump if equal
020A:8487  E8 EF32				call	sub_103			; (73BC)
020A:848A			loc_1254:
020A:848A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:848F  9D					popf				; Pop flags
020A:8490  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8495  5F					pop	di
020A:8496  5B					pop	bx
020A:8497  58					pop	ax
020A:8498  C3					retn
				sub_113		endp

020A:8499  0007[00]				db	7 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_114		proc	near
020A:84A0  50					push	ax
020A:84A1  53					push	bx
020A:84A2  51					push	cx
020A:84A3  52					push	dx
020A:84A4  56					push	si
020A:84A5  57					push	di
020A:84A6  55					push	bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 279

020A:84A7  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:84AC  1E					push	ds
020A:84AD  E8 EB95				call	sub_91			; (7045)
020A:84B0  BD 40C2				mov	bp,40C2h
020A:84B3  BE 532E				mov	si,532Eh
020A:84B6  8B 1C				mov	bx,[si]
020A:84B8  8A 44 05				mov	al,[si+5]
020A:84BB  24 0C				and	al,0Ch
020A:84BD  3C 08				cmp	al,8
020A:84BF  74 53				je	loc_1259		; Jump if equal
020A:84C1  3C 04				cmp	al,4
020A:84C3  74 0A				je	loc_1255		; Jump if equal
020A:84C5  3C 00				cmp	al,0
020A:84C7  74 15				je	loc_1256		; Jump if equal
020A:84C9  BB 0001				mov	bx,1
020A:84CC  E9 E609				jmp	loc_927			; (6AD8)
020A:84CF			loc_1255:
020A:84CF  E8 EF1E				call	sub_104			; (73F0)
020A:84D2  83 06 3084 01			add	data_334,1		; (020A:3084=3A43h)
020A:84D7  83 16 3086 00			adc	data_335,0		; (020A:3086=575Ch)
020A:84DC  EB 45				jmp	short loc_1260		; (8523)
020A:84DE			loc_1256:
020A:84DE  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020A:84E2  75 21				jne	loc_1258		; Jump if not equal
020A:84E4  80 7C 05 00				cmp	byte ptr [si+5],0
020A:84E8  74 0C				je	loc_1257		; Jump if equal
020A:84EA  80 7C 09 14				cmp	byte ptr [si+9],14h
020A:84EE  74 06				je	loc_1257		; Jump if equal
020A:84F0  80 7C 09 15				cmp	byte ptr [si+9],15h
020A:84F4  75 0F				jne	loc_1258		; Jump if not equal
020A:84F6			loc_1257:
020A:84F6  E8 EB6D				call	sub_97			; (7066)
020A:84F9  83 06 3098 01			add	data_344,1		; (020A:3098=5C53h)
020A:84FE  83 16 309A 00			adc	data_345,0		; (020A:309A=7953h)
020A:8503  EB 1E				jmp	short loc_1260		; (8523)
020A:8505			loc_1258:
020A:8505  E8 EF5C				call	sub_105			; (7464)
020A:8508  83 06 3088 01			add	data_336,1		; (020A:3088=4E49h)
020A:850D  83 16 308A 00			adc	data_337,0		; (020A:308A=4F44h)
020A:8512  EB 0F				jmp	short loc_1260		; (8523)
020A:8514			loc_1259:
020A:8514  E8 EFC1				call	sub_106			; (74D8)
020A:8517  83 06 308C 01			add	data_338,1		; (020A:308C=5357h)
020A:851C  83 16 308E 00			adc	data_339,0		; (020A:308E=433Bh)
020A:8521  EB 00				jmp	short loc_1260		; (8523)
020A:8523			loc_1260:
020A:8523  2E: A1 38A3				mov	ax,cs:data_495		; (020A:38A3=6C7h)
020A:8527  9A 14FC:0A90		;*		call	far ptr sub_172		;*(14FC:0A90)
020A:8527  9A					db	9Ah
020A:8528  0A90 14FC				dw	0A90h, 14FCh
020A:852C  BF 0008				mov	di,8
020A:852F  8B 1C				mov	bx,[si]
020A:8531  8B 44 02				mov	ax,[si+2]
020A:8534  26: 8B 0E 0002			mov	cx,word ptr es:[2]	; (7B3C:0002=0FFFFh)
020A:8539  3B CB				cmp	cx,bx
020A:853B  77 10				ja	loc_1262		; Jump if above
020A:853D  72 09				jc	loc_1261		; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 280

020A:853F  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (7B3C:0004=0FFFFh)
020A:8544  3B C8				cmp	cx,ax
020A:8546  77 05				ja	loc_1262		; Jump if above
020A:8548			loc_1261:
020A:8548  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (7B3C:0006=0FFFFh)
020A:854D			loc_1262:
020A:854D  8B 1C				mov	bx,[si]
020A:854F  8B 44 02				mov	ax,[si+2]
020A:8552  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (7B3C:0000=0FFFFh)
020A:8557  72 02				jb	loc_1263		; Jump if below
020A:8559  EB 43				jmp	short loc_1269		; (859E)
020A:855B			loc_1263:
020A:855B  26: 39 1D				cmp	es:[di],bx
020A:855E  73 19				jae	loc_1265		; Jump if above or =
020A:8560  BB 40C2				mov	bx,40C2h
020A:8563  26: 8A 45 05				mov	al,es:[di+5]
020A:8567  25 000F				and	ax,0Fh
020A:856A  D7					xlat				; al=[al+[bx]] table
020A:856B  0A C0				or	al,al			; Zero ?
020A:856D  75 04				jnz	loc_1264		; Jump if not zero
020A:856F  26: 8A 45 06				mov	al,es:[di+6]
020A:8573			loc_1264:
020A:8573  8B C8				mov	cx,ax
020A:8575  03 F9				add	di,cx
020A:8577  EB D4				jmp	short loc_1262		; (854D)
020A:8579			loc_1265:
020A:8579  74 02				jz	loc_1266		; Jump if zero
020A:857B  EB 21				jmp	short loc_1269		; (859E)
020A:857D			loc_1266:
020A:857D  26: 39 45 02				cmp	es:[di+2],ax
020A:8581  72 02				jb	loc_1267		; Jump if below
020A:8583  EB 19				jmp	short loc_1269		; (859E)
020A:8585			loc_1267:
020A:8585  BB 40C2				mov	bx,40C2h
020A:8588  26: 8A 45 05				mov	al,es:[di+5]
020A:858C  25 000F				and	ax,0Fh
020A:858F  D7					xlat				; al=[al+[bx]] table
020A:8590  0A C0				or	al,al			; Zero ?
020A:8592  75 04				jnz	loc_1268		; Jump if not zero
020A:8594  26: 8A 45 06				mov	al,es:[di+6]
020A:8598			loc_1268:
020A:8598  8B C8				mov	cx,ax
020A:859A  03 F9				add	di,cx
020A:859C  EB AF				jmp	short loc_1262		; (854D)
020A:859E			loc_1269:
020A:859E  C2BB			data_722	dw	0C2BBh			; Data table (indexed access)
020A:85A0  40					inc	ax
020A:85A1  8A 44 05				mov	al,[si+5]
020A:85A4  25 000F				and	ax,0Fh
020A:85A7  D7					xlat				; al=[al+[bx]] table
020A:85A8  0A C0				or	al,al			; Zero ?
020A:85AA  75 03				jnz	loc_1270		; Jump if not zero
020A:85AC  8A 44 06				mov	al,[si+6]
020A:85AF			loc_1270:
020A:85AF  8B C8				mov	cx,ax
020A:85B1  26: A1 0000				mov	ax,word ptr es:[0]	; (7B3C:0000=0FFFFh)
020A:85B5  03 C1				add	ax,cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 281

020A:85B7  73 03				jnc	loc_1271		; Jump if carry=0
020A:85B9  E9 E432				jmp	loc_917			; (69EE)
020A:85BC			loc_1271:
020A:85BC  BE 532E				mov	si,532Eh
020A:85BF  8B 04				mov	ax,[si]
020A:85C1  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:85C5  75 41				jne	loc_1275		; Jump if not equal
020A:85C7  8B 44 02				mov	ax,[si+2]
020A:85CA  3B 06 344C				cmp	ax,data_402		; (020A:344C=6C6h)
020A:85CE  76 38				jbe	loc_1275		; Jump if below or =
020A:85D0  8A 5C 05				mov	bl,[si+5]
020A:85D3  80 E3 0C				and	bl,0Ch
020A:85D6  80 FB 08				cmp	bl,8
020A:85D9  74 0C				je	loc_1272		; Jump if equal
020A:85DB  80 FB 04				cmp	bl,4
020A:85DE  74 12				je	loc_1273		; Jump if equal
020A:85E0  80 FB 00				cmp	bl,0
020A:85E3  74 18				je	loc_1274		; Jump if equal
020A:85E5  EB 21				jmp	short loc_1275		; (8608)
020A:85E7			loc_1272:
020A:85E7  3B 06 4E8B				cmp	ax,data_638		; (020A:4E8B=3E80h)
020A:85EB  73 1B				jae	loc_1275		; Jump if above or =
020A:85ED  A3 4E8B				mov	data_638,ax		; (020A:4E8B=3E80h)
020A:85F0  EB 16				jmp	short loc_1275		; (8608)
020A:85F2			loc_1273:
020A:85F2  3B 06 4E87				cmp	ax,word ptr ds:[4E87h]	; (020A:4E87=0A336h)
020A:85F6  73 10				jae	loc_1275		; Jump if above or =
020A:85F8  A3 4E87				mov	word ptr ds:[4E87h],ax	; (020A:4E87=0A336h)
020A:85FB  EB 0B				jmp	short loc_1275		; (8608)
020A:85FD			loc_1274:
020A:85FD  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (020A:4E89=638h)
020A:8601  73 05				jae	loc_1275		; Jump if above or =
020A:8603  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=638h)
020A:8606  EB 00				jmp	short loc_1275		; (8608)
020A:8608			loc_1275:
020A:8608  57					push	di
020A:8609  51					push	cx
020A:860A  1E					push	ds
020A:860B  06					push	es
020A:860C  1F					pop	ds
020A:860D  26: 8B 36 0000			mov	si,word ptr es:[0]	; (7B3C:0000=0FFFFh)
020A:8612  4E					dec	si
020A:8613  8B C6				mov	ax,si
020A:8615  2B C7				sub	ax,di
020A:8617  40					inc	ax
020A:8618  26: 01 0E 0000			add	word ptr es:[0],cx	; (7B3C:0000=0FFFFh)
020A:861D  73 03				jnc	loc_1276		; Jump if carry=0
020A:861F  E9 E3CC				jmp	loc_917			; (69EE)
020A:8622			loc_1276:
020A:8622  8B FE				mov	di,si
020A:8624  03 F9				add	di,cx
020A:8626  8B C8				mov	cx,ax
020A:8628  FD					std				; Set direction flag
020A:8629  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:862B  1F					pop	ds
020A:862C  59					pop	cx
020A:862D  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 282

020A:862E  BE 532E				mov	si,532Eh
020A:8631  8B 04				mov	ax,[si]
020A:8633  26: A3 0002				mov	word ptr es:[2],ax	; (7B3C:0002=0FFFFh)
020A:8637  8B 44 02				mov	ax,[si+2]
020A:863A  26: A3 0004				mov	word ptr es:[4],ax	; (7B3C:0004=0FFFFh)
020A:863E  26: 89 3E 0006			mov	word ptr es:[6],di	; (7B3C:0006=0FFFFh)
020A:8643  FC					cld				; Clear direction
020A:8644  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8646  B9 0050				mov	cx,50h
020A:8649  33 C0				xor	ax,ax			; Zero register
020A:864B  BF 532E				mov	di,532Eh
020A:864E  06					push	es
020A:864F  1E					push	ds
020A:8650  07					pop	es
020A:8651  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:8653  07					pop	es
020A:8654  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8659  9C					pushf				; Push flags
020A:865A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:865F  5A					pop	dx
020A:8660  8E DA				mov	ds,dx
020A:8662  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:8667  5A					pop	dx
020A:8668  75 0A				jnz	loc_1277		; Jump if not zero
020A:866A  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:866F  74 03				je	loc_1277		; Jump if equal
020A:8671  E8 ED48				call	sub_103			; (73BC)
020A:8674			loc_1277:
020A:8674  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8679  9D					popf				; Pop flags
020A:867A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:867F  5D					pop	bp
020A:8680  5F					pop	di
020A:8681  5E					pop	si
020A:8682  5A					pop	dx
020A:8683  59					pop	cx
020A:8684  5B					pop	bx
020A:8685  58					pop	ax
020A:8686  C3					retn
				sub_114		endp

020A:8687  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_115		proc	near
020A:8688  E8 C955				call	sub_44			; (4FE0)
020A:868B  50					push	ax
020A:868C  53					push	bx
020A:868D  51					push	cx
020A:868E  52					push	dx
020A:868F  56					push	si
020A:8690  57					push	di
020A:8691  55					push	bp
020A:8692  26: 8A 44 05				mov	al,es:[si+5]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 283

020A:8696  24 0C				and	al,0Ch
020A:8698  3C 08				cmp	al,8
020A:869A  74 26				je	loc_1280		; Jump if equal
020A:869C  3C 04				cmp	al,4
020A:869E  74 0A				je	loc_1278		; Jump if equal
020A:86A0  3C 00				cmp	al,0
020A:86A2  74 12				je	loc_1279		; Jump if equal
020A:86A4  BB 0002				mov	bx,2
020A:86A7  E9 E42E				jmp	loc_927			; (6AD8)
020A:86AA			loc_1278:
020A:86AA  83 2E 3084 01			sub	data_334,1		; (020A:3084=3A43h)
020A:86AF  83 1E 3086 00			sbb	data_335,0		; (020A:3086=575Ch)
020A:86B4  EB 18				jmp	short loc_1281		; (86CE)
020A:86B6			loc_1279:
020A:86B6  83 2E 3088 01			sub	data_336,1		; (020A:3088=4E49h)
020A:86BB  83 1E 308A 00			sbb	data_337,0		; (020A:308A=4F44h)
020A:86C0  EB 0C				jmp	short loc_1281		; (86CE)
020A:86C2			loc_1280:
020A:86C2  83 2E 308C 01			sub	data_338,1		; (020A:308C=5357h)
020A:86C7  83 1E 308E 00			sbb	data_339,0		; (020A:308E=433Bh)
020A:86CC  EB 00				jmp	short loc_1281		; (86CE)
020A:86CE			loc_1281:
020A:86CE  BB 40C2				mov	bx,40C2h
020A:86D1  26: 8A 44 05				mov	al,es:[si+5]
020A:86D5  25 000F				and	ax,0Fh
020A:86D8  D7					xlat				; al=[al+[bx]] table
020A:86D9  0A C0				or	al,al			; Zero ?
020A:86DB  75 04				jnz	loc_1282		; Jump if not zero
020A:86DD  26: 8A 44 06				mov	al,es:[si+6]
020A:86E1			loc_1282:
020A:86E1  8B C8				mov	cx,ax
020A:86E3  26: 8B 04				mov	ax,es:[si]
020A:86E6  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:86EA  75 71				jne	loc_1289		; Jump if not equal
020A:86EC  26: 8B 44 02				mov	ax,es:[si+2]
020A:86F0  26: 8A 5C 05				mov	bl,es:[si+5]
020A:86F4  80 E3 0C				and	bl,0Ch
020A:86F7  80 FB 08				cmp	bl,8
020A:86FA  74 0C				je	loc_1283		; Jump if equal
020A:86FC  80 FB 04				cmp	bl,4
020A:86FF  74 24				je	loc_1285		; Jump if equal
020A:8701  80 FB 00				cmp	bl,0
020A:8704  74 3C				je	loc_1287		; Jump if equal
020A:8706  EB 55				jmp	short loc_1289		; (875D)
020A:8708			loc_1283:
020A:8708  3B 06 4E8B				cmp	ax,data_638		; (020A:4E8B=3E80h)
020A:870C  75 4F				jne	loc_1289		; Jump if not equal
020A:870E  8B D9				mov	bx,cx
020A:8710  26: 8B 00				mov	ax,es:[bx+si]
020A:8713  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:8717  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:871B  75 03				jnz	loc_1284		; Jump if not zero
020A:871D  B8 FFFF				mov	ax,0FFFFh
020A:8720			loc_1284:
020A:8720  A3 4E8B				mov	data_638,ax		; (020A:4E8B=3E80h)
020A:8723  EB 38				jmp	short loc_1289		; (875D)
020A:8725			loc_1285:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 284

020A:8725  3B 06 4E87				cmp	ax,word ptr ds:[4E87h]	; (020A:4E87=0A336h)
020A:8729  75 32				jne	loc_1289		; Jump if not equal
020A:872B  8B D9				mov	bx,cx
020A:872D  26: 8B 00				mov	ax,es:[bx+si]
020A:8730  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:8734  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:8738  75 03				jnz	loc_1286		; Jump if not zero
020A:873A  B8 FFFF				mov	ax,0FFFFh
020A:873D			loc_1286:
020A:873D  A3 4E87				mov	word ptr ds:[4E87h],ax	; (020A:4E87=0A336h)
020A:8740  EB			data_723	db	0EBh
020A:8741  1B 3B				sbb	di,[bp+di]
020A:8743  06					push	es
020A:8744  89 4E 75				mov	[bp+75h],cx
020A:8747  15 D98B				adc	ax,0D98Bh
020A:874A  26: 8B 00				mov	ax,es:[bx+si]
020A:874D  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:8751  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:8755  75 03				jnz	loc_1288		; Jump if not zero
020A:8757  B8 FFFF				mov	ax,0FFFFh
020A:875A			loc_1288:
020A:875A  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=638h)
020A:875D			loc_1289:
020A:875D  8B FE				mov	di,si
020A:875F  03 F1				add	si,cx
020A:8761  26: 8B 04				mov	ax,es:[si]
020A:8764  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:8768  26: 8B 44 02				mov	ax,es:[si+2]
020A:876C  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:8770  26: 89 3E 0006			mov	word ptr es:[6],di	; (020A:0006=3)
020A:8775  8B C1				mov	ax,cx
020A:8777  26: 8B 0E 0000			mov	cx,word ptr es:[0]	; (020A:0000=1828h)
020A:877C  2B CE				sub	cx,si
020A:877E  1E					push	ds
020A:877F  06					push	es
020A:8780  1F					pop	ds
020A:8781  FC					cld				; Clear direction
020A:8782  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8784  1F					pop	ds
020A:8785  26: 29 06 0000			sub	word ptr es:[0],ax	; (020A:0000=1828h)
020A:878A  73 06				jnc	loc_1290		; Jump if carry=0
020A:878C  BB 0002				mov	bx,2
020A:878F  E9 E346				jmp	loc_927			; (6AD8)
020A:8792			loc_1290:
020A:8792  5D					pop	bp
020A:8793  5F					pop	di
020A:8794  5E					pop	si
020A:8795  5A					pop	dx
020A:8796  59					pop	cx
020A:8797  5B					pop	bx
020A:8798  58					pop	ax
020A:8799  C3					retn
				sub_115		endp

020A:879A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 285

				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_116		proc	near
020A:879C  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:87A1  06					push	es
020A:87A2  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:87A7  1E					push	ds
020A:87A8  56					push	si
020A:87A9  57					push	di
020A:87AA  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:87B0  75 24				jne	loc_1294		; Jump if not equal
020A:87B2  E8 E890				call	sub_91			; (7045)
020A:87B5  A9 0002				test	ax,2
020A:87B8  74 05				jz	loc_1291		; Jump if zero
020A:87BA  E8 EC33				call	sub_104			; (73F0)
020A:87BD  EB 1F				jmp	short loc_1295		; (87DE)
020A:87BF			loc_1291:
020A:87BF  A9 0001				test	ax,1
020A:87C2  74 05				jz	loc_1292		; Jump if zero
020A:87C4  E8 EC9D				call	sub_105			; (7464)
020A:87C7  EB 15				jmp	short loc_1295		; (87DE)
020A:87C9			loc_1292:
020A:87C9  A9 0004				test	ax,4
020A:87CC  74 05				jz	loc_1293		; Jump if zero
020A:87CE  E8 ED07				call	sub_106			; (74D8)
020A:87D1  EB 0B				jmp	short loc_1295		; (87DE)
020A:87D3			loc_1293:
020A:87D3  E9 00BD				jmp	loc_1301		; (8893)
020A:87D6			loc_1294:
020A:87D6  E8 EBE3				call	sub_103			; (73BC)
020A:87D9  2E: 8E 06 38A1			mov	es,cs:data_494		; (020A:38A1=2619h)
020A:87DE			loc_1295:
020A:87DE  BF 0008				mov	di,8
020A:87E1  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020A:87E6  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020A:87EC  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020A:87F1  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020A:87F6  A9 0002				test	ax,2
020A:87F9  75 0D				jnz	loc_1296		; Jump if not zero
020A:87FB  A9 0001				test	ax,1
020A:87FE  75 2A				jnz	loc_1298		; Jump if not zero
020A:8800  A9 0004				test	ax,4
020A:8803  75 55				jnz	loc_1300		; Jump if not zero
020A:8805  E9 008B				jmp	loc_1301		; (8893)
020A:8808			loc_1296:
020A:8808  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020A:880D  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (2619:0000=0FFFFh)
020A:8814  BE 78CB				mov	si,78CBh
020A:8817  57					push	di
020A:8818  BF FFF0				mov	di,0FFF0h
020A:881B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:881F  75 06				jne	loc_1297		; Jump if not equal
020A:8821  B9 000C				mov	cx,0Ch
020A:8824  FC					cld				; Clear direction
020A:8825  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8827			loc_1297:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 286

020A:8827  5F					pop	di
020A:8828  EB 69				jmp	short loc_1301		; (8893)
020A:882A			loc_1298:
020A:882A  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020A:882F  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (2619:0000=0FFFFh)
020A:8836  1E					push	ds
020A:8837  E8 E80B				call	sub_91			; (7045)
020A:883A  8B 36 2B42				mov	si,data_247		; (020A:2B42=4D44h)
020A:883E  1F					pop	ds
020A:883F  26: 01 36 0000			add	word ptr es:[0],si	; (2619:0000=0FFFFh)
020A:8844  BE 78EB				mov	si,78EBh
020A:8847  57					push	di
020A:8848  BF FFF0				mov	di,0FFF0h
020A:884B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:884F  75 06				jne	loc_1299		; Jump if not equal
020A:8851  B9 000C				mov	cx,0Ch
020A:8854  FC					cld				; Clear direction
020A:8855  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8857			loc_1299:
020A:8857  5F					pop	di
020A:8858  EB 39				jmp	short loc_1301		; (8893)
020A:885A			loc_1300:
020A:885A  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020A:885F  51					push	cx
020A:8860  B9 0029				mov	cx,29h
020A:8863  33 C0				xor	ax,ax			; Zero register
020A:8865  BF 0011				mov	di,11h
020A:8868  FC					cld				; Clear direction
020A:8869  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:886B  59					pop	cx
020A:886C  26: C7 06 0000 0043			mov	word ptr es:[0],43h	; (2619:0000=0FFFFh)
020A:8873  1E					push	ds
020A:8874  E8 E7CE				call	sub_91			; (7045)
020A:8877  8B 36 2B42				mov	si,data_247		; (020A:2B42=4D44h)
020A:887B  1F					pop	ds
020A:887C  26: 01 36 0000			add	word ptr es:[0],si	; (2619:0000=0FFFFh)
020A:8881  BE 78DB				mov	si,78DBh
020A:8884  BF FFF0				mov	di,0FFF0h
020A:8887  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:888B  75 06				jne	loc_1301		; Jump if not equal
020A:888D  B9 000C				mov	cx,0Ch
020A:8890  FC					cld				; Clear direction
020A:8891  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8893			loc_1301:
020A:8893  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (2619:0002=0FFFFh)
020A:889A  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (2619:0004=0FFFFh)
020A:88A1  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (2619:0006=0FFFFh)
020A:88A8  5F					pop	di
020A:88A9  5E					pop	si
020A:88AA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:88AF  9C					pushf				; Push flags
020A:88B0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:88B5  5A					pop	dx
020A:88B6  8E DA				mov	ds,dx
020A:88B8  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:88BD  5A					pop	dx
020A:88BE  75 0A				jnz	loc_1302		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 287

020A:88C0  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:88C5  74 03				je	loc_1302		; Jump if equal
020A:88C7  F2E8			data_724	dw	0F2E8h
020A:88C9  EA 9636:FF2E				jmp	far ptr $+7665h
020A:88CE  00 9D 8B2E				add	byte ptr ds:[8B2Eh][di],bl	; (020A:8B2E=0)
020A:88D2  16					push	ss
020A:88D3  92					xchg	dx,ax
020A:88D4  00 2E 1689				add	byte ptr ds:[1689h],ch	; (020A:1689=41h)
020A:88D8  92					xchg	dx,ax
020A:88D9  00 9C 8F2E				add	data_728[si],bl		; (020A:8F2E=45h)
020A:88DD  06					push	es
020A:88DE  96					xchg	si,ax
020A:88DF  00 5A 8E				add	[bp+si-72h],bl
020A:88E2  C2 3B2E				retn	3B2Eh
				sub_116		endp

							                        ;* No entry point to code
020A:88E5  16					push	ss
020A:88E6  A1 5A38				mov	ax,data_675		; (020A:5A38=5A5Eh)
020A:88E9  75 0A				jnz	loc_1303		; Jump if not zero
020A:88EB  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:88F0  74 03				je	loc_1303		; Jump if equal
020A:88F2  E8 EAC7				call	sub_103			; (73BC)
020A:88F5			loc_1303:
020A:88F5  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:88FA  9D					popf				; Pop flags
020A:88FB  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8900  C3					retn
020A:8901  000F[00]				db	15 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_117		proc	near
020A:8910  53					push	bx
020A:8911  52					push	dx
020A:8912  56					push	si
020A:8913  57					push	di
020A:8914  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:8919  06					push	es
020A:891A  C6 06 4E0A 00			mov	data_577,0		; (020A:4E0A=14h)
020A:891F  F6 C7 20				test	bh,20h			; ' '
020A:8922  74 3C				jz	loc_1306		; Jump if zero
020A:8924  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:8929  75 35				jnz	loc_1306		; Jump if not zero
020A:892B  0A DB				or	bl,bl			; Zero ?
020A:892D  74 0A				jz	loc_1304		; Jump if zero
020A:892F  8A CB				mov	cl,bl
020A:8931  80 E1 C7				and	cl,0C7h
020A:8934  80 F9 06				cmp	cl,6
020A:8937  75 27				jne	loc_1306		; Jump if not equal
020A:8939			loc_1304:
020A:8939  3D FFFD				cmp	ax,0FFFDh
020A:893C  72 07				jb	loc_1305		; Jump if below
020A:893E  C6 06 362E 00			mov	data_485,0		; (020A:362E=0D1h)
020A:8943  EB 1B				jmp	short loc_1306		; (8960)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 288

020A:8945			loc_1305:
020A:8945  F7 06 4E22 0008			test	data_591,8		; (020A:4E22=0EDA3h)
020A:894B  75 13				jnz	loc_1306		; Jump if not zero
020A:894D  80 3E 4E16 01			cmp	data_585,1		; (020A:4E16=14h)
020A:8952  75 0C				jne	loc_1306		; Jump if not equal
020A:8954  80 3E 362E 0F			cmp	data_485,0Fh		; (020A:362E=0D1h)
020A:8959  77 05				ja	loc_1306		; Jump if above
020A:895B  80 0E 4E16 80			or	data_585,80h		; (020A:4E16=14h)
020A:8960			loc_1306:
020A:8960  8A 0E 362B				mov	cl,data_483		; (020A:362B=0EFh)
020A:8964  C6 06 3633 00			mov	data_490,0		; (020A:3633=50h)
020A:8969  9A 14FC:4104		;*		call	far ptr sub_202		;*(14FC:4104)
020A:8969  9A					db	9Ah
020A:896A  4104 14FC				dw	4104h, 14FCh
020A:896E  73 14				jnc	loc_1307		; Jump if carry=0
020A:8970  8B 16 3620				mov	dx,data_480		; (020A:3620=0BF50h)
020A:8974  89 16 40E9				mov	data_518,dx		; (020A:40E9=0B432h)
020A:8978  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:897D  75 05				jnz	loc_1307		; Jump if not zero
020A:897F  C6 06 3633 01			mov	data_490,1		; (020A:3633=50h)
020A:8984			loc_1307:
020A:8984  80 F9 90				cmp	cl,90h
020A:8987  75 19				jne	loc_1309		; Jump if not equal
020A:8989  8B 16 40E9				mov	dx,data_518		; (020A:40E9=0B432h)
020A:898D  3B 16 361A				cmp	dx,data_477		; (020A:361A=69B9h)
020A:8991  75 0D				jne	loc_1308		; Jump if not equal
020A:8993  9A 14FC:3B60		;*		call	far ptr sub_198		;*(14FC:3B60)
020A:8993  9A					db	9Ah
020A:8994  3B60 14FC				dw	3B60h, 14FCh
020A:8998  89 16 361A				mov	data_477,dx		; (020A:361A=69B9h)
020A:899C  89 16 40E9				mov	data_518,dx		; (020A:40E9=0B432h)
020A:89A0			loc_1308:
020A:89A0  EB 68				jmp	short loc_1316		; (8A0A)
020A:89A2			loc_1309:
020A:89A2  80 F9 26				cmp	cl,26h			; '&'
020A:89A5  75 0F				jne	loc_1310		; Jump if not equal
020A:89A7  8B 16 3618				mov	dx,data_476		; (020A:3618=5F24h)
020A:89AB  9A 14FC:3B60		;*		call	far ptr sub_198		;*(14FC:3B60)
020A:89AB  9A					db	9Ah
020A:89AC  3B60 14FC				dw	3B60h, 14FCh
020A:89B0  89 16 3618				mov	data_476,dx		; (020A:3618=5F24h)
020A:89B4  EB 50				jmp	short loc_1315		; (8A06)
020A:89B6			loc_1310:
020A:89B6  80 F9 2E				cmp	cl,2Eh			; '.'
020A:89B9  75 06				jne	loc_1311		; Jump if not equal
020A:89BB  8B 16 3052				mov	dx,data_310		; (020A:3052=434Fh)
020A:89BF  EB 45				jmp	short loc_1315		; (8A06)
020A:89C1			loc_1311:
020A:89C1  80 F9 36				cmp	cl,36h			; '6'
020A:89C4  75 06				jne	loc_1312		; Jump if not equal
020A:89C6  8B 16 3620				mov	dx,data_480		; (020A:3620=0BF50h)
020A:89CA  EB 3A				jmp	short loc_1315		; (8A06)
020A:89CC			loc_1312:
020A:89CC  80 F9 64				cmp	cl,64h			; 'd'
020A:89CF  75 0F				jne	loc_1313		; Jump if not equal
020A:89D1  8B 16 361C				mov	dx,data_478		; (020A:361C=8150h)
020A:89D5  9A 14FC:3B60		;*		call	far ptr sub_198		;*(14FC:3B60)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 289

020A:89D5  9A					db	9Ah
020A:89D6  3B60 14FC				dw	3B60h, 14FCh
020A:89DA  89 16 361C				mov	data_478,dx		; (020A:361C=8150h)
020A:89DE  EB 26				jmp	short loc_1315		; (8A06)
020A:89E0			loc_1313:
020A:89E0  80 F9 65				cmp	cl,65h			; 'e'
020A:89E3  75 0F				jne	loc_1314		; Jump if not equal
020A:89E5  8B 16 361E				mov	dx,data_479		; (020A:361E=50E9h)
020A:89E9  9A 14FC:3B60		;*		call	far ptr sub_198		;*(14FC:3B60)
020A:89E9  9A					db	9Ah
020A:89EA  3B60 14FC				dw	3B60h, 14FCh
020A:89EE  89 16 361E				mov	data_479,dx		; (020A:361E=50E9h)
020A:89F2  EB 12				jmp	short loc_1315		; (8A06)
020A:89F4			loc_1314:
020A:89F4  80 F9 3E				cmp	cl,3Eh			; '>'
020A:89F7  75 11				jne	loc_1316		; Jump if not equal
020A:89F9  8B 16 361A				mov	dx,data_477		; (020A:361A=69B9h)
020A:89FD  9A 14FC:3B60		;*		call	far ptr sub_198		;*(14FC:3B60)
020A:89FD  9A					db	9Ah
020A:89FE  3B60 14FC				dw	3B60h, 14FCh
020A:8A02  89 16 361A				mov	data_477,dx		; (020A:361A=69B9h)
020A:8A06			loc_1315:
020A:8A06  89 16 40E9				mov	data_518,dx		; (020A:40E9=0B432h)
020A:8A0A			loc_1316:
020A:8A0A  83 3E 3450 FF			cmp	data_404,0FFFFh		; (020A:3450=8300h)
020A:8A0F  74 19				je	loc_1319		; Jump if equal
020A:8A11  8B 16 3450				mov	dx,data_404		; (020A:3450=8300h)
020A:8A15  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:8A1A  75 06				jne	loc_1317		; Jump if not equal
020A:8A1C  03 16 3050				add	dx,data_309		; (020A:3050=5250h)
020A:8A20  EB 04				jmp	short loc_1318		; (8A26)
020A:8A22			loc_1317:
020A:8A22  03 16 40E9				add	dx,data_518		; (020A:40E9=0B432h)
020A:8A26			loc_1318:
020A:8A26  89 16 40E9				mov	data_518,dx		; (020A:40E9=0B432h)
020A:8A2A			loc_1319:
020A:8A2A  A3 40F7				mov	data_524,ax		; (020A:40F7=7545h)
020A:8A2D  0B C0				or	ax,ax			; Zero ?
020A:8A2F  75 3B				jnz	loc_1322		; Jump if not zero
020A:8A31  8A D3				mov	dl,bl
020A:8A33  80 E2 C7				and	dl,0C7h
020A:8A36  80 FA 46				cmp	dl,46h			; 'F'
020A:8A39  75 31				jne	loc_1322		; Jump if not equal
020A:8A3B  C6 06 306F 02			mov	data_323,2		; (020A:306F=3Dh)
020A:8A40  F6 06 3458 80			test	data_408,80h		; (020A:3458=0BEh)
020A:8A45  75 0A				jnz	loc_1320		; Jump if not zero
020A:8A47  F6 C7 C0				test	bh,0C0h
020A:8A4A  74 05				jz	loc_1320		; Jump if zero
020A:8A4C  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:8A4C  9A					db	9Ah
020A:8A4D  0924 14FC				dw	924h, 14FCh
020A:8A51			loc_1320:
020A:8A51  80 3E 303E 01			cmp	data_296,1		; (020A:303E=42h)
020A:8A56  75 0C				jne	loc_1321		; Jump if not equal
020A:8A58  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:8A5D  74 05				jz	loc_1321		; Jump if zero
020A:8A5F  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 290

020A:8A5F  9A					db	9Ah
020A:8A60  4188 14FC				dw	4188h, 14FCh
020A:8A64			loc_1321:
020A:8A64  80 26 4E10 FB			and	data_581,0FBh		; (020A:4E10=0EDh)
020A:8A69  E9 0521				jmp	loc_1389		; (8F8D)
020A:8A6C			loc_1322:
020A:8A6C  C6 06 4E07 00			mov	data_575,0		; (020A:4E07=0A8h)
020A:8A71  F6 C3 38				test	bl,38h			; '8'
020A:8A74  74 2B				jz	loc_1325		; Jump if zero
020A:8A76  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:8A7B  75 24				jnz	loc_1325		; Jump if not zero
020A:8A7D  8A D3				mov	dl,bl
020A:8A7F  80 E2 C7				and	dl,0C7h
020A:8A82  80 FA 06				cmp	dl,6
020A:8A85  74 1A				je	loc_1325		; Jump if equal
020A:8A87  80 3E 14FA 00			cmp	data_157,0		; (020A:14FA=0)
020A:8A8C  75 07				jne	loc_1323		; Jump if not equal
020A:8A8E  80 3E 3633 01			cmp	data_490,1		; (020A:3633=50h)
020A:8A93  74 07				je	loc_1324		; Jump if equal
020A:8A95			loc_1323:
020A:8A95  F6 06 4E0F 02			test	data_580,2		; (020A:4E0F=0BEh)
020A:8A9A  74 05				jz	loc_1325		; Jump if zero
020A:8A9C			loc_1324:
020A:8A9C  C6 06 4E07 01			mov	data_575,1		; (020A:4E07=0A8h)
020A:8AA1			loc_1325:
020A:8AA1  53					push	bx
020A:8AA2  8B 1E 40E9				mov	bx,data_518		; (020A:40E9=0B432h)
020A:8AA6  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8AAB  74 08				je	loc_1326		; Jump if equal
020A:8AAD  F7 06 4E22 0008			test	data_591,8		; (020A:4E22=0EDA3h)
020A:8AB3  74 03				jz	loc_1327		; Jump if zero
020A:8AB5			loc_1326:
020A:8AB5  E9 0088				jmp	loc_1332		; (8B40)
020A:8AB8			loc_1327:
020A:8AB8  50					push	ax
020A:8AB9  A1 3037				mov	ax,data_292		; (020A:3037=4D44h)
020A:8ABC  3D 0000				cmp	ax,0
020A:8ABF  75 03				jne	loc_1328		; Jump if not equal
020A:8AC1  E8 E5B7				call	sub_100			; (707B)
020A:8AC4			loc_1328:
020A:8AC4  3B D8				cmp	bx,ax
020A:8AC6  72 73				jb	loc_1331		; Jump if below
020A:8AC8  8C C8				mov	ax,cs
020A:8ACA  03 06 2B3D				add	ax,data_244		; (020A:2B3D=7E45h)
020A:8ACE  8B 16 40F7				mov	dx,data_524		; (020A:40F7=7545h)
020A:8AD2  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8AD4  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8AD6  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8AD8  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8ADA  03 D3				add	dx,bx
020A:8ADC  72 5D				jc	loc_1331		; Jump if carry Set
020A:8ADE  3B D0				cmp	dx,ax
020A:8AE0  77 59				ja	loc_1331		; Jump if above
020A:8AE2  F6 06 4E16 80			test	data_585,80h		; (020A:4E16=14h)
020A:8AE7  74 52				jz	loc_1331		; Jump if zero
020A:8AE9  5E					pop	si
020A:8AEA  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 291

020A:8AEB  8E C3				mov	es,bx
020A:8AED  B1 19				mov	cl,19h
020A:8AEF  26: 83 3C 00				cmp	word ptr es:[si],0
020A:8AF3  74 08				je	loc_1329		; Jump if equal
020A:8AF5  FE C1				inc	cl
020A:8AF7  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:8AFB  75 3E				jne	loc_1331		; Jump if not equal
020A:8AFD			loc_1329:
020A:8AFD  C6 06 362E 01			mov	data_485,1		; (020A:362E=0D1h)
020A:8B02  57					push	di
020A:8B03  51					push	cx
020A:8B04  8C C0				mov	ax,es
020A:8B06  8B DE				mov	bx,si
020A:8B08  BA 0001				mov	dx,1
020A:8B0B  C6 06 4D4B 01			mov	data_570,1		; (020A:4D4B=0E6h)
020A:8B10  E8 D379				call	sub_76			; (5E8C)
020A:8B13  C6 06 4D4B 00			mov	data_570,0		; (020A:4D4B=0E6h)
020A:8B18  59					pop	cx
020A:8B19  72 1F				jc	loc_1330		; Jump if carry Set
020A:8B1B  BF 532E				mov	di,532Eh
020A:8B1E  89 05				mov	[di],ax
020A:8B20  89 5D 02				mov	[di+2],bx
020A:8B23  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:8B27  C6 45 05 02				mov	byte ptr [di+5],2
020A:8B2B  C6 45 06 00				mov	byte ptr [di+6],0
020A:8B2F  88 4D 09				mov	[di+9],cl
020A:8B32  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:8B37  E8 F966				call	sub_114			; (84A0)
020A:8B3A			loc_1330:
020A:8B3A  5F					pop	di
020A:8B3B			loc_1331:
020A:8B3B  58					pop	ax
020A:8B3C  8B 1E 40E9				mov	bx,data_518		; (020A:40E9=0B432h)
020A:8B40			loc_1332:
020A:8B40  C6 06 4E16 00			mov	data_585,0		; (020A:4E16=14h)
020A:8B45  F6 06 56C2 02			test	data_670,2		; (020A:56C2=38h)
020A:8B4A  74 34				jz	loc_1335		; Jump if zero
020A:8B4C  5B					pop	bx
020A:8B4D  80 26 56C2 FD			and	data_670,0FDh		; (020A:56C2=38h)
020A:8B52  C7 06 30C9 0000			mov	word ptr ds:[30C9h],0	; (020A:30C9=562Eh)
020A:8B58  C6 06 4E07 00			mov	data_575,0		; (020A:4E07=0A8h)
020A:8B5D  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8B62  75 19				jne	loc_1334		; Jump if not equal
020A:8B64  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:8B64  9A					db	9Ah
020A:8B65  0924 14FC				dw	924h, 14FCh
020A:8B69  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:8B6E  74 05				jz	loc_1333		; Jump if zero
020A:8B70  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:8B70  9A					db	9Ah
020A:8B71  4188 14FC				dw	4188h, 14FCh
020A:8B75			loc_1333:
020A:8B75  BE 56C3				mov	si,56C3h
020A:8B78  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:8B78  9A					db	9Ah
020A:8B79  4160 14FC				dw	4160h, 14FCh
020A:8B7D			loc_1334:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 292

020A:8B7D  E9 040D				jmp	loc_1389		; (8F8D)
020A:8B80			loc_1335:
020A:8B80  BA 0002				mov	dx,2
020A:8B83  E8 D306				call	sub_76			; (5E8C)
020A:8B86  9C					pushf				; Push flags
020A:8B87  80 3E 4E07 00			cmp	data_575,0		; (020A:4E07=0A8h)
020A:8B8C  74 3B				je	loc_1339		; Jump if equal
020A:8B8E  9D					popf				; Pop flags
020A:8B8F  9C					pushf				; Push flags
020A:8B90  73 0E				jnc	loc_1336		; Jump if carry=0
020A:8B92  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020A:8B97  74 07				jz	loc_1336		; Jump if zero
020A:8B99  C6 06 4E07 00			mov	data_575,0		; (020A:4E07=0A8h)
020A:8B9E  EB 29				jmp	short loc_1339		; (8BC9)
020A:8BA0			loc_1336:
020A:8BA0  9D					popf				; Pop flags
020A:8BA1  5B					pop	bx
020A:8BA2  F6 06 3458 80			test	data_408,80h		; (020A:3458=0BEh)
020A:8BA7  75 05				jnz	loc_1337		; Jump if not zero
020A:8BA9  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:8BA9  9A					db	9Ah
020A:8BAA  0924 14FC				dw	924h, 14FCh
020A:8BAE			loc_1337:
020A:8BAE  80 3E 303E 01			cmp	data_296,1		; (020A:303E=42h)
020A:8BB3  75 0C				jne	loc_1338		; Jump if not equal
020A:8BB5  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:8BBA  74 05				jz	loc_1338		; Jump if zero
020A:8BBC  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:8BBC  9A					db	9Ah
020A:8BBD  4188 14FC				dw	4188h, 14FCh
020A:8BC1			loc_1338:
020A:8BC1  80 26 4E10 FB			and	data_581,0FBh		; (020A:4E10=0EDh)
020A:8BC6  E9 03C4				jmp	loc_1389		; (8F8D)
020A:8BC9			loc_1339:
020A:8BC9  80 3E 2B37 02			cmp	data_239,2		; (020A:2B37=5Ch)
020A:8BCE  75 0D				jne	loc_1340		; Jump if not equal
020A:8BD0  F6 06 4E7F 04			test	data_633,4		; (020A:4E7F=0E8h)
020A:8BD5  74 06				jz	loc_1340		; Jump if zero
020A:8BD7  BA 0002				mov	dx,2
020A:8BDA  E8 18A7				call	sub_124			; (A484)
020A:8BDD			loc_1340:
020A:8BDD  9D					popf				; Pop flags
020A:8BDE  5B					pop	bx
020A:8BDF  72 03				jc	loc_1341		; Jump if carry Set
020A:8BE1  E9 011A				jmp	loc_1357		; (8CFE)
020A:8BE4			loc_1341:
020A:8BE4  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8BE9  75 09				jnz	loc_1342		; Jump if not zero
020A:8BEB  80 3E 3465 04			cmp	data_417,4		; (020A:3465=6)
020A:8BF0  74 07				je	loc_1343		; Jump if equal
020A:8BF2  EB 0A				jmp	short loc_1344		; (8BFE)
020A:8BF4			loc_1342:
020A:8BF4  C6 06 4E0A 01			mov	data_577,1		; (020A:4E0A=14h)
020A:8BF9			loc_1343:
020A:8BF9  C6 06 306F 02			mov	data_323,2		; (020A:306F=3Dh)
020A:8BFE			loc_1344:
020A:8BFE  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 293

020A:8C03  75 26				jne	loc_1346		; Jump if not equal
020A:8C05  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:8C0A  75 1F				jnz	loc_1346		; Jump if not zero
020A:8C0C  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:8C11  74 15				jz	loc_1345		; Jump if zero
020A:8C13  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8C18  75 11				jnz	loc_1346		; Jump if not zero
020A:8C1A  80 3E 2B3B 04			cmp	data_242,4		; (020A:2B3B=55h)
020A:8C1F  76 0A				jbe	loc_1346		; Jump if below or =
020A:8C21  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:8C26  75 03				jnz	loc_1346		; Jump if not zero
020A:8C28			loc_1345:
020A:8C28  E9 0159				jmp	loc_1364		; (8D84)
020A:8C2B			loc_1346:
020A:8C2B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8C30  75 25				jnz	loc_1348		; Jump if not zero
020A:8C32  80 3E 3465 02			cmp	data_417,2		; (020A:3465=6)
020A:8C37  72 1E				jb	loc_1348		; Jump if below
020A:8C39  80 3E 3465 03			cmp	data_417,3		; (020A:3465=6)
020A:8C3E  77 0F				ja	loc_1347		; Jump if above
020A:8C40  BE 37E1				mov	si,37E1h
020A:8C43  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:8C43  9A					db	9Ah
020A:8C44  4160 14FC				dw	4160h, 14FCh
020A:8C48  C6 06 4E11 00			mov	data_582,0		; (020A:4E11=7)
020A:8C4D  EB 08				jmp	short loc_1348		; (8C57)
020A:8C4F			loc_1347:
020A:8C4F  BE 37E9				mov	si,37E9h
020A:8C52  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:8C52  9A					db	9Ah
020A:8C53  4160 14FC				dw	4160h, 14FCh
020A:8C57			loc_1348:
020A:8C57  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020A:8C5C  74 6F				jz	loc_1355		; Jump if zero
020A:8C5E  26: 8A 65 04				mov	ah,es:[di+4]
020A:8C62  80 E4 3F				and	ah,3Fh			; '?'
020A:8C65  8A C7				mov	al,bh
020A:8C67  24 F0				and	al,0F0h
020A:8C69  A8 20				test	al,20h			; ' '
020A:8C6B  74 4E				jz	loc_1353		; Jump if zero
020A:8C6D  F6 C4 10				test	ah,10h
020A:8C70  75 58				jnz	loc_1354		; Jump if not zero
020A:8C72  26: 8B 4D 08				mov	cx,es:[di+8]
020A:8C76  83 F9 0A				cmp	cx,0Ah
020A:8C79  73 4F				jae	loc_1354		; Jump if above or =
020A:8C7B  3C F0				cmp	al,0F0h
020A:8C7D  75 08				jne	loc_1349		; Jump if not equal
020A:8C7F  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020A:8C85  EB 28				jmp	short loc_1352		; (8CAF)
020A:8C87			loc_1349:
020A:8C87  83 F9 08				cmp	cx,8
020A:8C8A  73 3E				jae	loc_1354		; Jump if above or =
020A:8C8C  3C E0				cmp	al,0E0h
020A:8C8E  75 08				jne	loc_1350		; Jump if not equal
020A:8C90  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020A:8C96  EB 17				jmp	short loc_1352		; (8CAF)
020A:8C98			loc_1350:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 294

020A:8C98  83 F9 04				cmp	cx,4
020A:8C9B  73 2D				jae	loc_1354		; Jump if above or =
020A:8C9D  3C B0				cmp	al,0B0h
020A:8C9F  75 08				jne	loc_1351		; Jump if not equal
020A:8CA1  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:8CA7  EB 06				jmp	short loc_1352		; (8CAF)
020A:8CA9			loc_1351:
020A:8CA9  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020A:8CAF			loc_1352:
020A:8CAF  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:8CB4  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020A:8CB9  EB 0F				jmp	short loc_1354		; (8CCA)
020A:8CBB			loc_1353:
020A:8CBB  80 FC 01				cmp	ah,1
020A:8CBE  75 0A				jne	loc_1354		; Jump if not equal
020A:8CC0  3C 50				cmp	al,50h			; 'P'
020A:8CC2  75 06				jne	loc_1354		; Jump if not equal
020A:8CC4  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020A:8CCA			loc_1354:
020A:8CCA  E9 0140				jmp	loc_1370		; (8E0D)
020A:8CCD			loc_1355:
020A:8CCD  F6 C7 20				test	bh,20h			; ' '
020A:8CD0  75 F8				jnz	loc_1354		; Jump if not zero
020A:8CD2  26: 8A 4D 04				mov	cl,es:[di+4]
020A:8CD6  80 E1 3F				and	cl,3Fh			; '?'
020A:8CD9  80 F9 21				cmp	cl,21h			; '!'
020A:8CDC  75 1D				jne	loc_1356		; Jump if not equal
020A:8CDE  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:8CDE  9A					db	9Ah
020A:8CDF  55E4 14FC				dw	55E4h, 14FCh
020A:8CE3  72 16				jc	loc_1356		; Jump if carry Set
020A:8CE5  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:8CEA  72 0F				jb	loc_1356		; Jump if below
020A:8CEC  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020A:8CF1  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:8CF6  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020A:8CFB			loc_1356:
020A:8CFB  E9 010F				jmp	loc_1370		; (8E0D)
020A:8CFE			loc_1357:
020A:8CFE  BF 532E				mov	di,532Eh
020A:8D01  A1 40E9				mov	ax,data_518		; (020A:40E9=0B432h)
020A:8D04  89 05				mov	[di],ax
020A:8D06  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:8D09  89 45 02				mov	[di+2],ax
020A:8D0C  C6 45 04 01				mov	byte ptr [di+4],1
020A:8D10  C6 45 05 04				mov	byte ptr [di+5],4
020A:8D14  80 3E 15D0 01			cmp	data_161,1		; (020A:15D0=0)
020A:8D19  77 04				ja	loc_1358		; Jump if above
020A:8D1B  80 4D 05 01				or	byte ptr [di+5],1
020A:8D1F			loc_1358:
020A:8D1F  C7 45 08 0001			mov	word ptr [di+8],1
020A:8D24  C7 45 06 0000			mov	word ptr [di+6],0
020A:8D29  80 4D 07 10				or	byte ptr [di+7],10h
020A:8D2D  F6 C7 20				test	bh,20h			; ' '
020A:8D30  74 3D				jz	loc_1363		; Jump if zero
020A:8D32  C7 45 08 0002			mov	word ptr [di+8],2
020A:8D37  C6 45 04 02				mov	byte ptr [di+4],2
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 295

020A:8D3B  F6 06 35EE 01			test	data_461,1		; (020A:35EE=0B4h)
020A:8D40  75 24				jnz	loc_1361		; Jump if not zero
020A:8D42  F6 C7 10				test	bh,10h
020A:8D45  74 28				jz	loc_1363		; Jump if zero
020A:8D47  06					push	es
020A:8D48  8E 06 40F5				mov	es,data_523		; (020A:40F5=3C26h)
020A:8D4C  8B 36 40F7				mov	si,data_524		; (020A:40F7=7545h)
020A:8D50  83 FE FC				cmp	si,0FFFCh
020A:8D53  77 0D				ja	loc_1359		; Jump if above
020A:8D55  26: 83 3C 00				cmp	word ptr es:[si],0
020A:8D59  75 07				jne	loc_1359		; Jump if not equal
020A:8D5B  26: 83 7C 02 00			cmp	word ptr es:[si+2],0
020A:8D60  74 03				je	loc_1360		; Jump if equal
020A:8D62			loc_1359:
020A:8D62  07					pop	es
020A:8D63  EB 05				jmp	short loc_1362		; (8D6A)
020A:8D65			loc_1360:
020A:8D65  07					pop	es
020A:8D66			loc_1361:
020A:8D66  C6 45 04 04				mov	byte ptr [di+4],4
020A:8D6A			loc_1362:
020A:8D6A  C7 45 08 0004			mov	word ptr [di+8],4
020A:8D6F			loc_1363:
020A:8D6F  E8 F72E				call	sub_114			; (84A0)
020A:8D72  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (4D46:0006=0FFFFh)
020A:8D77  E8 C996				call	sub_59			; (5710)
020A:8D7A  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8D7F  74 03				je	loc_1364		; Jump if equal
020A:8D81  E9 01C2				jmp	loc_1387		; (8F46)
020A:8D84			loc_1364:
020A:8D84  C6 06 4E0A 01			mov	data_577,1		; (020A:4E0A=14h)
020A:8D89  C6 06 306F 02			mov	data_323,2		; (020A:306F=3Dh)
020A:8D8E  80 0E 4E10 10			or	data_581,10h		; (020A:4E10=0EDh)
020A:8D93  80 26 4E10 BF			and	data_581,0BFh		; (020A:4E10=0EDh)
020A:8D98  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:8D9D  80 3E 3465 02			cmp	data_417,2		; (020A:3465=6)
020A:8DA2  74 07				je	loc_1365		; Jump if equal
020A:8DA4  80 3E 3465 04			cmp	data_417,4		; (020A:3465=6)
020A:8DA9  75 11				jne	loc_1366		; Jump if not equal
020A:8DAB			loc_1365:
020A:8DAB  53					push	bx
020A:8DAC  A1 40FD				mov	ax,data_527		; (020A:40FD=8027h)
020A:8DAF  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8DB3  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:8DB3  9A					db	9Ah
020A:8DB4  039C 14FC				dw	39Ch, 14FCh
020A:8DB8  5B					pop	bx
020A:8DB9  E9 0187				jmp	loc_1386		; (8F43)
020A:8DBC			loc_1366:
020A:8DBC  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:8DBC  9A					db	9Ah
020A:8DBD  0924 14FC				dw	924h, 14FCh
020A:8DC1  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:8DC6  74 07				jz	loc_1367		; Jump if zero
020A:8DC8  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:8DC8  9A					db	9Ah
020A:8DC9  4188 14FC				dw	4188h, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 296

020A:8DCD  EB 21				jmp	short loc_1369		; (8DF0)
020A:8DCF			loc_1367:
020A:8DCF  B0 53				mov	al,53h			; 'S'
020A:8DD1  9A 14FC:4104		;*		call	far ptr sub_202		;*(14FC:4104)
020A:8DD1  9A					db	9Ah
020A:8DD2  4104 14FC				dw	4104h, 14FCh
020A:8DD6  72 02				jc	loc_1368		; Jump if carry Set
020A:8DD8  B0 44				mov	al,44h			; 'D'
020A:8DDA			loc_1368:
020A:8DDA  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:8DDE  3E: 88 46 00				mov	ds:[bp],al
020A:8DE2  45					inc	bp
020A:8DE3  B8 3A53				mov	ax,3A53h
020A:8DE6  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:8DEA  3E: 89 46 00				mov	ds:[bp],ax
020A:8DEE  45					inc	bp
020A:8DEF  45					inc	bp
020A:8DF0			loc_1369:
020A:8DF0  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:8DF5  45					inc	bp
020A:8DF6  53					push	bx
020A:8DF7  A1 40FD				mov	ax,data_527		; (020A:40FD=8027h)
020A:8DFA  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8DFE  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:8DFE  9A					db	9Ah
020A:8DFF  039C 14FC				dw	39Ch, 14FCh
020A:8E03  5B					pop	bx
020A:8E04  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:8E09  45					inc	bp
020A:8E0A  E9 0136				jmp	loc_1386		; (8F43)
020A:8E0D			loc_1370:
020A:8E0D  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8E12  75 32				jne	loc_1373		; Jump if not equal
020A:8E14  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8E19  75 2B				jnz	loc_1373		; Jump if not zero
020A:8E1B  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:8E20  75 24				jnz	loc_1373		; Jump if not zero
020A:8E22  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:8E27  75 1D				jnz	loc_1373		; Jump if not zero
020A:8E29  26: 8B 05				mov	ax,es:[di]
020A:8E2C  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:8E30  72 11				jb	loc_1372		; Jump if below
020A:8E32  77 0A				ja	loc_1371		; Jump if above
020A:8E34  26: 8B 45 02				mov	ax,es:[di+2]
020A:8E38  3B 06 344C				cmp	ax,data_402		; (020A:344C=6C6h)
020A:8E3C  72 05				jb	loc_1372		; Jump if below
020A:8E3E			loc_1371:
020A:8E3E  E8 1B17				call	sub_127			; (A958)
020A:8E41  72 03				jc	loc_1373		; Jump if carry Set
020A:8E43			loc_1372:
020A:8E43  E9 FF3E				jmp	loc_1364		; (8D84)
020A:8E46			loc_1373:
020A:8E46  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8E4B  75 5E				jnz	loc_1380		; Jump if not zero
020A:8E4D  F6 06 3458 40			test	data_408,40h		; (020A:3458=0BEh) '@'
020A:8E52  74 07				jz	loc_1374		; Jump if zero
020A:8E54  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 297

020A:8E59  74 50				jz	loc_1380		; Jump if zero
020A:8E5B			loc_1374:
020A:8E5B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8E60  74 0B				jz	loc_1376		; Jump if zero
020A:8E62  F6 06 3458 80			test	data_408,80h		; (020A:3458=0BEh)
020A:8E67  75 02				jnz	loc_1375		; Jump if not zero
020A:8E69  EB 40				jmp	short loc_1380		; (8EAB)
020A:8E6B			loc_1375:
020A:8E6B  EB 43				jmp	short loc_1381		; (8EB0)
020A:8E6D			loc_1376:
020A:8E6D  F6 C7 C0				test	bh,0C0h
020A:8E70  74 3E				jz	loc_1381		; Jump if zero
020A:8E72  26: 8A 45 04				mov	al,es:[di+4]
020A:8E76  24 3F				and	al,3Fh			; '?'
020A:8E78  8A E7				mov	ah,bh
020A:8E7A  80 E4 F0				and	ah,0F0h
020A:8E7D  80 FC 40				cmp	ah,40h			; '@'
020A:8E80  75 0A				jne	loc_1377		; Jump if not equal
020A:8E82  3C 01				cmp	al,1
020A:8E84  74 2A				je	loc_1381		; Jump if equal
020A:8E86  3C 21				cmp	al,21h			; '!'
020A:8E88  74 26				je	loc_1381		; Jump if equal
020A:8E8A  EB 1F				jmp	short loc_1380		; (8EAB)
020A:8E8C			loc_1377:
020A:8E8C  80 FC A0				cmp	ah,0A0h
020A:8E8F  75 11				jne	loc_1378		; Jump if not equal
020A:8E91  F6 06 35EE 01			test	data_461,1		; (020A:35EE=0B4h)
020A:8E96  75 0F				jnz	loc_1379		; Jump if not zero
020A:8E98  3C 02				cmp	al,2
020A:8E9A  74 14				je	loc_1381		; Jump if equal
020A:8E9C  3C 22				cmp	al,22h			; '"'
020A:8E9E  74 10				je	loc_1381		; Jump if equal
020A:8EA0  EB 09				jmp	short loc_1380		; (8EAB)
020A:8EA2			loc_1378:
020A:8EA2  80 FC B0				cmp	ah,0B0h
020A:8EA5  75 04				jne	loc_1380		; Jump if not equal
020A:8EA7			loc_1379:
020A:8EA7  3C 04				cmp	al,4
020A:8EA9  74 05				je	loc_1381		; Jump if equal
020A:8EAB			loc_1380:
020A:8EAB  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:8EAB  9A					db	9Ah
020A:8EAC  0924 14FC				dw	924h, 14FCh
020A:8EB0			loc_1381:
020A:8EB0  80 3E 303E 01			cmp	data_296,1		; (020A:303E=42h)
020A:8EB5  75 3B				jne	loc_1383		; Jump if not equal
020A:8EB7  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:8EBC  74 07				jz	loc_1382		; Jump if zero
020A:8EBE  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:8EBE  9A					db	9Ah
020A:8EBF  4188 14FC				dw	4188h, 14FCh
020A:8EC3  EB 2D				jmp	short loc_1383		; (8EF2)
020A:8EC5			loc_1382:
020A:8EC5  80 3E 303B 01			cmp	data_294,1		; (020A:303B=2Dh)
020A:8ECA  74 26				je	loc_1383		; Jump if equal
020A:8ECC  80 3E 3465 00			cmp	data_417,0		; (020A:3465=6)
020A:8ED1  75 5C				jne	loc_1385		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 298

020A:8ED3  9A 14FC:4104		;*		call	far ptr sub_202		;*(14FC:4104)
020A:8ED3  9A					db	9Ah
020A:8ED4  4104 14FC				dw	4104h, 14FCh
020A:8ED8  73 18				jnc	loc_1383		; Jump if carry=0
020A:8EDA  B0 53				mov	al,53h			; 'S'
020A:8EDC  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:8EE0  3E: 88 46 00				mov	ds:[bp],al
020A:8EE4  45					inc	bp
020A:8EE5  3E: 88 46 00				mov	ds:[bp],al
020A:8EE9  45					inc	bp
020A:8EEA  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:8EEF  45					inc	bp
020A:8EF0  EB 3D				jmp	short loc_1385		; (8F2F)
020A:8EF2			loc_1383:
020A:8EF2  80 3E 3465 00			cmp	data_417,0		; (020A:3465=6)
020A:8EF7  75 36				jne	loc_1385		; Jump if not equal
020A:8EF9  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8EFE  74 2F				jz	loc_1385		; Jump if zero
020A:8F00  80 3E 362B 90			cmp	data_483,90h		; (020A:362B=0EFh)
020A:8F05  75 28				jne	loc_1385		; Jump if not equal
020A:8F07  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8F0C  75 21				jne	loc_1385		; Jump if not equal
020A:8F0E  B0 53				mov	al,53h			; 'S'
020A:8F10  9A 14FC:4104		;*		call	far ptr sub_202		;*(14FC:4104)
020A:8F10  9A					db	9Ah
020A:8F11  4104 14FC				dw	4104h, 14FCh
020A:8F15  72 02				jc	loc_1384		; Jump if carry Set
020A:8F17  B0 44				mov	al,44h			; 'D'
020A:8F19			loc_1384:
020A:8F19  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:8F1D  3E: 88 46 00				mov	ds:[bp],al
020A:8F21  45					inc	bp
020A:8F22  B8 3A53				mov	ax,3A53h
020A:8F25  0A 06 35DF				or	al,data_450		; (020A:35DF=80h)
020A:8F29  3E: 89 46 00				mov	ds:[bp],ax
020A:8F2D  45					inc	bp
020A:8F2E  45			data_728	db	45h			; Data table (indexed access)
020A:8F2F			loc_1385:
020A:8F2F  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8F34  75 10				jne	loc_1387		; Jump if not equal
020A:8F36  B9 000A				mov	cx,0Ah
020A:8F39  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:8F39  9A					db	9Ah
020A:8F3A  2D70 14FC				dw	2D70h, 14FCh
020A:8F3E  80 26 4E10 BF			and	data_581,0BFh		; (020A:4E10=0EDh)
020A:8F43			loc_1386:
020A:8F43  E8 D4C6				call	sub_78			; (640C)
020A:8F46			loc_1387:
020A:8F46  89 3E 30C9				mov	word ptr ds:[30C9h],di	; (020A:30C9=562Eh)
020A:8F4A  83 06 30C9 04			add	word ptr ds:[30C9h],4	; (020A:30C9=562Eh)
020A:8F4F  80 3E 2B3B 06			cmp	data_242,6		; (020A:2B3B=55h)
020A:8F54  72 07				jb	loc_1388		; Jump if below
020A:8F56  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (020A:2B36=3Ah)
020A:8F5B  72 30				jb	loc_1389		; Jump if below
020A:8F5D			loc_1388:
020A:8F5D  A1 347A				mov	ax,data_428		; (020A:347A=542h)
020A:8F60  A3 347E				mov	data_430,ax		; (020A:347E=0DCE8h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 299

020A:8F63  A1 347C				mov	ax,data_429		; (020A:347C=0D88Eh)
020A:8F66  A3 3480				mov	data_431,ax		; (020A:3480=0FC3Bh)
020A:8F69  A1 3476				mov	ax,data_426		; (020A:3476=3ABEh)
020A:8F6C  A3 347A				mov	data_428,ax		; (020A:347A=542h)
020A:8F6F  A1 3478				mov	ax,data_427		; (020A:3478=0B800h)
020A:8F72  A3 347C				mov	data_429,ax		; (020A:347C=0D88Eh)
020A:8F75  A1 40F5				mov	ax,data_523		; (020A:40F5=3C26h)
020A:8F78  A3 3476				mov	data_426,ax		; (020A:3476=3ABEh)
020A:8F7B  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:8F7E  A3 3478				mov	data_427,ax		; (020A:3478=0B800h)
020A:8F81  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:8F86  74 05				je	loc_1389		; Jump if equal
020A:8F88  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:8F8D			loc_1389:
020A:8F8D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8F92  9C					pushf				; Push flags
020A:8F93  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8F98  5A					pop	dx
020A:8F99  8E C2				mov	es,dx
020A:8F9B  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:8FA0  5A					pop	dx
020A:8FA1  75 0A				jnz	loc_1390		; Jump if not zero
020A:8FA3  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:8FA8  74 03				je	loc_1390		; Jump if equal
020A:8FAA  E8 E40F				call	sub_103			; (73BC)
020A:8FAD			loc_1390:
020A:8FAD  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8FB2  9D					popf				; Pop flags
020A:8FB3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8FB8  5F					pop	di
020A:8FB9  5E					pop	si
020A:8FBA  5A					pop	dx
020A:8FBB  5B					pop	bx
020A:8FBC  C3					retn
				sub_117		endp

020A:8FBD  87 DB				xchg	bx,bx
020A:8FBF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_118		proc	near
020A:8FC0  50					push	ax
020A:8FC1  52					push	dx
020A:8FC2  56					push	si
020A:8FC3  57					push	di
020A:8FC4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:8FC9  06					push	es
020A:8FCA  51					push	cx
020A:8FCB  C6 06 4E0A 00			mov	data_577,0		; (020A:4E0A=14h)
020A:8FD0  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:8FD5  74 05				je	loc_1391		; Jump if equal
020A:8FD7  BA 0001				mov	dx,1
020A:8FDA  EB 03				jmp	short loc_1392		; (8FDF)
020A:8FDC			loc_1391:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 300

020A:8FDC  BA 0004				mov	dx,4
020A:8FDF			loc_1392:
020A:8FDF  BF 0000				mov	di,0
020A:8FE2  80 3E 2B37 02			cmp	data_239,2		; (020A:2B37=5Ch)
020A:8FE7  75 37				jne	loc_1396		; Jump if not equal
020A:8FE9  83 FA 04				cmp	dx,4
020A:8FEC  74 28				je	loc_1394		; Jump if equal
020A:8FEE  F6 06 4E7F 02			test	data_633,2		; (020A:4E7F=0E8h)
020A:8FF3  74 2B				jz	loc_1396		; Jump if zero
020A:8FF5  F6 06 4E7F 80			test	data_633,80h		; (020A:4E7F=0E8h)
020A:8FFA  74 21				jz	loc_1395		; Jump if zero
020A:8FFC  3B 1E 344A				cmp	bx,data_401		; (020A:344A=0CD01h)
020A:9000  75 1B				jne	loc_1395		; Jump if not equal
020A:9002  52					push	dx
020A:9003  8B 16 344C				mov	dx,data_402		; (020A:344C=6C6h)
020A:9007  2B D0				sub	dx,ax
020A:9009  73 02				jnc	loc_1393		; Jump if carry=0
020A:900B  F7 D2				not	dx
020A:900D			loc_1393:
020A:900D  81 FA 0080				cmp	dx,80h
020A:9011  5A					pop	dx
020A:9012  72 0C				jc	loc_1396		; Jump if carry Set
020A:9014  EB 07				jmp	short loc_1395		; (901D)
020A:9016			loc_1394:
020A:9016  F6 06 4E7F 01			test	data_633,1		; (020A:4E7F=0E8h)
020A:901B  74 03				jz	loc_1396		; Jump if zero
020A:901D			loc_1395:
020A:901D  E8 1464				call	sub_124			; (A484)
020A:9020			loc_1396:
020A:9020  E8 CE69				call	sub_76			; (5E8C)
020A:9023  73 03				jnc	loc_1397		; Jump if carry=0
020A:9025  E9 0145				jmp	loc_1414		; (916D)
020A:9028			loc_1397:
020A:9028  83 FB 00				cmp	bx,0
020A:902B  75 08				jne	loc_1398		; Jump if not equal
020A:902D  3D 03FF				cmp	ax,3FFh
020A:9030  77 03				ja	loc_1398		; Jump if above
020A:9032  E9 009B				jmp	loc_1405		; (90D0)
020A:9035			loc_1398:
020A:9035  83 3E 30BE 00			cmp	data_362,0		; (020A:30BE=2E3Bh)
020A:903A  75 50				jne	loc_1402		; Jump if not equal
020A:903C  06					push	es
020A:903D  57					push	di
020A:903E  50					push	ax
020A:903F  8E 06 344A				mov	es,data_401		; (020A:344A=0CD01h)
020A:9043  8B 3E 344C				mov	di,data_402		; (020A:344C=6C6h)
020A:9047  26: 80 3D EB				cmp	byte ptr es:[di],0EBh
020A:904B  74 12				je	loc_1399		; Jump if equal
020A:904D  26: 80 3D E3				cmp	byte ptr es:[di],0E3h
020A:9051  74 0C				je	loc_1399		; Jump if equal
020A:9053  26: 80 3D 70				cmp	byte ptr es:[di],70h	; 'p'
020A:9057  72 30				jb	loc_1401		; Jump if below
020A:9059  26: 80 3D 7F				cmp	byte ptr es:[di],7Fh
020A:905D  77 2A				ja	loc_1401		; Jump if above
020A:905F			loc_1399:
020A:905F  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:9064  75 23				jnz	loc_1401		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 301

020A:9066  2B 06 344C				sub	ax,data_402		; (020A:344C=6C6h)
020A:906A  3D 0003				cmp	ax,3
020A:906D  77 1A				ja	loc_1401		; Jump if above
020A:906F  3D 0002				cmp	ax,2
020A:9072  74 0B				je	loc_1400		; Jump if equal
020A:9074  72 13				jc	loc_1401		; Jump if carry Set
020A:9076  26: 80 7D 02 90			cmp	byte ptr es:[di+2],90h
020A:907B  74 02				je	loc_1400		; Jump if equal
020A:907D  EB 0A				jmp	short loc_1401		; (9089)
020A:907F			loc_1400:
020A:907F  C6 06 309E F5			mov	data_346,0F5h		; (020A:309E=65h)
020A:9084  58					pop	ax
020A:9085  5F					pop	di
020A:9086  07					pop	es
020A:9087  EB 47				jmp	short loc_1405		; (90D0)
020A:9089			loc_1401:
020A:9089  58					pop	ax
020A:908A  5F					pop	di
020A:908B  07					pop	es
020A:908C			loc_1402:
020A:908C  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:9091  74 3D				je	loc_1405		; Jump if equal
020A:9093  BF 532E				mov	di,532Eh
020A:9096  A1 40F5				mov	ax,data_523		; (020A:40F5=3C26h)
020A:9099  89 05				mov	[di],ax
020A:909B  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:909E  89 45 02				mov	[di+2],ax
020A:90A1  32 C9				xor	cl,cl			; Zero register
020A:90A3  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:90A8  74 03				je	loc_1403		; Jump if equal
020A:90AA  E9 0097				jmp	loc_1411		; (9144)
020A:90AD			loc_1403:
020A:90AD  C6 45 04 00				mov	byte ptr [di+4],0
020A:90B1  C6 45 05 08				mov	byte ptr [di+5],8
020A:90B5  80 3E 15D0 01			cmp	data_161,1		; (020A:15D0=0)
020A:90BA  77 04				ja	loc_1404		; Jump if above
020A:90BC  C6 45 05 09				mov	byte ptr [di+5],9
020A:90C0			loc_1404:
020A:90C0  C6 45 06 00				mov	byte ptr [di+6],0
020A:90C4  C6 45 32 00				mov	byte ptr [di+32h],0
020A:90C8  C7 45 07 0000			mov	word ptr [di+7],0
020A:90CD  E9 008B				jmp	loc_1413		; (915B)
020A:90D0			loc_1405:
020A:90D0  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:90D3  2B 06 344C				sub	ax,data_402		; (020A:344C=6C6h)
020A:90D7  A3 35F4				mov	data_465,ax		; (020A:35F4=375h)
020A:90DA  C7 06 35F6 0000			mov	data_466,0		; (020A:35F6=8CE9h)
020A:90E0  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:90E5  45					inc	bp
020A:90E6  9A 14FC:5964		;*		call	far ptr sub_230		;*(14FC:5964)
020A:90E6  9A					db	9Ah
020A:90E7  5964 14FC				dw	5964h, 14FCh
020A:90EB  C6 06 4E0A 01			mov	data_577,1		; (020A:4E0A=14h)
020A:90F0  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:90F3  2B 06 3056				sub	ax,data_312		; (020A:3056=4F53h)
020A:90F7  3D 000F				cmp	ax,0Fh
020A:90FA  77 02				ja	loc_1406		; Jump if above
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 302

020A:90FC  EB 04				jmp	short loc_1407		; (9102)
020A:90FE			loc_1406:
020A:90FE  59					pop	cx
020A:90FF  E9 0294				jmp	loc_1439		; (9396)
020A:9102			loc_1407:
020A:9102  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:9107  74 37				je	loc_1410		; Jump if equal
020A:9109  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:910C  3B 06 40F5				cmp	ax,data_523		; (020A:40F5=3C26h)
020A:9110  75 2E				jne	loc_1410		; Jump if not equal
020A:9112  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:9115  3D 0010				cmp	ax,10h
020A:9118  76 03				jbe	loc_1408		; Jump if below or =
020A:911A  2D 0010				sub	ax,10h
020A:911D			loc_1408:
020A:911D  3B 06 3056				cmp	ax,data_312		; (020A:3056=4F53h)
020A:9121  73 1D				jae	loc_1410		; Jump if above or =
020A:9123  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:9126  3B 06 35A1				cmp	ax,data_441		; (020A:35A1=977h)
020A:912A  76 14				jbe	loc_1410		; Jump if below or =
020A:912C  3D 0280				cmp	ax,280h
020A:912F  76 0C				jbe	loc_1409		; Jump if below or =
020A:9131  2D 0280				sub	ax,280h
020A:9134  3B 06 344C				cmp	ax,data_402		; (020A:344C=6C6h)
020A:9138  77 06				ja	loc_1410		; Jump if above
020A:913A  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:913D			loc_1409:
020A:913D  A3 35A1				mov	data_441,ax		; (020A:35A1=977h)
020A:9140			loc_1410:
020A:9140  59					pop	cx
020A:9141  E9 0252				jmp	loc_1439		; (9396)
020A:9144			loc_1411:
020A:9144  C6 45 04 00				mov	byte ptr [di+4],0
020A:9148  C6 45 05 00				mov	byte ptr [di+5],0
020A:914C  80 3E 15D0 01			cmp	data_161,1		; (020A:15D0=0)
020A:9151  77 04				ja	loc_1412		; Jump if above
020A:9153  C6 45 05 01				mov	byte ptr [di+5],1
020A:9157			loc_1412:
020A:9157  C6 45 06 00				mov	byte ptr [di+6],0
020A:915B			loc_1413:
020A:915B  E8 F342				call	sub_114			; (84A0)
020A:915E  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (06C7:0006=8A22h)
020A:9163  89 3E 4E0D				mov	data_579,di		; (020A:4E0D=2B3h)
020A:9167  E8 C5A6				call	sub_59			; (5710)
020A:916A  E9 00AA				jmp	loc_1421		; (9217)
020A:916D			loc_1414:
020A:916D  89 3E 4E0D				mov	data_579,di		; (020A:4E0D=2B3h)
020A:9171  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:9176  75 21				jnz	loc_1415		; Jump if not zero
020A:9178  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:917D  75 24				jne	loc_1416		; Jump if not equal
020A:917F  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:9184  75 1D				jnz	loc_1416		; Jump if not zero
020A:9186  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:9189  26: 3B 05				cmp	ax,es:[di]
020A:918C  77 0B				ja	loc_1415		; Jump if above
020A:918E  72 13				jc	loc_1416		; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 303

020A:9190  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:9193  26: 3B 45 02				cmp	ax,es:[di+2]
020A:9197  76 0A				jbe	loc_1416		; Jump if below or =
020A:9199			loc_1415:
020A:9199  C6 06 35DE 01			mov	data_449,1		; (020A:35DE=2Eh)
020A:919E  C6 06 4E08 01			mov	data_576,1		; (020A:4E08=2Bh)
020A:91A3			loc_1416:
020A:91A3  B9 003B				mov	cx,3Bh
020A:91A6  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:91AB  74 3A				je	loc_1419		; Jump if equal
020A:91AD  B9 0007				mov	cx,7
020A:91B0  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:91B3  3B 06 40F5				cmp	ax,data_523		; (020A:40F5=3C26h)
020A:91B7  75 2E				jne	loc_1419		; Jump if not equal
020A:91B9  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:91BC  3D 0010				cmp	ax,10h
020A:91BF  76 03				jbe	loc_1417		; Jump if below or =
020A:91C1  2D 0010				sub	ax,10h
020A:91C4			loc_1417:
020A:91C4  3B 06 3056				cmp	ax,data_312		; (020A:3056=4F53h)
020A:91C8  73 1D				jae	loc_1419		; Jump if above or =
020A:91CA  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:91CD  3B 06 35A1				cmp	ax,data_441		; (020A:35A1=977h)
020A:91D1  76 14				jbe	loc_1419		; Jump if below or =
020A:91D3  3D 0280				cmp	ax,280h
020A:91D6  76 0C				jbe	loc_1418		; Jump if below or =
020A:91D8  2D 0280				sub	ax,280h
020A:91DB  3B 06 344C				cmp	ax,data_402		; (020A:344C=6C6h)
020A:91DF  77 06				ja	loc_1419		; Jump if above
020A:91E1  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:91E4			loc_1418:
020A:91E4  A3 35A1				mov	data_441,ax		; (020A:35A1=977h)
020A:91E7			loc_1419:
020A:91E7  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:91EC  75 29				jne	loc_1421		; Jump if not equal
020A:91EE  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:91EE  9A					db	9Ah
020A:91EF  2D70 14FC				dw	2D70h, 14FCh
020A:91F3  81 FD 2D1B				cmp	bp,2D1Bh
020A:91F7  72 1E				jb	loc_1421		; Jump if below
020A:91F9  81 FD 2DD4				cmp	bp,2DD4h
020A:91FD  73 18				jae	loc_1421		; Jump if above or =
020A:91FF  80 3E 2DAD 28			cmp	data_276,28h		; (020A:2DAD=54h) '('
020A:9204  74 11				je	loc_1421		; Jump if equal
020A:9206  F6 06 15D0 02			test	data_161,2		; (020A:15D0=0)
020A:920B  74 07				jz	loc_1420		; Jump if zero
020A:920D  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:920D  9A					db	9Ah
020A:920E  55E4 14FC				dw	55E4h, 14FCh
020A:9212  73 03				jnc	loc_1421		; Jump if carry=0
020A:9214			loc_1420:
020A:9214  E8 108D				call	sub_122			; (A2A4)
020A:9217			loc_1421:
020A:9217  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:921C  74 03				je	loc_1422		; Jump if equal
020A:921E  E9 0102				jmp	loc_1433		; (9323)
020A:9221			loc_1422:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 304

020A:9221  59					pop	cx
020A:9222  51					push	cx
020A:9223  F6 C1 02				test	cl,2
020A:9226  74 0E				jz	loc_1424		; Jump if zero
020A:9228  26: 8A 45 04				mov	al,es:[di+4]
020A:922C  24 07				and	al,7
020A:922E  74 03				jz	loc_1423		; Jump if zero
020A:9230  E9 00F0				jmp	loc_1433		; (9323)
020A:9233			loc_1423:
020A:9233  E9 00A7				jmp	loc_1429		; (92DD)
020A:9236			loc_1424:
020A:9236  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:923B  75 12				jnz	loc_1426		; Jump if not zero
020A:923D  F7 06 4E22 0400			test	data_591,400h		; (020A:4E22=0EDA3h)
020A:9243  75 07				jnz	loc_1425		; Jump if not zero
020A:9245  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (020A:327F=0)
020A:924A  75 03				jne	loc_1426		; Jump if not equal
020A:924C			loc_1425:
020A:924C  E9 008E				jmp	loc_1429		; (92DD)
020A:924F			loc_1426:
020A:924F  26: 8B 05				mov	ax,es:[di]
020A:9252  A3 3466				mov	data_418,ax		; (020A:3466=472h)
020A:9255  26: 8B 45 02				mov	ax,es:[di+2]
020A:9259  A3 3468				mov	data_419,ax		; (020A:3468=1689h)
020A:925C  80 0E 3459 02			or	data_409,2		; (020A:3459=21h)
020A:9261  C7 06 3484 FFFF			mov	data_433,0FFFFh		; (020A:3484=0BEE8h)
020A:9267  26: 8A 45 32				mov	al,es:[di+32h]
020A:926B  24 38				and	al,38h			; '8'
020A:926D  3C 38				cmp	al,38h			; '8'
020A:926F  75 6C				jne	loc_1429		; Jump if not equal
020A:9271  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:9276  74 05				jz	loc_1427		; Jump if zero
020A:9278  C6 06 53D7 01			mov	data_650,1		; (020A:53D7=0FFh)
020A:927D			loc_1427:
020A:927D  C6 06 3459 05			mov	data_409,5		; (020A:3459=21h)
020A:9282  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:9287  75 54				jne	loc_1429		; Jump if not equal
020A:9289  C6 06 5709 86			mov	data_672,86h		; (020A:5709=16h)
020A:928E  51					push	cx
020A:928F  57					push	di
020A:9290  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:9295  06					push	es
020A:9296  E8 DDC4				call	sub_95			; (705D)
020A:9299  55					push	bp
020A:929A  E8 D37B				call	sub_79			; (6618)
020A:929D  8B FD				mov	di,bp
020A:929F  5D					pop	bp
020A:92A0  BE 40A3				mov	si,40A3h
020A:92A3  B9 40BB				mov	cx,40BBh
020A:92A6  81 E9 40A1				sub	cx,40A1h
020A:92AA  83 E9 02				sub	cx,2
020A:92AD  FC					cld				; Clear direction
020A:92AE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:92B0  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:92B5  9C					pushf				; Push flags
020A:92B6  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:92BB  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 305

020A:92BC  8E C2				mov	es,dx
020A:92BE  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:92C3  5A					pop	dx
020A:92C4  75 0A				jnz	loc_1428		; Jump if not zero
020A:92C6  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:92CB  74 03				je	loc_1428		; Jump if equal
020A:92CD  E8 E0EC				call	sub_103			; (73BC)
020A:92D0			loc_1428:
020A:92D0  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:92D5  9D					popf				; Pop flags
020A:92D6  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:92DB  5F					pop	di
020A:92DC  59					pop	cx
020A:92DD			loc_1429:
020A:92DD  26: 8A 45 04				mov	al,es:[di+4]
020A:92E1  A8 01				test	al,1
020A:92E3  74 04				jz	loc_1430		; Jump if zero
020A:92E5  A8 02				test	al,2
020A:92E7  75 14				jnz	loc_1431		; Jump if not zero
020A:92E9			loc_1430:
020A:92E9  0C 03				or	al,3
020A:92EB  26: 88 45 04				mov	es:[di+4],al
020A:92EF  57					push	di
020A:92F0  83 C7 09				add	di,9
020A:92F3  BE 35FA				mov	si,35FAh
020A:92F6  B9 0029				mov	cx,29h
020A:92F9  FC					cld				; Clear direction
020A:92FA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:92FC  5F					pop	di
020A:92FD			loc_1431:
020A:92FD  26: 8A 45 32				mov	al,es:[di+32h]
020A:9301  A8 80				test	al,80h
020A:9303  74 0D				jz	loc_1432		; Jump if zero
020A:9305  26: 8B 4D 33				mov	cx,es:[di+33h]
020A:9309  C6 06 35DD 01			mov	data_448,1		; (020A:35DD=3Ah)
020A:930E  89 0E 361A				mov	data_477,cx		; (020A:361A=69B9h)
020A:9312			loc_1432:
020A:9312  A8 40				test	al,40h			; '@'
020A:9314  74 0D				jz	loc_1433		; Jump if zero
020A:9316  26: 8B 4D 35				mov	cx,es:[di+35h]
020A:931A  C6 06 35DD 01			mov	data_448,1		; (020A:35DD=3Ah)
020A:931F  89 0E 3618				mov	data_476,cx		; (020A:3618=5F24h)
020A:9323			loc_1433:
020A:9323  80 3E 2B3B 06			cmp	data_242,6		; (020A:2B3B=55h)
020A:9328  72 07				jb	loc_1434		; Jump if below
020A:932A  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (020A:2B36=3Ah)
020A:932F  72 13				jb	loc_1436		; Jump if below
020A:9331			loc_1434:
020A:9331  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:9336  74 07				je	loc_1435		; Jump if equal
020A:9338  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:933D  75 05				jnz	loc_1436		; Jump if not zero
020A:933F			loc_1435:
020A:933F  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:9344			loc_1436:
020A:9344  59					pop	cx
020A:9345  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 306

020A:934A  75 0C				jne	loc_1437		; Jump if not equal
020A:934C  F6 C1 01				test	cl,1
020A:934F  74 45				jz	loc_1439		; Jump if zero
020A:9351  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:9356  EB 3E				jmp	short loc_1439		; (9396)
020A:9358			loc_1437:
020A:9358  F6 C1 04				test	cl,4
020A:935B  75 18				jnz	loc_1438		; Jump if not zero
020A:935D  A1 346E				mov	ax,data_422		; (020A:346E=8100h)
020A:9360  A3 3472				mov	data_424,ax		; (020A:3472=0BF00h)
020A:9363  A1 3470				mov	ax,data_423		; (020A:3470=3AE9h)
020A:9366  A3 3474				mov	data_425,ax		; (020A:3474=1C5h)
020A:9369  A1 346A				mov	ax,data_420		; (020A:346A=131Fh)
020A:936C  A3 346E				mov	data_422,ax		; (020A:346E=8100h)
020A:936F  A1 346C				mov	ax,data_421		; (020A:346C=47B9h)
020A:9372  A3 3470				mov	data_423,ax		; (020A:3470=3AE9h)
020A:9375			loc_1438:
020A:9375  A1 40F5				mov	ax,data_523		; (020A:40F5=3C26h)
020A:9378  A3 346A				mov	data_420,ax		; (020A:346A=131Fh)
020A:937B  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:937E  A3 346C				mov	data_421,ax		; (020A:346C=47B9h)
020A:9381  89 3E 4E0B				mov	data_578,di		; (020A:4E0B=4B1h)
020A:9385  F6 C1 08				test	cl,8
020A:9388  74 0C				jz	loc_1439		; Jump if zero
020A:938A  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:938A  9A					db	9Ah
020A:938B  55E4 14FC				dw	55E4h, 14FCh
020A:938F  72 05				jc	loc_1439		; Jump if carry Set
020A:9391  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020A:9396			loc_1439:
020A:9396  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:939B  9C					pushf				; Push flags
020A:939C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:93A1  5A					pop	dx
020A:93A2  8E C2				mov	es,dx
020A:93A4  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:93A9  5A					pop	dx
020A:93AA  75 0A				jnz	loc_1440		; Jump if not zero
020A:93AC  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:93B1  74 03				je	loc_1440		; Jump if equal
020A:93B3  E8 E006				call	sub_103			; (73BC)
020A:93B6			loc_1440:
020A:93B6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:93BB  9D					popf				; Pop flags
020A:93BC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:93C1  5F					pop	di
020A:93C2  5E					pop	si
020A:93C3  5A					pop	dx
020A:93C4  58					pop	ax
020A:93C5  C3					retn
				sub_118		endp

020A:93C6  000E[00]				db	14 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 307


				sub_119		proc	near
020A:93D4  B4 04				mov	ah,4
020A:93D6  E8 C2E3		;*		call	sub_58			;*(56BC)
020A:93D6  E8 E3 C2				db	0E8h,0E3h,0C2h
020A:93D9  E8 BF50				call	sub_48			; (532C)
020A:93DC  E8 DC7E				call	sub_95			; (705D)
020A:93DF  E8 DC99				call	sub_100			; (707B)
020A:93E2  A3 3037				mov	data_292,ax		; (020A:3037=4D44h)
020A:93E5  E8 15E0				call	sub_128			; (A9C8)
020A:93E8  A1 2CC8				mov	ax,data_268		; (020A:2CC8=4E45h)
020A:93EB  3D 0000				cmp	ax,0
020A:93EE  75 0D				jne	loc_1441		; Jump if not equal
020A:93F0  83 3E 2CC6 00			cmp	data_267,0		; (020A:2CC6=4449h)
020A:93F5  75 06				jne	loc_1441		; Jump if not equal
020A:93F7  B8 0002				mov	ax,2
020A:93FA  E9 0D33				jmp	loc_1586		; (A130)
020A:93FD			loc_1441:
020A:93FD  83 3E 2BEB 00			cmp	data_256,0		; (020A:2BEB=4E4Fh)
020A:9402  75 07				jne	loc_1442		; Jump if not equal
020A:9404  83 3E 2BED 00			cmp	data_257,0		; (020A:2BED=4553h)
020A:9409  74 0E				je	loc_1443		; Jump if equal
020A:940B			loc_1442:
020A:940B  A1 2BEB				mov	ax,data_256		; (020A:2BEB=4E4Fh)
020A:940E  A3 2CC8				mov	data_268,ax		; (020A:2CC8=4E45h)
020A:9411  A1 2BED				mov	ax,data_257		; (020A:2BED=4553h)
020A:9414  A3 2CC6				mov	data_267,ax		; (020A:2CC6=4449h)
020A:9417  EB 2F				jmp	short loc_1446		; (9448)
020A:9419			loc_1443:
020A:9419  83 3E 2BE7 00			cmp	data_254,0		; (020A:2BE7=4C00h)
020A:941E  75 07				jne	loc_1444		; Jump if not equal
020A:9420  83 3E 2BE9 00			cmp	data_255,0		; (020A:2BE9=474Fh)
020A:9425  74 21				je	loc_1446		; Jump if equal
020A:9427			loc_1444:
020A:9427  A1 2CC6				mov	ax,data_267		; (020A:2CC6=4449h)
020A:942A  2B 06 2BE9				sub	ax,data_255		; (020A:2BE9=474Fh)
020A:942E  A3 2CC6				mov	data_267,ax		; (020A:2CC6=4449h)
020A:9431  A1 2CC8				mov	ax,data_268		; (020A:2CC8=4E45h)
020A:9434  73 01				jnc	loc_1445		; Jump if carry=0
020A:9436  48					dec	ax
020A:9437			loc_1445:
020A:9437  2B 06 2BE7				sub	ax,data_254		; (020A:2BE7=4C00h)
020A:943B  A3 2CC8				mov	data_268,ax		; (020A:2CC8=4E45h)
020A:943E  73 08				jnc	loc_1446		; Jump if carry=0
020A:9440  C6 06 1DD8 43			mov	data_192,43h		; (020A:1DD8=0) 'C'
020A:9445  E9 0149				jmp	loc_1463		; (9591)
020A:9448			loc_1446:
020A:9448  A1 2CC8				mov	ax,data_268		; (020A:2CC8=4E45h)
020A:944B  8B D8				mov	bx,ax
020A:944D  83 E3 F0				and	bx,0FFF0h
020A:9450  C6 06 1DD8 41			mov	data_192,41h		; (020A:1DD8=0) 'A'
020A:9455  74 03				jz	loc_1447		; Jump if zero
020A:9457  E9 00D5				jmp	loc_1456		; (952F)
020A:945A			loc_1447:
020A:945A  B1 0C				mov	cl,0Ch
020A:945C  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:945E  8B 1E 2CC6				mov	bx,data_267		; (020A:2CC6=4449h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 308

020A:9462  B1 04				mov	cl,4
020A:9464  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:9466  03 D8				add	bx,ax
020A:9468  43					inc	bx
020A:9469  43					inc	bx
020A:946A  83 FB 01				cmp	bx,1
020A:946D  C6 06 1DD8 42			mov	data_192,42h		; (020A:1DD8=0) 'B'
020A:9472  76 28				jbe	loc_1450		; Jump if below or =
020A:9474  8B D3				mov	dx,bx
020A:9476  BB 0008				mov	bx,8
020A:9479  33 C0				xor	ax,ax			; Zero register
020A:947B  33 C9				xor	cx,cx			; Zero register
020A:947D			loc_1448:
020A:947D  03 8F 2BED				add	cx,data_257[bx]		; (020A:2BED=4553h)
020A:9481  73 01				jnc	loc_1449		; Jump if carry=0
020A:9483  40					inc	ax
020A:9484			loc_1449:
020A:9484  03 87 2BEB				add	ax,data_256[bx]		; (020A:2BEB=4E4Fh)
020A:9488  83 C3 08				add	bx,8
020A:948B  83 FB 20				cmp	bx,20h
020A:948E  76 ED				jbe	loc_1448		; Jump if below or =
020A:9490  8B D8				mov	bx,ax
020A:9492  83 E3 F0				and	bx,0FFF0h
020A:9495  C6 06 1DD8 49			mov	data_192,49h		; (020A:1DD8=0) 'I'
020A:949A  74 03				jz	loc_1451		; Jump if zero
020A:949C			loc_1450:
020A:949C  E9 0090				jmp	loc_1456		; (952F)
020A:949F			loc_1451:
020A:949F  8B D9				mov	bx,cx
020A:94A1  B1 0C				mov	cl,0Ch
020A:94A3  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:94A5  B1 04				mov	cl,4
020A:94A7  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:94A9  03 D8				add	bx,ax
020A:94AB  72 EF				jc	loc_1450		; Jump if carry Set
020A:94AD  43					inc	bx
020A:94AE  0B DB				or	bx,bx			; Zero ?
020A:94B0  C6 06 1DD8 4A			mov	data_192,4Ah		; (020A:1DD8=0) 'J'
020A:94B5  74 78				jz	loc_1456		; Jump if zero
020A:94B7  03 D3				add	dx,bx
020A:94B9  72 74				jc	loc_1456		; Jump if carry Set
020A:94BB  E8 DBBD				call	sub_100			; (707B)
020A:94BE  8C C9				mov	cx,cs
020A:94C0  2B C1				sub	ax,cx
020A:94C2  8B 0E 2B3D				mov	cx,data_244		; (020A:2B3D=7E45h)
020A:94C6  2B C8				sub	cx,ax
020A:94C8  72 31				jc	loc_1453		; Jump if carry Set
020A:94CA  83 E9 20				sub	cx,20h
020A:94CD  72 2C				jc	loc_1453		; Jump if carry Set
020A:94CF  3B CA				cmp	cx,dx
020A:94D1  76 5C				jbe	loc_1456		; Jump if below or =
020A:94D3  83 3E 3035 00			cmp	data_291,0		; (020A:3035=415Ch)
020A:94D8  74 23				je	loc_1454		; Jump if equal
020A:94DA  BB FFFF				mov	bx,0FFFFh
020A:94DD  E8 DB98				call	sub_99			; (7078)
020A:94E0  05 1000				add	ax,1000h
020A:94E3  3B 06 3035				cmp	ax,data_291		; (020A:3035=415Ch)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 309

020A:94E7  76 0B				jbe	loc_1452		; Jump if below or =
020A:94E9  2B 06 3035				sub	ax,data_291		; (020A:3035=415Ch)
020A:94ED  B1 04				mov	cl,4
020A:94EF  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:94F1  2B D8				sub	bx,ax
020A:94F3  4B					dec	bx
020A:94F4			loc_1452:
020A:94F4  89 1E 4E82				mov	data_635,bx		; (020A:4E82=38E9h)
020A:94F8  E9 009C				jmp	loc_1464		; (9597)
020A:94FB			loc_1453:
020A:94FB  EB 5D				jmp	short loc_1458		; (955A)
020A:94FD			loc_1454:
020A:94FD  B8 FFFF				mov	ax,0FFFFh
020A:9500  2D 2C44				sub	ax,2C44h
020A:9503  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9505  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9507  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9509  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:950B  2B CA				sub	cx,dx
020A:950D  3B C8				cmp	cx,ax
020A:950F  73 02				jae	loc_1455		; Jump if above or =
020A:9511  8B C1				mov	ax,cx
020A:9513			loc_1455:
020A:9513  01 06 3037				add	data_292,ax		; (020A:3037=4D44h)
020A:9517  E8 DB5E				call	sub_99			; (7078)
020A:951A  8B D8				mov	bx,ax
020A:951C  A1 3037				mov	ax,data_292		; (020A:3037=4D44h)
020A:951F  2B C3				sub	ax,bx
020A:9521  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9523  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9525  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9527  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9529  48					dec	ax
020A:952A  A3 4E82				mov	data_635,ax		; (020A:4E82=38E9h)
020A:952D  EB 68				jmp	short loc_1464		; (9597)
020A:952F			loc_1456:
020A:952F  E8 DB49				call	sub_100			; (707B)
020A:9532  8C C9				mov	cx,cs
020A:9534  2B C1				sub	ax,cx
020A:9536  8B 0E 2B3D				mov	cx,data_244		; (020A:2B3D=7E45h)
020A:953A  2B C8				sub	cx,ax
020A:953C  8B D1				mov	dx,cx
020A:953E  B1 04				mov	cl,4
020A:9540  D3 C2				rol	dx,cl			; Rotate
020A:9542  8B CA				mov	cx,dx
020A:9544  83 E1 0F				and	cx,0Fh
020A:9547  83 E2 F0				and	dx,0FFF0h
020A:954A  A1 2CC8				mov	ax,data_268		; (020A:2CC8=4E45h)
020A:954D  8B 1E 2CC6				mov	bx,data_267		; (020A:2CC6=4449h)
020A:9551  2B DA				sub	bx,dx
020A:9553  73 01				jnc	loc_1457		; Jump if carry=0
020A:9555  48					dec	ax
020A:9556			loc_1457:
020A:9556  2B C1				sub	ax,cx
020A:9558  EB 07				jmp	short loc_1459		; (9561)
020A:955A			loc_1458:
020A:955A  A1 2CC8				mov	ax,data_268		; (020A:2CC8=4E45h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 310

020A:955D  8B 1E 2CC6				mov	bx,data_267		; (020A:2CC6=4449h)
020A:9561			loc_1459:
020A:9561  BE 0008				mov	si,8
020A:9564			loc_1460:
020A:9564  03 9C 2BED				add	bx,data_257[si]		; (020A:2BED=4553h)
020A:9568  73 01				jnc	loc_1461		; Jump if carry=0
020A:956A  40					inc	ax
020A:956B			loc_1461:
020A:956B  03 84 2BEB				add	ax,data_256[si]		; (020A:2BEB=4E4Fh)
020A:956F  83 C6 08				add	si,8
020A:9572  83 FE 20				cmp	si,20h
020A:9575  76 ED				jbe	loc_1460		; Jump if below or =
020A:9577  B9 000A				mov	cx,0Ah

020A:957A			locloop_1462:
020A:957A  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:957C  D1 DB				rcr	bx,1			; Rotate thru carry
020A:957E  E2 FA				loop	locloop_1462		; Loop if cx > 0

020A:9580  3D 0000				cmp	ax,0
020A:9583  75 0C				jne	loc_1463		; Jump if not equal
020A:9585  8B C3				mov	ax,bx
020A:9587  B3 01				mov	bl,1
020A:9589  BD 1DBA				mov	bp,1DBAh
020A:958C  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:958C  9A					db	9Ah
020A:958D  0288 14FC				dw	288h, 14FCh
020A:9591			loc_1463:
020A:9591  B8 0008				mov	ax,8
020A:9594  E9 0B99				jmp	loc_1586		; (A130)
020A:9597			loc_1464:
020A:9597  8B 1E 2B3D				mov	bx,data_244		; (020A:2B3D=7E45h)
020A:959B  8E 06 5618				mov	es,data_661		; (020A:5618=8107h)
020A:959F  B4 4A				mov	ah,4Ah
020A:95A1  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:95A3  73 07				jnc	loc_1465		; Jump if carry=0
020A:95A5  C6 06 1DD8 44			mov	data_192,44h		; (020A:1DD8=0) 'D'
020A:95AA  EB E5				jmp	short loc_1463		; (9591)
020A:95AC			loc_1465:
020A:95AC  8C C8				mov	ax,cs
020A:95AE  03 06 2B3D				add	ax,data_244		; (020A:2B3D=7E45h)
020A:95B2  2D 0010				sub	ax,10h
020A:95B5  8B D0				mov	dx,ax
020A:95B7  A1 3037				mov	ax,data_292		; (020A:3037=4D44h)
020A:95BA  8E C0				mov	es,ax
020A:95BC  2B D0				sub	dx,ax
020A:95BE			loc_1466:
020A:95BE  8B C2				mov	ax,dx
020A:95C0  25 F000				and	ax,0F000h
020A:95C3  74 17				jz	loc_1467		; Jump if zero
020A:95C5  81 EA 1000				sub	dx,1000h
020A:95C9  B9 8000				mov	cx,8000h
020A:95CC  33 FF				xor	di,di			; Zero register
020A:95CE  33 C0				xor	ax,ax			; Zero register
020A:95D0  FC					cld				; Clear direction
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 311

020A:95D1  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:95D3  8C C0				mov	ax,es
020A:95D5  05 1000				add	ax,1000h
020A:95D8  8E C0				mov	es,ax
020A:95DA  EB E2				jmp	short loc_1466		; (95BE)
020A:95DC			loc_1467:
020A:95DC  B1 03				mov	cl,3
020A:95DE  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:95E0  8B CA				mov	cx,dx
020A:95E2  33 FF				xor	di,di			; Zero register
020A:95E4  33 C0				xor	ax,ax			; Zero register
020A:95E6  FC					cld				; Clear direction
020A:95E7  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:95E9  C7 06 2B39 0040			mov	data_241,40h		; (020A:2B39=434Fh)
020A:95EF  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:95EF  9A					db	9Ah
020A:95F0  2C58 14FC				dw	2C58h, 14FCh
020A:95F4  E8 DA66				call	sub_95			; (705D)
020A:95F7  A1 3037				mov	ax,data_292		; (020A:3037=4D44h)
020A:95FA  A3 3039				mov	data_293,ax		; (020A:3039=4E49h)
020A:95FD  05 0010				add	ax,10h
020A:9600  A3 2BE2				mov	data_251,ax		; (020A:2BE2=6172h)
020A:9603  A3 2BE4				mov	data_252,ax		; (020A:2BE4=6F74h)
020A:9606  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (020A:327E=0Ch)
020A:960B  75 1F				jne	loc_1469		; Jump if not equal
020A:960D  80 3E 2BE6 00			cmp	data_253,0		; (020A:2BE6=72h)
020A:9612  75 02				jne	loc_1468		; Jump if not equal
020A:9614  EB 1F				jmp	short loc_1470		; (9635)
020A:9616			loc_1468:
020A:9616  C6 06 327E 07			mov	byte ptr ds:[327Eh],7	; (020A:327E=0Ch)
020A:961B  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:9620  73 0A				jae	loc_1469		; Jump if above or =
020A:9622  C6 06 327F 07			mov	byte ptr ds:[327Fh],7	; (020A:327F=0)
020A:9627  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:9627  9A					db	9Ah
020A:9628  2B70 14FC				dw	2B70h, 14FCh
020A:962C			loc_1469:
020A:962C  9A 14FC:3CC0		;*		call	far ptr sub_201		;*(14FC:3CC0)
020A:962C  9A					db	9Ah
020A:962D  3CC0 14FC				dw	3CC0h, 14FCh
020A:9631  72 38				jc	loc_1471		; Jump if carry Set
020A:9633  EB 39				jmp	short loc_1472		; (966E)
020A:9635			loc_1470:
020A:9635  FA					cli				; Disable interrupts
020A:9636  2E: 8C 16 6052			mov	cs:data_686,ss		; (020A:6052=677h)
020A:963B  2E: 89 26 6050			mov	cs:data_685,sp		; (020A:6050=0E0EBh)
020A:9640  BC 00C8				mov	sp,0C8h
020A:9643  FB					sti				; Enable interrupts
020A:9644  BA 31F0				mov	dx,31F0h
020A:9647  BB 2BE2				mov	bx,2BE2h
020A:964A  B0 03				mov	al,3
020A:964C  B4 4B				mov	ah,4Bh
020A:964E  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  load ovrly @ds:dx,parm @es:bx
										;   all regs & ss:sp destroyed
020A:9650  FA					cli				; Disable interrupts
020A:9651  2E: 8E 16 6052			mov	ss,cs:data_686		; (020A:6052=677h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 312

020A:9656  2E: 8B 26 6050			mov	sp,cs:data_685		; (020A:6050=0E0EBh)
020A:965B  FB					sti				; Enable interrupts
020A:965C  9C					pushf				; Push flags
020A:965D  E8 D9FD				call	sub_95			; (705D)
020A:9660  E8 D9E2				call	sub_91			; (7045)
020A:9663  9D					popf				; Pop flags
020A:9664  73 08				jnc	loc_1472		; Jump if carry=0
020A:9666  C6 06 1DD8 45			mov	data_192,45h		; (020A:1DD8=0) 'E'
020A:966B			loc_1471:
020A:966B  E9 0AC2				jmp	loc_1586		; (A130)
020A:966E			loc_1472:
020A:966E  C7 06 2B39 0041			mov	data_241,41h		; (020A:2B39=434Fh)
020A:9674  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:9674  9A					db	9Ah
020A:9675  2C58 14FC				dw	2C58h, 14FCh
020A:9679  C6 06 5613 01			mov	data_658,1		; (020A:5613=0BEh)
020A:967E  A1 3037				mov	ax,data_292		; (020A:3037=4D44h)
020A:9681  05 0010				add	ax,10h
020A:9684  A3 3033				mov	data_290,ax		; (020A:3033=5C3Dh)
020A:9687  80 3E 3031 03			cmp	data_288,3		; (020A:3031=45h)
020A:968C  74 21				je	loc_1473		; Jump if equal
020A:968E  80 3E 3040 00			cmp	data_298,0		; (020A:3040=33h)
020A:9693  74 1D				je	loc_1474		; Jump if equal
020A:9695  E8 D9BC				call	sub_93			; (7054)
020A:9698  C6 06 3040 00			mov	data_298,0		; (020A:3040=33h)
020A:969D  C6 06 303B 00			mov	data_294,0		; (020A:303B=2Dh)
020A:96A2  BF 0000				mov	di,0
020A:96A5  B9 1482				mov	cx,1482h
020A:96A8  B0 FF				mov	al,0FFh
020A:96AA  FC					cld				; Clear direction
020A:96AB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:96AD  EB 03				jmp	short loc_1474		; (96B2)
020A:96AF			loc_1473:
020A:96AF  E9 0944				jmp	loc_1571		; (9FF6)
020A:96B2			loc_1474:
020A:96B2  BB 0000				mov	bx,0
020A:96B5  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:96BA  74 0D				je	loc_1476		; Jump if equal
020A:96BC  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (020A:327E=0Ch)
020A:96C1  75 03				jne	loc_1475		; Jump if not equal
020A:96C3  E9 038F				jmp	loc_1520		; (9A55)
020A:96C6			loc_1475:
020A:96C6  E9 0237				jmp	loc_1509		; (9900)
020A:96C9			loc_1476:
020A:96C9  C7 06 3039 0000			mov	data_293,0		; (020A:3039=4E49h)
020A:96CF  E8 D98E				call	sub_96			; (7060)
020A:96D2  BE 0BC3				mov	si,0BC3h
020A:96D5  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:96D9  03 EE				add	bp,si
020A:96DB  BF 0000				mov	di,0
020A:96DE  26: 8B 54 44				mov	dx,es:[si+44h]
020A:96E2  0B D2				or	dx,dx			; Zero ?
020A:96E4  75 03				jnz	loc_1477		; Jump if not zero
020A:96E6  E9 010E				jmp	loc_1497		; (97F7)
020A:96E9			loc_1477:
020A:96E9  81 FA 00FA				cmp	dx,0FAh
020A:96ED  76 02				jbe	loc_1478		; Jump if below or =
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 313

020A:96EF  B2 FA				mov	dl,0FAh
020A:96F1			loc_1478:
020A:96F1  88 16 56BF				mov	data_667,dl		; (020A:56BF=0FFh)
020A:96F5  8B C2				mov	ax,dx
020A:96F7  26: 2B 44 18				sub	ax,es:[si+18h]
020A:96FB  40					inc	ax
020A:96FC  A2 56C1				mov	data_669,al		; (020A:56C1=0A3h)
020A:96FF  26: 8B 44 1C				mov	ax,es:[si+1Ch]
020A:9703  A3 56B5				mov	data_662,ax		; (020A:56B5=47C6h)
020A:9706  26: 8B 44 28				mov	ax,es:[si+28h]
020A:970A  33 C9				xor	cx,cx			; Zero register
020A:970C			loc_1479:
020A:970C  D1 C0				rol	ax,1			; Rotate
020A:970E  FE C1				inc	cl
020A:9710  A9 8000				test	ax,8000h
020A:9713  74 F7				jz	loc_1479		; Jump if zero

020A:9715			locloop_1480:
020A:9715  D1 C8				ror	ax,1			; Rotate
020A:9717  0D 8000				or	ax,8000h
020A:971A  E2 F9				loop	locloop_1480		; Loop if cx > 0

020A:971C  A3 56B7				mov	data_663,ax		; (020A:56B7=738h)
020A:971F  33 C0				xor	ax,ax			; Zero register
020A:9721  33 DB				xor	bx,bx			; Zero register
020A:9723  EB 1E				jmp	short loc_1484		; (9743)
020A:9725			loc_1481:
020A:9725  26: 8B 46 EA				mov	ax,es:[bp-16h]
020A:9729  26: 8B 5E E8				mov	bx,es:[bp-18h]
020A:972D  23 1E 56B7				and	bx,data_663		; (020A:56B7=738h)
020A:9731  26: 03 5C 28				add	bx,es:[si+28h]
020A:9735  73 01				jnc	loc_1482		; Jump if carry=0
020A:9737  40					inc	ax
020A:9738			loc_1482:
020A:9738  03 1E 56BD				add	bx,data_666		; (020A:56BD=2E56h)
020A:973C  73 01				jnc	loc_1483		; Jump if carry=0
020A:973E  40					inc	ax
020A:973F			loc_1483:
020A:973F  03 06 56BB				add	ax,data_665		; (020A:56BB=57DBh)
020A:9743			loc_1484:
020A:9743  A3 56BB				mov	data_665,ax		; (020A:56BB=57DBh)
020A:9746  89 1E 56BD				mov	data_666,bx		; (020A:56BD=2E56h)
020A:974A  26: 3B 5E 04				cmp	bx,es:[bp+4]
020A:974E  75 06				jne	loc_1485		; Jump if not equal
020A:9750  26: 3B 46 06				cmp	ax,es:[bp+6]
020A:9754  74 05				je	loc_1486		; Jump if equal
020A:9756			loc_1485:
020A:9756  C6 06 56C0 01			mov	data_668,1		; (020A:56C0=36h)
020A:975B			loc_1486:
020A:975B  8B D3				mov	dx,bx
020A:975D  26: 8B 5E 00				mov	bx,es:[bp]
020A:9761  26: 8B 4E 02				mov	cx,es:[bp+2]
020A:9765  03 DA				add	bx,dx
020A:9767  73 01				jnc	loc_1487		; Jump if carry=0
020A:9769  41					inc	cx
020A:976A			loc_1487:
020A:976A  03 C8				add	cx,ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 314

020A:976C			loc_1488:
020A:976C  3B C8				cmp	cx,ax
020A:976E  74 15				je	loc_1490		; Jump if equal
020A:9770  53					push	bx
020A:9771  51					push	cx
020A:9772  BB FFFF				mov	bx,0FFFFh
020A:9775  9A 14FC:3C04		;*		call	far ptr sub_200		;*(14FC:3C04)
020A:9775  9A					db	9Ah
020A:9776  3C04 14FC				dw	3C04h, 14FCh
020A:977A  72 07				jc	loc_1489		; Jump if carry Set
020A:977C  59					pop	cx
020A:977D  5B					pop	bx
020A:977E  40					inc	ax
020A:977F  33 D2				xor	dx,dx			; Zero register
020A:9781  EB E9				jmp	short loc_1488		; (976C)
020A:9783			loc_1489:
020A:9783  EB 72				jmp	short loc_1497		; (97F7)
020A:9785			loc_1490:
020A:9785  83 FB 00				cmp	bx,0
020A:9788  74 61				je	loc_1496		; Jump if equal
020A:978A  80 3E 56BF 01			cmp	data_667,1		; (020A:56BF=0FFh)
020A:978F  74 02				je	loc_1491		; Jump if equal
020A:9791  EB 51				jmp	short loc_1495		; (97E4)
020A:9793			loc_1491:
020A:9793  53					push	bx
020A:9794  26: 8B 9C 0088			mov	bx,word ptr es:[88h][si]	; (5D44:0088=0FFFFh)
020A:9799  26: 8B 8C 008A			mov	cx,word ptr es:[8Ah][si]	; (5D44:008A=0FFFFh)
020A:979E  26: 2B 9C 0080			sub	bx,word ptr es:[80h][si]	; (5D44:0080=0FFFFh)
020A:97A3  73 01				jnc	loc_1492		; Jump if carry=0
020A:97A5  49					dec	cx
020A:97A6			loc_1492:
020A:97A6  26: 2B 8C 0082			sub	cx,word ptr es:[82h][si]	; (5D44:0082=0FFFFh)
020A:97AB  2B DA				sub	bx,dx
020A:97AD  73 01				jnc	loc_1493		; Jump if carry=0
020A:97AF  49					dec	cx
020A:97B0			loc_1493:
020A:97B0  2B C8				sub	cx,ax
020A:97B2  75 2F				jnz	loc_1494		; Jump if not zero
020A:97B4  26: 03 9C 008C			add	bx,word ptr es:[8Ch][si]	; (5D44:008C=0FFFFh)
020A:97B9  72 28				jc	loc_1494		; Jump if carry Set
020A:97BB  8B CB				mov	cx,bx
020A:97BD  26: 2B 8C 008C			sub	cx,word ptr es:[8Ch][si]	; (5D44:008C=0FFFFh)
020A:97C2  41					inc	cx
020A:97C3  89 0E 302B				mov	data_285,cx		; (020A:302B=4E4Fh)
020A:97C7  50					push	ax
020A:97C8  B1 0C				mov	cl,0Ch
020A:97CA  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:97CC  03 06 3033				add	ax,data_290		; (020A:3033=5C3Dh)
020A:97D0  A3 302D				mov	data_286,ax		; (020A:302D=4553h)
020A:97D3  58					pop	ax
020A:97D4  03 DA				add	bx,dx
020A:97D6  72 0B				jc	loc_1494		; Jump if carry Set
020A:97D8  8B CB				mov	cx,bx
020A:97DA  5B					pop	bx
020A:97DB  3B CB				cmp	cx,bx
020A:97DD  76 05				jbe	loc_1495		; Jump if below or =
020A:97DF  8B D9				mov	bx,cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 315

020A:97E1  EB 01				jmp	short loc_1495		; (97E4)
020A:97E3			loc_1494:
020A:97E3  5B					pop	bx
020A:97E4			loc_1495:
020A:97E4  9A 14FC:3C04		;*		call	far ptr sub_200		;*(14FC:3C04)
020A:97E4  9A					db	9Ah
020A:97E5  3C04 14FC				dw	3C04h, 14FCh
020A:97E9  72 0C				jc	loc_1497		; Jump if carry Set
020A:97EB			loc_1496:
020A:97EB  83 C5 18				add	bp,18h
020A:97EE  FE 0E 56BF				dec	data_667		; (020A:56BF=0FFh)
020A:97F2  74 03				jz	loc_1497		; Jump if zero
020A:97F4  E9 FF2E				jmp	loc_1481		; (9725)
020A:97F7			loc_1497:
020A:97F7  A3 3066				mov	data_320,ax		; (020A:3066=5F73h)
020A:97FA  80 3E 56C0 01			cmp	data_668,1		; (020A:56C0=36h)
020A:97FF  75 09				jne	loc_1498		; Jump if not equal
020A:9801  B4 42				mov	ah,42h			; 'B'
020A:9803  B0 04				mov	al,4
020A:9805  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:9805  9A					db	9Ah
020A:9806  57A4 14FC				dw	57A4h, 14FCh
020A:980A			loc_1498:
020A:980A  E8 D853				call	sub_96			; (7060)
020A:980D  BE 0BC3				mov	si,0BC3h
020A:9810  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:9814  03 EE				add	bp,si
020A:9816  26: 8B 7C 68				mov	di,es:[si+68h]
020A:981A  03 FE				add	di,si
020A:981C  26: 8B 54 44				mov	dx,es:[si+44h]
020A:9820  80 FA 01				cmp	dl,1
020A:9823  77 03				ja	loc_1499		; Jump if above
020A:9825  E9 00B8				jmp	loc_1507		; (98E0)
020A:9828			loc_1499:
020A:9828  C7 06 56B7 0000			mov	data_663,0		; (020A:56B7=738h)
020A:982E  26: 8B 5E 10				mov	bx,es:[bp+10h]
020A:9832  8A F3				mov	dh,bl
020A:9834  0A F6				or	dh,dh			; Zero ?
020A:9836  75 03				jnz	loc_1500		; Jump if not zero
020A:9838  E9 009F				jmp	loc_1506		; (98DA)
020A:983B			loc_1500:
020A:983B  26: 8B 1D				mov	bx,es:[di]
020A:983E  26: 03 5C 6C				add	bx,es:[si+6Ch]
020A:9842  03 DE				add	bx,si
020A:9844  83 C7 04				add	di,4
020A:9847  26: 8B 0D				mov	cx,es:[di]
020A:984A  26: 03 4C 6C				add	cx,es:[si+6Ch]
020A:984E  03 CE				add	cx,si
020A:9850  89 0E 56B9				mov	data_664,cx		; (020A:56B9=87C3h)
020A:9854  3B D9				cmp	bx,cx
020A:9856  72 02				jb	loc_1501		; Jump if below
020A:9858  EB 6A				jmp	short loc_1504		; (98C4)
020A:985A			loc_1501:
020A:985A  26: 8A 0F				mov	cl,es:[bx]
020A:985D  F6 C1 20				test	cl,20h			; ' '
020A:9860  75 4E				jnz	loc_1502		; Jump if not zero
020A:9862  80 E1 0F				and	cl,0Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 316

020A:9865  80 F9 08				cmp	cl,8
020A:9868  75 51				jne	loc_1503		; Jump if not equal
020A:986A  55					push	bp
020A:986B  26: 8A 4F 04				mov	cl,es:[bx+4]
020A:986F  FE C9				dec	cl
020A:9871  B0 18				mov	al,18h
020A:9873  F6 E1				mul	cl			; ax = reg * al
020A:9875  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:9879  03 EE				add	bp,si
020A:987B  03 E8				add	bp,ax
020A:987D  26: 8B 46 04				mov	ax,es:[bp+4]
020A:9881  26: 03 47 05				add	ax,es:[bx+5]
020A:9885  5D					pop	bp
020A:9886  26: 8B 4E 04				mov	cx,es:[bp+4]
020A:988A  26: 03 4F 02				add	cx,es:[bx+2]
020A:988E  03 0E 56B7				add	cx,data_663		; (020A:56B7=738h)
020A:9892  83 C1 04				add	cx,4
020A:9895  2B C1				sub	ax,cx
020A:9897  83 E9 04				sub	cx,4
020A:989A  53					push	bx
020A:989B  52					push	dx
020A:989C  06					push	es
020A:989D  8B D9				mov	bx,cx
020A:989F  8E 06 3033				mov	es,data_290		; (020A:3033=5C3Dh)
020A:98A3  99					cwd				; Word to double word
020A:98A4  26: 89 07				mov	es:[bx],ax
020A:98A7  26: 89 57 02				mov	es:[bx+2],dx
020A:98AB  07					pop	es
020A:98AC  5A					pop	dx
020A:98AD  5B					pop	bx
020A:98AE  EB 0B				jmp	short loc_1503		; (98BB)
020A:98B0			loc_1502:
020A:98B0  26: 8A 47 02				mov	al,es:[bx+2]
020A:98B4  32 E4				xor	ah,ah			; Zero register
020A:98B6  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:98B8  03 D8				add	bx,ax
020A:98BA  4B					dec	bx
020A:98BB			loc_1503:
020A:98BB  83 C3 07				add	bx,7
020A:98BE  3B 1E 56B9				cmp	bx,data_664		; (020A:56B9=87C3h)
020A:98C2  72 96				jb	loc_1501		; Jump if below
020A:98C4			loc_1504:
020A:98C4  26: 8B 44 28				mov	ax,es:[si+28h]
020A:98C8  01 06 56B7				add	data_663,ax		; (020A:56B7=738h)
020A:98CC  FE CE				dec	dh
020A:98CE  74 03				jz	loc_1505		; Jump if zero
020A:98D0  E9 FF68				jmp	loc_1500		; (983B)
020A:98D3			loc_1505:
020A:98D3  FE CA				dec	dl
020A:98D5  80 FA 01				cmp	dl,1
020A:98D8  76 06				jbe	loc_1507		; Jump if below or =
020A:98DA			loc_1506:
020A:98DA  83 C5 18				add	bp,18h
020A:98DD  E9 FF48				jmp	loc_1499		; (9828)
020A:98E0			loc_1507:
020A:98E0  A0 30A0				mov	al,data_348		; (020A:30A0=33h)
020A:98E3  3C 28				cmp	al,28h			; '('
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 317

020A:98E5  74 16				je	loc_1508		; Jump if equal
020A:98E7  3C 48				cmp	al,48h			; 'H'
020A:98E9  74 12				je	loc_1508		; Jump if equal
020A:98EB  C6 06 30A0 28			mov	data_348,28h		; (020A:30A0=33h) '('
020A:98F0  B6 01				mov	dh,1
020A:98F2  E8 BC63				call	sub_55			; (5558)
020A:98F5  A0 35E4				mov	al,data_454		; (020A:35E4=74h)
020A:98F8  9A 14FC:09D8		;*		call	far ptr sub_171		;*(14FC:09D8)
020A:98F8  9A					db	9Ah
020A:98F9  09D8 14FC				dw	9D8h, 14FCh
020A:98FD			loc_1508:
020A:98FD  E9 06F6				jmp	loc_1571		; (9FF6)
020A:9900			loc_1509:
020A:9900  BB 0000				mov	bx,0
020A:9903  E8 D75A				call	sub_96			; (7060)
020A:9906  26: 80 3E 0BC3 E9			cmp	byte ptr es:[0BC3h],0E9h	; (5D44:0BC3=2)
020A:990C  75 25				jne	loc_1510		; Jump if not equal
020A:990E  BE 46F1				mov	si,46F1h
020A:9911  BF 0BC6				mov	di,0BC6h
020A:9914  B9 4700				mov	cx,4700h
020A:9917  81 E9 46F1				sub	cx,46F1h
020A:991B  FC					cld				; Clear direction
020A:991C  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:991E  83 F9 00				cmp	cx,0
020A:9921  75 10				jne	loc_1510		; Jump if not equal
020A:9923  B4 2D				mov	ah,2Dh			; '-'
020A:9925  B0 04				mov	al,4
020A:9927  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:9927  9A					db	9Ah
020A:9928  57A4 14FC				dw	57A4h, 14FCh
020A:992C  C6 06 4700 01			mov	data_550,1		; (020A:4700=75h)
020A:9931  EB 24				jmp	short loc_1511		; (9957)
020A:9933			loc_1510:
020A:9933  26: 81 3E 0BF3 4B50			cmp	word ptr es:[0BF3h],4B50h	; (5D44:0BF3=5)
020A:993A  75 1B				jne	loc_1511		; Jump if not equal
020A:993C  26: 81 3E 0BF5 494C			cmp	word ptr es:[0BF5h],494Ch	; (5D44:0BF5=20Ah)
020A:9943  75 12				jne	loc_1511		; Jump if not equal
020A:9945  26: 81 3E 0BF7 4554			cmp	word ptr es:[0BF7h],4554h	; (5D44:0BF7=7D0h)
020A:994C  75 09				jne	loc_1511		; Jump if not equal
020A:994E  B4 44				mov	ah,44h			; 'D'
020A:9950  B0 04				mov	al,4
020A:9952  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:9952  9A					db	9Ah
020A:9953  57A4 14FC				dw	57A4h, 14FCh
020A:9957			loc_1511:
020A:9957  C7 06 302B 0000			mov	data_285,0		; (020A:302B=4E4Fh)
020A:995D  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (020A:327F=0)
020A:9962  74 0E				je	loc_1512		; Jump if equal
020A:9964  80 3E 327F 04			cmp	byte ptr ds:[327Fh],4	; (020A:327F=0)
020A:9969  74 07				je	loc_1512		; Jump if equal
020A:996B  80 3E 327F 05			cmp	byte ptr ds:[327Fh],5	; (020A:327F=0)
020A:9970  75 17				jne	loc_1513		; Jump if not equal
020A:9972			loc_1512:
020A:9972  9A 14FC:4548		;*		call	far ptr sub_211		;*(14FC:4548)
020A:9972  9A					db	9Ah
020A:9973  4548 14FC				dw	4548h, 14FCh
020A:9977  73 10				jnc	loc_1513		; Jump if carry=0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 318

020A:9979  C6 06 327F 05			mov	byte ptr ds:[327Fh],5	; (020A:327F=0)
020A:997E  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:997E  9A					db	9Ah
020A:997F  2B70 14FC				dw	2B70h, 14FCh
020A:9983  C7 06 302B 000A			mov	data_285,0Ah		; (020A:302B=4E4Fh)
020A:9989			loc_1513:
020A:9989  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:998C  C7 06 3039 0000			mov	data_293,0		; (020A:3039=4E49h)
020A:9992  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (020A:327F=0)
020A:9997  75 09				jne	loc_1514		; Jump if not equal
020A:9999  2D 0010				sub	ax,10h
020A:999C  A3 3033				mov	data_290,ax		; (020A:3033=5C3Dh)
020A:999F  A3 3039				mov	data_293,ax		; (020A:3039=4E49h)
020A:99A2			loc_1514:
020A:99A2  E8 D6AF				call	sub_93			; (7054)
020A:99A5  26: 89 07				mov	es:[bx],ax
020A:99A8  26: 89 47 06				mov	es:[bx+6],ax
020A:99AC  26: 89 47 08				mov	es:[bx+8],ax
020A:99B0  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:99B5  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:99BB  A3 3066				mov	data_320,ax		; (020A:3066=5F73h)
020A:99BE  33 C0				xor	ax,ax			; Zero register
020A:99C0  8B 0E 2CC8				mov	cx,data_268		; (020A:2CC8=4E45h)
020A:99C4  8B 16 2CC6				mov	dx,data_267		; (020A:2CC6=4449h)
020A:99C8  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (020A:327F=0)
020A:99CD  75 32				jne	loc_1517		; Jump if not equal
020A:99CF  B8 0100				mov	ax,100h
020A:99D2  C7 06 302B 0100			mov	data_285,100h		; (020A:302B=4E4Fh)
020A:99D8  26: 89 47 02				mov	es:[bx+2],ax
020A:99DC  83 F9 00				cmp	cx,0
020A:99DF  75 06				jne	loc_1515		; Jump if not equal
020A:99E1  81 FA FEFF				cmp	dx,0FEFFh
020A:99E5  72 06				jb	loc_1516		; Jump if below
020A:99E7			loc_1515:
020A:99E7  B8 0030				mov	ax,30h
020A:99EA  E9 0743				jmp	loc_1586		; (A130)
020A:99ED			loc_1516:
020A:99ED  03 C2				add	ax,dx
020A:99EF  48					dec	ax
020A:99F0  26: 89 47 04				mov	es:[bx+4],ax
020A:99F4  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:99FA  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:99FE  E9 05F5				jmp	loc_1571		; (9FF6)
020A:9A01			loc_1517:
020A:9A01  26					db	26h			; Data table (indexed access)
020A:9A02  89 47 02				mov	[bx+2],ax
020A:9A05  83 F9 00				cmp	cx,0
020A:9A08  75 17				jne	loc_1519		; Jump if not equal
020A:9A0A  83 FA 01				cmp	dx,1
020A:9A0D  76 0F				jbe	loc_1518		; Jump if below or =
020A:9A0F  4A					dec	dx
020A:9A10  26: 89 57 04				mov	es:[bx+4],dx
020A:9A14  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:9A1A  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9A1E			loc_1518:
020A:9A1E  E9 05D5				jmp	loc_1571		; (9FF6)
020A:9A21			loc_1519:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 319

020A:9A21  26: C7 47 04 FFFF			mov	word ptr es:[bx+4],0FFFFh
020A:9A27  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:9A2D  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9A31  49					dec	cx
020A:9A32  26: 8B 07				mov	ax,es:[bx]
020A:9A35  83 C3 15				add	bx,15h
020A:9A38  05 1000				add	ax,1000h
020A:9A3B  26: 89 07				mov	es:[bx],ax
020A:9A3E  26: 89 47 06				mov	es:[bx+6],ax
020A:9A42  26: 89 47 08				mov	es:[bx+8],ax
020A:9A46  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:9A4B  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:9A51  33 C0				xor	ax,ax			; Zero register
020A:9A53  EB AC				jmp	short loc_1517		; (9A01)
				sub_119		endp

020A:9A55			loc_1520:
020A:9A55  C7 06 2B39 0042			mov	data_241,42h		; (020A:2B39=434Fh)
020A:9A5B  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:9A5B  9A					db	9Ah
020A:9A5C  2C58 14FC				dw	2C58h, 14FCh
020A:9A60  8B FB				mov	di,bx
020A:9A62  C7 06 302B 0000			mov	data_285,0		; (020A:302B=4E4Fh)
020A:9A68  9A 14FC:4548		;*		call	far ptr sub_211		;*(14FC:4548)
020A:9A68  9A					db	9Ah
020A:9A69  4548 14FC				dw	4548h, 14FCh
020A:9A6D  73 0F				jnc	loc_1521		; Jump if carry=0
020A:9A6F  C6 06 327F 05			mov	byte ptr ds:[327Fh],5	; (020A:327F=0)
020A:9A74  C6 06 1504 01			mov	data_158,1		; (020A:1504=0)
020A:9A79  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:9A79  9A					db	9Ah
020A:9A7A  2B70 14FC				dw	2B70h, 14FCh
020A:9A7E			loc_1521:
020A:9A7E  E8 D5DF				call	sub_96			; (7060)
020A:9A81  26: 81 3E 0BC3 5A4D			cmp	word ptr es:[0BC3h],5A4Dh	; (5D44:0BC3=7E02h)
020A:9A88  74 06				je	loc_1522		; Jump if equal
020A:9A8A  B8 0014				mov	ax,14h
020A:9A8D  E9 06A0				jmp	loc_1586		; (A130)
020A:9A90			loc_1522:
020A:9A90  33 C0				xor	ax,ax			; Zero register
020A:9A92  26: 39 06 0BC9			cmp	word ptr es:[0BC9h],ax	; (5D44:0BC9=6002h)
020A:9A97  75 76				jne	loc_1528		; Jump if not equal
020A:9A99  26: 39 06 0BCD			cmp	word ptr es:[0BCDh],ax	; (5D44:0BCD=41h)
020A:9A9E  74 6F				je	loc_1528		; Jump if equal
020A:9AA0  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (5D44:0BD7=200h)
020A:9AA7  77 07				ja	loc_1523		; Jump if above
020A:9AA9  26: 39 06 0BD9			cmp	word ptr es:[0BD9h],ax	; (5D44:0BD9=0A00h)
020A:9AAE  74 5F				je	loc_1528		; Jump if equal
020A:9AB0			loc_1523:
020A:9AB0  26: 8B 1E 0BD7			mov	bx,word ptr es:[0BD7h]	; (5D44:0BD7=200h)
020A:9AB5  83 FB 01				cmp	bx,1
020A:9AB8  74 55				je	loc_1528		; Jump if equal
020A:9ABA  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9ABD  26: 03 06 0BD9			add	ax,word ptr es:[0BD9h]	; (5D44:0BD9=0A00h)
020A:9AC2  06					push	es
020A:9AC3  8E C0				mov	es,ax
020A:9AC5  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 320

020A:9ACB  07					pop	es
020A:9ACC  74 38				jz	loc_1527		; Jump if zero
020A:9ACE  83 FB 10				cmp	bx,10h
020A:9AD1  75 18				jne	loc_1525		; Jump if not equal
020A:9AD3  06					push	es
020A:9AD4  8E C0				mov	es,ax
020A:9AD6  26: 81 3E 00C8 2EFB			cmp	word ptr es:[0C8h],2EFBh	; (663D:00C8=0FFFFh)
020A:9ADD  75 07				jne	loc_1524		; Jump if not equal
020A:9ADF  26: 81 3E 00CA 2FFF			cmp	word ptr es:[0CAh],2FFFh	; (663D:00CA=0FFFFh)
020A:9AE6			loc_1524:
020A:9AE6  07					pop	es
020A:9AE7  75 26				jnz	loc_1528		; Jump if not zero
020A:9AE9  EB 1B				jmp	short loc_1527		; (9B06)
020A:9AEB			loc_1525:
020A:9AEB  83 FB 0E				cmp	bx,0Eh
020A:9AEE  75 1F				jne	loc_1528		; Jump if not equal
020A:9AF0  06					push	es
020A:9AF1  8E C0				mov	es,ax
020A:9AF3  26: 81 3E 0154 2EFB			cmp	word ptr es:[154h],2EFBh	; (663D:0154=0FFFFh)
020A:9AFA  75 07				jne	loc_1526		; Jump if not equal
020A:9AFC  26: 81 3E 0156 2FFF			cmp	word ptr es:[156h],2FFFh	; (663D:0156=0FFFFh)
020A:9B03			loc_1526:
020A:9B03  07					pop	es
020A:9B04  75 09				jnz	loc_1528		; Jump if not zero
020A:9B06			loc_1527:
020A:9B06  B4 21				mov	ah,21h			; '!'
020A:9B08  B0 04				mov	al,4
020A:9B0A  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:9B0A  9A					db	9Ah
020A:9B0B  57A4 14FC				dw	57A4h, 14FCh
020A:9B0F			loc_1528:
020A:9B0F  26: 83 3E 0BC9 00			cmp	word ptr es:[0BC9h],0	; (5D44:0BC9=6002h)
020A:9B15  75 42				jne	loc_1529		; Jump if not equal
020A:9B17  26: 83 3E 0BD1 F0			cmp	word ptr es:[0BD1h],0FFF0h	; (5D44:0BD1=20Ah)
020A:9B1D  75 3A				jne	loc_1529		; Jump if not equal
020A:9B1F  26: 83 3E 0BD3 FE			cmp	word ptr es:[0BD3h],0FFFEh	; (5D44:0BD3=77Ch)
020A:9B25  72 32				jb	loc_1529		; Jump if below
020A:9B27  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (5D44:0BD7=200h)
020A:9B2E  75 29				jne	loc_1529		; Jump if not equal
020A:9B30  26: 83 3E 0BD9 F0			cmp	word ptr es:[0BD9h],0FFF0h	; (5D44:0BD9=0A00h)
020A:9B36  75 21				jne	loc_1529		; Jump if not equal
020A:9B38  83 3E 2CC8 00			cmp	data_268,0		; (020A:2CC8=4E45h)
020A:9B3D  75 1A				jne	loc_1529		; Jump if not equal
020A:9B3F  81 3E 2CC6 FE00			cmp	data_267,0FE00h		; (020A:2CC6=4449h)
020A:9B45  73 12				jae	loc_1529		; Jump if above or =
020A:9B47  C6 06 327E 02			mov	byte ptr ds:[327Eh],2	; (020A:327E=0Ch)
020A:9B4C  C6 06 327F 02			mov	byte ptr ds:[327Fh],2	; (020A:327F=0)
020A:9B51  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:9B51  9A					db	9Ah
020A:9B52  2B70 14FC				dw	2B70h, 14FCh
020A:9B56  E9 FDA7				jmp	loc_1509		; (9900)
020A:9B59			loc_1529:
020A:9B59  C7 06 2B39 0043			mov	data_241,43h		; (020A:2B39=434Fh)
020A:9B5F  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:9B5F  9A					db	9Ah
020A:9B60  2C58 14FC				dw	2C58h, 14FCh
020A:9B64  26: A1 0BC9				mov	ax,word ptr es:[0BC9h]	; (5D44:0BC9=6002h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 321

020A:9B68  A3 4395				mov	word ptr ds:[4395h],ax	; (020A:4395=0B00Ah)
020A:9B6B  3D 2243				cmp	ax,2243h
020A:9B6E  76 03				jbe	loc_1530		; Jump if below or =
020A:9B70  B8 2243				mov	ax,2243h
020A:9B73			loc_1530:
020A:9B73  A3 4397				mov	word ptr ds:[4397h],ax	; (020A:4397=0E80Ah)
020A:9B76  26: A1 0BD1				mov	ax,word ptr es:[0BD1h]	; (5D44:0BD1=20Ah)
020A:9B7A  26: 8B 1E 0BD3			mov	bx,word ptr es:[0BD3h]	; (5D44:0BD3=77Ch)
020A:9B7F  E8 D4D2				call	sub_93			; (7054)
020A:9B82  0B C0				or	ax,ax			; Zero ?
020A:9B84  75 04				jnz	loc_1531		; Jump if not zero
020A:9B86  0B DB				or	bx,bx			; Zero ?
020A:9B88  74 40				jz	loc_1534		; Jump if zero
020A:9B8A			loc_1531:
020A:9B8A  C6 06 303B 01			mov	data_294,1		; (020A:303B=2Dh)
020A:9B8F  3D FFF0				cmp	ax,0FFF0h
020A:9B92  75 05				jne	loc_1532		; Jump if not equal
020A:9B94  A1 3039				mov	ax,data_293		; (020A:3039=4E49h)
020A:9B97  EB 04				jmp	short loc_1533		; (9B9D)
020A:9B99			loc_1532:
020A:9B99  03 06 3033				add	ax,data_290		; (020A:3033=5C3Dh)
020A:9B9D			loc_1533:
020A:9B9D  26: 89 05				mov	es:[di],ax
020A:9BA0  A3 303C				mov	data_295,ax		; (020A:303C=3738h)
020A:9BA3  A3 3066				mov	data_320,ax		; (020A:3066=5F73h)
020A:9BA6  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9BAC  4B					dec	bx
020A:9BAD  26: 89 5D 04				mov	es:[di+4],bx
020A:9BB1  89 1E 3064				mov	data_319,bx		; (020A:3064=776Fh)
020A:9BB5  26: C7 45 0A 0003			mov	word ptr es:[di+0Ah],3
020A:9BBB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9BC0  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9BC6  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9BCA			loc_1534:
020A:9BCA  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9BCD  80 3E 303B 01			cmp	data_294,1		; (020A:303B=2Dh)
020A:9BD2  75 08				jne	loc_1535		; Jump if not equal
020A:9BD4  26: 3B 05				cmp	ax,es:[di]
020A:9BD7  74 29				je	loc_1536		; Jump if equal
020A:9BD9  83 C7 15				add	di,15h
020A:9BDC			loc_1535:
020A:9BDC  26: 89 45 06				mov	es:[di+6],ax
020A:9BE0  26: 89 45 08				mov	es:[di+8],ax
020A:9BE4  26: 89 05				mov	es:[di],ax
020A:9BE7  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9BED  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:9BF3  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9BF8  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9BFE  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9C02			loc_1536:
020A:9C02  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9C05  8B D8				mov	bx,ax
020A:9C07  E8 D456				call	sub_96			; (7060)
020A:9C0A  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (5D44:0BD9=0A00h)
020A:9C0F  33 C0				xor	ax,ax			; Zero register
020A:9C11  BA 0010				mov	dx,10h
020A:9C14  E8 C275				call	sub_76			; (5E8C)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 322

020A:9C17  72 28				jc	loc_1537		; Jump if carry Set
020A:9C19  26: 89 1D				mov	es:[di],bx
020A:9C1C  33 C0				xor	ax,ax			; Zero register
020A:9C1E  26: 89 45 02				mov	es:[di+2],ax
020A:9C22  26: 89 45 04				mov	es:[di+4],ax
020A:9C26  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:9C2A  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9C2F  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9C35  26: 89 5D 06				mov	es:[di+6],bx
020A:9C39  26: 89 5D 08				mov	es:[di+8],bx
020A:9C3D  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9C41			loc_1537:
020A:9C41  C7 06 2B39 0044			mov	data_241,44h		; (020A:2B39=434Fh)
020A:9C47  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:9C47  9A					db	9Ah
020A:9C48  2C58 14FC				dw	2C58h, 14FCh
020A:9C4C  E8 D411				call	sub_96			; (7060)
020A:9C4F  26: 8B 2E 0BDB			mov	bp,word ptr es:[0BDBh]	; (5D44:0BDB=8E02h)
020A:9C54  81 C5 0BC3				add	bp,0BC3h
020A:9C58  26: 8B 36 0BC7			mov	si,word ptr es:[0BC7h]	; (5D44:0BC7=0A36h)
020A:9C5D  B1 05				mov	cl,5
020A:9C5F  D3 E6				shl	si,cl			; Shift w/zeros fill
020A:9C61  26: A1 0BC5				mov	ax,word ptr es:[0BC5h]	; (5D44:0BC5=89Ch)
020A:9C65  B1 04				mov	cl,4
020A:9C67  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:9C69  03 F0				add	si,ax
020A:9C6B  83 EE 1F				sub	si,1Fh
020A:9C6E  26: 2B 36 0BCB			sub	si,word ptr es:[0BCBh]	; (5D44:0BCB=4007h)
020A:9C73  03 36 3033				add	si,data_290		; (020A:3033=5C3Dh)
020A:9C77			loc_1538:
020A:9C77  83 3E 4395 00			cmp	word ptr ds:[4395h],0	; (020A:4395=0B00Ah)
020A:9C7C  75 03				jne	loc_1539		; Jump if not equal
020A:9C7E  E9 009B				jmp	loc_1545		; (9D1C)
020A:9C81			loc_1539:
020A:9C81  E8 D3DC				call	sub_96			; (7060)
020A:9C84  26: 8B 5E 00				mov	bx,es:[bp]
020A:9C88  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9C8B  26: 03 46 02				add	ax,es:[bp+2]
020A:9C8F  8E C0				mov	es,ax
020A:9C91  26: 8B 1F				mov	bx,es:[bx]
020A:9C94  3B DE				cmp	bx,si
020A:9C96  72 02				jb	loc_1540		; Jump if below
020A:9C98  EB 37				jmp	short loc_1541		; (9CD1)
020A:9C9A			loc_1540:
020A:9C9A  33 C0				xor	ax,ax			; Zero register
020A:9C9C  BA 0010				mov	dx,10h
020A:9C9F  E8 C1EA				call	sub_76			; (5E8C)
020A:9CA2  72 2D				jc	loc_1541		; Jump if carry Set
020A:9CA4  26: 89 1D				mov	es:[di],bx
020A:9CA7  26: 89 45 02				mov	es:[di+2],ax
020A:9CAB  26: 89 45 04				mov	es:[di+4],ax
020A:9CAF  26: 89 5D 06				mov	es:[di+6],bx
020A:9CB3  26: 89 5D 08				mov	es:[di+8],bx
020A:9CB7  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:9CBB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9CC0  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9CC6  FE 06 3040				inc	data_298		; (020A:3040=33h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 323

020A:9CCA  80 3E 3040 FA			cmp	data_298,0FAh		; (020A:3040=33h)
020A:9CCF  73 4B				jae	loc_1545		; Jump if above or =
020A:9CD1			loc_1541:
020A:9CD1  83 C5 04				add	bp,4
020A:9CD4  81 FD 2C40				cmp	bp,2C40h
020A:9CD8  72 3B				jb	loc_1544		; Jump if below
020A:9CDA  BB 2C43				mov	bx,2C43h
020A:9CDD  2B DD				sub	bx,bp
020A:9CDF  0B DB				or	bx,bx			; Zero ?
020A:9CE1  74 10				jz	loc_1542		; Jump if zero
020A:9CE3  B9 FFFF				mov	cx,0FFFFh
020A:9CE6  33 D2				xor	dx,dx			; Zero register
020A:9CE8  2B D3				sub	dx,bx
020A:9CEA  B8 4201				mov	ax,4201h
020A:9CED  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:9CF1  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:9CF3			loc_1542:
020A:9CF3  B9 2C43				mov	cx,2C43h
020A:9CF6  81 E9 0C43				sub	cx,0C43h
020A:9CFA  BA 0C43				mov	dx,0C43h
020A:9CFD  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:9D01  E8 D344				call	sub_92			; (7048)
020A:9D04  B4 3F				mov	ah,3Fh
020A:9D06  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:9D08  E8 D33A				call	sub_91			; (7045)
020A:9D0B  73 05				jnc	loc_1543		; Jump if carry=0
020A:9D0D  B3 0E				mov	bl,0Eh
020A:9D0F  E9 041E				jmp	loc_1586		; (A130)
020A:9D12			loc_1543:
020A:9D12  BD 0C43				mov	bp,0C43h
020A:9D15			loc_1544:
020A:9D15  FF 0E 4395				dec	word ptr ds:[4395h]	; (020A:4395=0B00Ah)
020A:9D19  E9 FF5B				jmp	loc_1538		; (9C77)
020A:9D1C			loc_1545:
020A:9D1C  C7 06 2B39 0045			mov	data_241,45h		; (020A:2B39=434Fh)
020A:9D22  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:9D22  9A					db	9Ah
020A:9D23  2C58 14FC				dw	2C58h, 14FCh
020A:9D27  E8 8A46		;*		call	sub_29			;*(2770)
020A:9D27  E8 46 8A				db	0E8h, 46h, 8Ah
020A:9D2A  BA 0015				mov	dx,15h
020A:9D2D  8B C2				mov	ax,dx
020A:9D2F  8A 1E 3040				mov	bl,data_298		; (020A:3040=33h)
020A:9D33  FE CB				dec	bl
020A:9D35  F6 E3				mul	bl			; ax = reg * al
020A:9D37  05 0000				add	ax,0
020A:9D3A  8B D8				mov	bx,ax
020A:9D3C  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:9D40  24 03				and	al,3
020A:9D42  3C 03				cmp	al,3
020A:9D44  75 32				jne	loc_1547		; Jump if not equal
020A:9D46  80 3E 3040 01			cmp	data_298,1		; (020A:3040=33h)
020A:9D4B  74 03				je	loc_1546		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 324

020A:9D4D  E9 008B				jmp	loc_1550		; (9DDB)
020A:9D50			loc_1546:
020A:9D50  50					push	ax
020A:9D51  55					push	bp
020A:9D52  C6 06 2BE1 01			mov	byte ptr ds:[2BE1h],1	; (020A:2BE1=74h)
020A:9D57  26: 8B 47 04				mov	ax,es:[bx+4]
020A:9D5B  40					inc	ax
020A:9D5C  53					push	bx
020A:9D5D  BD 69E1				mov	bp,69E1h
020A:9D60  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:9D60  9A					db	9Ah
020A:9D61  021C 14FC				dw	21Ch, 14FCh
020A:9D65  5B					pop	bx
020A:9D66  5D					pop	bp
020A:9D67  58					pop	ax
020A:9D68  26: C6 47 0A 00			mov	byte ptr es:[bx+0Ah],0
020A:9D6D  26: 8B 3F				mov	di,es:[bx]
020A:9D70  26: 89 7F 06				mov	es:[bx+6],di
020A:9D74  26: 89 7F 08				mov	es:[bx+8],di
020A:9D78			loc_1547:
020A:9D78  F6 C4 80				test	ah,80h
020A:9D7B  75 5E				jnz	loc_1550		; Jump if not zero
020A:9D7D  53					push	bx
020A:9D7E  E8 D2DF				call	sub_96			; (7060)
020A:9D81  26: A1 0BC7				mov	ax,word ptr es:[0BC7h]	; (5C3C:0BC7=0FFFFh)
020A:9D85  B1 05				mov	cl,5
020A:9D87  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9D89  26: 2B 06 0BCB			sub	ax,word ptr es:[0BCBh]	; (5C3C:0BCB=0FFFFh)
020A:9D8E  E8 D2C3				call	sub_93			; (7054)
020A:9D91  26: 2B 07				sub	ax,es:[bx]
020A:9D94  03 06 3033				add	ax,data_290		; (020A:3033=5C3Dh)
020A:9D98  2D 0020				sub	ax,20h
020A:9D9B  E8 D2C2				call	sub_96			; (7060)
020A:9D9E  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (5C3C:0BC5=0FFFFh)
020A:9DA3  B1 04				mov	cl,4
020A:9DA5  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:9DA7  03 C3				add	ax,bx
020A:9DA9  A9 F000				test	ax,0F000h
020A:9DAC  74 05				jz	loc_1548		; Jump if zero
020A:9DAE  B8 FFFF				mov	ax,0FFFFh
020A:9DB1  EB 20				jmp	short loc_1549		; (9DD3)
020A:9DB3			loc_1548:
020A:9DB3  B1 04				mov	cl,4
020A:9DB5  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9DB7  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (5C3C:0BC5=0FFFFh)
020A:9DBC  83 E3 0F				and	bx,0Fh
020A:9DBF  03 C3				add	ax,bx
020A:9DC1  48					dec	ax
020A:9DC2  3D FFFF				cmp	ax,0FFFFh
020A:9DC5  75 0C				jne	loc_1549		; Jump if not equal
020A:9DC7  40					inc	ax
020A:9DC8  5B					pop	bx
020A:9DC9  53					push	bx
020A:9DCA  E8 D287				call	sub_93			; (7054)
020A:9DCD  26: 81 4F 0A 4000			or	word ptr es:[bx+0Ah],4000h
020A:9DD3			loc_1549:
020A:9DD3  5B					pop	bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 325

020A:9DD4  E8 D27D				call	sub_93			; (7054)
020A:9DD7  26: 89 47 04				mov	es:[bx+4],ax
020A:9DDB			loc_1550:
020A:9DDB  26: 8B 07				mov	ax,es:[bx]
020A:9DDE  81 FB 0000				cmp	bx,0
020A:9DE2  74 2B				je	loc_1553		; Jump if equal
020A:9DE4  2B DA				sub	bx,dx
020A:9DE6  26: 8B 4F 0A				mov	cx,es:[bx+0Ah]
020A:9DEA  80 E1 03				and	cl,3
020A:9DED  80 F9 03				cmp	cl,3
020A:9DF0  74 E9				je	loc_1550		; Jump if equal
020A:9DF2  F6 C5 80				test	ch,80h
020A:9DF5  75 E4				jnz	loc_1550		; Jump if not zero
020A:9DF7  26: 2B 07				sub	ax,es:[bx]
020A:9DFA  F6 C4 F0				test	ah,0F0h
020A:9DFD  75 07				jnz	loc_1551		; Jump if not zero
020A:9DFF  B1 04				mov	cl,4
020A:9E01  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9E03  48					dec	ax
020A:9E04  EB 03				jmp	short loc_1552		; (9E09)
020A:9E06			loc_1551:
020A:9E06  B8 FFFF				mov	ax,0FFFFh
020A:9E09			loc_1552:
020A:9E09  26: 89 47 04				mov	es:[bx+4],ax
020A:9E0D  EB CC				jmp	short loc_1550		; (9DDB)
020A:9E0F			loc_1553:
020A:9E0F  80 3E 3040 01			cmp	data_298,1		; (020A:3040=33h)
020A:9E14  74 07				je	loc_1554		; Jump if equal
020A:9E16  80 3E 3040 FA			cmp	data_298,0FAh		; (020A:3040=33h)
020A:9E1B  72 03				jb	loc_1555		; Jump if below
020A:9E1D			loc_1554:
020A:9E1D  E9 0084				jmp	loc_1559		; (9EA4)
020A:9E20			loc_1555:
020A:9E20  BF 0000				mov	di,0
020A:9E23  BB 0015				mov	bx,15h
020A:9E26  8A 16 3040				mov	dl,data_298		; (020A:3040=33h)
020A:9E2A			loc_1556:
020A:9E2A  FE CA				dec	dl
020A:9E2C  80 FA 01				cmp	dl,1
020A:9E2F  72 73				jb	loc_1559		; Jump if below
020A:9E31  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:9E35  24 03				and	al,3
020A:9E37  3C 03				cmp	al,3
020A:9E39  75 65				jne	loc_1558		; Jump if not equal
020A:9E3B  26: 8B 45 04				mov	ax,es:[di+4]
020A:9E3F  B1 04				mov	cl,4
020A:9E41  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:9E43  26: F7 45 04 000F			test	word ptr es:[di+4],0Fh
020A:9E49  74 01				jz	loc_1557		; Jump if zero
020A:9E4B  40					inc	ax
020A:9E4C			loc_1557:
020A:9E4C  26: 03 05				add	ax,es:[di]
020A:9E4F  26: 3B 01				cmp	ax,es:[bx+di]
020A:9E52  73 50				jae	loc_1559		; Jump if above or =
020A:9E54  50					push	ax
020A:9E55  26: 8B 11				mov	dx,es:[bx+di]
020A:9E58  2B D0				sub	dx,ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 326

020A:9E5A  B1 04				mov	cl,4
020A:9E5C  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:9E5E  4A					dec	dx
020A:9E5F  8B C3				mov	ax,bx
020A:9E61  8A 0E 3040				mov	cl,data_298		; (020A:3040=33h)
020A:9E65  FE C9				dec	cl
020A:9E67  F6 E1				mul	cl			; ax = reg * al
020A:9E69  05 0000				add	ax,0
020A:9E6C  8B F8				mov	di,ax
020A:9E6E  03 FB				add	di,bx
020A:9E70  58					pop	ax
020A:9E71  26: 89 05				mov	es:[di],ax
020A:9E74  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9E7A  26: 89 55 04				mov	es:[di+4],dx
020A:9E7E  26: 89 45 06				mov	es:[di+6],ax
020A:9E82  26: 89 45 08				mov	es:[di+8],ax
020A:9E86  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:9E8C  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9E91  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9E97  FE 06 3040				inc	data_298		; (020A:3040=33h)
020A:9E9B  E8 88D2		;*		call	sub_29			;*(2770)
020A:9E9B  E8 D2 88				db	0E8h,0D2h, 88h
020A:9E9E  EB 04				jmp	short loc_1559		; (9EA4)
020A:9EA0			loc_1558:
020A:9EA0  03 FB				add	di,bx
020A:9EA2  EB 86				jmp	short loc_1556		; (9E2A)
020A:9EA4			loc_1559:
020A:9EA4  E8 D1B9				call	sub_96			; (7060)
020A:9EA7  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9EAA  8B D8				mov	bx,ax
020A:9EAC  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (5C3C:0BD9=0FFFFh)
020A:9EB1  26: A1 0BD7				mov	ax,word ptr es:[0BD7h]	; (5C3C:0BD7=0FFFFh)
020A:9EB5  89 1E 304C				mov	data_307,bx		; (020A:304C=4F5Fh)
020A:9EB9  A3 304E				mov	data_308,ax		; (020A:304E=5F46h)
020A:9EBC  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:9EC1  06					push	es
020A:9EC2  E8 D18F				call	sub_93			; (7054)
020A:9EC5  33 C0				xor	ax,ax			; Zero register
020A:9EC7  BA 0010				mov	dx,10h
020A:9ECA  E8 BFBF				call	sub_76			; (5E8C)
020A:9ECD  73 14				jnc	loc_1560		; Jump if carry=0
020A:9ECF  26: 8B 45 04				mov	ax,es:[di+4]
020A:9ED3  3B 06 304E				cmp	ax,data_308		; (020A:304E=5F46h)
020A:9ED7  77 0A				ja	loc_1560		; Jump if above
020A:9ED9  A1 304E				mov	ax,data_308		; (020A:304E=5F46h)
020A:9EDC  05 0002				add	ax,2
020A:9EDF  26: 89 45 04				mov	es:[di+4],ax
020A:9EE3			loc_1560:
020A:9EE3  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9EE8  9C					pushf				; Push flags
020A:9EE9  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9EEE  5A					pop	dx
020A:9EEF  8E C2				mov	es,dx
020A:9EF1  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:9EF6  5A					pop	dx
020A:9EF7  75 0A				jnz	loc_1561		; Jump if not zero
020A:9EF9  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 327

020A:9EFE  74 03				je	loc_1561		; Jump if equal
020A:9F00  E8 D4B9				call	sub_103			; (73BC)
020A:9F03			loc_1561:
020A:9F03  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9F08  9D					popf				; Pop flags
020A:9F09  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9F0E  F7 06 35E9 0001			test	data_458,1		; (020A:35E9=3C21h)
020A:9F14  74 03				jz	loc_1562		; Jump if zero
020A:9F16  E9 00DD				jmp	loc_1571		; (9FF6)
020A:9F19			loc_1562:
020A:9F19  E8 D144				call	sub_96			; (7060)
020A:9F1C  33 C9				xor	cx,cx			; Zero register
020A:9F1E  26: 8B 16 0BDB			mov	dx,word ptr es:[0BDBh]	; (5C3C:0BDB=0FFFFh)
020A:9F23  B8 4200				mov	ax,4200h
020A:9F26  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:9F2A  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:9F2C			loc_1563:
020A:9F2C  BD 0C43				mov	bp,0C43h
020A:9F2F  B9 2C43				mov	cx,2C43h
020A:9F32  81 E9 0C43				sub	cx,0C43h
020A:9F36  BA 0C43				mov	dx,0C43h
020A:9F39  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:9F3D  E8 D108				call	sub_92			; (7048)
020A:9F40  B4 3F				mov	ah,3Fh
020A:9F42  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:9F44  E8 D0FE				call	sub_91			; (7045)
020A:9F47  73 05				jnc	loc_1564		; Jump if carry=0
020A:9F49  B3 0E				mov	bl,0Eh
020A:9F4B  E9 01E2				jmp	loc_1586		; (A130)
020A:9F4E			loc_1564:
020A:9F4E  83 3E 4397 00			cmp	word ptr ds:[4397h],0	; (020A:4397=0E80Ah)
020A:9F53  75 03				jne	loc_1565		; Jump if not equal
020A:9F55  E9 009E				jmp	loc_1571		; (9FF6)
020A:9F58			loc_1565:
020A:9F58  E8 D105				call	sub_96			; (7060)
020A:9F5B  26: 8B 5E 00				mov	bx,es:[bp]
020A:9F5F  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:9F62  26: 03 46 02				add	ax,es:[bp+2]
020A:9F66  9A 14FC:6B84		;*		call	far ptr sub_241		;*(14FC:6B84)
020A:9F66  9A					db	9Ah
020A:9F67  6B84 14FC				dw	6B84h, 14FCh
020A:9F6B  A3 4399				mov	word ptr ds:[4399h],ax	; (020A:4399=1AA1h)
020A:9F6E  89 1E 439B				mov	data_541,bx		; (020A:439B=3EBh)
020A:9F72  E8 D0DF				call	sub_93			; (7054)
020A:9F75  B9 0015				mov	cx,15h
020A:9F78  BF 0000				mov	di,0
020A:9F7B			loc_1566:
020A:9F7B  26: 8B 05				mov	ax,es:[di]
020A:9F7E  3D FFFF				cmp	ax,0FFFFh
020A:9F81  74 60				je	loc_1569		; Jump if equal
020A:9F83  26: 8B 5D 02				mov	bx,es:[di+2]
020A:9F87  9A 14FC:6B84		;*		call	far ptr sub_241		;*(14FC:6B84)
020A:9F87  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 328

020A:9F88  6B84 14FC				dw	6B84h, 14FCh
020A:9F8C  39 06 4399				cmp	word ptr ds:[4399h],ax	; (020A:4399=1AA1h)
020A:9F90  72 51				jb	loc_1569		; Jump if below
020A:9F92  77 06				ja	loc_1567		; Jump if above
020A:9F94  39 1E 439B				cmp	data_541,bx		; (020A:439B=3EBh)
020A:9F98  72 49				jb	loc_1569		; Jump if below
020A:9F9A			loc_1567:
020A:9F9A  26: 8B 05				mov	ax,es:[di]
020A:9F9D  26: 8B 5D 04				mov	bx,es:[di+4]
020A:9FA1  9A 14FC:6B84		;*		call	far ptr sub_241		;*(14FC:6B84)
020A:9FA1  9A					db	9Ah
020A:9FA2  6B84 14FC				dw	6B84h, 14FCh
020A:9FA6  2B 1E 439B				sub	bx,data_541		; (020A:439B=3EBh)
020A:9FAA  1B 06 4399				sbb	ax,word ptr ds:[4399h]	; (020A:4399=1AA1h)
020A:9FAE  73 05				jnc	loc_1568		; Jump if carry=0
020A:9FB0  83 C7 15				add	di,15h
020A:9FB3  EB C6				jmp	short loc_1566		; (9F7B)
020A:9FB5			loc_1568:
020A:9FB5  26: 8B 05				mov	ax,es:[di]
020A:9FB8  26: 8B 5D 02				mov	bx,es:[di+2]
020A:9FBC  9A 14FC:6B84		;*		call	far ptr sub_241		;*(14FC:6B84)
020A:9FBC  9A					db	9Ah
020A:9FBD  6B84 14FC				dw	6B84h, 14FCh
020A:9FC1  8B C3				mov	ax,bx
020A:9FC3  8B 1E 439B				mov	bx,data_541		; (020A:439B=3EBh)
020A:9FC7  2B D8				sub	bx,ax
020A:9FC9  26: 8B 0D				mov	cx,es:[di]
020A:9FCC  BE 532E				mov	si,532Eh
020A:9FCF  89 0C				mov	[si],cx
020A:9FD1  89 5C 02				mov	[si+2],bx
020A:9FD4  C6 44 04 5F				mov	byte ptr [si+4],5Fh	; '_'
020A:9FD8  C6 44 05 00				mov	byte ptr [si+5],0
020A:9FDC  C6 44 06 00				mov	byte ptr [si+6],0
020A:9FE0  E8 E4BD				call	sub_114			; (84A0)
020A:9FE3			loc_1569:
020A:9FE3  FF 0E 4397				dec	word ptr ds:[4397h]	; (020A:4397=0E80Ah)
020A:9FE7  83 C5 04				add	bp,4
020A:9FEA  81 FD 2C43				cmp	bp,2C43h
020A:9FEE  72 03				jb	loc_1570		; Jump if below
020A:9FF0  E9 FF39				jmp	loc_1563		; (9F2C)
020A:9FF3			loc_1570:
020A:9FF3  E9 FF58				jmp	loc_1564		; (9F4E)
020A:9FF6			loc_1571:
020A:9FF6  BB 0000				mov	bx,0
020A:9FF9  32 ED				xor	ch,ch			; Zero register
020A:9FFB  8A 0E 3040				mov	cl,data_298		; (020A:3040=33h)
020A:9FFF  B8 0015				mov	ax,15h
020A:A002  E8 D04F				call	sub_93			; (7054)

020A:A005			locloop_1572:
020A:A005  26: 80 67 0B 7F			and	byte ptr es:[bx+0Bh],7Fh
020A:A00A  26: 80 4F 0B 1E			or	byte ptr es:[bx+0Bh],1Eh
020A:A00F  03 D8				add	bx,ax
020A:A011  E2 F2				loop	locloop_1572		; Loop if cx > 0

020A:A013  80 3E 3031 03			cmp	data_288,3		; (020A:3031=45h)
020A:A018  75 03				jne	loc_1573		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 329

020A:A01A  E9 00A3				jmp	loc_1582		; (A0C0)
020A:A01D			loc_1573:
020A:A01D  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:A020  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:A025  75 0D				jne	loc_1575		; Jump if not equal
020A:A027  83 3E 302D 00			cmp	data_286,0		; (020A:302D=4553h)
020A:A02C  75 03				jne	loc_1574		; Jump if not equal
020A:A02E  E9 008C				jmp	loc_1581		; (A0BD)
020A:A031			loc_1574:
020A:A031  A1 302D				mov	ax,data_286		; (020A:302D=4553h)
020A:A034			loc_1575:
020A:A034  8E C0				mov	es,ax
020A:A036  8B 36 302B				mov	si,data_285		; (020A:302B=4E4Fh)
020A:A03A  26: 8A 04				mov	al,es:[si]
020A:A03D  3C EB				cmp	al,0EBh
020A:A03F  74 0C				je	loc_1577		; Jump if equal
020A:A041  3C EA				cmp	al,0EAh
020A:A043  74 07				je	loc_1576		; Jump if equal
020A:A045  3C E9				cmp	al,0E9h
020A:A047  75 07				jne	loc_1578		; Jump if not equal
020A:A049  83 C6 02				add	si,2
020A:A04C			loc_1576:
020A:A04C  46					inc	si
020A:A04D			loc_1577:
020A:A04D  83 C6 02				add	si,2
020A:A050			loc_1578:
020A:A050  81 FE 0100				cmp	si,100h
020A:A054  75 01				jne	loc_1579		; Jump if not equal
020A:A056  46					inc	si
020A:A057			loc_1579:
020A:A057  E8 B9E6				call	sub_62			; (5A40)
020A:A05A  E8 D000				call	sub_95			; (705D)
020A:A05D  80 FB 08				cmp	bl,8
020A:A060  76 5E				jbe	loc_1582		; Jump if below or =
020A:A062  8B F7				mov	si,di
020A:A064  BF 0378				mov	di,378h
020A:A067  32 ED				xor	ch,ch			; Zero register
020A:A069  8A CB				mov	cl,bl
020A:A06B  FC					cld				; Clear direction
020A:A06C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A06E  B1 22				mov	cl,22h			; '"'
020A:A070  2A CB				sub	cl,bl
020A:A072  B0 20				mov	al,20h			; ' '
020A:A074  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A076  A1 3033				mov	ax,data_290		; (020A:3033=5C3Dh)
020A:A079  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:A07E  75 03				jne	loc_1580		; Jump if not equal
020A:A080  A1 302D				mov	ax,data_286		; (020A:302D=4553h)
020A:A083			loc_1580:
020A:A083  8E C0				mov	es,ax
020A:A085  8B 3E 302B				mov	di,data_285		; (020A:302B=4E4Fh)
020A:A089  B0 2E				mov	al,2Eh			; '.'
020A:A08B  B9 003C				mov	cx,3Ch
020A:A08E  FC					cld				; Clear direction
020A:A08F  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:A091  E3 2A				jcxz	loc_1581		; Jump if cx=0
020A:A093  26: 8B 05				mov	ax,es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 330

020A:A096  2C 30				sub	al,30h			; '0'
020A:A098  3C 09				cmp	al,9
020A:A09A  77 21				ja	loc_1581		; Jump if above
020A:A09C  80 EC 30				sub	ah,30h			; '0'
020A:A09F  80 FC 09				cmp	ah,9
020A:A0A2  77 19				ja	loc_1581		; Jump if above
020A:A0A4  83 EF 02				sub	di,2
020A:A0A7  26: 8A 05				mov	al,es:[di]
020A:A0AA  2C 30				sub	al,30h			; '0'
020A:A0AC  3C 09				cmp	al,9
020A:A0AE  77 0D				ja	loc_1581		; Jump if above
020A:A0B0  26: 8B 05				mov	ax,es:[di]
020A:A0B3  A3 60B2				mov	data_687,ax		; (020A:60B2=0C6EBh)
020A:A0B6  26: 8B 45 02				mov	ax,es:[di+2]
020A:A0BA  A3 60B4				mov	data_688,ax		; (020A:60B4=458Ah)
020A:A0BD			loc_1581:
020A:A0BD  E8 CF9D				call	sub_95			; (705D)
020A:A0C0			loc_1582:
020A:A0C0  B4 3D				mov	ah,3Dh			; '='
020A:A0C2  B0 00				mov	al,0
020A:A0C4  BA 31F0				mov	dx,31F0h
020A:A0C7  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:A0C9  72 31				jc	loc_1583		; Jump if carry Set
020A:A0CB  8B D8				mov	bx,ax
020A:A0CD  A3 4152				mov	data_533,ax		; (020A:4152=7EBh)
020A:A0D0  B4 57				mov	ah,57h			; 'W'
020A:A0D2  32 C0				xor	al,al			; Zero register
020A:A0D4  CD 21				int	21h			; DOS Services  ah=function 57h
										;  get file date+time, bx=handle
										;   returns cx=time, dx=date
020A:A0D6  72 24				jc	loc_1583		; Jump if carry Set
020A:A0D8  89 16 341E				mov	data_395,dx		; (020A:341E=57E8h)
020A:A0DC  83 26 341E 1F			and	data_395,1Fh		; (020A:341E=57E8h)
020A:A0E1  B1 05				mov	cl,5
020A:A0E3  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:A0E5  89 16 3420				mov	data_396,dx		; (020A:3420=9A38h)
020A:A0E9  83 26 3420 0F			and	data_396,0Fh		; (020A:3420=9A38h)
020A:A0EE  B1 04				mov	cl,4
020A:A0F0  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:A0F2  83 E2 3F				and	dx,3Fh
020A:A0F5  83 C2 50				add	dx,50h
020A:A0F8  89 16 3422				mov	data_397,dx		; (020A:3422=4E64h)
020A:A0FC			loc_1583:
020A:A0FC  80 3E 4394 00			cmp	byte ptr ds:[4394h],0	; (020A:4394=73h)
020A:A101  74 15				je	loc_1585		; Jump if equal
020A:A103  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:A106  3C 04				cmp	al,4
020A:A108  77 0B				ja	loc_1584		; Jump if above
020A:A10A  B0 04				mov	al,4
020A:A10C  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (020A:327F=0)
020A:A111  76 02				jbe	loc_1584		; Jump if below or =
020A:A113  B0 0A				mov	al,0Ah
020A:A115			loc_1584:
020A:A115  E8 BD24				call	sub_75			; (5E3C)
020A:A118			loc_1585:
020A:A118  C6 06 1DD8 20			mov	data_192,20h		; (020A:1DD8=0) ' '
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 331

020A:A11D  E8 C624				call	sub_82			; (6744)
020A:A120  E8 B88D				call	sub_61			; (59B0)
020A:A123  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:A127  E8 0172				call	sub_121			; (A29C)
020A:A12A  E8 110F				call	sub_134			; (B23C)
020A:A12D  F8					clc				; Clear carry flag
020A:A12E  EB 0B				jmp	short loc_1587		; (A13B)
020A:A130			loc_1586:
020A:A130  E8 CF12				call	sub_91			; (7045)
020A:A133  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:A137  E8 0162				call	sub_121			; (A29C)
020A:A13A  F9					stc				; Set carry flag
020A:A13B			loc_1587:
020A:A13B  C3					retn
							                        ;* No entry point to code
020A:A13C  51					push	cx
020A:A13D  57					push	di
020A:A13E  8B FE				mov	di,si
020A:A140  B9 0032				mov	cx,32h
020A:A143  03 F1				add	si,cx
020A:A145  B0 00				mov	al,0
020A:A147  FC					cld				; Clear direction
020A:A148  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A14A  A0 3030				mov	al,data_287		; (020A:3030=56h)
020A:A14D  26: 88 44 FB				mov	es:[si-5],al
020A:A151  C6 06 3030 00			mov	data_287,0		; (020A:3030=56h)
020A:A156  5F					pop	di
020A:A157  59					pop	cx
020A:A158  C3					retn
020A:A159  DB87			data_740	dw	0DB87h			; Data table (indexed access)
020A:A15B  90					nop
020A:A15C  51					push	cx
020A:A15D  57					push	di
020A:A15E  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A163  06					push	es
020A:A164  E8 CEF6				call	sub_95			; (705D)
020A:A167  BF 4637				mov	di,4637h
020A:A16A  B9 46F0				mov	cx,46F0h
020A:A16D  81 E9 4637				sub	cx,4637h
020A:A171  B0 20				mov	al,20h			; ' '
020A:A173  FC					cld				; Clear direction
020A:A174  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A176  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A17B  9C					pushf				; Push flags
020A:A17C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A181  5A					pop	dx
020A:A182  8E C2				mov	es,dx
020A:A184  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A189  5A					pop	dx
020A:A18A  75 0A				jnz	loc_1588		; Jump if not zero
020A:A18C  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A191  74 03				je	loc_1588		; Jump if equal
020A:A193  E8 D226				call	sub_103			; (73BC)
020A:A196			loc_1588:
020A:A196  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A19B  9D					popf				; Pop flags
020A:A19C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 332

020A:A1A1  5F					pop	di
020A:A1A2  59					pop	cx
020A:A1A3  C3					retn
							                        ;* No entry point to code
020A:A1A4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A1A9  06					push	es
020A:A1AA  E8 CEB0				call	sub_95			; (705D)
020A:A1AD  BF 6359				mov	di,6359h
020A:A1B0  B9 638B				mov	cx,638Bh
020A:A1B3  81 E9 6359				sub	cx,6359h
020A:A1B7  49					dec	cx
020A:A1B8  B0 20				mov	al,20h			; ' '
020A:A1BA  FC					cld				; Clear direction
020A:A1BB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A1BD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A1C2  9C					pushf				; Push flags
020A:A1C3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A1C8  5A					pop	dx
020A:A1C9  8E C2				mov	es,dx
020A:A1CB  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A1D0  5A					pop	dx
020A:A1D1  75 0A				jnz	loc_1589		; Jump if not zero
020A:A1D3  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A1D8  74 03				je	loc_1589		; Jump if equal
020A:A1DA  E8 D1DF				call	sub_103			; (73BC)
020A:A1DD			loc_1589:
020A:A1DD  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A1E2  9D					popf				; Pop flags
020A:A1E3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A1E8  C3					retn
							                        ;* No entry point to code
020A:A1E9  87 DB				xchg	bx,bx
020A:A1EB  90					nop
020A:A1EC  51					push	cx
020A:A1ED  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A1F2  06					push	es
020A:A1F3  E8 CE67				call	sub_95			; (705D)
020A:A1F6  BF 63A4				mov	di,63A4h
020A:A1F9  B9 63D6				mov	cx,63D6h
020A:A1FC  81 E9 63A4				sub	cx,63A4h
020A:A200  49					dec	cx
020A:A201  B0 20				mov	al,20h			; ' '
020A:A203  FC					cld				; Clear direction
020A:A204  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A206  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A20B  9C					pushf				; Push flags
020A:A20C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A211  5A					pop	dx
020A:A212  8E C2				mov	es,dx
020A:A214  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A219  5A					pop	dx
020A:A21A  75 0A				jnz	loc_1590		; Jump if not zero
020A:A21C  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A221  74 03				je	loc_1590		; Jump if equal
020A:A223  E8 D196				call	sub_103			; (73BC)
020A:A226			loc_1590:
020A:A226  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 333

020A:A22B  9D					popf				; Pop flags
020A:A22C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A231  59					pop	cx
020A:A232  C3					retn
020A:A233  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_120		proc	near
020A:A234  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:A239  75 59				jne	loc_1592		; Jump if not equal
020A:A23B  52					push	dx
020A:A23C  56					push	si
020A:A23D  57					push	di
020A:A23E  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A243  06					push	es
020A:A244  BA 34E8				mov	dx,34E8h
020A:A247  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:A247  9A					db	9Ah
020A:A248  233C 14FC				dw	233Ch, 14FCh
020A:A24C  E8 CE0E				call	sub_95			; (705D)
020A:A24F  BF 34E8				mov	di,34E8h
020A:A252  B0 20				mov	al,20h			; ' '
020A:A254  B9 35A0				mov	cx,35A0h
020A:A257  81 E9 34E8				sub	cx,34E8h
020A:A25B  FC					cld				; Clear direction
020A:A25C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A25E  B8 0003				mov	ax,3
020A:A261  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:A261  9A					db	9Ah
020A:A262  2280 14FC				dw	2280h, 14FCh
020A:A266  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A26B  9C					pushf				; Push flags
020A:A26C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A271  5A					pop	dx
020A:A272  8E C2				mov	es,dx
020A:A274  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A279  5A					pop	dx
020A:A27A  75 0A				jnz	loc_1591		; Jump if not zero
020A:A27C  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A281  74 03				je	loc_1591		; Jump if equal
020A:A283  E8 D136				call	sub_103			; (73BC)
020A:A286			loc_1591:
020A:A286  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A28B  9D					popf				; Pop flags
020A:A28C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A291  5F					pop	di
020A:A292  5E					pop	si
020A:A293  5A					pop	dx
020A:A294			loc_1592:
020A:A294  C7 06 3447 FFFF			mov	data_399,0FFFFh		; (020A:3447=8580h)
020A:A29A  C3					retn
				sub_120		endp

020A:A29B  90					nop
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 334


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_121		proc	near
020A:A29C  50					push	ax
020A:A29D  B4 3E				mov	ah,3Eh
020A:A29F  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:A2A1  58					pop	ax
020A:A2A2  C3					retn
				sub_121		endp

020A:A2A3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_122		proc	near
020A:A2A4  80 3E 35E6 00			cmp	data_456,0		; (020A:35E6=0B4h)
020A:A2A9  75 03				jne	loc_1593		; Jump if not equal
020A:A2AB  E9 0083				jmp	loc_1599		; (A331)
020A:A2AE			loc_1593:
020A:A2AE  06					push	es
020A:A2AF  55					push	bp
020A:A2B0  F7 06 4E24 0040			test	data_592,40h		; (020A:4E24=0A107h)
020A:A2B6  75 77				jnz	loc_1598		; Jump if not zero
020A:A2B8  80 3E 4D49 01			cmp	data_568,1		; (020A:4D49=80h)
020A:A2BD  74 70				je	loc_1598		; Jump if equal
020A:A2BF  80 3E 309E 78			cmp	data_346,78h		; (020A:309E=65h) 'x'
020A:A2C4  74			data_742	db	74h
020A:A2C5  0E					push	cs
020A:A2C6  80 3E 309E F5			cmp	data_346,0F5h		; (020A:309E=65h)
020A:A2CB  74 07				je	loc_1594		; Jump if equal
020A:A2CD  80 3E 309E 4F			cmp	data_346,4Fh		; (020A:309E=65h) 'O'
020A:A2D2  75 5B				jne	loc_1598		; Jump if not equal
020A:A2D4			loc_1594:
020A:A2D4  83 3E 40F5 FF			cmp	data_523,0FFFFh		; (020A:40F5=3C26h)
020A:A2D9  75 0E				jne	loc_1595		; Jump if not equal
020A:A2DB  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:A2E0  74 4D				je	loc_1598		; Jump if equal
020A:A2E2  80 3E 327F 09			cmp	byte ptr ds:[327Fh],9	; (020A:327F=0)
020A:A2E7  74 46				je	loc_1598		; Jump if equal
020A:A2E9			loc_1595:
020A:A2E9  E8 C32C				call	sub_79			; (6618)
020A:A2EC  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020A:A2F1  45					inc	bp
020A:A2F2  A1 40F5				mov	ax,data_523		; (020A:40F5=3C26h)
020A:A2F5  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:A2FA  75 1B				jne	loc_1596		; Jump if not equal
020A:A2FC  2B 06 3050				sub	ax,data_309		; (020A:3050=5250h)
020A:A300  A9 0FFF				test	ax,0FFFh
020A:A303  75 12				jnz	loc_1596		; Jump if not zero
020A:A305  51					push	cx
020A:A306  B1 0C				mov	cl,0Ch
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 335

020A:A308  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:A30A  59					pop	cx
020A:A30B  9A 14FC:00B0		;*		call	far ptr sub_150		;*(14FC:00B0)
020A:A30B  9A					db	9Ah
020A:A30C  00B0 14FC				dw	0B0h, 14FCh
020A:A310  3E: 88 7E 00				mov	ds:[bp],bh
020A:A314  45					inc	bp
020A:A315  EB 0B				jmp	short loc_1597		; (A322)
020A:A317			loc_1596:
020A:A317  3B 06 344A				cmp	ax,data_401		; (020A:344A=0CD01h)
020A:A31B  74 05				je	loc_1597		; Jump if equal
020A:A31D  9A 14FC:0118		;*		call	far ptr sub_153		;*(14FC:0118)
020A:A31D  9A					db	9Ah
020A:A31E  0118 14FC				dw	118h, 14FCh
020A:A322			loc_1597:
020A:A322  A1 40F7				mov	ax,data_524		; (020A:40F7=7545h)
020A:A325  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:A325  9A					db	9Ah
020A:A326  021C 14FC				dw	21Ch, 14FCh
020A:A32A  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:A32F			loc_1598:
020A:A32F  5D					pop	bp
020A:A330  07					pop	es
020A:A331			loc_1599:
020A:A331  C3					retn
				sub_122		endp

							                        ;* No entry point to code
020A:A332  87 DB				xchg	bx,bx
020A:A334  53					push	bx
020A:A335  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (020A:327F=0)
020A:A33A  74 2A				je	loc_1600		; Jump if equal
020A:A33C  F6 06 3459 01			test	data_409,1		; (020A:3459=21h)
020A:A341  75 23				jnz	loc_1600		; Jump if not zero
020A:A343  80 3E 2B3B 06			cmp	data_242,6		; (020A:2B3B=55h)
020A:A348  72 1C				jb	loc_1600		; Jump if below
020A:A34A  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:A34F  74 15				je	loc_1600		; Jump if equal
020A:A351  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:A354  2B 06 3482				sub	ax,data_432		; (020A:3482=0A4F3h)
020A:A358  3D 0064				cmp	ax,64h
020A:A35B  77 09				ja	loc_1600		; Jump if above
020A:A35D  BB FFFF				mov	bx,0FFFFh
020A:A360  39 1E 3484				cmp	data_433,bx		; (020A:3484=0BEE8h)
020A:A364  75 03				jne	loc_1601		; Jump if not equal
020A:A366			loc_1600:
020A:A366  E9 00B9				jmp	loc_1609		; (A422)
020A:A369			loc_1601:
020A:A369  51					push	cx
020A:A36A  56					push	si
020A:A36B  57					push	di
020A:A36C  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A371  06					push	es
020A:A372  BA 0001				mov	dx,1
020A:A375  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:A379  A1 3482				mov	ax,data_432		; (020A:3482=0A4F3h)
020A:A37C  3D FFFF				cmp	ax,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 336

020A:A37F  74 73				je	loc_1607		; Jump if equal
020A:A381  E8 BB08				call	sub_76			; (5E8C)
020A:A384  73 6E				jnc	loc_1607		; Jump if carry=0
020A:A386  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:A386  9A					db	9Ah
020A:A387  55E4 14FC				dw	55E4h, 14FCh
020A:A38B  72 67				jc	loc_1607		; Jump if carry Set
020A:A38D  56					push	si
020A:A38E  8B F7				mov	si,di
020A:A390  E8 E2F5				call	sub_115			; (8688)
020A:A393  5E					pop	si
020A:A394  BE 346A				mov	si,346Ah
020A:A397  B9 0003				mov	cx,3

020A:A39A			locloop_1602:
020A:A39A  8B 7C 02				mov	di,[si+2]
020A:A39D  83 FF FF				cmp	di,0FFFFh
020A:A3A0  74 20				je	loc_1604		; Jump if equal
020A:A3A2  BA 0001				mov	dx,1
020A:A3A5  8B 1C				mov	bx,[si]
020A:A3A7  8B 44 02				mov	ax,[si+2]
020A:A3AA  E8 BADF				call	sub_76			; (5E8C)
020A:A3AD  73 13				jnc	loc_1604		; Jump if carry=0
020A:A3AF  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:A3AF  9A					db	9Ah
020A:A3B0  55E4 14FC				dw	55E4h, 14FCh
020A:A3B4  72 07				jc	loc_1603		; Jump if carry Set
020A:A3B6  56					push	si
020A:A3B7  8B F7				mov	si,di
020A:A3B9  E8 E2CC				call	sub_115			; (8688)
020A:A3BC  5E					pop	si
020A:A3BD			loc_1603:
020A:A3BD  83 C6 04				add	si,4
020A:A3C0  E2 D8				loop	locloop_1602		; Loop if cx > 0

020A:A3C2			loc_1604:
020A:A3C2  89 1E 3484				mov	data_433,bx		; (020A:3484=0BEE8h)
020A:A3C6  BE 3476				mov	si,3476h
020A:A3C9  B9 0003				mov	cx,3

020A:A3CC			locloop_1605:
020A:A3CC  8B 7C 02				mov	di,[si+2]
020A:A3CF  83 FF FF				cmp	di,0FFFFh
020A:A3D2  74 20				je	loc_1607		; Jump if equal
020A:A3D4  8B 1C				mov	bx,[si]
020A:A3D6  8B 44 02				mov	ax,[si+2]
020A:A3D9  BA 0002				mov	dx,2
020A:A3DC  E8 BAAD				call	sub_76			; (5E8C)
020A:A3DF  73 13				jnc	loc_1607		; Jump if carry=0
020A:A3E1  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:A3E1  9A					db	9Ah
020A:A3E2  55E4 14FC				dw	55E4h, 14FCh
020A:A3E6  72 07				jc	loc_1606		; Jump if carry Set
020A:A3E8  56					push	si
020A:A3E9  8B F7				mov	si,di
020A:A3EB  E8 E29A				call	sub_115			; (8688)
020A:A3EE  5E					pop	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 337

020A:A3EF			loc_1606:
020A:A3EF  83 C6 04				add	si,4
020A:A3F2  E2 D8				loop	locloop_1605		; Loop if cx > 0

020A:A3F4			loc_1607:
020A:A3F4  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A3F9  9C					pushf				; Push flags
020A:A3FA  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A3FF  5A					pop	dx
020A:A400  8E C2				mov	es,dx
020A:A402  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A407  5A					pop	dx
020A:A408  75 0A				jnz	loc_1608		; Jump if not zero
020A:A40A  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A40F  74 03				je	loc_1608		; Jump if equal
020A:A411  E8 CFA8				call	sub_103			; (73BC)
020A:A414			loc_1608:
020A:A414  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A419  9D					popf				; Pop flags
020A:A41A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A41F  5F					pop	di
020A:A420  5E					pop	si
020A:A421  59					pop	cx
020A:A422			loc_1609:
020A:A422  5B					pop	bx
020A:A423  C3					retn
020A:A424  000C[00]				db	12 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_123		proc	near
020A:A430  53					push	bx
020A:A431  52					push	dx
020A:A432  1E					push	ds
020A:A433  E8 CC12				call	sub_92			; (7048)
020A:A436  33 F6				xor	si,si			; Zero register
020A:A438  B3 FF				mov	bl,0FFh
020A:A43A  B7 01				mov	bh,1
020A:A43C  BD 0005				mov	bp,5
020A:A43F			loc_1610:
020A:A43F  38 1C				cmp	[si],bl
020A:A441  74 33				je	loc_1614		; Jump if equal
020A:A443  39 44 03				cmp	[si+3],ax
020A:A446  73 1A				jae	loc_1613		; Jump if above or =
020A:A448			loc_1611:
020A:A448  33 D2				xor	dx,dx			; Zero register
020A:A44A  02 54 02				add	dl,[si+2]
020A:A44D  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A44F  84 7C 01				test	bh,[si+1]
020A:A452  75 06				jnz	loc_1612		; Jump if not zero
020A:A454  03 D5				add	dx,bp
020A:A456  03 F2				add	si,dx
020A:A458  EB E5				jmp	short loc_1610		; (A43F)
020A:A45A			loc_1612:
020A:A45A  D1 E2				shl	dx,1			; Shift w/zeros fill
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 338

020A:A45C  03 D5				add	dx,bp
020A:A45E  03 F2				add	si,dx
020A:A460  EB DD				jmp	short loc_1610		; (A43F)
020A:A462			loc_1613:
020A:A462  77 12				ja	loc_1614		; Jump if above
020A:A464  80 3C FE				cmp	byte ptr [si],0FEh
020A:A467  74 DF				je	loc_1611		; Jump if equal
020A:A469  38 0C				cmp	[si],cl
020A:A46B  77 09				ja	loc_1614		; Jump if above
020A:A46D  75 D9				jnz	loc_1611		; Jump if not zero
020A:A46F  38 6C 01				cmp	[si+1],ch
020A:A472  74 05				je	loc_1615		; Jump if equal
020A:A474  EB D2				jmp	short loc_1611		; (A448)
020A:A476			loc_1614:
020A:A476  F8					clc				; Clear carry flag
020A:A477  EB 01				jmp	short loc_1616		; (A47A)
020A:A479			loc_1615:
020A:A479  F9					stc				; Set carry flag
020A:A47A			loc_1616:
020A:A47A  8C DB				mov	bx,ds
020A:A47C  8E C3				mov	es,bx
020A:A47E  1F					pop	ds
020A:A47F  5A					pop	dx
020A:A480  5B					pop	bx
020A:A481  C3					retn
				sub_123		endp

020A:A482  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_124		proc	near
020A:A484  E8 AD65				call	sub_45			; (51EC)
020A:A487  50					push	ax
020A:A488  53					push	bx
020A:A489  51					push	cx
020A:A48A  52					push	dx
020A:A48B  57					push	di
020A:A48C  56					push	si
020A:A48D  55					push	bp
020A:A48E  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A493  06					push	es
020A:A494  8B 0E 4E82				mov	cx,data_635		; (020A:4E82=38E9h)
020A:A498  83 E9 0B				sub	cx,0Bh
020A:A49B  3B 0E 4E80				cmp	cx,data_634		; (020A:4E80=806h)
020A:A49F  77 03				ja	loc_1617		; Jump if above
020A:A4A1  E9 011E				jmp	loc_1635		; (A5C2)
020A:A4A4			loc_1617:
020A:A4A4  9A 14FC:4610		;*		call	far ptr sub_214		;*(14FC:4610)
020A:A4A4  9A					db	9Ah
020A:A4A5  4610 14FC				dw	4610h, 14FCh
020A:A4A9  83 FB 00				cmp	bx,0
020A:A4AC  75 10				jne	loc_1618		; Jump if not equal
020A:A4AE  3D 0400				cmp	ax,400h
020A:A4B1  72 0B				jb	loc_1618		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 339

020A:A4B3  3D 0500				cmp	ax,500h
020A:A4B6  77 15				ja	loc_1619		; Jump if above
020A:A4B8  BB 0040				mov	bx,40h
020A:A4BB  2D 0400				sub	ax,400h
020A:A4BE			loc_1618:
020A:A4BE  83 FB 40				cmp	bx,40h
020A:A4C1  75 0A				jne	loc_1619		; Jump if not equal
020A:A4C3  3D 0100				cmp	ax,100h
020A:A4C6  75 05				jne	loc_1619		; Jump if not equal
020A:A4C8  33 C0				xor	ax,ax			; Zero register
020A:A4CA  BB 0050				mov	bx,50h
020A:A4CD			loc_1619:
020A:A4CD  BE 0000				mov	si,0
020A:A4D0  E8 CB81				call	sub_93			; (7054)
020A:A4D3  B5 01				mov	ch,1
020A:A4D5			loc_1620:
020A:A4D5  26: 39 1C				cmp	es:[si],bx
020A:A4D8  75 0C				jne	loc_1621		; Jump if not equal
020A:A4DA  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A4DE  72 06				jb	loc_1621		; Jump if below
020A:A4E0  26: 3B 44 04				cmp	ax,es:[si+4]
020A:A4E4  76 0E				jbe	loc_1622		; Jump if below or =
020A:A4E6			loc_1621:
020A:A4E6  FE C5				inc	ch
020A:A4E8  83 C6 15				add	si,15h
020A:A4EB  3A 2E 3040				cmp	ch,data_298		; (020A:3040=33h)
020A:A4EF  76 E4				jbe	loc_1620		; Jump if below or =
020A:A4F1  E9 00CE				jmp	loc_1635		; (A5C2)
020A:A4F4			loc_1622:
020A:A4F4  FE CD				dec	ch
020A:A4F6  8A CD				mov	cl,ch
020A:A4F8  32 ED				xor	ch,ch			; Zero register
020A:A4FA  3B 1E 344A				cmp	bx,data_401		; (020A:344A=0CD01h)
020A:A4FE  74 03				je	loc_1623		; Jump if equal
020A:A500  80 CD 01				or	ch,1
020A:A503			loc_1623:
020A:A503  83 FA 04				cmp	dx,4
020A:A506  74 0D				je	loc_1625		; Jump if equal
020A:A508  83 FA 02				cmp	dx,2
020A:A50B  74 05				je	loc_1624		; Jump if equal
020A:A50D  80 CD 02				or	ch,2
020A:A510  EB 03				jmp	short loc_1625		; (A515)
020A:A512			loc_1624:
020A:A512  80 CD 04				or	ch,4
020A:A515			loc_1625:
020A:A515  E8 FF18				call	sub_123			; (A430)
020A:A518  72 04				jc	loc_1626		; Jump if carry Set
020A:A51A  B7 01				mov	bh,1
020A:A51C  EB 48				jmp	short loc_1631		; (A566)
020A:A51E			loc_1626:
020A:A51E  32 FF				xor	bh,bh			; Zero register
020A:A520  26: 8A 54 02				mov	dl,es:[si+2]
020A:A524  80 FA FF				cmp	dl,0FFh
020A:A527  74 25				je	loc_1628		; Jump if equal
020A:A529  8B FE				mov	di,si
020A:A52B  83 C6 05				add	si,5
020A:A52E  32 F6				xor	dh,dh			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 340

020A:A530  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A532  F6 C5 01				test	ch,1
020A:A535  74 02				jz	loc_1627		; Jump if zero
020A:A537  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A539			loc_1627:
020A:A539  03 F2				add	si,dx
020A:A53B  8B 16 344C				mov	dx,data_402		; (020A:344C=6C6h)
020A:A53F  2B 16 5616				sub	dx,data_660		; (020A:5616=2EBFh)
020A:A543  F6 C5 01				test	ch,1
020A:A546  75 08				jnz	loc_1629		; Jump if not zero
020A:A548  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:A54C  75 14				jne	loc_1630		; Jump if not equal
020A:A54E			loc_1628:
020A:A54E  EB 72				jmp	short loc_1635		; (A5C2)
020A:A550			loc_1629:
020A:A550  26: 3B 54 FC				cmp	dx,es:[si-4]
020A:A554  75 0C				jne	loc_1630		; Jump if not equal
020A:A556  8B 16 344A				mov	dx,data_401		; (020A:344A=0CD01h)
020A:A55A  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:A55E  75 02				jne	loc_1630		; Jump if not equal
020A:A560  EB 60				jmp	short loc_1635		; (A5C2)
020A:A562			loc_1630:
020A:A562  26: FE 45 02				inc	byte ptr es:[di+2]
020A:A566			loc_1631:
020A:A566  8B D6				mov	dx,si
020A:A568  8A DD				mov	bl,ch
020A:A56A  51					push	cx
020A:A56B  8B 3E 4E80				mov	di,data_634		; (020A:4E80=806h)
020A:A56F  8B F7				mov	si,di
020A:A571  8B CF				mov	cx,di
020A:A573  2B CA				sub	cx,dx
020A:A575  83 C7 02				add	di,2
020A:A578  83 C1 02				add	cx,2
020A:A57B  0A FF				or	bh,bh			; Zero ?
020A:A57D  74 03				jz	loc_1632		; Jump if zero
020A:A57F  83 C7 05				add	di,5
020A:A582			loc_1632:
020A:A582  F6 C3 01				test	bl,1
020A:A585  74 03				jz	loc_1633		; Jump if zero
020A:A587  83 C7 02				add	di,2
020A:A58A			loc_1633:
020A:A58A  89 3E 4E80				mov	data_634,di		; (020A:4E80=806h)
020A:A58E  06					push	es
020A:A58F  1F					pop	ds
020A:A590  FD					std				; Set direction flag
020A:A591  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A593  E8 CAAF				call	sub_91			; (7045)
020A:A596  59					pop	cx
020A:A597  8B F2				mov	si,dx
020A:A599  0A FF				or	bh,bh			; Zero ?
020A:A59B  74 0F				jz	loc_1634		; Jump if zero
020A:A59D  26: 89 0C				mov	es:[si],cx
020A:A5A0  26: C6 44 02 01			mov	byte ptr es:[si+2],1
020A:A5A5  26: 89 44 03				mov	es:[si+3],ax
020A:A5A9  83 C6 05				add	si,5
020A:A5AC			loc_1634:
020A:A5AC  A1 344C				mov	ax,word ptr ds:[344Ch]	; (B432:344C=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 341

020A:A5AF  2B 06 5616				sub	ax,word ptr ds:[5616h]	; (B432:5616=720h)
020A:A5B3  26: 89 04				mov	es:[si],ax
020A:A5B6  F6 C3 01				test	bl,1
020A:A5B9  74 07				jz	loc_1635		; Jump if zero
020A:A5BB  A1 344A				mov	ax,word ptr ds:[344Ah]	; (B432:344A=0)
020A:A5BE  26: 89 44 02				mov	es:[si+2],ax
020A:A5C2			loc_1635:
020A:A5C2  FC					cld				; Clear direction
020A:A5C3  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A5C8  9C					pushf				; Push flags
020A:A5C9  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A5CE  5A					pop	dx
020A:A5CF  8E C2				mov	es,dx
020A:A5D1  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A5D6  5A					pop	dx
020A:A5D7  75 0A				jnz	loc_1636		; Jump if not zero
020A:A5D9  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A5DE  74 03				je	loc_1636		; Jump if equal
020A:A5E0  E8 CDD9				call	sub_103			; (73BC)
020A:A5E3			loc_1636:
020A:A5E3  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A5E8  9D					popf				; Pop flags
020A:A5E9  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A5EE  5D					pop	bp
020A:A5EF  5E					pop	si
020A:A5F0  5F					pop	di
020A:A5F1  5A					pop	dx
020A:A5F2  59					pop	cx
020A:A5F3  5B					pop	bx
020A:A5F4  58					pop	ax
020A:A5F5  C3					retn
				sub_124		endp

							                        ;* No entry point to code
020A:A5F6  87 DB				xchg	bx,bx
020A:A5F8  50					push	ax
020A:A5F9  53					push	bx
020A:A5FA  51					push	cx
020A:A5FB  52					push	dx
020A:A5FC  56					push	si
020A:A5FD  57					push	di
020A:A5FE  55					push	bp
020A:A5FF  BF 0008				mov	di,8
020A:A602  8B F7				mov	si,di
020A:A604  BB 40C2				mov	bx,40C2h
020A:A607  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:A60C  72 03				jb	loc_1637		; Jump if below
020A:A60E  E9 02DB				jmp	loc_1678		; (A8EC)
020A:A611			loc_1637:
020A:A611  26: 8A 45 05				mov	al,es:[di+5]
020A:A615  25 000F				and	ax,0Fh
020A:A618  D7					xlat				; al=[al+[bx]] table
020A:A619  0A C0				or	al,al			; Zero ?
020A:A61B  75 04				jnz	loc_1638		; Jump if not zero
020A:A61D  26: 8A 45 06				mov	al,es:[di+6]
020A:A621			loc_1638:
020A:A621  8B F7				mov	si,di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 342

020A:A623  03 F0				add	si,ax
020A:A625  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A62A  72 03				jb	loc_1639		; Jump if below
020A:A62C  E9 02BD				jmp	loc_1678		; (A8EC)
020A:A62F			loc_1639:
020A:A62F  26: 8B 05				mov	ax,es:[di]
020A:A632  26: 3B 04				cmp	ax,es:[si]
020A:A635  74 03				je	loc_1640		; Jump if equal
020A:A637  E9 0294				jmp	loc_1675		; (A8CE)
020A:A63A			loc_1640:
020A:A63A  26: 8B 45 02				mov	ax,es:[di+2]
020A:A63E  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A642  75 03				jne	loc_1641		; Jump if not equal
020A:A644  E9 0152				jmp	loc_1660		; (A799)
020A:A647			loc_1641:
020A:A647  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:A64C  74 03				jz	loc_1642		; Jump if zero
020A:A64E  E9 027D				jmp	loc_1675		; (A8CE)
020A:A651			loc_1642:
020A:A651  26: 8B 45 08				mov	ax,es:[di+8]
020A:A655  26: 03 45 02				add	ax,es:[di+2]
020A:A659  73 07				jnc	loc_1643		; Jump if carry=0
020A:A65B  40					inc	ax
020A:A65C  26: 29 45 08				sub	es:[di+8],ax
020A:A660  EB E5				jmp	short loc_1641		; (A647)
020A:A662			loc_1643:
020A:A662  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A666  77 03				ja	loc_1644		; Jump if above
020A:A668  E9 0263				jmp	loc_1675		; (A8CE)
020A:A66B			loc_1644:
020A:A66B  83 3E 31E7 00			cmp	data_371,0		; (020A:31E7=444Eh)
020A:A670  75 19				jne	loc_1645		; Jump if not equal
020A:A672  26: 8A 45 04				mov	al,es:[di+4]
020A:A676  24 3F				and	al,3Fh			; '?'
020A:A678  3C 20				cmp	al,20h			; ' '
020A:A67A  75 0F				jne	loc_1645		; Jump if not equal
020A:A67C  26: 8B 45 02				mov	ax,es:[di+2]
020A:A680  26: 03 45 08				add	ax,es:[di+8]
020A:A684  A3 31E7				mov	data_371,ax		; (020A:31E7=444Eh)
020A:A687  89 3E 31E9				mov	data_372,di		; (020A:31E9=574Fh)
020A:A68B			loc_1645:
020A:A68B  26: 8A 45 04				mov	al,es:[di+4]
020A:A68F  24 3F				and	al,3Fh			; '?'
020A:A691  3C 21				cmp	al,21h			; '!'
020A:A693  74 04				je	loc_1646		; Jump if equal
020A:A695  3C 22				cmp	al,22h			; '"'
020A:A697  75 03				jne	loc_1647		; Jump if not equal
020A:A699			loc_1646:
020A:A699  E9 0091				jmp	loc_1655		; (A72D)
020A:A69C			loc_1647:
020A:A69C  26: 8A 44 04				mov	al,es:[si+4]
020A:A6A0  24 3F				and	al,3Fh			; '?'
020A:A6A2  3C 21				cmp	al,21h			; '!'
020A:A6A4  75 03				jne	loc_1649		; Jump if not equal
020A:A6A6			loc_1648:
020A:A6A6  E9 00A4				jmp	loc_1657		; (A74D)
020A:A6A9			loc_1649:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 343

020A:A6A9  3C 22				cmp	al,22h			; '"'
020A:A6AB  74 F9				je	loc_1648		; Jump if equal
020A:A6AD  87 F7				xchg	si,di
020A:A6AF  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:A6AF  9A					db	9Ah
020A:A6B0  55E4 14FC				dw	55E4h, 14FCh
020A:A6B4  87 F7				xchg	si,di
020A:A6B6  72 75				jc	loc_1655		; Jump if carry Set
020A:A6B8  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:A6B8  9A					db	9Ah
020A:A6B9  55E4 14FC				dw	55E4h, 14FCh
020A:A6BD  72 5D				jc	loc_1653		; Jump if carry Set
020A:A6BF  26: 8B 44 02				mov	ax,es:[si+2]
020A:A6C3  26: 2B 45 02				sub	ax,es:[di+2]
020A:A6C7  BA 0004				mov	dx,4
020A:A6CA  26: 8A 4D 04				mov	cl,es:[di+4]
020A:A6CE  80 E1 3F				and	cl,3Fh			; '?'
020A:A6D1  80 F9 20				cmp	cl,20h			; ' '
020A:A6D4  75 03				jne	loc_1650		; Jump if not equal
020A:A6D6  BA 03F0				mov	dx,3F0h
020A:A6D9			loc_1650:
020A:A6D9  3B C2				cmp	ax,dx
020A:A6DB  73 50				jae	loc_1655		; Jump if above or =
020A:A6DD  81 FA 03F0				cmp	dx,3F0h
020A:A6E1  74 03				je	loc_1651		; Jump if equal
020A:A6E3  E9 00B9				jmp	loc_1661		; (A79F)
020A:A6E6			loc_1651:
020A:A6E6  26: 8A 44 04				mov	al,es:[si+4]
020A:A6EA  24 3F				and	al,3Fh			; '?'
020A:A6EC  3C 02				cmp	al,2
020A:A6EE  74 3D				je	loc_1655		; Jump if equal
020A:A6F0  3C 04				cmp	al,4
020A:A6F2  74 39				je	loc_1655		; Jump if equal
020A:A6F4  3C 20				cmp	al,20h			; ' '
020A:A6F6  75 19				jne	loc_1652		; Jump if not equal
020A:A6F8  53					push	bx
020A:A6F9  06					push	es
020A:A6FA  26: 8B 5C 02				mov	bx,es:[si+2]
020A:A6FE  26: 8B 04				mov	ax,es:[si]
020A:A701  8E C0				mov	es,ax
020A:A703  26: 8A 47 FF				mov	al,es:[bx-1]
020A:A707  07					pop	es
020A:A708  5B					pop	bx
020A:A709  3C 00				cmp	al,0
020A:A70B  74 20				je	loc_1655		; Jump if equal
020A:A70D  3C 24				cmp	al,24h			; '$'
020A:A70F  74 1C				je	loc_1655		; Jump if equal
020A:A711			loc_1652:
020A:A711  26: 8B 44 02				mov	ax,es:[si+2]
020A:A715  26: 2B 45 02				sub	ax,es:[di+2]
020A:A719  E9 0083				jmp	loc_1661		; (A79F)
020A:A71C			loc_1653:
020A:A71C  26: 8B 44 02				mov	ax,es:[si+2]
020A:A720  26: 2B 45 02				sub	ax,es:[di+2]
020A:A724  3D 03F0				cmp	ax,3F0h
020A:A727  73 02				jae	loc_1654		; Jump if above or =
020A:A729  EB 74				jmp	short loc_1661		; (A79F)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 344

020A:A72B			loc_1654:
020A:A72B  EB 6C				jmp	short loc_1660		; (A799)
020A:A72D			loc_1655:
020A:A72D  26: 8B 44 02				mov	ax,es:[si+2]
020A:A731  26: 2B 45 02				sub	ax,es:[di+2]
020A:A735  8B C8				mov	cx,ax
020A:A737  26: 87 45 08				xchg	es:[di+8],ax
020A:A73B  2B C1				sub	ax,cx
020A:A73D  26: 3B 44 08				cmp	ax,es:[si+8]
020A:A741  77 03				ja	loc_1656		; Jump if above
020A:A743  E9 0188				jmp	loc_1675		; (A8CE)
020A:A746			loc_1656:
020A:A746  26: 2B 44 02				sub	ax,es:[si+2]
020A:A74A  E9 0181				jmp	loc_1675		; (A8CE)
020A:A74D			loc_1657:
020A:A74D  26: 8B 45 02				mov	ax,es:[di+2]
020A:A751  26: 03 45 08				add	ax,es:[di+8]
020A:A755  26: 8B 4C 02				mov	cx,es:[si+2]
020A:A759  26: 03 4C 08				add	cx,es:[si+8]
020A:A75D  3B C8				cmp	cx,ax
020A:A75F  76 38				jbe	loc_1660		; Jump if below or =
020A:A761  2B C8				sub	cx,ax
020A:A763  26: 89 44 02				mov	es:[si+2],ax
020A:A767  26: 89 4C 08				mov	es:[si+8],cx
020A:A76B  57					push	di
020A:A76C  26: 8A 44 05				mov	al,es:[si+5]
020A:A770  25 000F				and	ax,0Fh
020A:A773  D7					xlat				; al=[al+[bx]] table
020A:A774  0A C0				or	al,al			; Zero ?
020A:A776  75 04				jnz	loc_1658		; Jump if not zero
020A:A778  26: 8A 44 06				mov	al,es:[si+6]
020A:A77C			loc_1658:
020A:A77C  8B FE				mov	di,si
020A:A77E  03 F8				add	di,ax
020A:A780  26: 8B 05				mov	ax,es:[di]
020A:A783  26: 3B 04				cmp	ax,es:[si]
020A:A786  75 0D				jne	loc_1659		; Jump if not equal
020A:A788  26: 8B 45 02				mov	ax,es:[di+2]
020A:A78C  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A790  77 03				ja	loc_1659		; Jump if above
020A:A792  5F					pop	di
020A:A793  EB 04				jmp	short loc_1660		; (A799)
020A:A795			loc_1659:
020A:A795  5F					pop	di
020A:A796  E9 00F4				jmp	loc_1671		; (A88D)
020A:A799			loc_1660:
020A:A799  E8 DEEC				call	sub_115			; (8688)
020A:A79C  E9 0147				jmp	loc_1677		; (A8E6)
020A:A79F			loc_1661:
020A:A79F  26: 80 4C 05 80			or	byte ptr es:[si+5],80h
020A:A7A4  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:A7A9  74 19				jz	loc_1663		; Jump if zero
020A:A7AB  26: 8B 4D 06				mov	cx,es:[di+6]
020A:A7AF  81 E1 03FF				and	cx,3FFh
020A:A7B3  03 C1				add	ax,cx
020A:A7B5  72 05				jc	loc_1662		; Jump if carry Set
020A:A7B7  3D 03F0				cmp	ax,3F0h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 345

020A:A7BA  76 08				jbe	loc_1663		; Jump if below or =
020A:A7BC			loc_1662:
020A:A7BC  C7 06 31E7 0000			mov	data_371,0		; (020A:31E7=444Eh)
020A:A7C2  EB D5				jmp	short loc_1660		; (A799)
020A:A7C4			loc_1663:
020A:A7C4  26: 81 64 06 FC00			and	word ptr es:[si+6],0FC00h
020A:A7CA  26: 09 44 06				or	es:[si+6],ax
020A:A7CE  26: 8A 45 05				mov	al,es:[di+5]
020A:A7D2  24 03				and	al,3
020A:A7D4  26: 8A 64 05				mov	ah,es:[si+5]
020A:A7D8  80 E4 03				and	ah,3
020A:A7DB  D0 C4				rol	ah,1			; Rotate
020A:A7DD  D0 C4				rol	ah,1			; Rotate
020A:A7DF  0A C4				or	al,ah
020A:A7E1  53					push	bx
020A:A7E2  BB 4E77				mov	bx,4E77h
020A:A7E5  D7					xlat				; al=[al+[bx]] table
020A:A7E6  5B					pop	bx
020A:A7E7  8A D0				mov	dl,al
020A:A7E9  24 7F				and	al,7Fh
020A:A7EB  32 E4				xor	ah,ah			; Zero register
020A:A7ED  8B C8				mov	cx,ax
020A:A7EF  E3 51				jcxz	loc_1667		; Jump if cx=0
020A:A7F1  26: 8A 44 05				mov	al,es:[si+5]
020A:A7F5  25 000F				and	ax,0Fh
020A:A7F8  D7					xlat				; al=[al+[bx]] table
020A:A7F9  57					push	di
020A:A7FA  56					push	si
020A:A7FB  06					push	es
020A:A7FC  1F					pop	ds
020A:A7FD  03 F0				add	si,ax
020A:A7FF  F6 C2 80				test	dl,80h
020A:A802  74 19				jz	loc_1664		; Jump if zero
020A:A804  8B FE				mov	di,si
020A:A806  2B F9				sub	di,cx
020A:A808  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:A80C  26: 29 0E 0000			sub	word ptr es:[0],cx	; (020A:0000=1828h)
020A:A811  E8 00E0				call	sub_125			; (A8F4)
020A:A814  8B C8				mov	cx,ax
020A:A816  2B CE				sub	cx,si
020A:A818  FC					cld				; Clear direction
020A:A819  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A81B  EB 23				jmp	short loc_1666		; (A840)
020A:A81D			loc_1664:
020A:A81D  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:A821  2B C6				sub	ax,si
020A:A823  26: 8B 36 0000			mov	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A828  4E					dec	si
020A:A829  8B FE				mov	di,si
020A:A82B  03 F9				add	di,cx
020A:A82D  26: 01 0E 0000			add	word ptr es:[0],cx	; (020A:0000=1828h)
020A:A832  E8 00BF				call	sub_125			; (A8F4)
020A:A835  8B C8				mov	cx,ax
020A:A837  73 03				jnc	loc_1665		; Jump if carry=0
020A:A839  E9 C1B2				jmp	loc_917			; (69EE)
020A:A83C			loc_1665:
020A:A83C  FD					std				; Set direction flag
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 346

020A:A83D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A83F  FC					cld				; Clear direction
020A:A840			loc_1666:
020A:A840  5E					pop	si
020A:A841  5F					pop	di
020A:A842			loc_1667:
020A:A842  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:A847  26: 8A 45 04				mov	al,es:[di+4]
020A:A84B  24 3F				and	al,3Fh			; '?'
020A:A84D  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020A:A852  26: 08 44 04				or	es:[si+4],al
020A:A856  26: 8A 45 05				mov	al,es:[di+5]
020A:A85A  24 03				and	al,3
020A:A85C  3C 03				cmp	al,3
020A:A85E  75 02				jne	loc_1668		; Jump if not equal
020A:A860  FE C8				dec	al
020A:A862			loc_1668:
020A:A862  26: 80 64 05 FC			and	byte ptr es:[si+5],0FCh
020A:A867  26: 08 44 05				or	es:[si+5],al
020A:A86B  3C 00				cmp	al,0
020A:A86D  74 1B				je	loc_1670		; Jump if equal
020A:A86F  57					push	di
020A:A870  56					push	si
020A:A871  B9 0002				mov	cx,2
020A:A874  3C 01				cmp	al,1
020A:A876  74 03				je	loc_1669		; Jump if equal
020A:A878  B9 000F				mov	cx,0Fh
020A:A87B			loc_1669:
020A:A87B  83 C7 0A				add	di,0Ah
020A:A87E  83 C6 0A				add	si,0Ah
020A:A881  87 F7				xchg	si,di
020A:A883  06					push	es
020A:A884  1F					pop	ds
020A:A885  FC					cld				; Clear direction
020A:A886  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A888  5E					pop	si
020A:A889  5F					pop	di
020A:A88A			loc_1670:
020A:A88A  E8 C7B8				call	sub_91			; (7045)
020A:A88D			loc_1671:
020A:A88D  E8 0080				call	sub_126			; (A910)
020A:A890  26: 8A 44 05				mov	al,es:[si+5]
020A:A894  25 000F				and	ax,0Fh
020A:A897  D7					xlat				; al=[al+[bx]] table
020A:A898  0A C0				or	al,al			; Zero ?
020A:A89A  75 04				jnz	loc_1672		; Jump if not zero
020A:A89C  26: 8A 44 06				mov	al,es:[si+6]
020A:A8A0			loc_1672:
020A:A8A0  03 F0				add	si,ax
020A:A8A2  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A8A7  73 09				jae	loc_1673		; Jump if above or =
020A:A8A9  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:A8AD  75 00				jnz	$+2			; delay for I/O
020A:A8AF  E9 FD7D				jmp	loc_1639		; (A62F)
020A:A8B2			loc_1673:
020A:A8B2  26: 8A 45 05				mov	al,es:[di+5]
020A:A8B6  25 000F				and	ax,0Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 347

020A:A8B9  D7					xlat				; al=[al+[bx]] table
020A:A8BA  0A C0				or	al,al			; Zero ?
020A:A8BC  75 04				jnz	loc_1674		; Jump if not zero
020A:A8BE  26: 8A 45 06				mov	al,es:[di+6]
020A:A8C2			loc_1674:
020A:A8C2  03 F8				add	di,ax
020A:A8C4  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:A8C9  73 21				jae	loc_1678		; Jump if above or =
020A:A8CB  E9 FD43				jmp	loc_1637		; (A611)
020A:A8CE			loc_1675:
020A:A8CE  E8 003F				call	sub_126			; (A910)
020A:A8D1  26: 8A 45 05				mov	al,es:[di+5]
020A:A8D5  25 000F				and	ax,0Fh
020A:A8D8  D7					xlat				; al=[al+[bx]] table
020A:A8D9  0A C0				or	al,al			; Zero ?
020A:A8DB  75 04				jnz	loc_1676		; Jump if not zero
020A:A8DD  26: 8A 45 06				mov	al,es:[di+6]
020A:A8E1			loc_1676:
020A:A8E1  03 F8				add	di,ax
020A:A8E3  E9 FD2B				jmp	loc_1637		; (A611)
020A:A8E6			loc_1677:
020A:A8E6  E8 0027				call	sub_126			; (A910)
020A:A8E9  25E9 5DFD		data_744	dw	25E9h, 5DFDh
020A:A8ED  5F					pop	di
020A:A8EE  5E					pop	si
020A:A8EF  5A					pop	dx
020A:A8F0  59					pop	cx
020A:A8F1  5B					pop	bx
020A:A8F2  58					pop	ax
020A:A8F3  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_125		proc	near
020A:A8F4  50					push	ax
020A:A8F5  26: A1 0008				mov	ax,word ptr es:[8]	; (020A:0008=6702h)
020A:A8F9  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:A8FD  26: A1 000A				mov	ax,word ptr es:[0Ah]	; (020A:000A=272Dh)
020A:A901  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:A905  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (020A:0006=3)
020A:A90C  58					pop	ax
020A:A90D  C3					retn
				sub_125		endp

020A:A90E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_126		proc	near
020A:A910  26: 8A 45 04				mov	al,es:[di+4]
020A:A914  24 3F				and	al,3Fh			; '?'
020A:A916  8A E0				mov	ah,al
020A:A918  26: 8B 4D 08				mov	cx,es:[di+8]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 348

020A:A91C  3C 21				cmp	al,21h			; '!'
020A:A91E  75 09				jne	loc_1679		; Jump if not equal
020A:A920  83 F9 06				cmp	cx,6
020A:A923  77 32				ja	loc_1683		; Jump if above
020A:A925  B4 01				mov	ah,1
020A:A927  EB 25				jmp	short loc_1682		; (A94E)
020A:A929			loc_1679:
020A:A929  3C 22				cmp	al,22h			; '"'
020A:A92B  75 09				jne	loc_1680		; Jump if not equal
020A:A92D  83 F9 06				cmp	cx,6
020A:A930  77 25				ja	loc_1683		; Jump if above
020A:A932  B4 02				mov	ah,2
020A:A934  EB 18				jmp	short loc_1682		; (A94E)
020A:A936			loc_1680:
020A:A936  3C 04				cmp	al,4
020A:A938  75 09				jne	loc_1681		; Jump if not equal
020A:A93A  83 F9 04				cmp	cx,4
020A:A93D  73 18				jae	loc_1683		; Jump if above or =
020A:A93F  B4 02				mov	ah,2
020A:A941  B0 02				mov	al,2
020A:A943			loc_1681:
020A:A943  3C 02				cmp	al,2
020A:A945  75 07				jne	loc_1682		; Jump if not equal
020A:A947  83 F9 02				cmp	cx,2
020A:A94A  73 02				jae	loc_1682		; Jump if above or =
020A:A94C  B4 01				mov	ah,1
020A:A94E			loc_1682:
020A:A94E  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:A953  26: 08 65 04				or	es:[di+4],ah
020A:A957			loc_1683:
020A:A957  C3					retn
				sub_126		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_127		proc	near
020A:A958  53					push	bx
020A:A959  57					push	di
020A:A95A  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A95F  06					push	es
020A:A960  26: 8B 05				mov	ax,es:[di]
020A:A963  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A967  E8 C6EA				call	sub_93			; (7054)
020A:A96A  BF 0000				mov	di,0
020A:A96D			loc_1684:
020A:A96D  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:A971  75 07				jne	loc_1685		; Jump if not equal
020A:A973  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:A978  74 1A				je	loc_1688		; Jump if equal
020A:A97A			loc_1685:
020A:A97A  26: 3B 05				cmp	ax,es:[di]
020A:A97D  75 0C				jne	loc_1686		; Jump if not equal
020A:A97F  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:A983  72 06				jb	loc_1686		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 349

020A:A985  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:A989  76 05				jbe	loc_1687		; Jump if below or =
020A:A98B			loc_1686:
020A:A98B  83 C7 15				add	di,15h
020A:A98E  EB DD				jmp	short loc_1684		; (A96D)
020A:A990			loc_1687:
020A:A990  F9					stc				; Set carry flag
020A:A991  9F					lahf				; Load ah from flags
020A:A992  EB 02				jmp	short loc_1689		; (A996)
020A:A994			loc_1688:
020A:A994  F8					clc				; Clear carry flag
020A:A995  9F					lahf				; Load ah from flags
020A:A996			loc_1689:
020A:A996  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A99B  9C					pushf				; Push flags
020A:A99C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A9A1  5A					pop	dx
020A:A9A2  8E C2				mov	es,dx
020A:A9A4  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:A9A9  5A					pop	dx
020A:A9AA  75 0A				jnz	loc_1690		; Jump if not zero
020A:A9AC  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:A9B1  74 03				je	loc_1690		; Jump if equal
020A:A9B3  E8 CA06				call	sub_103			; (73BC)
020A:A9B6			loc_1690:
020A:A9B6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A9BB  9D					popf				; Pop flags
020A:A9BC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A9C1  5F					pop	di
020A:A9C2  5B					pop	bx
020A:A9C3  9E					sahf				; Store ah into flags
020A:A9C4  C3					retn
				sub_127		endp

020A:A9C5  87 DB				xchg	bx,bx
020A:A9C7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_128		proc	near
020A:A9C8  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:A9CD  06					push	es
020A:A9CE  C7 06 2CC6 0000			mov	data_267,0		; (020A:2CC6=4449h)
020A:A9D4  C7 06 2CC8 0000			mov	data_268,0		; (020A:2CC8=4E45h)
020A:A9DA  80 3E 2C21 00			cmp	byte ptr ds:[2C21h],0	; (020A:2C21=69h)
020A:A9DF  74 3A				je	loc_1692		; Jump if equal
020A:A9E1  B4 19				mov	ah,19h
020A:A9E3  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:A9E5  8A D0				mov	dl,al
020A:A9E7  04 61				add	al,61h			; 'a'
020A:A9E9  A2 2C61				mov	byte ptr ds:[2C61h],al	; (020A:2C61=32h)
020A:A9EC  C7 06 2C62 5C3A			mov	data_263,5C3Ah		; (020A:2C62=575Ch)
020A:A9F2  B4 47				mov	ah,47h			; 'G'
020A:A9F4  FE C2				inc	dl
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 350

020A:A9F6  BE 2C64				mov	si,2C64h
020A:A9F9  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
										;   ds:si=ASCIIZ directory name
020A:A9FB  80 3E 2C22 3A			cmp	byte ptr data_261,3Ah	; (020A:2C22='ndows_NT') ':'
020A:AA00  75 0E				jne	loc_1691		; Jump if not equal
020A:AA02  8A 16 2C21				mov	dl,byte ptr ds:[2C21h]	; (020A:2C21=69h)
020A:AA06  80 CA 60				or	dl,60h			; '`'
020A:AA09  80 EA 61				sub	dl,61h			; 'a'
020A:AA0C  B4 0E				mov	ah,0Eh
020A:AA0E  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:AA10			loc_1691:
020A:AA10  B4 3B				mov	ah,3Bh			; ';'
020A:AA12  BA 2C21				mov	dx,2C21h
020A:AA15  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:AA17  73 02				jnc	loc_1692		; Jump if carry=0
020A:AA19  EB 21				jmp	short loc_1694		; (AA3C)
020A:AA1B			loc_1692:
020A:AA1B  B4 29				mov	ah,29h			; ')'
020A:AA1D  B0 01				mov	al,1
020A:AA1F  BE 2C13				mov	si,2C13h
020A:AA22  E8 C638				call	sub_95			; (705D)
020A:AA25  BF 2CA1				mov	di,2CA1h
020A:AA28  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
										;   al=parsing control flags
020A:AA2A  3C 00				cmp	al,0
020A:AA2C  74 02				je	loc_1693		; Jump if equal
020A:AA2E  EB 0C				jmp	short loc_1694		; (AA3C)
020A:AA30			loc_1693:
020A:AA30  B4 23				mov	ah,23h			; '#'
020A:AA32  8B D7				mov	dx,di
020A:AA34  C7 06 2CAF 0001			mov	data_264,1		; (020A:2CAF=5449h)
020A:AA3A  CD 21				int	21h			; DOS Services  ah=function 23h
										;  get file size, FCB @ ds:dx
020A:AA3C			loc_1694:
020A:AA3C  80 3E 2C21 00			cmp	byte ptr ds:[2C21h],0	; (020A:2C21=69h)
020A:AA41  74 07				je	loc_1695		; Jump if equal
020A:AA43  B4 3B				mov	ah,3Bh			; ';'
020A:AA45  BA 2C61				mov	dx,2C61h
020A:AA48  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:AA4A			loc_1695:
020A:AA4A  A1 2CC4				mov	ax,data_266		; (020A:2CC4=5F52h)
020A:AA4D  A3 2CC8				mov	data_268,ax		; (020A:2CC8=4E45h)
020A:AA50  A1 2CC2				mov	ax,data_265		; (020A:2CC2=4F53h)
020A:AA53  A3 2CC6				mov	data_267,ax		; (020A:2CC6=4449h)
020A:AA56  B4 3D				mov	ah,3Dh			; '='
020A:AA58  B0 00				mov	al,0
020A:AA5A  BA 31F0				mov	dx,31F0h
020A:AA5D  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:AA5F  73 05				jnc	loc_1696		; Jump if carry=0
020A:AA61  B3 01				mov	bl,1
020A:AA63  E9 025E				jmp	loc_1726		; (ACC4)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 351

020A:AA66			loc_1696:
020A:AA66  A3 4152				mov	data_533,ax		; (020A:4152=7EBh)
020A:AA69  80 3E 2BE6 02			cmp	data_253,2		; (020A:2BE6=72h)
020A:AA6E  74 34				je	loc_1699		; Jump if equal
020A:AA70  B9 2C43				mov	cx,2C43h
020A:AA73  81 E9 0BC3				sub	cx,0BC3h
020A:AA77  BA 0BC3				mov	dx,0BC3h
020A:AA7A  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:AA7E  E8 C5C7				call	sub_92			; (7048)
020A:AA81  B4 3F				mov	ah,3Fh
020A:AA83  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:AA85  E8 C5BD				call	sub_91			; (7045)
020A:AA88  73 03				jnc	loc_1697		; Jump if carry=0
020A:AA8A  E9 0235				jmp	loc_1725		; (ACC2)
020A:AA8D			loc_1697:
020A:AA8D  E8 C5D0				call	sub_96			; (7060)
020A:AA90  BE 0BC3				mov	si,0BC3h
020A:AA93  26: 81 3C 5A4D			cmp	word ptr es:[si],5A4Dh
020A:AA98  75 07				jne	loc_1698		; Jump if not equal
020A:AA9A  80 3E 2BE6 01			cmp	data_253,1		; (020A:2BE6=72h)
020A:AA9F  75 13				jne	loc_1700		; Jump if not equal
020A:AAA1			loc_1698:
020A:AAA1  E9 0220				jmp	loc_1726		; (ACC4)
020A:AAA4			loc_1699:
020A:AAA4  E8 C5B9				call	sub_96			; (7060)
020A:AAA7  BE 0BC3				mov	si,0BC3h
020A:AAAA  8B 0E 2C0F				mov	cx,data_258		; (020A:2C0F=505Fh)
020A:AAAE  8B 16 2C11				mov	dx,data_259		; (020A:2C11=4F52h)
020A:AAB2  EB 21				jmp	short loc_1702		; (AAD5)
020A:AAB4			loc_1700:
020A:AAB4  26: 8B 4C 3E				mov	cx,es:[si+3Eh]
020A:AAB8  89 0E 2C0F				mov	data_258,cx		; (020A:2C0F=505Fh)
020A:AABC  3B 0E 2CC8				cmp	cx,data_268		; (020A:2CC8=4E45h)
020A:AAC0  77 10				ja	loc_1701		; Jump if above
020A:AAC2  26: 8B 54 3C				mov	dx,es:[si+3Ch]
020A:AAC6  89 16 2C11				mov	data_259,dx		; (020A:2C11=4F52h)
020A:AACA  0B D2				or	dx,dx			; Zero ?
020A:AACC  75 07				jnz	loc_1702		; Jump if not zero
020A:AACE  0B C9				or	cx,cx			; Zero ?
020A:AAD0  75 03				jnz	loc_1702		; Jump if not zero
020A:AAD2			loc_1701:
020A:AAD2  E9 012C				jmp	loc_1714		; (AC01)
020A:AAD5			loc_1702:
020A:AAD5  B8 4200				mov	ax,4200h
020A:AAD8  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:AADC  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:AADE  B9 2C43				mov	cx,2C43h
020A:AAE1  81 E9 0BC3				sub	cx,0BC3h
020A:AAE5  BA 0BC3				mov	dx,0BC3h
020A:AAE8  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:AAEC  E8 C559				call	sub_92			; (7048)
020A:AAEF  B4 3F				mov	ah,3Fh
020A:AAF1  CD 21				int	21h			; DOS Services  ah=function 3Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 352

										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:AAF3  E8 C54F				call	sub_91			; (7045)
020A:AAF6  26: 8B 04				mov	ax,es:[si]
020A:AAF9  3D 454C				cmp	ax,454Ch
020A:AAFC  75 09				jne	loc_1703		; Jump if not equal
020A:AAFE  80 3E 2BE6 02			cmp	data_253,2		; (020A:2BE6=72h)
020A:AB03  74 3E				je	loc_1711		; Jump if equal
020A:AB05  EB 1C				jmp	short loc_1707		; (AB23)
020A:AB07			loc_1703:
020A:AB07  3D 454E				cmp	ax,454Eh
020A:AB0A  74 05				je	loc_1704		; Jump if equal
020A:AB0C  3D 3357				cmp	ax,3357h
020A:AB0F  75 04				jne	loc_1705		; Jump if not equal
020A:AB11			loc_1704:
020A:AB11  B4 41				mov	ah,41h			; 'A'
020A:AB13  EB 10				jmp	short loc_1708		; (AB25)
020A:AB15			loc_1705:
020A:AB15  3D 3350				cmp	ax,3350h
020A:AB18  74 05				je	loc_1706		; Jump if equal
020A:AB1A  3D 584C				cmp	ax,584Ch
020A:AB1D  75 14				jne	loc_1709		; Jump if not equal
020A:AB1F			loc_1706:
020A:AB1F  B4 43				mov	ah,43h			; 'C'
020A:AB21  EB 02				jmp	short loc_1708		; (AB25)
020A:AB23			loc_1707:
020A:AB23  B4 3E				mov	ah,3Eh			; '>'
020A:AB25			loc_1708:
020A:AB25  B0 04				mov	al,4
020A:AB27  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:AB27  9A					db	9Ah
020A:AB28  57A4 14FC				dw	57A4h, 14FCh
020A:AB2C  26: 81 3C 454C			cmp	word ptr es:[si],454Ch
020A:AB31  74 03				je	loc_1710		; Jump if equal
020A:AB33			loc_1709:
020A:AB33  E9 00A6				jmp	loc_1713		; (ABDC)
020A:AB36			loc_1710:
020A:AB36  2C 31				sub	al,31h			; '1'
020A:AB38  3C 01				cmp	al,1
020A:AB3A  77 E7				ja	loc_1707		; Jump if above
020A:AB3C  3C 00				cmp	al,0
020A:AB3E  75 03				jne	loc_1711		; Jump if not equal
020A:AB40  E9 0099				jmp	loc_1713		; (ABDC)
020A:AB43			loc_1711:
020A:AB43  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:AB48  06					push	es
020A:AB49  E8 C50E				call	sub_94			; (705A)
020A:AB4C  26: C6 06 0001 E8			mov	byte ptr es:data_1+1,0E8h	; (020A:0001=18h)
020A:AB52  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AB57  9C					pushf				; Push flags
020A:AB58  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AB5D  5A					pop	dx
020A:AB5E  8E C2				mov	es,dx
020A:AB60  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:AB65  5A					pop	dx
020A:AB66  75 0A				jnz	loc_1712		; Jump if not zero
020A:AB68  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 353

020A:AB6D  74 03				je	loc_1712		; Jump if equal
020A:AB6F  E8 C84A				call	sub_103			; (73BC)
020A:AB72			loc_1712:
020A:AB72  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AB77  9D					popf				; Pop flags
020A:AB78  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AB7D  C6 06 327F 08			mov	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:AB82  26: 8B 4C 44				mov	cx,es:[si+44h]
020A:AB86  83 F9 00				cmp	cx,0
020A:AB89  74 51				je	loc_1713		; Jump if equal
020A:AB8B  26: 8B 44 14				mov	ax,es:[si+14h]
020A:AB8F  3D 0000				cmp	ax,0
020A:AB92  74 48				je	loc_1713		; Jump if equal
020A:AB94  48					dec	ax
020A:AB95  26: F7 64 28				mul	word ptr es:[si+28h]	; ax = data * ax
020A:AB99  92					xchg	dx,ax
020A:AB9A  26: 03 54 2C				add	dx,es:[si+2Ch]
020A:AB9E  26: 13 44 2E				adc	ax,es:[si+2Eh]
020A:ABA2  26: 03 94 008C			add	dx,word ptr es:[8Ch][si]	; (020A:008C=8250h)
020A:ABA7  26: 13 84 008E			adc	ax,word ptr es:[8Eh][si]	; (020A:008E=8155h)
020A:ABAC  A3 2CC8				mov	data_268,ax		; (020A:2CC8=4E45h)
020A:ABAF  A3 2BEB				mov	data_256,ax		; (020A:2BEB=4E4Fh)
020A:ABB2  89 16 2CC6				mov	data_267,dx		; (020A:2CC6=4449h)
020A:ABB6  89 16 2BED				mov	data_257,dx		; (020A:2BED=4553h)
020A:ABBA  26: 8B 84 0080			mov	ax,word ptr es:[80h][si]	; (020A:0080=1850h)
020A:ABBF  A3 2BE9				mov	data_255,ax		; (020A:2BE9=474Fh)
020A:ABC2  26: 8B 84 0082			mov	ax,word ptr es:[82h][si]	; (020A:0082=10h)
020A:ABC7  A3 2BE7				mov	data_254,ax		; (020A:2BE7=4C00h)
020A:ABCA  C6 06 327E 03			mov	byte ptr ds:[327Eh],3	; (020A:327E=0Ch)
020A:ABCF  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:ABCF  9A					db	9Ah
020A:ABD0  2B70 14FC				dw	2B70h, 14FCh
020A:ABD4  C6 06 2BE6 02			mov	data_253,2		; (020A:2BE6=72h)
020A:ABD9  E9 00E8				jmp	loc_1726		; (ACC4)
020A:ABDC			loc_1713:
020A:ABDC  B8 4200				mov	ax,4200h
020A:ABDF  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:ABE3  33 C9				xor	cx,cx			; Zero register
020A:ABE5  33 D2				xor	dx,dx			; Zero register
020A:ABE7  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:ABE9  B9 2C43				mov	cx,2C43h
020A:ABEC  81 E9 0BC3				sub	cx,0BC3h
020A:ABF0  BA 0BC3				mov	dx,0BC3h
020A:ABF3  8B 1E 4152				mov	bx,data_533		; (020A:4152=7EBh)
020A:ABF7  E8 C44E				call	sub_92			; (7048)
020A:ABFA  B4 3F				mov	ah,3Fh
020A:ABFC  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:ABFE  E8 C444				call	sub_91			; (7045)
020A:AC01			loc_1714:
020A:AC01  26: 8B 44 04				mov	ax,es:[si+4]
020A:AC05  33 D2				xor	dx,dx			; Zero register
020A:AC07  B9 0009				mov	cx,9

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 354

020A:AC0A			locloop_1715:
020A:AC0A  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AC0C  D1 D2				rcl	dx,1			; Rotate thru carry
020A:AC0E  E2 FA				loop	locloop_1715		; Loop if cx > 0

020A:AC10  26: 8B 4C 02				mov	cx,es:[si+2]
020A:AC14  83 F9 00				cmp	cx,0
020A:AC17  74 0C				je	loc_1716		; Jump if equal
020A:AC19  B9 0200				mov	cx,200h
020A:AC1C  26: 2B 4C 02				sub	cx,es:[si+2]
020A:AC20  2B C1				sub	ax,cx
020A:AC22  83 DA 00				sbb	dx,0
020A:AC25			loc_1716:
020A:AC25  50					push	ax
020A:AC26  52					push	dx
020A:AC27  26: 8B 44 08				mov	ax,es:[si+8]
020A:AC2B  B9 0004				mov	cx,4
020A:AC2E  33 D2				xor	dx,dx			; Zero register

020A:AC30			locloop_1717:
020A:AC30  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AC32  D1 D2				rcl	dx,1			; Rotate thru carry
020A:AC34  E2 FA				loop	locloop_1717		; Loop if cx > 0

020A:AC36  29 06 2CC6				sub	data_267,ax		; (020A:2CC6=4449h)
020A:AC3A  19 16 2CC8				sbb	data_268,dx		; (020A:2CC8=4E45h)
020A:AC3E  5A					pop	dx
020A:AC3F  58					pop	ax
020A:AC40  3B 16 2CC8				cmp	dx,data_268		; (020A:2CC8=4E45h)
020A:AC44  74 0B				je	loc_1718		; Jump if equal
020A:AC46  77 16				ja	loc_1719		; Jump if above
020A:AC48  A3 2CC6				mov	data_267,ax		; (020A:2CC6=4449h)
020A:AC4B  89 16 2CC8				mov	data_268,dx		; (020A:2CC8=4E45h)
020A:AC4F  EB 0D				jmp	short loc_1719		; (AC5E)
020A:AC51			loc_1718:
020A:AC51  3B 06 2CC6				cmp	ax,data_267		; (020A:2CC6=4449h)
020A:AC55  73 07				jae	loc_1719		; Jump if above or =
020A:AC57  A3 2CC6				mov	data_267,ax		; (020A:2CC6=4449h)
020A:AC5A  89 16 2CC8				mov	data_268,dx		; (020A:2CC8=4E45h)
020A:AC5E			loc_1719:
020A:AC5E  26: 8B 44 0E				mov	ax,es:[si+0Eh]
020A:AC62  26: 8B 5C 10				mov	bx,es:[si+10h]
020A:AC66  3D FFF0				cmp	ax,0FFF0h
020A:AC69  75 04				jne	loc_1720		; Jump if not equal
020A:AC6B  33 C0				xor	ax,ax			; Zero register
020A:AC6D  33 DB				xor	bx,bx			; Zero register
020A:AC6F			loc_1720:
020A:AC6F  9A 14FC:6B84		;*		call	far ptr sub_241		;*(14FC:6B84)
020A:AC6F  9A					db	9Ah
020A:AC70  6B84 14FC				dw	6B84h, 14FCh
020A:AC74  3B 06 2CC8				cmp	ax,data_268		; (020A:2CC8=4E45h)
020A:AC78  72 37				jb	loc_1724		; Jump if below
020A:AC7A  77 06				ja	loc_1721		; Jump if above
020A:AC7C  3B 1E 2CC6				cmp	bx,data_267		; (020A:2CC6=4449h)
020A:AC80  76 2F				jbe	loc_1724		; Jump if below or =
020A:AC82			loc_1721:
020A:AC82  8B 0E 2CC8				mov	cx,data_268		; (020A:2CC8=4E45h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 355

020A:AC86  41					inc	cx
020A:AC87  3B C1				cmp	ax,cx
020A:AC89  72 1F				jb	loc_1723		; Jump if below
020A:AC8B  77 06				ja	loc_1722		; Jump if above
020A:AC8D  3B 1E 2CC6				cmp	bx,data_267		; (020A:2CC6=4449h)
020A:AC91  76 17				jbe	loc_1723		; Jump if below or =
020A:AC93			loc_1722:
020A:AC93  B4 40				mov	ah,40h			; '@'
020A:AC95  B0 04				mov	al,4
020A:AC97  9A 14FC:57A4		;*		call	far ptr sub_227		;*(14FC:57A4)
020A:AC97  9A					db	9Ah
020A:AC98  57A4 14FC				dw	57A4h, 14FCh
020A:AC9C  26: C7 44 0E 0000			mov	word ptr es:[si+0Eh],0
020A:ACA2  26: C7 44 10 0000			mov	word ptr es:[si+10h],0
020A:ACA8  EB 07				jmp	short loc_1724		; (ACB1)
020A:ACAA			loc_1723:
020A:ACAA  A3 2CC8				mov	data_268,ax		; (020A:2CC8=4E45h)
020A:ACAD  89 1E 2CC6				mov	data_267,bx		; (020A:2CC6=4449h)
020A:ACB1			loc_1724:
020A:ACB1  C6 06 327E 03			mov	byte ptr ds:[327Eh],3	; (020A:327E=0Ch)
020A:ACB6  C6 06 327F 03			mov	byte ptr ds:[327Fh],3	; (020A:327F=0)
020A:ACBB  9A 14FC:2B70		;*		call	far ptr sub_184		;*(14FC:2B70)
020A:ACBB  9A					db	9Ah
020A:ACBC  2B70 14FC				dw	2B70h, 14FCh
020A:ACC0  EB 02				jmp	short loc_1726		; (ACC4)
020A:ACC2			loc_1725:
020A:ACC2  B3 0E				mov	bl,0Eh
020A:ACC4			loc_1726:
020A:ACC4  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:ACC9  9C					pushf				; Push flags
020A:ACCA  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:ACCF  5A					pop	dx
020A:ACD0  8E C2				mov	es,dx
020A:ACD2  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:ACD7  5A					pop	dx
020A:ACD8  75 0A				jnz	loc_1727		; Jump if not zero
020A:ACDA  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:ACDF  74 03				je	loc_1727		; Jump if equal
020A:ACE1  E8 C6D8				call	sub_103			; (73BC)
020A:ACE4			loc_1727:
020A:ACE4  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:ACE9  9D					popf				; Pop flags
020A:ACEA  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:ACEF  C3					retn
				sub_128		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_129		proc	near
020A:ACF0  50					push	ax
020A:ACF1  53					push	bx
020A:ACF2  57					push	di
020A:ACF3  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:ACF8  06					push	es
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 356

020A:ACF9  1E					push	ds
020A:ACFA  BF 0008				mov	di,8
020A:ACFD  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:AD01  E8 C7D4				call	sub_106			; (74D8)
020A:AD04  E8 C33E				call	sub_91			; (7045)
020A:AD07			loc_1728:
020A:AD07  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:AD0C  72 02				jb	loc_1729		; Jump if below
020A:AD0E  EB 1E				jmp	short loc_1731		; (AD2E)
020A:AD10			loc_1729:
020A:AD10  26: 80 65 04 FE			and	byte ptr es:[di+4],0FEh
020A:AD15  EB 00				jmp	short $+2		; delay for I/O
020A:AD17  BB 40C2				mov	bx,40C2h
020A:AD1A  26: 8A 45 05				mov	al,es:[di+5]
020A:AD1E  25 000F				and	ax,0Fh
020A:AD21  D7					xlat				; al=[al+[bx]] table
020A:AD22  0A C0				or	al,al			; Zero ?
020A:AD24  75 04				jnz	loc_1730		; Jump if not zero
020A:AD26  26: 8A 45 06				mov	al,es:[di+6]
020A:AD2A			loc_1730:
020A:AD2A  03 F8				add	di,ax
020A:AD2C  EB D9				jmp	short loc_1728		; (AD07)
020A:AD2E			loc_1731:
020A:AD2E  1F					pop	ds
020A:AD2F  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AD34  9C					pushf				; Push flags
020A:AD35  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AD3A  5A					pop	dx
020A:AD3B  8E C2				mov	es,dx
020A:AD3D  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:AD42  5A					pop	dx
020A:AD43  75 0A				jnz	loc_1732		; Jump if not zero
020A:AD45  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:AD4A  74 03				je	loc_1732		; Jump if equal
020A:AD4C  E8 C66D				call	sub_103			; (73BC)
020A:AD4F			loc_1732:
020A:AD4F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AD54  9D					popf				; Pop flags
020A:AD55  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AD5A  5F					pop	di
020A:AD5B  5B					pop	bx
020A:AD5C  58					pop	ax
020A:AD5D  C3					retn
				sub_129		endp

020A:AD5E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_130		proc	near
020A:AD60  26: 8A 45 12				mov	al,es:[di+12h]
020A:AD64  F6 06 30A0 E0			test	data_348,0E0h		; (020A:30A0=33h)
020A:AD69  75 02				jnz	loc_1733		; Jump if not zero
020A:AD6B  0C 01				or	al,1
020A:AD6D			loc_1733:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 357

020A:AD6D  F6 D0				not	al
020A:AD6F  22 06 35F0				and	al,data_462		; (020A:35F0=0CDh)
020A:AD73  75 03				jnz	loc_1734		; Jump if not zero
020A:AD75  E9 00E5				jmp	loc_1745		; (AE5D)
020A:AD78			loc_1734:
020A:AD78  3C 40				cmp	al,40h			; '@'
020A:AD7A  75 07				jne	loc_1735		; Jump if not equal
020A:AD7C  F6 06 30B0 07			test	byte ptr ds:[30B0h],7	; (020A:30B0=2Eh)
020A:AD81  75 03				jnz	loc_1736		; Jump if not zero
020A:AD83			loc_1735:
020A:AD83  E9 0087				jmp	loc_1743		; (AE0D)
020A:AD86			loc_1736:
020A:AD86  80 26 35F0 BF			and	data_462,0BFh		; (020A:35F0=0CDh)
020A:AD8B  F6 06 35F0 7F			test	data_462,7Fh		; (020A:35F0=0CDh)
020A:AD90  74 06				jz	loc_1737		; Jump if zero
020A:AD92  FF 06 35F1				inc	data_463		; (020A:35F1=3C21h)
020A:AD96  EB 06				jmp	short loc_1738		; (AD9E)
020A:AD98			loc_1737:
020A:AD98  C7 06 35F1 FFFF			mov	data_463,0FFFFh		; (020A:35F1=3C21h)
020A:AD9E			loc_1738:
020A:AD9E  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:ADA3  74 03				je	loc_1739		; Jump if equal
020A:ADA5  E9 00B5				jmp	loc_1745		; (AE5D)
020A:ADA8			loc_1739:
020A:ADA8  52					push	dx
020A:ADA9  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:ADAE  06					push	es
020A:ADAF  BA 2DD4				mov	dx,2DD4h
020A:ADB2  80 3E 14FA 02			cmp	data_157,2		; (020A:14FA=0)
020A:ADB7  75 21				jne	loc_1740		; Jump if not equal
020A:ADB9  80 3E 4E2C FE			cmp	data_597,0FEh		; (020A:4E2C=4)
020A:ADBE  74 1A				je	loc_1740		; Jump if equal
020A:ADC0  C7 06 2DF4 2A3B			mov	data_277,2A3Bh		; (020A:2DF4=434Fh)
020A:ADC6  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:ADC6  9A					db	9Ah
020A:ADC7  233C 14FC				dw	233Ch, 14FCh
020A:ADCB  C7 06 2DF4 2020			mov	data_277,2020h		; (020A:2DF4=434Fh)
020A:ADD1  B0 57				mov	al,57h			; 'W'
020A:ADD3  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:ADD3  9A					db	9Ah
020A:ADD4  2280 14FC				dw	2280h, 14FCh
020A:ADD8  EB 05				jmp	short loc_1741		; (ADDF)
020A:ADDA			loc_1740:
020A:ADDA  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:ADDA  9A					db	9Ah
020A:ADDB  233C 14FC				dw	233Ch, 14FCh
020A:ADDF			loc_1741:
020A:ADDF  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:ADE4  9C					pushf				; Push flags
020A:ADE5  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:ADEA  5A					pop	dx
020A:ADEB  8E C2				mov	es,dx
020A:ADED  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:ADF2  5A					pop	dx
020A:ADF3  75 0A				jnz	loc_1742		; Jump if not zero
020A:ADF5  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:ADFA  74 03				je	loc_1742		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 358

020A:ADFC  E8 C5BD				call	sub_103			; (73BC)
020A:ADFF			loc_1742:
020A:ADFF  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AE04  9D					popf				; Pop flags
020A:AE05  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AE0A  5A					pop	dx
020A:AE0B  EB 50				jmp	short loc_1745		; (AE5D)
020A:AE0D			loc_1743:
020A:AE0D  F7 06 35E9 0080			test	data_458,80h		; (020A:35E9=3C21h)
020A:AE13  75 48				jnz	loc_1745		; Jump if not zero
020A:AE15  A1 35F1				mov	ax,data_463		; (020A:35F1=3C21h)
020A:AE18  A3 344C				mov	data_402,ax		; (020A:344C=6C6h)
020A:AE1B  C6 06 35F0 00			mov	data_462,0		; (020A:35F0=0CDh)
020A:AE20  C6 06 4E2C FE			mov	data_597,0FEh		; (020A:4E2C=4)
020A:AE25  C6 06 3628 00			mov	byte ptr ds:[3628h],0	; (020A:3628=0Dh)
020A:AE2A  C7 06 35F1 FFFF			mov	data_463,0FFFFh		; (020A:35F1=3C21h)
020A:AE30  C7 06 3027 0000			mov	word ptr ds:[3027h],0	; (020A:3027=4C00h)
020A:AE36  80 0E 3459 05			or	data_409,5		; (020A:3459=21h)
020A:AE3B  C6 06 5709 05			mov	data_672,5		; (020A:5709=16h)
020A:AE40  C6 06 30B3 00			mov	data_353,0		; (020A:30B3=4Dh)
020A:AE45  E8 AEC8				call	sub_72			; (5D10)
020A:AE48  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:AE4D  75 0B				jne	loc_1744		; Jump if not equal
020A:AE4F  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:AE52  BD 2D20				mov	bp,2D20h
020A:AE55  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:AE55  9A					db	9Ah
020A:AE56  021C 14FC				dw	21Ch, 14FCh
020A:AE5A			loc_1744:
020A:AE5A  F9					stc				; Set carry flag
020A:AE5B  EB 01				jmp	short loc_1746		; (AE5E)
020A:AE5D			loc_1745:
020A:AE5D  F8					clc				; Clear carry flag
020A:AE5E			loc_1746:
020A:AE5E  C3					retn
				sub_130		endp

020A:AE5F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_131		proc	near
020A:AE60  C7 06 35F1 FFFF			mov	data_463,0FFFFh		; (020A:35F1=3C21h)
020A:AE66  C6 06 35F0 00			mov	data_462,0		; (020A:35F0=0CDh)
020A:AE6B  C6 06 3628 00			mov	byte ptr ds:[3628h],0	; (020A:3628=0Dh)
020A:AE70  2E: C6 06 F26A 90			mov	byte ptr cs:data_766,90h	; (020A:F26A=2Ch)
020A:AE76  2E: C6 06 F26B 90			mov	byte ptr cs:data_767,90h	; (020A:F26B=36h)
020A:AE7C  2E: C6 06 F26C 90			mov	byte ptr cs:data_768,90h	; (020A:F26C=1)
020A:AE82  2E: C6 06 F26D 90			mov	byte ptr cs:data_769,90h	; (020A:F26D=0BDh)
020A:AE88  C6 06 4D48 20			mov	data_567,20h		; (020A:4D48=0E8h) ' '
020A:AE8D  80 26 35EE CF			and	data_461,0CFh		; (020A:35EE=0B4h)
020A:AE92  80 26 35EE FC			and	data_461,0FCh		; (020A:35EE=0B4h)
020A:AE97  F6 06 35EE 04			test	data_461,4		; (020A:35EE=0B4h)
020A:AE9C  74 05				jz	loc_1747		; Jump if zero
020A:AE9E  80 0E 35EE 03			or	data_461,3		; (020A:35EE=0B4h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 359

020A:AEA3			loc_1747:
020A:AEA3  C3					retn
				sub_131		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_132		proc	near
020A:AEA4  50					push	ax
020A:AEA5  53					push	bx
020A:AEA6  51					push	cx
020A:AEA7  52					push	dx
020A:AEA8  56					push	si
020A:AEA9  57					push	di
020A:AEAA  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:AEAF  06					push	es
020A:AEB0  F6 06 35F0 06			test	data_462,6		; (020A:35F0=0CDh)
020A:AEB5  75 02				jnz	loc_1748		; Jump if not zero
020A:AEB7  EB 5B				jmp	short loc_1752		; (AF14)
020A:AEB9			loc_1748:
020A:AEB9  FC					cld				; Clear direction
020A:AEBA  A0 309E				mov	al,data_346		; (020A:309E=65h)
020A:AEBD  A2 309F				mov	data_347,al		; (020A:309F=6Dh)
020A:AEC0  C6 06 309E 34			mov	data_346,34h		; (020A:309E=65h) '4'
020A:AEC5  E8 C195				call	sub_95			; (705D)
020A:AEC8  BE 2D5B				mov	si,2D5Bh
020A:AECB  BF 2D63				mov	di,2D63h
020A:AECE  B9 0007				mov	cx,7
020A:AED1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AED3  BD 2D5B				mov	bp,2D5Bh
020A:AED6  BE 37F5				mov	si,37F5h
020A:AED9  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:AED9  9A					db	9Ah
020A:AEDA  4160 14FC				dw	4160h, 14FCh
020A:AEDE  BD 2D5E				mov	bp,2D5Eh
020A:AEE1  F6 06 35F0 04			test	data_462,4		; (020A:35F0=0CDh)
020A:AEE6  75 0E				jnz	loc_1749		; Jump if not zero
020A:AEE8  8A C2				mov	al,dl
020A:AEEA  0C 01				or	al,1
020A:AEEC  3C 71				cmp	al,71h			; 'q'
020A:AEEE  74 15				je	loc_1750		; Jump if equal
020A:AEF0  3C 7B				cmp	al,7Bh			; '{'
020A:AEF2  74 11				je	loc_1750		; Jump if equal
020A:AEF4  EB 1E				jmp	short loc_1752		; (AF14)
020A:AEF6			loc_1749:
020A:AEF6  C6 06 309E 35			mov	data_346,35h		; (020A:309E=65h) '5'
020A:AEFB  A0 3BA8				mov	al,data_510		; (020A:3BA8=89h)
020A:AEFE  3E: 88 46 00				mov	ds:[bp],al
020A:AF02  45					inc	bp
020A:AF03  EB 05				jmp	short loc_1751		; (AF0A)
020A:AF05			loc_1750:
020A:AF05  C6 06 309E 69			mov	data_346,69h		; (020A:309E=65h) 'i'
020A:AF0A			loc_1751:
020A:AF0A  A0 3B9F				mov	al,data_509		; (020A:3B9F=0F6h)
020A:AF0D  3E: 88 46 00				mov	ds:[bp],al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 360

020A:AF11  45					inc	bp
020A:AF12  EB 00				jmp	short loc_1752		; (AF14)
020A:AF14			loc_1752:
020A:AF14  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:AF17  75 03				jne	loc_1753		; Jump if not equal
020A:AF19  E9 008B				jmp	loc_1762		; (AFA7)
020A:AF1C			loc_1753:
020A:AF1C  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:AF21  75 50				jnz	loc_1758		; Jump if not zero
020A:AF23  8A 1E 35EE				mov	bl,data_461		; (020A:35EE=0B4h)
020A:AF27  80 E3 07				and	bl,7
020A:AF2A  80 FB 00				cmp	bl,0
020A:AF2D  74 65				je	loc_1761		; Jump if equal
020A:AF2F  80 FB 06				cmp	bl,6
020A:AF32  74 60				je	loc_1761		; Jump if equal
020A:AF34  80 FB 07				cmp	bl,7
020A:AF37  75 07				jne	loc_1754		; Jump if not equal
020A:AF39  F6 C2 01				test	dl,1
020A:AF3C  74 56				jz	loc_1761		; Jump if zero
020A:AF3E  EB 15				jmp	short loc_1756		; (AF55)
020A:AF40			loc_1754:
020A:AF40  F6 06 35EE 02			test	data_461,2		; (020A:35EE=0B4h)
020A:AF45  74 07				jz	loc_1755		; Jump if zero
020A:AF47  80 FB 07				cmp	bl,7
020A:AF4A  74 09				je	loc_1756		; Jump if equal
020A:AF4C  EB 25				jmp	short loc_1758		; (AF73)
020A:AF4E			loc_1755:
020A:AF4E  80 FB 01				cmp	bl,1
020A:AF51  74 02				je	loc_1756		; Jump if equal
020A:AF53  EB 1E				jmp	short loc_1758		; (AF73)
020A:AF55			loc_1756:
020A:AF55  BF 2D5B				mov	di,2D5Bh
020A:AF58  F6 06 35F0 06			test	data_462,6		; (020A:35F0=0CDh)
020A:AF5D  74 03				jz	loc_1757		; Jump if zero
020A:AF5F  BF 2D63				mov	di,2D63h
020A:AF62			loc_1757:
020A:AF62  A0 3BB1				mov	al,byte ptr ds:[3BB1h]	; (020A:3BB1=24h)
020A:AF65  B9 0007				mov	cx,7
020A:AF68  FC					cld				; Clear direction
020A:AF69  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:AF6B  4F					dec	di
020A:AF6C  A0 3B9E				mov	al,byte ptr ds:[3B9Eh]	; (020A:3B9E=0D3h)
020A:AF6F  88 05				mov	[di],al
020A:AF71  EB 21				jmp	short loc_1761		; (AF94)
020A:AF73			loc_1758:
020A:AF73  BF 2D5B				mov	di,2D5Bh
020A:AF76  F6 06 35F0 06			test	data_462,6		; (020A:35F0=0CDh)
020A:AF7B  74 03				jz	loc_1759		; Jump if zero
020A:AF7D  BF 2D63				mov	di,2D63h
020A:AF80			loc_1759:
020A:AF80  A0 3BB1				mov	al,byte ptr ds:[3BB1h]	; (020A:3BB1=24h)
020A:AF83  F6 C2 01				test	dl,1
020A:AF86  75 03				jnz	loc_1760		; Jump if not zero
020A:AF88  A0 3B9C				mov	al,byte ptr ds:[3B9Ch]	; (020A:3B9C=4Eh)
020A:AF8B			loc_1760:
020A:AF8B  B9 0007				mov	cx,7
020A:AF8E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 361

020A:AF90  4F					dec	di
020A:AF91  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:AF94			loc_1761:
020A:AF94  F6 06 35F0 06			test	data_462,6		; (020A:35F0=0CDh)
020A:AF99  74 0C				jz	loc_1762		; Jump if zero
020A:AF9B  BF 2D63				mov	di,2D63h
020A:AF9E  B9 0007				mov	cx,7
020A:AFA1  B0 20				mov	al,20h			; ' '
020A:AFA3  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:AFA5  8B EF				mov	bp,di
020A:AFA7			loc_1762:
020A:AFA7  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AFAC  9C					pushf				; Push flags
020A:AFAD  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AFB2  5A					pop	dx
020A:AFB3  8E C2				mov	es,dx
020A:AFB5  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:AFBA  5A					pop	dx
020A:AFBB  75 0A				jnz	loc_1763		; Jump if not zero
020A:AFBD  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:AFC2  74 03				je	loc_1763		; Jump if equal
020A:AFC4  E8 C3F5				call	sub_103			; (73BC)
020A:AFC7			loc_1763:
020A:AFC7  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AFCC  9D					popf				; Pop flags
020A:AFCD  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AFD2  5F					pop	di
020A:AFD3  5E					pop	si
020A:AFD4  5A					pop	dx
020A:AFD5  59					pop	cx
020A:AFD6  5B					pop	bx
020A:AFD7  58					pop	ax
020A:AFD8  C3					retn
				sub_132		endp

							                        ;* No entry point to code
020A:AFD9  87 DB				xchg	bx,bx
020A:AFDB  90					nop
020A:AFDC  52					push	dx
020A:AFDD  51					push	cx
020A:AFDE  57					push	di
020A:AFDF  56					push	si
020A:AFE0  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:AFE5  06					push	es
020A:AFE6  BE 2D06				mov	si,2D06h
020A:AFE9  80 3C 00				cmp	byte ptr [si],0
020A:AFEC  74 17				je	loc_1764		; Jump if equal
020A:AFEE  BF 2D26				mov	di,2D26h
020A:AFF1  E8 B708				call	sub_81			; (66FC)
020A:AFF4  B9 0015				mov	cx,15h
020A:AFF7  E8 C063				call	sub_95			; (705D)
020A:AFFA  FC					cld				; Clear direction
020A:AFFB  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AFFD  BA 2D1B				mov	dx,2D1Bh
020A:B000  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:B000  9A					db	9Ah
020A:B001  233C 14FC				dw	233Ch, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 362

020A:B005			loc_1764:
020A:B005  C6 06 2D06 00			mov	byte ptr data_270,0	; (020A:2D06='SSOR_LEVEL=6')
020A:B00A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B00F  9C					pushf				; Push flags
020A:B010  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B015  5A					pop	dx
020A:B016  8E C2				mov	es,dx
020A:B018  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B01D  5A					pop	dx
020A:B01E  75 0A				jnz	loc_1765		; Jump if not zero
020A:B020  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B025  74 03				je	loc_1765		; Jump if equal
020A:B027  E8 C392				call	sub_103			; (73BC)
020A:B02A			loc_1765:
020A:B02A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B02F  9D					popf				; Pop flags
020A:B030  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B035  5E					pop	si
020A:B036  5F					pop	di
020A:B037  59					pop	cx
020A:B038  5A					pop	dx
020A:B039  C3					retn
							                        ;* No entry point to code
020A:B03A  87 DB				xchg	bx,bx
020A:B03C  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:B041  75 4D				jne	loc_1767		; Jump if not equal
020A:B043  50					push	ax
020A:B044  51					push	cx
020A:B045  57					push	di
020A:B046  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B04B  06					push	es
020A:B04C  E8 C00E				call	sub_95			; (705D)
020A:B04F  B9 0007				mov	cx,7
020A:B052  BF 2D5B				mov	di,2D5Bh
020A:B055  B0 20				mov	al,20h			; ' '
020A:B057  FC					cld				; Clear direction
020A:B058  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B05A  4F					dec	di
020A:B05B  8A 0E 3B9E				mov	cl,byte ptr ds:[3B9Eh]	; (020A:3B9E=0D3h)
020A:B05F  26: 88 0D				mov	es:[di],cl
020A:B062  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B067  9C					pushf				; Push flags
020A:B068  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B06D  5A					pop	dx
020A:B06E  8E C2				mov	es,dx
020A:B070  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B075  5A					pop	dx
020A:B076  75 0A				jnz	loc_1766		; Jump if not zero
020A:B078  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B07D  74 03				je	loc_1766		; Jump if equal
020A:B07F  E8 C33A				call	sub_103			; (73BC)
020A:B082			loc_1766:
020A:B082  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B087  9D					popf				; Pop flags
020A:B088  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B08D  5F					pop	di
020A:B08E  59					pop	cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 363

020A:B08F  58					pop	ax
020A:B090			loc_1767:
020A:B090  C3					retn
							                        ;* No entry point to code
020A:B091  87 DB				xchg	bx,bx
020A:B093  90					nop
020A:B094  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:B099  75 54				jne	loc_1769		; Jump if not equal
020A:B09B  50					push	ax
020A:B09C  51					push	cx
020A:B09D  57					push	di
020A:B09E  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B0A3  06					push	es
020A:B0A4  E8 BFB6				call	sub_95			; (705D)
020A:B0A7  B9 0007				mov	cx,7
020A:B0AA  BF 2D5B				mov	di,2D5Bh
020A:B0AD  A0 3BAA				mov	al,data_511		; (020A:3BAA=22h)
020A:B0B0  FC					cld				; Clear direction
020A:B0B1  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B0B3  26: 8B 05				mov	ax,es:[di]
020A:B0B6  8A 0E 3B9E				mov	cl,byte ptr ds:[3B9Eh]	; (020A:3B9E=0D3h)
020A:B0BA  26: 88 0D				mov	es:[di],cl
020A:B0BD  47					inc	di
020A:B0BE  26: 89 05				mov	es:[di],ax
020A:B0C1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B0C6  9C					pushf				; Push flags
020A:B0C7  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B0CC  5A					pop	dx
020A:B0CD  8E C2				mov	es,dx
020A:B0CF  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B0D4  5A					pop	dx
020A:B0D5  75 0A				jnz	loc_1768		; Jump if not zero
020A:B0D7  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B0DC  74 03				je	loc_1768		; Jump if equal
020A:B0DE  E8 C2DB				call	sub_103			; (73BC)
020A:B0E1			loc_1768:
020A:B0E1  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B0E6  9D					popf				; Pop flags
020A:B0E7  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B0EC  5F					pop	di
020A:B0ED  59					pop	cx
020A:B0EE  58					pop	ax
020A:B0EF			loc_1769:
020A:B0EF  C3					retn
							                        ;* No entry point to code
020A:B0F0  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (020A:2B36=3Ah)
020A:B0F5  75 07				jne	loc_1770		; Jump if not equal
020A:B0F7  F6 06 3459 02			test	data_409,2		; (020A:3459=21h)
020A:B0FC  75 03				jnz	loc_1771		; Jump if not zero
020A:B0FE			loc_1770:
020A:B0FE  E9 008B				jmp	loc_1774		; (B18C)
020A:B101			loc_1771:
020A:B101  50					push	ax
020A:B102  53					push	bx
020A:B103  52					push	dx
020A:B104  57					push	di
020A:B105  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 364

020A:B10A  06					push	es
020A:B10B  8B 1E 3466				mov	bx,data_418		; (020A:3466=472h)
020A:B10F  A1 3468				mov	ax,data_419		; (020A:3468=1689h)
020A:B112  BA 0004				mov	dx,4
020A:B115  E8 AD74				call	sub_76			; (5E8C)
020A:B118  73 43				jnc	loc_1772		; Jump if carry=0
020A:B11A  26: 8A 45 32				mov	al,es:[di+32h]
020A:B11E  24 38				and	al,38h			; '8'
020A:B120  3C 38				cmp	al,38h			; '8'
020A:B122  74 39				je	loc_1772		; Jump if equal
020A:B124  26: 80 45 32 08			add	byte ptr es:[di+32h],8
020A:B129  80 26 3459 FD			and	data_409,0FDh		; (020A:3459=21h)
020A:B12E  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:B133  75 28				jnz	loc_1772		; Jump if not zero
020A:B135  A1 3056				mov	ax,data_312		; (020A:3056=4F53h)
020A:B138  2B 06 344C				sub	ax,data_402		; (020A:344C=6C6h)
020A:B13C  3D 0018				cmp	ax,18h
020A:B13F  76 1C				jbe	loc_1772		; Jump if below or =
020A:B141  B8 0018				mov	ax,18h
020A:B144  C6 06 53D8 01			mov	data_651,1		; (020A:53D8=0B9h)
020A:B149  9A 14FC:3558		;*		call	far ptr sub_193		;*(14FC:3558)
020A:B149  9A					db	9Ah
020A:B14A  3558 14FC				dw	3558h, 14FCh
020A:B14E  C6 06 53D8 00			mov	data_651,0		; (020A:53D8=0B9h)
020A:B153  3D 0017				cmp	ax,17h
020A:B156  72 05				jb	loc_1772		; Jump if below
020A:B158  26: 80 4D 05 20			or	byte ptr es:[di+5],20h	; ' '
020A:B15D			loc_1772:
020A:B15D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B162  9C					pushf				; Push flags
020A:B163  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B168  5A					pop	dx
020A:B169  8E C2				mov	es,dx
020A:B16B  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B170  5A					pop	dx
020A:B171  75 0A				jnz	loc_1773		; Jump if not zero
020A:B173  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B178  74 03				je	loc_1773		; Jump if equal
020A:B17A  E8 C23F				call	sub_103			; (73BC)
020A:B17D			loc_1773:
020A:B17D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B182  9D					popf				; Pop flags
020A:B183  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B188  5F					pop	di
020A:B189  5A					pop	dx
020A:B18A  5B					pop	bx
020A:B18B  58					pop	ax
020A:B18C			loc_1774:
020A:B18C  C3					retn
020A:B18D  87 DB				xchg	bx,bx
020A:B18F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_133		proc	near
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 365

020A:B190  50					push	ax
020A:B191  53					push	bx
020A:B192  51					push	cx
020A:B193  52					push	dx
020A:B194  56					push	si
020A:B195  57					push	di
020A:B196  55					push	bp
020A:B197  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B19C  1E					push	ds
020A:B19D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B1A2  06					push	es
020A:B1A3  E8 BE9F				call	sub_91			; (7045)
020A:B1A6  E8 BED2				call	sub_100			; (707B)
020A:B1A9  8B D8				mov	bx,ax
020A:B1AB  A1 2B3D				mov	ax,data_244		; (020A:2B3D=7E45h)
020A:B1AE  8C C9				mov	cx,cs
020A:B1B0  2B D9				sub	bx,cx
020A:B1B2  2B C3				sub	ax,bx
020A:B1B4  B9 0006				mov	cx,6
020A:B1B7  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B1B9  BD 0706				mov	bp,706h
020A:B1BC  B3 01				mov	bl,1
020A:B1BE  3D 03E7				cmp	ax,3E7h
020A:B1C1  77 0D				ja	loc_1775		; Jump if above
020A:B1C3  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:B1C3  9A					db	9Ah
020A:B1C4  0288 14FC				dw	288h, 14FCh
020A:B1C8  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:B1CC  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:B1D0			loc_1775:
020A:B1D0  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:B1D6  74 04				je	loc_1776		; Jump if equal
020A:B1D8  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:B1DC			loc_1776:
020A:B1DC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B1E1  9C					pushf				; Push flags
020A:B1E2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B1E7  5A					pop	dx
020A:B1E8  8E C2				mov	es,dx
020A:B1EA  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B1EF  5A					pop	dx
020A:B1F0  75 0A				jnz	loc_1777		; Jump if not zero
020A:B1F2  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B1F7  74 03				je	loc_1777		; Jump if equal
020A:B1F9  E8 C1C0				call	sub_103			; (73BC)
020A:B1FC			loc_1777:
020A:B1FC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B201  9D					popf				; Pop flags
020A:B202  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B207  2E: 89		data_745	db	89h			; Data table (indexed access)
020A:B209  16					push	ss
020A:B20A  92					xchg	dx,ax
020A:B20B  00 9C 8F2E				add	data_728[si],bl		; (020A:8F2E=45h)
020A:B20F  06					push	es
020A:B210  96					xchg	si,ax
020A:B211  00 5A 8E				add	[bp+si-72h],bl
020A:B214  DA					db	0DAh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 366

020A:B215  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B21A  5A					pop	dx
020A:B21B  75 0A				jnz	loc_1778		; Jump if not zero
020A:B21D  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B222  74 03				je	loc_1778		; Jump if equal
020A:B224  E8 C195				call	sub_103			; (73BC)
020A:B227			loc_1778:
020A:B227  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B22C  9D					popf				; Pop flags
020A:B22D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B232  5D					pop	bp
020A:B233  5F					pop	di
020A:B234  5E					pop	si
020A:B235  5A					pop	dx
020A:B236  59					pop	cx
020A:B237  5B					pop	bx
020A:B238  58					pop	ax
020A:B239  C3					retn
				sub_133		endp

020A:B23A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_134		proc	near
020A:B23C  50					push	ax
020A:B23D  53					push	bx
020A:B23E  51					push	cx
020A:B23F  52					push	dx
020A:B240  56					push	si
020A:B241  57					push	di
020A:B242  55					push	bp
020A:B243  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B248  1E					push	ds
020A:B249  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B24E  06					push	es
020A:B24F  E8 BDF3				call	sub_91			; (7045)
020A:B252  E8 BE23				call	sub_99			; (7078)
020A:B255  BB 2C44				mov	bx,2C44h
020A:B258  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B25A  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B25C  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B25E  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B260  03 C3				add	ax,bx
020A:B262  8B D8				mov	bx,ax
020A:B264  A1 2B3D				mov	ax,data_244		; (020A:2B3D=7E45h)
020A:B267  8C C9				mov	cx,cs
020A:B269  2B D9				sub	bx,cx
020A:B26B  2B C3				sub	ax,bx
020A:B26D  B9 0006				mov	cx,6
020A:B270  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B272  8B D0				mov	dx,ax
020A:B274  8B 1E 2CC8				mov	bx,data_268		; (020A:2CC8=4E45h)
020A:B278  A1 2CC6				mov	ax,data_267		; (020A:2CC6=4449h)
020A:B27B  B9 000A				mov	cx,0Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 367

020A:B27E  05 03FF				add	ax,3FFh
020A:B281  83 D3 00				adc	bx,0
020A:B284  F8					clc				; Clear carry flag

020A:B285			locloop_1779:
020A:B285  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B287  D1 D8				rcr	ax,1			; Rotate thru carry
020A:B289  E2 FA				loop	locloop_1779		; Loop if cx > 0

020A:B28B  92					xchg	dx,ax
020A:B28C  2B C2				sub	ax,dx
020A:B28E  3D 0000				cmp	ax,0
020A:B291  7D 02				jge	loc_1780		; Jump if > or =
020A:B293  33 C0				xor	ax,ax			; Zero register
020A:B295			loc_1780:
020A:B295  BD 0708				mov	bp,708h
020A:B298  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:B29E  3E: C6 46 02 20			mov	byte ptr ds:[bp+2],20h	; ' '
020A:B2A3  BD 0706				mov	bp,706h
020A:B2A6  B3 01				mov	bl,1
020A:B2A8  3D 03E7				cmp	ax,3E7h
020A:B2AB  77 0D				ja	loc_1781		; Jump if above
020A:B2AD  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:B2AD  9A					db	9Ah
020A:B2AE  0288 14FC				dw	288h, 14FCh
020A:B2B2  8B 1E 1326				mov	bx,data_149		; (020A:1326=0)
020A:B2B6  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:B2BA			loc_1781:
020A:B2BA  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:B2C0  74 04				je	loc_1782		; Jump if equal
020A:B2C2  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:B2C6			loc_1782:
020A:B2C6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B2CB  9C					pushf				; Push flags
020A:B2CC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B2D1  5A					pop	dx
020A:B2D2  8E C2				mov	es,dx
020A:B2D4  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B2D9  5A					pop	dx
020A:B2DA  75 0A				jnz	loc_1783		; Jump if not zero
020A:B2DC  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B2E1  74 03				je	loc_1783		; Jump if equal
020A:B2E3  E8 C0D6				call	sub_103			; (73BC)
020A:B2E6			loc_1783:
020A:B2E6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B2EB  9D					popf				; Pop flags
020A:B2EC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B2F1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B2F6  9C					pushf				; Push flags
020A:B2F7  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B2FC  5A					pop	dx
020A:B2FD  8E DA				mov	ds,dx
020A:B2FF  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B304  5A					pop	dx
020A:B305  75 0A				jnz	loc_1784		; Jump if not zero
020A:B307  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B30C  74 03				je	loc_1784		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 368

020A:B30E  E8 C0AB				call	sub_103			; (73BC)
020A:B311			loc_1784:
020A:B311  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B316  9D					popf				; Pop flags
020A:B317  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B31C  5D					pop	bp
020A:B31D  5F					pop	di
020A:B31E  5E					pop	si
020A:B31F  5A					pop	dx
020A:B320  59					pop	cx
020A:B321  5B					pop	bx
020A:B322  58					pop	ax
020A:B323  C3					retn
				sub_134		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_135		proc	near
020A:B324  06					push	es
020A:B325  57					push	di
020A:B326  51					push	cx
020A:B327  1E					push	ds
020A:B328  07					pop	es
020A:B329  BF 4E2D				mov	di,4E2Dh
020A:B32C  B9 0018				mov	cx,18h
020A:B32F  B8 FFFF				mov	ax,0FFFFh
020A:B332  FC					cld				; Clear direction
020A:B333  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:B335  59					pop	cx
020A:B336  5F					pop	di
020A:B337  07					pop	es
020A:B338  B8 FFFF				mov	ax,0FFFFh
020A:B33B  39 06 4E66				cmp	data_627,ax		; (020A:4E66=1475h)
020A:B33F  75 03				jne	loc_1785		; Jump if not equal
020A:B341  E9 0086				jmp	loc_1789		; (B3CA)
020A:B344			loc_1785:
020A:B344  50					push	ax
020A:B345  53					push	bx
020A:B346  51					push	cx
020A:B347  52					push	dx
020A:B348  56					push	si
020A:B349  57					push	di
020A:B34A  55					push	bp
020A:B34B  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B350  1E					push	ds
020A:B351  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B356  06					push	es
020A:B357  8B 1E 4E64				mov	bx,data_626		; (020A:4E64=0F9h)
020A:B35B  A1 4E66				mov	ax,data_627		; (020A:4E66=1475h)
020A:B35E  BA 0004				mov	dx,4
020A:B361  E8 AB28				call	sub_76			; (5E8C)
020A:B364  73 07				jnc	loc_1786		; Jump if carry=0
020A:B366  A1 4E60				mov	ax,data_624		; (020A:4E60=741Bh)
020A:B369  26: 89 45 07				mov	es:[di+7],ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 369

020A:B36D			loc_1786:
020A:B36D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B372  9C					pushf				; Push flags
020A:B373  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B378  5A					pop	dx
020A:B379  8E C2				mov	es,dx
020A:B37B  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B380  5A					pop	dx
020A:B381  75 0A				jnz	loc_1787		; Jump if not zero
020A:B383  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B388  74 03				je	loc_1787		; Jump if equal
020A:B38A  E8 C02F				call	sub_103			; (73BC)
020A:B38D			loc_1787:
020A:B38D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_136:
020A:B392  9D					popf				; Pop flags
020A:B393  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B398  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B39D  9C					pushf				; Push flags
020A:B39E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B3A3  5A					pop	dx
020A:B3A4  8E DA				mov	ds,dx
020A:B3A6  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B3AB  5A					pop	dx
020A:B3AC  75 0A				jnz	loc_1788		; Jump if not zero
020A:B3AE  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B3B3  74 03				je	loc_1788		; Jump if equal
020A:B3B5  E8 C004				call	sub_103			; (73BC)
020A:B3B8			loc_1788:
020A:B3B8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B3BD  9D					popf				; Pop flags
020A:B3BE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B3C3  5D					pop	bp
020A:B3C4  5F					pop	di
020A:B3C5  5E					pop	si
020A:B3C6  5A					pop	dx
020A:B3C7  59					pop	cx
020A:B3C8  5B					pop	bx
020A:B3C9  58					pop	ax
020A:B3CA			loc_1789:
020A:B3CA  B8 FFFF				mov	ax,0FFFFh
020A:B3CD  A2 4E5D				mov	data_622,al		; (020A:4E5D=0FCh)
020A:B3D0  A3 4E64				mov	data_626,ax		; (020A:4E64=0F9h)
020A:B3D3  A3 4E66				mov	data_627,ax		; (020A:4E66=1475h)
020A:B3D6  33 C0				xor	ax,ax			; Zero register
020A:B3D8  A3 4E5E				mov	data_623,ax		; (020A:4E5E=3C14h)
020A:B3DB  A3 4E60				mov	data_624,ax		; (020A:4E60=741Bh)
020A:B3DE  C3					retn
				sub_135		endp

							                        ;* No entry point to code
020A:B3DF  90					nop
020A:B3E0  80 3E 309E 77			cmp	data_346,77h		; (020A:309E=65h) 'w'
020A:B3E5  75 6D				jne	loc_1793		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 370

020A:B3E7  83 3E 344C 00			cmp	data_402,0		; (020A:344C=6C6h)
020A:B3EC  74 66				je	loc_1793		; Jump if equal
020A:B3EE  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B3F3  06					push	es
020A:B3F4  50					push	ax
020A:B3F5  56					push	si
020A:B3F6  8E 06 344A				mov	es,data_401		; (020A:344A=0CD01h)
020A:B3FA  8B 36 3488				mov	si,data_435		; (020A:3488=5284h)
020A:B3FE  26: 8A 04				mov	al,es:[si]
020A:B401  3C 68				cmp	al,68h			; 'h'
020A:B403  74 15				je	loc_1790		; Jump if equal
020A:B405  3C 50				cmp	al,50h			; 'P'
020A:B407  72 1D				jb	loc_1791		; Jump if below
020A:B409  3C 57				cmp	al,57h			; 'W'
020A:B40B  77 19				ja	loc_1791		; Jump if above
020A:B40D  24 07				and	al,7
020A:B40F  C7 06 4E5E 0044			mov	data_623,44h		; (020A:4E5E=3C14h)
020A:B415  E8 04F8				call	sub_143			; (B910)
020A:B418  EB 0C				jmp	short loc_1791		; (B426)
020A:B41A			loc_1790:
020A:B41A  A1 3488				mov	ax,data_435		; (020A:3488=5284h)
020A:B41D  C7 06 4E5E 0044			mov	data_623,44h		; (020A:4E5E=3C14h)
020A:B423  E8 00BE				call	sub_138			; (B4E4)
020A:B426			loc_1791:
020A:B426  5E					pop	si
020A:B427  58					pop	ax
020A:B428  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B42D  9C					pushf				; Push flags
020A:B42E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B433  5A					pop	dx
020A:B434  8E C2				mov	es,dx
020A:B436  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B43B  5A					pop	dx
020A:B43C  75 0A				jnz	loc_1792		; Jump if not zero
020A:B43E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:B443  74 03				je	loc_1792		; Jump if equal
020A:B445  E8 BF74				call	sub_103			; (73BC)
020A:B448			loc_1792:
020A:B448  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B44D  9D					popf				; Pop flags
020A:B44E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B453  C3					retn
020A:B454			loc_1793:
020A:B454  E8 FECD				call	sub_135			; (B324)
020A:B457  C3					retn
020A:B458  D8					db	0D8h
020A:B459  D9					db	0D9h
020A:B45A  DA					db	0DAh
020A:B45B  DB					db	0DBh
020A:B45C  DC					db	0DCh
020A:B45D  DD					db	0DDh
020A:B45E  DE					db	0DEh
020A:B45F  DF					db	0DFh
							                        ;* No entry point to code
020A:B460  26					db	26h
020A:B461  9B					db	9Bh
020A:B462  90					nop
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 371

020A:B463  90					nop
020A:B464  F6 06 30B0 1F			test	byte ptr ds:[30B0h],1Fh	; (020A:30B0=2Eh)
020A:B469  74 59				jz	loc_1799		; Jump if zero
020A:B46B  F7 06 4E22 0001			test	data_591,1		; (020A:4E22=0EDA3h)
020A:B471  75 51				jnz	loc_1799		; Jump if not zero
020A:B473  50					push	ax
020A:B474  53					push	bx
020A:B475  57					push	di
020A:B476  06					push	es
020A:B477  1E					push	ds
020A:B478  07					pop	es
020A:B479  BF 2CCA				mov	di,2CCAh
020A:B47C  B8 9B9B				mov	ax,9B9Bh
020A:B47F  26: 8B 1D				mov	bx,es:[di]
020A:B482  80 FB CD				cmp	bl,0CDh
020A:B485  74 03				je	loc_1794		; Jump if equal
020A:B487  F8					clc				; Clear carry flag
020A:B488  EB 35				jmp	short loc_1798		; (B4BF)
020A:B48A			loc_1794:
020A:B48A  8A DF				mov	bl,bh
020A:B48C  8A C3				mov	al,bl
020A:B48E  3C 3E				cmp	al,3Eh			; '>'
020A:B490  72 03				jb	loc_1795		; Jump if below
020A:B492  F8					clc				; Clear carry flag
020A:B493  EB 2A				jmp	short loc_1798		; (B4BF)
020A:B495			loc_1795:
020A:B495  2C 34				sub	al,34h			; '4'
020A:B497  BB 80D8				mov	bx,80D8h
020A:B49A  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
020A:B49C  3C 9B				cmp	al,9Bh
020A:B49E  75 04				jne	loc_1796		; Jump if not equal
020A:B4A0  B0 90				mov	al,90h
020A:B4A2  EB 02				jmp	short loc_1797		; (B4A6)
020A:B4A4			loc_1796:
020A:B4A4  86 E0				xchg	ah,al
020A:B4A6			loc_1797:
020A:B4A6  26: 8B 1D				mov	bx,es:[di]
020A:B4A9  89 1E 4E26				mov	data_593,bx		; (020A:4E26=69Bh)
020A:B4AD  26: 89 05				mov	es:[di],ax
020A:B4B0  A3 4E28				mov	data_594,ax		; (020A:4E28=0EFA3h)
020A:B4B3  C6 06 4E2C 02			mov	data_597,2		; (020A:4E2C=4)
020A:B4B8  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:B4BB  A3 4E2A				mov	data_596,ax		; (020A:4E2A=0B907h)
020A:B4BE  F9					stc				; Set carry flag
020A:B4BF			loc_1798:
020A:B4BF  07					pop	es
020A:B4C0  5F					pop	di
020A:B4C1  5B					pop	bx
020A:B4C2  58					pop	ax
020A:B4C3  C3					retn
020A:B4C4			loc_1799:
020A:B4C4  F8					clc				; Clear carry flag
020A:B4C5  C3					retn
020A:B4C6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 372

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_137		proc	near
020A:B4C8  1E					push	ds
020A:B4C9  0E					push	cs
020A:B4CA  1F					pop	ds
020A:B4CB  B8 2523				mov	ax,2523h
020A:B4CE  BA 8155				mov	dx,8155h
020A:B4D1  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
020A:B4D3  1F					pop	ds
020A:B4D4  C3					retn
				sub_137		endp

							                        ;* No entry point to code
020A:B4D5  2E: C6 06 0098 01			mov	byte ptr cs:[98h],1	; (020A:0098=0)
020A:B4DB  F8					clc				; Clear carry flag
020A:B4DC  CB					retf
020A:B4DD  00					db	0
020A:B4DE  00					db	0
							                        ;* No entry point to code
020A:B4DF  00 00				add	[bx+si],al
020A:B4E1  00 87 F7DB				add	data_770[bx],al		; (020A:F7DB=3)
020A:B4E5  06					push	es
020A:B4E6  5E					pop	si
020A:B4E7  4E					dec	si
020A:B4E8  E0 00				loopnz	locloop_1800		; Loop if zf=0, cx>0


020A:B4EA			locloop_1800:
020A:B4EA  75 01				jnz	loc_1801		; Jump if not zero
020A:B4EC  C3					retn
020A:B4ED			loc_1801:
020A:B4ED  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B4F1  50					push	ax
020A:B4F2  53					push	bx
020A:B4F3  51					push	cx
020A:B4F4  52					push	dx
020A:B4F5  56					push	si
020A:B4F6  57					push	di
020A:B4F7  55					push	bp
020A:B4F8  BB FFFF				mov	bx,0FFFFh
020A:B4FB  E9 0191				jmp	loc_1818		; (B68F)
							                        ;* No entry point to code
020A:B4FE  87 DB				xchg	bx,bx
020A:B500  83 3E 4E2D FF			cmp	data_598,0FFFFh		; (020A:4E2D=8A00h)
020A:B505  74 09				je	loc_1802		; Jump if equal
020A:B507  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B50D  75 0B				jnz	loc_1803		; Jump if not zero
020A:B50F  C3					retn
020A:B510			loc_1802:
020A:B510  50					push	ax
020A:B511  B0 01				mov	al,1
020A:B513  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B513  9A					db	9Ah
020A:B514  60D0 14FC				dw	60D0h, 14FCh
020A:B518  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 373

020A:B519  C3					retn
020A:B51A			loc_1803:
020A:B51A  50					push	ax
020A:B51B  53					push	bx
020A:B51C  51					push	cx
020A:B51D  52					push	dx
020A:B51E  56					push	si
020A:B51F  57					push	di
020A:B520  55					push	bp
020A:B521  A1 4E2D				mov	ax,data_598		; (020A:4E2D=8A00h)
020A:B524  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B528  8B 1E 4E2F				mov	bx,data_599		; (020A:4E2F=4614h)
020A:B52C  A1 4E31				mov	ax,data_600		; (020A:4E31=0A09Ah)
020A:B52F  E9 015D				jmp	loc_1818		; (B68F)
020A:B532  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_139		proc	near
020A:B534  83 3E 4E33 FF			cmp	data_601,0FFFFh		; (020A:4E33=0FC07h)
020A:B539  74 09				je	loc_1804		; Jump if equal
020A:B53B  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B541  75 0B				jnz	loc_1805		; Jump if not zero
020A:B543  C3					retn
020A:B544			loc_1804:
020A:B544  50					push	ax
020A:B545  B0 02				mov	al,2
020A:B547  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B547  9A					db	9Ah
020A:B548  60D0 14FC				dw	60D0h, 14FCh
020A:B54C  58					pop	ax
020A:B54D  C3					retn
020A:B54E			loc_1805:
020A:B54E  50					push	ax
020A:B54F  53					push	bx
020A:B550  51					push	cx
020A:B551  52					push	dx
020A:B552  56					push	si
020A:B553  57					push	di
020A:B554  55					push	bp
020A:B555  A1 4E33				mov	ax,data_601		; (020A:4E33=0FC07h)
020A:B558  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B55C  8B 1E 4E35				mov	bx,data_602		; (020A:4E35=0E214h)
020A:B560  A1 4E37				mov	ax,data_603		; (020A:4E37=80F6h)
020A:B563  E9 0129				jmp	loc_1818		; (B68F)
							                        ;* No entry point to code
020A:B566  87 DB				xchg	bx,bx
020A:B568  83 3E 4E39 FF			cmp	data_604,0FFFFh		; (020A:4E39=0F9h)
020A:B56D  74 09				je	loc_1806		; Jump if equal
020A:B56F  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B575  75 0B				jnz	loc_1807		; Jump if not zero
020A:B577  C3					retn
020A:B578			loc_1806:
020A:B578  50					push	ax
020A:B579  B0 03				mov	al,3
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 374

020A:B57B  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B57B  9A					db	9Ah
020A:B57C  60D0 14FC				dw	60D0h, 14FCh
020A:B580  58					pop	ax
020A:B581  C3					retn
020A:B582			loc_1807:
020A:B582  50					push	ax
020A:B583  53					push	bx
020A:B584  51					push	cx
020A:B585  52					push	dx
020A:B586  56					push	si
020A:B587  57					push	di
020A:B588  55					push	bp
020A:B589  A1 4E39				mov	ax,data_604		; (020A:4E39=0F9h)
020A:B58C  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B590  8B 1E 4E3B				mov	bx,data_605		; (020A:4E3B=3F75h)
020A:B594  A1 4E3D				mov	ax,data_606		; (020A:4E3D=80B9h)
020A:B597  E9 00F5				jmp	loc_1818		; (B68F)
							                        ;* No entry point to code
020A:B59A  87 DB				xchg	bx,bx
020A:B59C  83 3E 4E3F FF			cmp	data_607,0FFFFh		; (020A:4E3F=0BF00h)
020A:B5A1  74 09				je	loc_1808		; Jump if equal
020A:B5A3  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B5A9  75 0B				jnz	loc_1809		; Jump if not zero
020A:B5AB  C3					retn
020A:B5AC			loc_1808:
020A:B5AC  50					push	ax
020A:B5AD  B0 04				mov	al,4
020A:B5AF  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B5AF  9A					db	9Ah
020A:B5B0  60D0 14FC				dw	60D0h, 14FCh
020A:B5B4  58					pop	ax
020A:B5B5  C3					retn
020A:B5B6			loc_1809:
020A:B5B6  50					push	ax
020A:B5B7  53					push	bx
020A:B5B8  51					push	cx
020A:B5B9  52					push	dx
020A:B5BA  56					push	si
020A:B5BB  57					push	di
020A:B5BC  55					push	bp
020A:B5BD  A1 4E3F				mov	ax,data_607		; (020A:4E3F=0BF00h)
020A:B5C0  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B5C4  8B 1E 4E41				mov	bx,data_608		; (020A:4E41=7EDh)
020A:B5C8  A1 4E43				mov	ax,data_609		; (020A:4E43=5AE8h)
020A:B5CB  E9 00C1				jmp	loc_1818		; (B68F)
020A:B5CE  87 DB				xchg	bx,bx

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_140:
020A:B5D0  83 3E 4E4B FF			cmp	data_613,0FFFFh		; (020A:4E4B=0B235h)
020A:B5D5  74 09				je	loc_1810		; Jump if equal
020A:B5D7  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B5DD  75 0B				jnz	loc_1811		; Jump if not zero
020A:B5DF  C3					retn
020A:B5E0			loc_1810:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 375

020A:B5E0  50					push	ax
020A:B5E1  B0 06				mov	al,6
020A:B5E3  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B5E3  9A					db	9Ah
020A:B5E4  60D0 14FC				dw	60D0h, 14FCh
020A:B5E8  58					pop	ax
020A:B5E9  C3					retn
020A:B5EA			loc_1811:
020A:B5EA  50					push	ax
020A:B5EB  53					push	bx
020A:B5EC  51					push	cx
020A:B5ED  52					push	dx
020A:B5EE  56					push	si
020A:B5EF  57					push	di
020A:B5F0  55					push	bp
020A:B5F1  A1 4E4B				mov	ax,data_613		; (020A:4E4B=0B235h)
020A:B5F4  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B5F8  8B 1E 4E4D				mov	bx,data_614		; (020A:4E4D=9A3Ah)
020A:B5FC  A1 4E4F				mov	ax,data_615		; (020A:4E4F=7A0h)
020A:B5FF  E9 008D				jmp	loc_1818		; (B68F)
020A:B602  87 DB				xchg	bx,bx

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_141:
020A:B604  83 3E 4E45 FF			cmp	data_610,0FFFFh		; (020A:4E45=73ECh)
020A:B609  74 09				je	loc_1812		; Jump if equal
020A:B60B  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B611  75 0B				jnz	loc_1813		; Jump if not zero
020A:B613  C3					retn
020A:B614			loc_1812:
020A:B614  50					push	ax
020A:B615  B0 05				mov	al,5
020A:B617  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B617  9A					db	9Ah
020A:B618  60D0 14FC				dw	60D0h, 14FCh
020A:B61C  58					pop	ax
020A:B61D  C3					retn
020A:B61E			loc_1813:
020A:B61E  50					push	ax
020A:B61F  53					push	bx
020A:B620  51					push	cx
020A:B621  52					push	dx
020A:B622  56					push	si
020A:B623  57					push	di
020A:B624  55					push	bp
020A:B625  A1 4E45				mov	ax,data_610		; (020A:4E45=73ECh)
020A:B628  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B62C  8B 1E 4E47				mov	bx,data_611		; (020A:4E47=8934h)
020A:B630  A1 4E49				mov	ax,data_612		; (020A:4E49=0D516h)
020A:B633  EB 5A				jmp	short loc_1818		; (B68F)
							                        ;* No entry point to code
020A:B635  87 DB				xchg	bx,bx
020A:B637  90					nop
020A:B638  83 3E 4E57 FF			cmp	data_619,0FFFFh		; (020A:4E57=0F2BEh)
020A:B63D  74 08				je	loc_1814		; Jump if equal
020A:B63F  F7 06 4E5E 0060			test	data_623,60h		; (020A:4E5E=3C14h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 376

020A:B645  75 01				jnz	loc_1815		; Jump if not zero
020A:B647			loc_1814:
020A:B647  C3					retn
020A:B648			loc_1815:
020A:B648  50					push	ax
020A:B649  53					push	bx
020A:B64A  51					push	cx
020A:B64B  52					push	dx
020A:B64C  56					push	si
020A:B64D  57					push	di
020A:B64E  55					push	bp
020A:B64F  A1 4E57				mov	ax,data_619		; (020A:4E57=0F2BEh)
020A:B652  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B656  8B 1E 4E59				mov	bx,data_620		; (020A:4E59=9A07h)
020A:B65A  A1 4E5B				mov	ax,data_621		; (020A:4E5B=620h)
020A:B65D  EB 30				jmp	short loc_1818		; (B68F)
020A:B65F  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_142:
020A:B660  83 3E 4E51 FF			cmp	data_616,0FFFFh		; (020A:4E51=14FCh)
020A:B665  74 09				je	loc_1816		; Jump if equal
020A:B667  F7 06 4E5E 00E0			test	data_623,0E0h		; (020A:4E5E=3C14h)
020A:B66D  75 0B				jnz	loc_1817		; Jump if not zero
020A:B66F  C3					retn
020A:B670			loc_1816:
020A:B670  50					push	ax
020A:B671  B0 07				mov	al,7
020A:B673  9A 14FC:60D0		;*		call	far ptr sub_235		;*(14FC:60D0)
020A:B673  9A					db	9Ah
020A:B674  60D0 14FC				dw	60D0h, 14FCh
020A:B678  58					pop	ax
020A:B679  C3					retn
020A:B67A			loc_1817:
020A:B67A  50					push	ax
020A:B67B  53					push	bx
020A:B67C  51					push	cx
020A:B67D  52					push	dx
020A:B67E  56					push	si
020A:B67F  57					push	di
020A:B680  55					push	bp
020A:B681  A1 4E51				mov	ax,data_616		; (020A:4E51=14FCh)
020A:B684  2E: A3 8160				mov	cs:data_717,ax		; (020A:8160=0E94Fh)
020A:B688  8B 1E 4E53				mov	bx,data_617		; (020A:4E53=4B1h)
020A:B68C  A1 4E55				mov	ax,data_618		; (020A:4E55=2B3h)
020A:B68F			loc_1818:
020A:B68F  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B694  06					push	es
020A:B695  FF 36 40F7				push	data_524		; (020A:40F7=7545h)
020A:B699  FF 36 40F5				push	data_523		; (020A:40F5=3C26h)
020A:B69D  80 3E 2B3C 01			cmp	data_243,1		; (020A:2B3C=4Dh)
020A:B6A2  75 03				jne	loc_1819		; Jump if not equal
020A:B6A4  E9 0218				jmp	loc_1847		; (B8BF)
020A:B6A7			loc_1819:
020A:B6A7  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (020A:327F=0)
020A:B6AC  75 12				jne	loc_1820		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 377

020A:B6AE  81 FB 1000				cmp	bx,1000h
020A:B6B2  77 0C				ja	loc_1820		; Jump if above
020A:B6B4  E8 B99D				call	sub_93			; (7054)
020A:B6B7  26: 03 1E 0000			add	bx,word ptr es:[0]	; (020A:0000=1828h)
020A:B6BC  89 1E 4E71				mov	data_630,bx		; (020A:4E71=973h)
020A:B6C0			loc_1820:
020A:B6C0  8B 1E 344A				mov	bx,data_401		; (020A:344A=0CD01h)
020A:B6C4  C6 06 4D4B 01			mov	data_570,1		; (020A:4D4B=0E6h)
020A:B6C9  BA 0001				mov	dx,1
020A:B6CC  E8 A7BD				call	sub_76			; (5E8C)
020A:B6CF  73 43				jnc	loc_1824		; Jump if carry=0
020A:B6D1			loc_1821:
020A:B6D1  26: 8A 4D 04				mov	cl,es:[di+4]
020A:B6D5  80 E1 1F				and	cl,1Fh
020A:B6D8  80 F9 1F				cmp	cl,1Fh
020A:B6DB  75 11				jne	loc_1822		; Jump if not equal
020A:B6DD  26: 8A 4D 09				mov	cl,es:[di+9]
020A:B6E1  80 F9 40				cmp	cl,40h			; '@'
020A:B6E4  72 08				jb	loc_1822		; Jump if below
020A:B6E6  80 F9 44				cmp	cl,44h			; 'D'
020A:B6E9  77 03				ja	loc_1822		; Jump if above
020A:B6EB  E9 01D1				jmp	loc_1847		; (B8BF)
020A:B6EE			loc_1822:
020A:B6EE  50					push	ax
020A:B6EF  53					push	bx
020A:B6F0  BB 40C2				mov	bx,40C2h
020A:B6F3  26: 8A 45 05				mov	al,es:[di+5]
020A:B6F7  25 000F				and	ax,0Fh
020A:B6FA  D7					xlat				; al=[al+[bx]] table
020A:B6FB  0A C0				or	al,al			; Zero ?
020A:B6FD  75 04				jnz	loc_1823		; Jump if not zero
020A:B6FF  26: 8A 45 06				mov	al,es:[di+6]
020A:B703			loc_1823:
020A:B703  03 F8				add	di,ax
020A:B705  5B					pop	bx
020A:B706  58					pop	ax
020A:B707  26: 3B 1D				cmp	bx,es:[di]
020A:B70A  75 08				jne	loc_1824		; Jump if not equal
020A:B70C  26: 3B 45 02				cmp	ax,es:[di+2]
020A:B710  75 02				jne	loc_1824		; Jump if not equal
020A:B712  EB BD				jmp	short loc_1821		; (B6D1)
020A:B714			loc_1824:
020A:B714  BF 532E				mov	di,532Eh
020A:B717  89 1D				mov	[di],bx
020A:B719  89 45 02				mov	[di+2],ax
020A:B71C  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:B720  C6 45 05 02				mov	byte ptr [di+5],2
020A:B724  C6 45 06 00				mov	byte ptr [di+6],0
020A:B728  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:B72D  1E					push	ds
020A:B72E  8E DB				mov	ds,bx
020A:B730  8B D8				mov	bx,ax
020A:B732  80 3F 8D				cmp	byte ptr [bx],8Dh
020A:B735  1F					pop	ds
020A:B736  75 18				jnz	loc_1825		; Jump if not zero
020A:B738  B0 0A				mov	al,0Ah
020A:B73A  F7 06 4E5E 0020			test	data_623,20h		; (020A:4E5E=3C14h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 378

020A:B740  75 24				jnz	loc_1826		; Jump if not zero
020A:B742  B0 09				mov	al,9
020A:B744  F7 06 4E5E 0040			test	data_623,40h		; (020A:4E5E=3C14h)
020A:B74A  75 1A				jnz	loc_1826		; Jump if not zero
020A:B74C  B0 08				mov	al,8
020A:B74E  EB 16				jmp	short loc_1826		; (B766)
020A:B750			loc_1825:
020A:B750  B0 44				mov	al,44h			; 'D'
020A:B752  F7 06 4E5E 0020			test	data_623,20h		; (020A:4E5E=3C14h)
020A:B758  75 0C				jnz	loc_1826		; Jump if not zero
020A:B75A  B0 42				mov	al,42h			; 'B'
020A:B75C  F7 06 4E5E 0040			test	data_623,40h		; (020A:4E5E=3C14h)
020A:B762  75 02				jnz	loc_1826		; Jump if not zero
020A:B764  B0 40				mov	al,40h			; '@'
020A:B766			loc_1826:
020A:B766  88 45 09				mov	[di+9],al
020A:B769  A1 4E71				mov	ax,data_630		; (020A:4E71=973h)
020A:B76C  C7 06 4E71 FFFF			mov	data_630,0FFFFh		; (020A:4E71=973h)
020A:B772  3D FFFF				cmp	ax,0FFFFh
020A:B775  75 51				jne	loc_1831		; Jump if not equal
020A:B777  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:B77A  F7 06 4E5E 0004			test	data_623,4		; (020A:4E5E=3C14h)
020A:B780  75 46				jnz	loc_1831		; Jump if not zero
020A:B782  A1 4E62				mov	ax,data_625		; (020A:4E62=8019h)
020A:B785  3D FFFF				cmp	ax,0FFFFh
020A:B788  75 3E				jne	loc_1831		; Jump if not equal
020A:B78A  A1 361A				mov	ax,data_477		; (020A:361A=69B9h)
020A:B78D  F6 06 35F0 08			test	data_462,8		; (020A:35F0=0CDh)
020A:B792  74 34				jz	loc_1831		; Jump if zero
020A:B794  8A 0E 362B				mov	cl,data_483		; (020A:362B=0EFh)
020A:B798  80 F9 26				cmp	cl,26h			; '&'
020A:B79B  75 05				jne	loc_1827		; Jump if not equal
020A:B79D  A1 3618				mov	ax,data_476		; (020A:3618=5F24h)
020A:B7A0  EB 26				jmp	short loc_1831		; (B7C8)
020A:B7A2			loc_1827:
020A:B7A2  80 F9 2E				cmp	cl,2Eh			; '.'
020A:B7A5  75 05				jne	loc_1828		; Jump if not equal
020A:B7A7  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:B7AA  EB 1C				jmp	short loc_1831		; (B7C8)
020A:B7AC			loc_1828:
020A:B7AC  80 F9 36				cmp	cl,36h			; '6'
020A:B7AF  75 05				jne	loc_1829		; Jump if not equal
020A:B7B1  A1 3620				mov	ax,data_480		; (020A:3620=0BF50h)
020A:B7B4  EB 12				jmp	short loc_1831		; (B7C8)
020A:B7B6			loc_1829:
020A:B7B6  80 F9 64				cmp	cl,64h			; 'd'
020A:B7B9  75 05				jne	loc_1830		; Jump if not equal
020A:B7BB  A1 361C				mov	ax,data_478		; (020A:361C=8150h)
020A:B7BE  EB 08				jmp	short loc_1831		; (B7C8)
020A:B7C0			loc_1830:
020A:B7C0  80 F9 65				cmp	cl,65h			; 'e'
020A:B7C3  75 03				jne	loc_1831		; Jump if not equal
020A:B7C5  A1 361E				mov	ax,data_479		; (020A:361E=50E9h)
020A:B7C8			loc_1831:
020A:B7C8  89 45 0A				mov	[di+0Ah],ax
020A:B7CB  F7 06 4E22 4000			test	data_591,4000h		; (020A:4E22=0EDA3h)
020A:B7D1  74 03				jz	loc_1832		; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 379

020A:B7D3  E9 00E9				jmp	loc_1847		; (B8BF)
020A:B7D6			loc_1832:
020A:B7D6  E8 CCC7				call	sub_114			; (84A0)
020A:B7D9  8B D8				mov	bx,ax
020A:B7DB  BF 532E				mov	di,532Eh
020A:B7DE  2E: A1 8160				mov	ax,cs:data_717		; (020A:8160=0E94Fh)
020A:B7E2  89 1D				mov	[di],bx
020A:B7E4  89 45 02				mov	[di+2],ax
020A:B7E7  80 3E 15D0 01			cmp	data_161,1		; (020A:15D0=0)
020A:B7EC  77 04				ja	loc_1833		; Jump if above
020A:B7EE  80 4D 05 01				or	byte ptr [di+5],1
020A:B7F2			loc_1833:
020A:B7F2  F7 06 4E5E 0020			test	data_623,20h		; (020A:4E5E=3C14h)
020A:B7F8  75 52				jnz	loc_1838		; Jump if not zero
020A:B7FA  F7 06 4E5E 0040			test	data_623,40h		; (020A:4E5E=3C14h)
020A:B800  75 08				jnz	loc_1834		; Jump if not zero
020A:B802  F7 06 4E5E 0080			test	data_623,80h		; (020A:4E5E=3C14h)
020A:B808  75 1A				jnz	loc_1836		; Jump if not zero
020A:B80A			loc_1834:
020A:B80A  C6 06 4D4B 00			mov	data_570,0		; (020A:4D4B=0E6h)
020A:B80F  BA 0001				mov	dx,1
020A:B812  E8 A677				call	sub_76			; (5E8C)
020A:B815  73 03				jnc	loc_1835		; Jump if carry=0
020A:B817  E9 00A5				jmp	loc_1847		; (B8BF)
020A:B81A			loc_1835:
020A:B81A  BF 532E				mov	di,532Eh
020A:B81D  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:B821  E9 0098				jmp	loc_1846		; (B8BC)
020A:B824			loc_1836:
020A:B824  BA 0004				mov	dx,4
020A:B827  E8 A662				call	sub_76			; (5E8C)
020A:B82A  73 03				jnc	loc_1837		; Jump if carry=0
020A:B82C  E9 0090				jmp	loc_1847		; (B8BF)
020A:B82F			loc_1837:
020A:B82F  BF 532E				mov	di,532Eh
020A:B832  C6 45 04 43				mov	byte ptr [di+4],43h	; 'C'
020A:B836  80 4D 05 08				or	byte ptr [di+5],8
020A:B83A  57					push	di
020A:B83B  1E					push	ds
020A:B83C  07					pop	es
020A:B83D  83 C7 09				add	di,9
020A:B840  BE 35FA				mov	si,35FAh
020A:B843  B9 0029				mov	cx,29h
020A:B846  FC					cld				; Clear direction
020A:B847  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B849  5F					pop	di
020A:B84A  EB 70				jmp	short loc_1846		; (B8BC)
020A:B84C			loc_1838:
020A:B84C  BA 0002				mov	dx,2
020A:B84F  E8 A63A				call	sub_76			; (5E8C)
020A:B852  72 6B				jc	loc_1847		; Jump if carry Set
020A:B854  BF 532E				mov	di,532Eh
020A:B857  8A 0E 4E6C				mov	cl,byte ptr ds:[4E6Ch]	; (020A:4E6C=0F2h)
020A:B85B  88 4D 04				mov	[di+4],cl
020A:B85E  80 E1 23				and	cl,23h			; '#'
020A:B861  80 F9 20				cmp	cl,20h			; ' '
020A:B864  75 46				jne	loc_1844		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 380

020A:B866  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:B86A  57					push	di
020A:B86B  06					push	es
020A:B86C  B9 01F4				mov	cx,1F4h
020A:B86F  8E C3				mov	es,bx
020A:B871  8B F8				mov	di,ax
020A:B873  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:B877  75 0B				jne	loc_1839		; Jump if not equal
020A:B879  07					pop	es
020A:B87A  5F					pop	di
020A:B87B  B9 0001				mov	cx,1
020A:B87E  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:B882  EB 21				jmp	short loc_1843		; (B8A5)
020A:B884			loc_1839:
020A:B884  3D FE0B				cmp	ax,0FE0Bh
020A:B887  76 06				jbe	loc_1841		; Jump if below or =
020A:B889  B9 FFFF				mov	cx,0FFFFh
020A:B88C  2B C8				sub	cx,ax
020A:B88E  41					inc	cx
020A:B88F			loc_1841:
020A:B88F  32 C0				xor	al,al			; Zero register
020A:B891  F6 06 4E6C 08			test	byte ptr ds:[4E6Ch],8	; (020A:4E6C=0F2h)
020A:B896  74 02				jz	loc_1842		; Jump if zero
020A:B898  B0 24				mov	al,24h			; '$'
020A:B89A			loc_1842:
020A:B89A  51					push	cx
020A:B89B  FC					cld				; Clear direction
020A:B89C  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B89E  58					pop	ax
020A:B89F  2B C1				sub	ax,cx
020A:B8A1  8B C8				mov	cx,ax
020A:B8A3  07					pop	es
020A:B8A4  5F					pop	di
020A:B8A5			loc_1843:
020A:B8A5  C7 45 06 0000			mov	word ptr [di+6],0
020A:B8AA  EB 09				jmp	short loc_1845		; (B8B5)
020A:B8AC			loc_1844:
020A:B8AC  8B 0E 4E6D				mov	cx,word ptr ds:[4E6Dh]	; (020A:4E6D=0E807h)
020A:B8B0  C7 45 06 1000			mov	word ptr [di+6],1000h
020A:B8B5			loc_1845:
020A:B8B5  89 4D 08				mov	[di+8],cx
020A:B8B8  80 4D 05 04				or	byte ptr [di+5],4
020A:B8BC			loc_1846:
020A:B8BC  E8 CBE1				call	sub_114			; (84A0)
020A:B8BF			loc_1847:
020A:B8BF  C6 06 4D4B 00			mov	data_570,0		; (020A:4D4B=0E6h)
020A:B8C4  8F 06 40F5				pop	data_523		; (020A:40F5=3C26h)
020A:B8C8  8F 06 40F7				pop	data_524		; (020A:40F7=7545h)
020A:B8CC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B8D1  9C					pushf				; Push flags
020A:B8D2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B8D7  5A					pop	dx
020A:B8D8  8E C2				mov	es,dx
020A:B8DA  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:B8DF  5A					pop	dx
020A:B8E0  75 0A				jnz	loc_1848		; Jump if not zero
020A:B8E2  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 381

020A:B8E7  74 03				je	loc_1848		; Jump if equal
020A:B8E9  E8 BAD0				call	sub_103			; (73BC)
020A:B8EC			loc_1848:
020A:B8EC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B8F1  9D					popf				; Pop flags
020A:B8F2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B8F7  5D					pop	bp
020A:B8F8  5F					pop	di
020A:B8F9  5E					pop	si
020A:B8FA  5A					pop	dx
020A:B8FB  59					pop	cx
020A:B8FC  5B					pop	bx
020A:B8FD  58					pop	ax
020A:B8FE  C3					retn
				sub_139		endp

							                        ;* No entry point to code
020A:B8FF  80 81 81E8 1C			add	byte ptr ds:[81E8h][bx+di],1Ch	; (020A:81E8=7Fh)
020A:B904  82 B4 B881 82			xor	byte ptr ds:[0B881h][si],82h	; (020A:B881=41h)
020A:B909  E0 82		;*		loopnz	locloop_1840		;*Loop if zf=0, cx>0

020A:B909  E0 82				db	0E0h, 82h
020A:B90B  84 82 8250				test	al,[bp+si-7DB0h]
020A:B90F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_143		proc	near
020A:B910  53					push	bx
020A:B911  33 DB				xor	bx,bx			; Zero register
020A:B913  8A D8				mov	bl,al
020A:B915  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:B917  2E: FF 97 857F			call	word ptr cs:[857Fh][bx]	;*(020A:857F=245h)
020A:B91C  5B					pop	bx
020A:B91D  C3					retn
				sub_143		endp

							                        ;* No entry point to code
020A:B91E  80 81 81B4 E8			add	byte ptr ds:[81B4h][bx+di],0E8h	; (020A:81B4=3Ah)
020A:B923  81 1C 8482				sbb	word ptr [si],8482h
020A:B927  82 50 82 E0				adc	byte ptr [bx+si-7Eh],0E0h
020A:B92B  82 50 53 51				adc	byte ptr [bx+si+53h],51h	; 'Q'
020A:B92F  52					push	dx
020A:B930  56					push	si
020A:B931  57					push	di
020A:B932  55					push	bp
020A:B933  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B938  1E					push	ds
020A:B939  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:B93E  06					push	es
020A:B93F  A1 3468				mov	ax,data_419		; (020A:3468=1689h)
020A:B942  8B 1E 3466				mov	bx,data_418		; (020A:3466=472h)
020A:B946  BA 0004				mov	dx,4
020A:B949  FF 36 40F7				push	data_524		; (020A:40F7=7545h)
020A:B94D  FF 36 40F5				push	data_523		; (020A:40F5=3C26h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 382

020A:B951  E8 A538				call	sub_76			; (5E8C)
020A:B954  8F 06 40F5				pop	data_523		; (020A:40F5=3C26h)
020A:B958  8F 06 40F7				pop	data_524		; (020A:40F7=7545h)
020A:B95C  72 03				jc	loc_1850		; Jump if carry Set
020A:B95E			loc_1849:
020A:B95E  E9 00C9				jmp	loc_1859		; (BA2A)
020A:B961			loc_1850:
020A:B961  26: 8B 55 07				mov	dx,es:[di+7]
020A:B965  F7 C2 0777				test	dx,777h
020A:B969  74 F3				jz	loc_1849		; Jump if zero
020A:B96B  8B C2				mov	ax,dx
020A:B96D  25 000F				and	ax,0Fh
020A:B970  A9 0007				test	ax,7
020A:B973  74 30				jz	loc_1853		; Jump if zero
020A:B975  8B 2E 361A				mov	bp,data_477		; (020A:361A=69B9h)
020A:B979  A9 0008				test	ax,8
020A:B97C  74 04				jz	loc_1851		; Jump if zero
020A:B97E  8B 2E 3618				mov	bp,data_476		; (020A:3618=5F24h)
020A:B982			loc_1851:
020A:B982  89 2E 4E62				mov	data_625,bp		; (020A:4E62=8019h)
020A:B986  8B D8				mov	bx,ax
020A:B988  83 E3 07				and	bx,7
020A:B98B  4B					dec	bx
020A:B98C  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:B98E  C7 06 4E5E 0020			mov	data_623,20h		; (020A:4E5E=3C14h)
020A:B994  F7 C2 1000				test	dx,1000h
020A:B998  74 06				jz	loc_1852		; Jump if zero
020A:B99A  C7 06 4E5E 0040			mov	data_623,40h		; (020A:4E5E=3C14h)
020A:B9A0			loc_1852:
020A:B9A0  2E: FF 97 859E			call	cs:data_722[bx]		;*(020A:859E=0C2BBh)
020A:B9A5			loc_1853:
020A:B9A5  8B C2				mov	ax,dx
020A:B9A7  B1 04				mov	cl,4
020A:B9A9  D3 C8				ror	ax,cl			; Rotate
020A:B9AB  25 000F				and	ax,0Fh
020A:B9AE  A9 0007				test	ax,7
020A:B9B1  74 30				jz	loc_1856		; Jump if zero
020A:B9B3  8B 2E 361A				mov	bp,data_477		; (020A:361A=69B9h)
020A:B9B7  A9 0008				test	ax,8
020A:B9BA  74 04				jz	loc_1854		; Jump if zero
020A:B9BC  8B 2E 3618				mov	bp,data_476		; (020A:3618=5F24h)
020A:B9C0			loc_1854:
020A:B9C0  89 2E 4E62				mov	data_625,bp		; (020A:4E62=8019h)
020A:B9C4  8B D8				mov	bx,ax
020A:B9C6  83 E3 07				and	bx,7
020A:B9C9  4B					dec	bx
020A:B9CA  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:B9CC  C7 06 4E5E 0020			mov	data_623,20h		; (020A:4E5E=3C14h)
020A:B9D2  F7 C2 2000				test	dx,2000h
020A:B9D6  74 06				jz	loc_1855		; Jump if zero
020A:B9D8  C7 06 4E5E 0040			mov	data_623,40h		; (020A:4E5E=3C14h)
020A:B9DE			loc_1855:
020A:B9DE  2E: FF 97 859E			call	cs:data_722[bx]		;*(020A:859E=0C2BBh)
020A:B9E3			loc_1856:
020A:B9E3  8B C2				mov	ax,dx
020A:B9E5  B1 08				mov	cl,8
020A:B9E7  D3 C8				ror	ax,cl			; Rotate
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 383

020A:B9E9  25 000F				and	ax,0Fh
020A:B9EC  A9 0007				test	ax,7
020A:B9EF  74 39				jz	loc_1859		; Jump if zero
020A:B9F1  26: 8B 2D				mov	bp,es:[di]
020A:B9F4  F7 C2 8000				test	dx,8000h
020A:B9F8  75 0D				jnz	loc_1857		; Jump if not zero
020A:B9FA  8B 2E 361A				mov	bp,data_477		; (020A:361A=69B9h)
020A:B9FE  A9 0008				test	ax,8
020A:BA01  74 04				jz	loc_1857		; Jump if zero
020A:BA03  8B 2E 3618				mov	bp,data_476		; (020A:3618=5F24h)
020A:BA07			loc_1857:
020A:BA07  89 2E 4E62				mov	data_625,bp		; (020A:4E62=8019h)
020A:BA0B  8B D8				mov	bx,ax
020A:BA0D  83 E3 07				and	bx,7
020A:BA10  4B					dec	bx
020A:BA11  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:BA13  C7 06 4E5E 0020			mov	data_623,20h		; (020A:4E5E=3C14h)
020A:BA19  F7 C2 2000				test	dx,2000h
020A:BA1D  74 06				jz	loc_1858		; Jump if zero
020A:BA1F  C7 06 4E5E 0040			mov	data_623,40h		; (020A:4E5E=3C14h)
020A:BA25			loc_1858:
020A:BA25  2E: FF 97 859E			call	cs:data_722[bx]		;*(020A:859E=0C2BBh)
020A:BA2A			loc_1859:
020A:BA2A  E8 F8F7				call	sub_135			; (B324)
020A:BA2D  C7 06 4E62 FFFF			mov	data_625,0FFFFh		; (020A:4E62=8019h)
020A:BA33  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BA38  9C					pushf				; Push flags
020A:BA39  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BA3E  5A					pop	dx
020A:BA3F  8E C2				mov	es,dx
020A:BA41  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:BA46  5A					pop	dx
020A:BA47  75 0A				jnz	loc_1860		; Jump if not zero
020A:BA49  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:BA4E  74 03				je	loc_1860		; Jump if equal
020A:BA50  E8 B969				call	sub_103			; (73BC)
020A:BA53			loc_1860:
020A:BA53  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BA58  9D					popf				; Pop flags
020A:BA59  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BA5E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BA63  9C					pushf				; Push flags
020A:BA64  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BA69  5A					pop	dx
020A:BA6A  8E DA				mov	ds,dx
020A:BA6C  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:BA71  5A					pop	dx
020A:BA72  75 0A				jnz	loc_1861		; Jump if not zero
020A:BA74  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:BA79  74 03				je	loc_1861		; Jump if equal
020A:BA7B  E8 B93E				call	sub_103			; (73BC)
020A:BA7E			loc_1861:
020A:BA7E  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BA83  9D					popf				; Pop flags
020A:BA84  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BA89  5D					pop	bp
020A:BA8A  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 384

020A:BA8B  5E					pop	si
020A:BA8C  5A					pop	dx
020A:BA8D  59					pop	cx
020A:BA8E  5B					pop	bx
020A:BA8F  58					pop	ax
020A:BA90  C3					retn
							                        ;* No entry point to code
020A:BA91  87 DB				xchg	bx,bx
020A:BA93  90					nop
020A:BA94  A0 30B6				mov	al,data_355		; (020A:30B6=45h)
020A:BA97  24 07				and	al,7
020A:BA99  3C 07				cmp	al,7
020A:BA9B  75 05				jne	loc_1862		; Jump if not equal
020A:BA9D  E8 FB30				call	sub_140			; (B5D0)
020A:BAA0  EB 19				jmp	short loc_1865		; (BABB)
020A:BAA2			loc_1862:
020A:BAA2  3C 06				cmp	al,6
020A:BAA4  75 05				jne	loc_1863		; Jump if not equal
020A:BAA6  E8 FB5B				call	sub_141			; (B604)
020A:BAA9  EB 10				jmp	short loc_1865		; (BABB)
020A:BAAB			loc_1863:
020A:BAAB  3C 03				cmp	al,3
020A:BAAD  75 05				jne	loc_1864		; Jump if not equal
020A:BAAF  E8 FA82				call	sub_139			; (B534)
020A:BAB2  EB 07				jmp	short loc_1865		; (BABB)
020A:BAB4			loc_1864:
020A:BAB4  3C 05				cmp	al,5
020A:BAB6  75 03				jne	loc_1865		; Jump if not equal
020A:BAB8  E8 FBA5				call	sub_142			; (B660)
020A:BABB			loc_1865:
020A:BABB  CB					retf
020A:BABC  00					db	0
							                        ;* No entry point to code
020A:BABD  00 00				add	[bx+si],al
020A:BABF  00 01				add	[bx+di],al
020A:BAC1  87 DB				xchg	bx,bx
020A:BAC3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_144		proc	near
020A:BAC4  C6 06 3078 00			mov	data_325,0		; (020A:3078=57h)
020A:BAC9  C6 06 53E2 00			mov	data_653,0		; (020A:53E2=52h)
020A:BACE  C7 06 40FD 0000			mov	data_527,0		; (020A:40FD=8027h)
020A:BAD4  88 3E 307E				mov	data_330,bh		; (020A:307E=74h)
020A:BAD8  2E: 88 16 8740			mov	cs:data_723,dl		; (020A:8740=0EBh)
020A:BADD  B6 00				mov	dh,0
020A:BADF  8A C2				mov	al,dl
020A:BAE1  8A D8				mov	bl,al
020A:BAE3			loc_1866:
020A:BAE3  50					push	ax
020A:BAE4  56					push	si
020A:BAE5  32 E4				xor	ah,ah			; Zero register
020A:BAE7  BE 877D				mov	si,877Dh
020A:BAEA  03 F0				add	si,ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 385

020A:BAEC  2E: 8A 04				mov	al,cs:[si]
020A:BAEF  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:BAF1  BE 887D				mov	si,887Dh
020A:BAF4  03 F0				add	si,ax
020A:BAF6  2E: 8B 0C				mov	cx,cs:[si]
020A:BAF9  5E					pop	si
020A:BAFA  58					pop	ax
020A:BAFB  51					push	cx
020A:BAFC  C3					retn
				sub_144		endp

020A:BAFD  00 01				add	[bx+di],al
020A:BAFF  02 03				add	al,[bp+di]
020A:BB01  0007[03]				db	7 dup (3)
020A:BB08  0008[04]				db	8 dup (4)
020A:BB10  0008[07]				db	8 dup (7)
020A:BB18  0008[16]				db	8 dup (16h)
020A:BB20  1C 1C				sbb	al,1Ch
020A:BB22  1C 05				sbb	al,5
020A:BB24  06					push	es
020A:BB25  08 09				or	[bx+di],cl
020A:BB27  23 00				and	ax,[bx+si]
020A:BB29  00					db	0
020A:BB2A  00					db	0
020A:BB2B  00 00				add	[bx+si],al
020A:BB2D  00 0A				add	[bp+si],cl
020A:BB2F  0A 00				or	al,[bx+si]
020A:BB31  00 0A				add	[bp+si],cl
020A:BB33  0A 22				or	ah,[bp+si]
020A:BB35  00					db	0
020A:BB36  00					db	0
020A:BB37  00 00				add	[bx+si],al
020A:BB39  00 0B				add	[bp+di],cl
020A:BB3B  0C 00				or	al,0
020A:BB3D  0D 000D				or	ax,0Dh
020A:BB40  00 0D				add	[di],cl
020A:BB42  0D 0D0D				or	ax,0D0Dh
020A:BB45  0D 000D				or	ax,0Dh
020A:BB48  00					db	0
020A:BB49  00					db	0
020A:BB4A  00 00				add	[bx+si],al
020A:BB4C  00 0E 0E0E				add	data_138,cl		; (020A:0E0E=5Eh)
020A:BB50  0009[0E]				db	9 dup (0Eh)
020A:BB59  24 24				and	al,24h			; '$'
020A:BB5B  24 0F				and	al,0Fh
020A:BB5D  10 10				adc	[bx+si],dl
020A:BB5F  1A 10				sbb	dl,[bx+si]
020A:BB61  1F					pop	ds
020A:BB62  1F					pop	ds
020A:BB63  00 00				add	[bx+si],al
020A:BB65  05 1D06				add	ax,1D06h
020A:BB68  1E					push	ds
020A:BB69  00 00				add	[bx+si],al
020A:BB6B  00 21				add	[bx+di],ah
020A:BB6D  0008[12]				db	8 dup (12h)
020A:BB75  00 00				add	[bx+si],al
020A:BB77  11 11				adc	[bx+di],dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 386

020A:BB79  11 11				adc	[bx+di],dx
020A:BB7B  11 11				adc	[bx+di],dx
020A:BB7D  0008[1B]				db	8 dup (1Bh)
020A:BB85  000E[13]				db	14 dup (13h)
020A:BB93  17					pop	ss
020A:BB94  17					pop	ss
020A:BB95  17					pop	ss
020A:BB96  00 18				add	[bx+si],bl
020A:BB98  18 18				sbb	[bx+si],bl
020A:BB9A  18 18				sbb	[bx+si],bl
020A:BB9C  18 13				sbb	[bp+di],dl
020A:BB9E  0007[13]				db	7 dup (13h)
020A:BBA5  20 20				and	[bx+si],ah
020A:BBA7  00					db	0
020A:BBA8  00					db	0
020A:BBA9  00					db	0
020A:BBAA  00 00				add	[bx+si],al
020A:BBAC  00 14				add	[si],dl
020A:BBAE  0007[14]				db	7 dup (14h)
020A:BBB5  00 00				add	[bx+si],al
020A:BBB7  19 19				sbb	[bx+di],bx
020A:BBB9  19 19				sbb	[bx+di],bx
020A:BBBB  19 15				sbb	[di],dx
020A:BBBD  0020[00]				db	32 dup (0)
020A:BBDD  0008[13]				db	8 dup (13h)
020A:BBE5  0018[00]				db	24 dup (0)
020A:BBFD  9C					pushf				; Push flags
020A:BBFE  A1 88C7				mov	ax,word ptr ds:[88C7h]	; (0000:88C7=8326h)
020A:BC01  D6					db	0D6h
020A:BC02  88 FF				mov	bh,bh
020A:BC04  91					xchg	cx,ax
020A:BC05  66					db	66h
020A:BC06  92					xchg	dx,ax
020A:BC07  E8 F788				call	sub_136			; (B392)
020A:BC0A  88 A6 4692				mov	[bp+4692h],ah
020A:BC0E  89 55 89				mov	[di-77h],dx
020A:BC11  88 96 9946				mov	[bp-66BAh],dl
020A:BC15  58					pop	ax
020A:BC16  96					xchg	si,ax
020A:BC17  02 9B 8DC2				add	bl,[bp+di-723Eh]
020A:BC1B  0D C18E				or	ax,0C18Eh
020A:BC1E  8A 7D A0				mov	bh,[di-60h]
020A:BC21  37					aaa				; Ascii adjust
020A:BC22  A0 8986				mov	al,byte ptr ds:[8986h]	; (0000:8986=0A1h)
020A:BC25  9C					pushf				; Push flags
020A:BC26  8A 94 4B8A				mov	dl,byte ptr ds:[4B8Ah][si]	; (0000:4B8A=5Ch)
020A:BC2A  96					xchg	si,ax
020A:BC2B  2D 478A				sub	ax,478Ah
020A:BC2E  8A 3C				mov	bh,[si]
020A:BC30  8A 60 8D				mov	ah,[bx+si-73h]
020A:BC33  21 89 8A73				and	word ptr ds:[8A73h][bx+di],cx	; (0000:8A73=0EACBh)
020A:BC37  66					db	66h
020A:BC38  89 75 89				mov	[di-77h],si
020A:BC3B  AB					stosw				; Store ax to es:[di]
020A:BC3C  8D 0F				lea	cx,[bx]			; Load effective addr
020A:BC3E  8A 24				mov	ah,[si]
020A:BC40  A0 A2C4				mov	al,byte ptr ds:[0A2C4h]	; (0000:A2C4=26h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 387

020A:BC43  87 A1 9017				xchg	word ptr ds:[9017h][bx+di],sp	; (0000:9017=0E803h)
020A:BC47  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BC4C  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BC50  B1 03				mov	cl,3
020A:BC52  D2 CB				ror	bl,cl			; Rotate
020A:BC54  EB 09				jmp	short loc_1867		; (BC5F)
							                        ;* No entry point to code
020A:BC56  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BC5B  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BC5F			loc_1867:
020A:BC5F  80 E3 07				and	bl,7
020A:BC62  80 C3 88				add	bl,88h
020A:BC65  E9 009E				jmp	loc_1875		; (BD06)
020A:BC68			loc_1868:
020A:BC68  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BC6D  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BC71  B1 03				mov	cl,3
020A:BC73  D2 CB				ror	bl,cl			; Rotate
020A:BC75  EB 24				jmp	short loc_1870		; (BC9B)
							                        ;* No entry point to code
020A:BC77  F7 06 4E5E 0004			test	word ptr ds:[4E5Eh],4	; (0000:4E5E=4D44h)
020A:BC7D  74 13				jz	loc_1869		; Jump if zero
020A:BC7F  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BC83  80 E3 07				and	bl,7
020A:BC86  80 3E 2B36 06			cmp	byte ptr ds:[2B36h],6	; (0000:2B36=2Eh)
020A:BC8B  72 05				jb	loc_1869		; Jump if below
020A:BC8D  8A C3				mov	al,bl
020A:BC8F  E8 FC7E				call	sub_143			; (B910)
020A:BC92			loc_1869:
020A:BC92  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BC97  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BC9B			loc_1870:
020A:BC9B  80 E3 07				and	bl,7
020A:BC9E  80 C3 80				add	bl,80h
020A:BCA1  0C 01				or	al,1
020A:BCA3  3C 69				cmp	al,69h			; 'i'
020A:BCA5  74 1D				je	loc_1872		; Jump if equal
020A:BCA7  80 FA 82				cmp	dl,82h
020A:BCAA  75 0E				jne	loc_1871		; Jump if not equal
020A:BCAC  80 3E 309E 50			cmp	byte ptr ds:[309Eh],50h	; (0000:309E=0) 'P'
020A:BCB1  74 11				je	loc_1872		; Jump if equal
020A:BCB3  80 3E 309E 52			cmp	byte ptr ds:[309Eh],52h	; (0000:309E=0) 'R'
020A:BCB8  74 0A				je	loc_1872		; Jump if equal
020A:BCBA			loc_1871:
020A:BCBA  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:BCBF  74 03				jz	loc_1872		; Jump if zero
020A:BCC1  80 C3 20				add	bl,20h			; ' '
020A:BCC4			loc_1872:
020A:BCC4  EB 40				jmp	short loc_1875		; (BD06)
							                        ;* No entry point to code
020A:BCC6  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BCCB  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BCCF  B1 03				mov	cl,3
020A:BCD1  D2 CB				ror	bl,cl			; Rotate
020A:BCD3  EB 09				jmp	short loc_1873		; (BCDE)
							                        ;* No entry point to code
020A:BCD5  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 388

020A:BCDA  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BCDE			loc_1873:
020A:BCDE  80 E3 07				and	bl,7
020A:BCE1  80 C3 90				add	bl,90h
020A:BCE4  EB 20				jmp	short loc_1875		; (BD06)
							                        ;* No entry point to code
020A:BCE6  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BCEB  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BCEF  B1 03				mov	cl,3
020A:BCF1  D2 CB				ror	bl,cl			; Rotate
020A:BCF3  EB 09				jmp	short loc_1874		; (BCFE)
							                        ;* No entry point to code
020A:BCF5  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BCFA  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BCFE			loc_1874:
020A:BCFE  80 E3 07				and	bl,7
020A:BD01  80 C3 A0				add	bl,0A0h
020A:BD04  EB 00				jmp	short loc_1875		; (BD06)
020A:BD06			loc_1875:
020A:BD06  80 3E 362E 02			cmp	byte ptr ds:[362Eh],2	; (0000:362E=0)
020A:BD0B  75 07				jne	loc_1876		; Jump if not equal
020A:BD0D  80 FB 84				cmp	bl,84h
020A:BD10  75 2D				jne	loc_1880		; Jump if not equal
020A:BD12  EB 0C				jmp	short loc_1877		; (BD20)
020A:BD14			loc_1876:
020A:BD14  80 3E 362E 03			cmp	byte ptr ds:[362Eh],3	; (0000:362E=0)
020A:BD19  75 24				jne	loc_1880		; Jump if not equal
020A:BD1B  80 FB 92				cmp	bl,92h
020A:BD1E  75 0E				jne	loc_1878		; Jump if not equal
020A:BD20			loc_1877:
020A:BD20  80 3E 3630 01			cmp	byte ptr ds:[3630h],1	; (0000:3630=0)
020A:BD25  74 13				je	loc_1879		; Jump if equal
020A:BD27  C6 06 362E 04			mov	byte ptr ds:[362Eh],4	; (0000:362E=0)
020A:BD2C  EB 11				jmp	short loc_1880		; (BD3F)
020A:BD2E			loc_1878:
020A:BD2E  80 3E 362C 01			cmp	byte ptr ds:[362Ch],1	; (0000:362C=0)
020A:BD33  75 0A				jne	loc_1880		; Jump if not equal
020A:BD35  80 FB 91				cmp	bl,91h
020A:BD38  75 05				jne	loc_1880		; Jump if not equal
020A:BD3A			loc_1879:
020A:BD3A  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (0000:362E=0)
020A:BD3F			loc_1880:
020A:BD3F  32 FF				xor	bh,bh			; Zero register
020A:BD41  80 FB E0				cmp	bl,0E0h
020A:BD44  73 2D				jae	loc_1882		; Jump if above or =
020A:BD46  80 FB 97				cmp	bl,97h
020A:BD49  76 12				jbe	loc_1881		; Jump if below or =
020A:BD4B  57					push	di
020A:BD4C  BF 3B9B				mov	di,3B9Bh
020A:BD4F  83 C7 04				add	di,4
020A:BD52  8A 05				mov	al,[di]
020A:BD54  5F					pop	di
020A:BD55  3E: 88 46 00				mov	ds:[bp],al
020A:BD59  45					inc	bp
020A:BD5A  80 EB 20				sub	bl,20h			; ' '
020A:BD5D			loc_1881:
020A:BD5D  80 EB 80				sub	bl,80h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 389

020A:BD60  88 1E 4E5D				mov	byte ptr ds:[4E5Dh],bl	; (0000:4E5D=41h)
020A:BD64  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:BD66  81 C3 3634				add	bx,3634h
020A:BD6A  8B 07				mov	ax,[bx]
020A:BD6C  3E: 89 46 00				mov	ds:[bp],ax
020A:BD70  45					inc	bp
020A:BD71  EB 16				jmp	short loc_1883		; (BD89)
020A:BD73			loc_1882:
020A:BD73  81 C3 3609				add	bx,3609h
020A:BD77  8A 07				mov	al,[bx]
020A:BD79  3E: 88 46 00				mov	ds:[bp],al
020A:BD7D  80 3E 309E EF			cmp	byte ptr ds:[309Eh],0EFh	; (0000:309E=0)
020A:BD82  75 05				jne	loc_1883		; Jump if not equal
020A:BD84  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BD89			loc_1883:
020A:BD89  45					inc	bp
020A:BD8A  B6 00				mov	dh,0
020A:BD8C  E9 177E				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:BD8F  80 EB A8				sub	bl,0A8h
020A:BD92  80 C3 14				add	bl,14h
020A:BD95  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:BD97  81 C3 3634				add	bx,3634h
020A:BD9B  8B 07				mov	ax,[bx]
020A:BD9D  3E: 89 46 00				mov	ds:[bp],ax
020A:BDA1  C6 06 307A 00			mov	byte ptr ds:[307Ah],0	; (0000:307A=0)
020A:BDA6  45					inc	bp
020A:BDA7  45					inc	bp
020A:BDA8  B6 00				mov	dh,0
020A:BDAA  E9 1760				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:BDAD  8A C3				mov	al,bl
020A:BDAF  2C 96				sub	al,96h
020A:BDB1  3C 00				cmp	al,0
020A:BDB3  74 02				je	loc_1884		; Jump if equal
020A:BDB5  04 01				add	al,1
020A:BDB7			loc_1884:
020A:BDB7  BB 3664				mov	bx,3664h
020A:BDBA  EB 1A				jmp	short loc_1886		; (BDD6)
							                        ;* No entry point to code
020A:BDBC  8A C3				mov	al,bl
020A:BDBE  2C BA				sub	al,0BAh
020A:BDC0  04 03				add	al,3
020A:BDC2  BB 36B9				mov	bx,36B9h
020A:BDC5  EB 0F				jmp	short loc_1886		; (BDD6)
							                        ;* No entry point to code
020A:BDC7  8A C3				mov	al,bl
020A:BDC9  2C 9A				sub	al,9Ah
020A:BDCB  3C 03				cmp	al,3
020A:BDCD  76 02				jbe	loc_1885		; Jump if below or =
020A:BDCF  04 02				add	al,2
020A:BDD1			loc_1885:
020A:BDD1  BB 367C				mov	bx,367Ch
020A:BDD4  EB 00				jmp	short loc_1886		; (BDD6)
020A:BDD6			loc_1886:
020A:BDD6  32 E4				xor	ah,ah			; Zero register
020A:BDD8  24 07				and	al,7
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 390

020A:BDDA  03 D8				add	bx,ax
020A:BDDC  03 D8				add	bx,ax
020A:BDDE  03 D8				add	bx,ax
020A:BDE0  8B 07				mov	ax,[bx]
020A:BDE2  3E: 89 46 00				mov	ds:[bp],ax
020A:BDE6  45					inc	bp
020A:BDE7  45					inc	bp
020A:BDE8  8A 47 02				mov	al,[bx+2]
020A:BDEB  3E: 88 46 00				mov	ds:[bp],al
020A:BDEF  45					inc	bp
020A:BDF0  E9 171A				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:BDF3  8A C3				mov	al,bl
020A:BDF5  BB 3664				mov	bx,3664h
020A:BDF8  3C 23				cmp	al,23h			; '#'
020A:BDFA  74 0A				je	loc_1887		; Jump if equal
020A:BDFC  BB 367C				mov	bx,367Ch
020A:BDFF  3C 24				cmp	al,24h			; '$'
020A:BE01  74 03				je	loc_1887		; Jump if equal
020A:BE03  BB 36B9				mov	bx,36B9h
020A:BE06			loc_1887:
020A:BE06  26: 8A 44 01				mov	al,es:[si+1]
020A:BE0A  D0 C8				ror	al,1			; Rotate
020A:BE0C  D0 C8				ror	al,1			; Rotate
020A:BE0E  D0 C8				ror	al,1			; Rotate
020A:BE10  24 07				and	al,7
020A:BE12  EB C2				jmp	short loc_1886		; (BDD6)
							                        ;* No entry point to code
020A:BE14  26: 8A 44 01				mov	al,es:[si+1]
020A:BE18  24 07				and	al,7
020A:BE1A  04 B0				add	al,0B0h
020A:BE1C  56					push	si
020A:BE1D  BE 3694				mov	si,3694h
020A:BE20  B9 0002				mov	cx,2
020A:BE23  2C B0				sub	al,0B0h
020A:BE25  74 0C				jz	locloop_1888		; Jump if zero
020A:BE27  FE C8				dec	al
020A:BE29  B9 0005				mov	cx,5
020A:BE2C  F6 E1				mul	cl			; ax = reg * al
020A:BE2E  05 3696				add	ax,3696h
020A:BE31  8B F0				mov	si,ax

020A:BE33			locloop_1888:
020A:BE33  8A 04				mov	al,[si]
020A:BE35  3E: 88 46 00				mov	ds:[bp],al
020A:BE39  46					inc	si
020A:BE3A  45					inc	bp
020A:BE3B  E2 F6				loop	locloop_1888		; Loop if cx > 0

020A:BE3D  5E					pop	si
020A:BE3E  E9 16CC				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:BE41  9A 14FC:4630		;*		call	far ptr sub_215		;*(14FC:4630)
020A:BE41  9A					db	9Ah
020A:BE42  4630 14FC				dw	4630h, 14FCh
020A:BE46  26: 8A 5C 01				mov	bl,es:[si+1]
020A:BE4A  B2 36				mov	dl,36h			; '6'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 391

020A:BE4C  B6 02				mov	dh,2
020A:BE4E  3C 63				cmp	al,63h			; 'c'
020A:BE50  74 09				je	loc_1889		; Jump if equal
020A:BE52  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:BE57  74 0B				jz	loc_1890		; Jump if zero
020A:BE59  EB 35				jmp	short loc_1894		; (BE90)
020A:BE5B			loc_1889:
020A:BE5B  F6 06 35EE 03			test	byte ptr ds:[35EEh],3	; (0000:35EE=0)
020A:BE60  74 02				jz	loc_1890		; Jump if zero
020A:BE62  EB 2C				jmp	short loc_1894		; (BE90)
020A:BE64			loc_1890:
020A:BE64  8A E3				mov	ah,bl
020A:BE66  80 E4 C7				and	ah,0C7h
020A:BE69  80 FC 06				cmp	ah,6
020A:BE6C  74 17				je	loc_1892		; Jump if equal
020A:BE6E  80 E4 C0				and	ah,0C0h
020A:BE71  80 FC 40				cmp	ah,40h			; '@'
020A:BE74  75 06				jne	loc_1891		; Jump if not equal
020A:BE76  B2 32				mov	dl,32h			; '2'
020A:BE78  B6 01				mov	dh,1
020A:BE7A  EB 09				jmp	short loc_1892		; (BE85)
020A:BE7C			loc_1891:
020A:BE7C  80 FC 00				cmp	ah,0
020A:BE7F  75 04				jne	loc_1892		; Jump if not equal
020A:BE81  B2 3D				mov	dl,3Dh			; '='
020A:BE83  B6 00				mov	dh,0
020A:BE85			loc_1892:
020A:BE85  3C 61				cmp	al,61h			; 'a'
020A:BE87  74 02				je	loc_1893		; Jump if equal
020A:BE89  B6 00				mov	dh,0
020A:BE8B			loc_1893:
020A:BE8B  8A C2				mov	al,dl
020A:BE8D  E9 FC53				jmp	loc_1866		; (BAE3)
020A:BE90			loc_1894:
020A:BE90  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:BE95  88 1E 30B6				mov	byte ptr ds:[30B6h],bl	; (0000:30B6=1)
020A:BE99  C6 06 30B8 00			mov	byte ptr ds:[30B8h],0	; (0000:30B8=32h)
020A:BE9E  C6 06 35F3 00			mov	byte ptr ds:[35F3h],0	; (0000:35F3=0)
020A:BEA3  C6 06 35F8 00			mov	byte ptr ds:[35F8h],0	; (0000:35F8=0)
020A:BEA8  C6 06 30BA 00			mov	byte ptr ds:[30BAh],0	; (0000:30BA=0C3h)
020A:BEAD  C6 06 30B9 00			mov	byte ptr ds:[30B9h],0	; (0000:30B9=0DBh)
020A:BEB2  8A 26 30B6				mov	ah,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:BEB6  80 E4 07				and	ah,7
020A:BEB9  80 FC 04				cmp	ah,4
020A:BEBC  75 11				jne	loc_1895		; Jump if not equal
020A:BEBE  26: 8A 64 02				mov	ah,es:[si+2]
020A:BEC2  88 26 30B7				mov	byte ptr ds:[30B7h],ah	; (0000:30B7=0)
020A:BEC6  C6 06 30B8 01			mov	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:BECB  FE 06 3078				inc	byte ptr ds:[3078h]	; (0000:3078=0)
020A:BECF			loc_1895:
020A:BECF  8A 26 30B6				mov	ah,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:BED3  80 E4 C7				and	ah,0C7h
020A:BED6  80 FC 05				cmp	ah,5
020A:BED9  74 62				je	loc_1902		; Jump if equal
020A:BEDB  F6 C4 C0				test	ah,0C0h
020A:BEDE  75 5D				jnz	loc_1902		; Jump if not zero
020A:BEE0  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 392

020A:BEE5  75 11				jne	loc_1897		; Jump if not equal
020A:BEE7  8A 26 30B7				mov	ah,byte ptr ds:[30B7h]	; (0000:30B7=0)
020A:BEEB  80 E4 07				and	ah,7
020A:BEEE  80 FC 05				cmp	ah,5
020A:BEF1  74 4A				je	loc_1902		; Jump if equal
020A:BEF3  EB 03				jmp	short loc_1897		; (BEF8)
020A:BEF5			loc_1896:
020A:BEF5  E9 01C8				jmp	loc_1920		; (C0C0)
020A:BEF8			loc_1897:
020A:BEF8  80 26 30B9 FE			and	byte ptr ds:[30B9h],0FEh	; (0000:30B9=0DBh)
020A:BEFD  F6 06 3458 80			test	byte ptr ds:[3458h],80h	; (0000:3458=0)
020A:BF02  75 05				jnz	loc_1898		; Jump if not zero
020A:BF04  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:BF04  9A					db	9Ah
020A:BF05  0924 14FC				dw	924h, 14FCh
020A:BF09			loc_1898:
020A:BF09  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:BF0E  74 05				jz	loc_1899		; Jump if zero
020A:BF10  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:BF10  9A					db	9Ah
020A:BF11  4188 14FC				dw	4188h, 14FCh
020A:BF15			loc_1899:
020A:BF15  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:BF1A  74 D9				je	loc_1896		; Jump if equal
020A:BF1C  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:BF21  74 0C				jz	loc_1900		; Jump if zero
020A:BF23  9A 14FC:4250		;*		call	far ptr sub_205		;*(14FC:4250)
020A:BF23  9A					db	9Ah
020A:BF24  4250 14FC				dw	4250h, 14FCh
020A:BF28  9A 0542:8714		;*		call	far ptr sub_149		;*(0542:8714)
020A:BF28  9A					db	9Ah
020A:BF29  8714 0542				dw	8714h, 542h
020A:BF2D  EB 09				jmp	short loc_1901		; (BF38)
020A:BF2F			loc_1900:
020A:BF2F  8A 1E 30B6				mov	bl,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:BF33  33 D2				xor	dx,dx			; Zero register
020A:BF35  E9 0DDC				jmp	loc_2061		; (CD14)
020A:BF38			loc_1901:
020A:BF38  33 D2				xor	dx,dx			; Zero register
020A:BF3A  E9 15D0				jmp	loc_2165		; (D50D)
020A:BF3D			loc_1902:
020A:BF3D  80 0E 30B9 01			or	byte ptr ds:[30B9h],1	; (0000:30B9=0DBh)
020A:BF42  8A 3E 307E				mov	bh,byte ptr ds:[307Eh]	; (0000:307E=32h)
020A:BF46  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:BF46  9A					db	9Ah
020A:BF47  0924 14FC				dw	924h, 14FCh
020A:BF4B  C6 06 30BA 01			mov	byte ptr ds:[30BAh],1	; (0000:30BA=0C3h)
020A:BF50  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:BF55  74 05				jz	loc_1903		; Jump if zero
020A:BF57  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:BF57  9A					db	9Ah
020A:BF58  4188 14FC				dw	4188h, 14FCh
020A:BF5C			loc_1903:
020A:BF5C  A1 361A				mov	ax,word ptr ds:[361Ah]	; (0000:361A=0)
020A:BF5F  A3 40E9				mov	word ptr ds:[40E9h],ax	; (0000:40E9=101h)
020A:BF62  B6 04				mov	dh,4
020A:BF64  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 393

020A:BF69  75 02				jnz	loc_1904		; Jump if not zero
020A:BF6B  B6 02				mov	dh,2
020A:BF6D			loc_1904:
020A:BF6D  A0 30B6				mov	al,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:BF70  24 C0				and	al,0C0h
020A:BF72  3C 40				cmp	al,40h			; '@'
020A:BF74  75 02				jne	loc_1905		; Jump if not equal
020A:BF76  B6 01				mov	dh,1
020A:BF78			loc_1905:
020A:BF78  00 36 3078				add	byte ptr ds:[3078h],dh	; (0000:3078=0)
020A:BF7C  88 36 35F3				mov	byte ptr ds:[35F3h],dh	; (0000:35F3=0)
020A:BF80  46					inc	si
020A:BF81  9A 14FC:2C00		;*		call	far ptr sub_186		;*(14FC:2C00)
020A:BF81  9A					db	9Ah
020A:BF82  2C00 14FC				dw	2C00h, 14FCh
020A:BF86  4E					dec	si
020A:BF87  56					push	si
020A:BF88  46					inc	si
020A:BF89  46					inc	si
020A:BF8A  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:BF8F  75 01				jne	loc_1906		; Jump if not equal
020A:BF91  46					inc	si
020A:BF92			loc_1906:
020A:BF92  80 FE 01				cmp	dh,1
020A:BF95  75 03				jne	loc_1907		; Jump if not equal
020A:BF97  E9 00AF				jmp	loc_1916		; (C049)
020A:BF9A			loc_1907:
020A:BF9A  F6 06 56C2 01			test	byte ptr ds:[56C2h],1	; (0000:56C2=50h)
020A:BF9F  74 05				jz	loc_1908		; Jump if zero
020A:BFA1  9A 14FC:4D90		;*		call	far ptr sub_221		;*(14FC:4D90)
020A:BFA1  9A					db	9Ah
020A:BFA2  4D90 14FC				dw	4D90h, 14FCh
020A:BFA6			loc_1908:
020A:BFA6  26: 8B 04				mov	ax,es:[si]
020A:BFA9  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:BFAC  80 FE 02				cmp	dh,2
020A:BFAF  74 12				je	loc_1909		; Jump if equal
020A:BFB1  26: 8B 44 02				mov	ax,es:[si+2]
020A:BFB5  A3 35F6				mov	word ptr ds:[35F6h],ax	; (0000:35F6=0)
020A:BFB8  51					push	cx
020A:BFB9  B1 0C				mov	cl,0Ch
020A:BFBB  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:BFBD  59					pop	cx
020A:BFBE  A3 3450				mov	word ptr ds:[3450h],ax	; (0000:3450=0)
020A:BFC1  EB 00				jmp	short loc_1909		; (BFC3)
020A:BFC3			loc_1909:
020A:BFC3  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:BFC8  75 1A				jne	loc_1910		; Jump if not equal
020A:BFCA  80 FE 01				cmp	dh,1
020A:BFCD  75 15				jne	loc_1910		; Jump if not equal
020A:BFCF  26: 83 3C 00				cmp	word ptr es:[si],0
020A:BFD3  75 0F				jne	loc_1910		; Jump if not equal
020A:BFD5  8A 1E 30B7				mov	bl,byte ptr ds:[30B7h]	; (0000:30B7=0)
020A:BFD9  80 E3 07				and	bl,7
020A:BFDC  80 FB 05				cmp	bl,5
020A:BFDF  75 03				jne	loc_1910		; Jump if not equal
020A:BFE1  E9 00DB				jmp	loc_1919		; (C0BF)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 394

020A:BFE4			loc_1910:
020A:BFE4  A1 35F4				mov	ax,word ptr ds:[35F4h]	; (0000:35F4=0)
020A:BFE7  8A 1E 30B6				mov	bl,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:BFEB  8A 3E 307E				mov	bh,byte ptr ds:[307Eh]	; (0000:307E=32h)
020A:BFEF  C6 06 303E 01			mov	byte ptr ds:[303Eh],1	; (0000:303E=0C0h)
020A:BFF4  E8 C919				call	sub_117			; (8910)
020A:BFF7  C6 06 35F3 00			mov	byte ptr ds:[35F3h],0	; (0000:35F3=0)
020A:BFFC  C6 06 35F8 01			mov	byte ptr ds:[35F8h],1	; (0000:35F8=0)
020A:C001  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:C006  74 33				je	loc_1915		; Jump if equal
020A:C008  A0 30B6				mov	al,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:C00B  24 C7				and	al,0C7h
020A:C00D  3C 05				cmp	al,5
020A:C00F  75 0C				jne	loc_1911		; Jump if not equal
020A:C011  B6 04				mov	dh,4
020A:C013  2E: 80 3E 8740 60			cmp	cs:data_723,60h		; (020A:8740=0EBh) '`'
020A:C019  74 1A				je	loc_1913		; Jump if equal
020A:C01B  EB 1A				jmp	short loc_1914		; (C037)
020A:C01D			loc_1911:
020A:C01D  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:C022  74 07				jz	loc_1912		; Jump if zero
020A:C024  9A 14FC:4250		;*		call	far ptr sub_205		;*(14FC:4250)
020A:C024  9A					db	9Ah
020A:C025  4250 14FC				dw	4250h, 14FCh
020A:C029  EB 0C				jmp	short loc_1914		; (C037)
020A:C02B			loc_1912:
020A:C02B  5E					pop	si
020A:C02C  33 D2				xor	dx,dx			; Zero register
020A:C02E  8A 1E 30B6				mov	bl,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:C032  E9 0CDF				jmp	loc_2061		; (CD14)
020A:C035			loc_1913:
020A:C035  33 D2				xor	dx,dx			; Zero register
020A:C037			loc_1914:
020A:C037  5E					pop	si
020A:C038  E9 0E13				jmp	loc_2079		; (CE4E)
020A:C03B			loc_1915:
020A:C03B  80 3E 4E07 00			cmp	byte ptr ds:[4E07h],0	; (0000:4E07=54h)
020A:C040  74 7D				je	loc_1919		; Jump if equal
020A:C042  C6 06 35F3 04			mov	byte ptr ds:[35F3h],4	; (0000:35F3=0)
020A:C047  EB 76				jmp	short loc_1919		; (C0BF)
020A:C049			loc_1916:
020A:C049  33 C0				xor	ax,ax			; Zero register
020A:C04B  26: 8A 04				mov	al,es:[si]
020A:C04E  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:C051  33 C0				xor	ax,ax			; Zero register
020A:C053  A3 35F6				mov	word ptr ds:[35F6h],ax	; (0000:35F6=0)
020A:C056  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:C05B  75 02				jne	loc_1917		; Jump if not equal
020A:C05D  EB 60				jmp	short loc_1919		; (C0BF)
020A:C05F			loc_1917:
020A:C05F  9A 14FC:4250		;*		call	far ptr sub_205		;*(14FC:4250)
020A:C05F  9A					db	9Ah
020A:C060  4250 14FC				dw	4250h, 14FCh
020A:C064  4D					dec	bp
020A:C065  26: 8A 04				mov	al,es:[si]
020A:C068  A2 35F4				mov	byte ptr ds:[35F4h],al	; (0000:35F4=0)
020A:C06B  9A 14FC:596C		;*		call	far ptr sub_231		;*(14FC:596C)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 395

020A:C06B  9A					db	9Ah
020A:C06C  596C 14FC				dw	596Ch, 14FCh
020A:C070  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:C075  45					inc	bp
020A:C076  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (0000:4E07=54h)
020A:C07B  EB 42				jmp	short loc_1919		; (C0BF)
							                        ;* No entry point to code
020A:C07D  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:C082  74 3B				je	loc_1919		; Jump if equal
020A:C084  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:C089  75 05				jnz	loc_1918		; Jump if not zero
020A:C08B  9A 14FC:4838		;*		call	far ptr sub_219		;*(14FC:4838)
020A:C08B  9A					db	9Ah
020A:C08C  4838 14FC				dw	4838h, 14FCh
020A:C090			loc_1918:
020A:C090  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:C095  45					inc	bp
020A:C096  53					push	bx
020A:C097  26: 8B 44 02				mov	ax,es:[si+2]
020A:C09B  26: 8B 1C				mov	bx,es:[si]
020A:C09E  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:C09E  9A					db	9Ah
020A:C09F  039C 14FC				dw	39Ch, 14FCh
020A:C0A3  5B					pop	bx
020A:C0A4  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:C0A9  45					inc	bp
020A:C0AA  A0 30B6				mov	al,byte ptr ds:[30B6h]	; (0000:30B6=1)
020A:C0AD  24 C7				and	al,0C7h
020A:C0AF  3C 05				cmp	al,5
020A:C0B1  74 0C				je	loc_1919		; Jump if equal
020A:C0B3  80 3E 30B8 01			cmp	byte ptr ds:[30B8h],1	; (0000:30B8=32h)
020A:C0B8  74 05				je	loc_1919		; Jump if equal
020A:C0BA  9A 14FC:4250		;*		call	far ptr sub_205		;*(14FC:4250)
020A:C0BA  9A					db	9Ah
020A:C0BB  4250 14FC				dw	4250h, 14FCh
020A:C0BF			loc_1919:
020A:C0BF  5E					pop	si
020A:C0C0			loc_1920:
020A:C0C0  9A 14FC:5854		;*		call	far ptr sub_229		;*(14FC:5854)
020A:C0C0  9A					db	9Ah
020A:C0C1  5854 14FC				dw	5854h, 14FCh
020A:C0C5  02 36 30B8				add	dh,byte ptr ds:[30B8h]	; (0000:30B8=32h)
020A:C0C9  2E: 80 3E 8740 60			cmp	cs:data_723,60h		; (020A:8740=0EBh) '`'
020A:C0CF  74 0A				je	loc_1921		; Jump if equal
020A:C0D1  F6 06 30B9 01			test	byte ptr ds:[30B9h],1	; (0000:30B9=0DBh)
020A:C0D6  74 03				jz	loc_1921		; Jump if zero
020A:C0D8  E9 0D73				jmp	loc_2079		; (CE4E)
020A:C0DB			loc_1921:
020A:C0DB  33 D2				xor	dx,dx			; Zero register
020A:C0DD  E9 142D				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:C0E0  26: 8A 5C 01				mov	bl,es:[si+1]
020A:C0E4  C6 06 30B4 02			mov	byte ptr ds:[30B4h],2	; (0000:30B4=0)
020A:C0E9  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:C0EE  74 11				jz	loc_1922		; Jump if zero
020A:C0F0  C6 06 30B4 04			mov	byte ptr ds:[30B4h],4	; (0000:30B4=0)
020A:C0F5  88 1E 30B6				mov	byte ptr ds:[30B6h],bl	; (0000:30B6=1)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 396

020A:C0F9  26: 8A 64 02				mov	ah,es:[si+2]
020A:C0FD  88 26 30B7				mov	byte ptr ds:[30B7h],ah	; (0000:30B7=0)
020A:C101			loc_1922:
020A:C101  8A E3				mov	ah,bl
020A:C103  80 E4 C7				and	ah,0C7h
020A:C106  80 FC 06				cmp	ah,6
020A:C109  74 1B				je	loc_1924		; Jump if equal
020A:C10B  80 E4 C0				and	ah,0C0h
020A:C10E  80 FC 40				cmp	ah,40h			; '@'
020A:C111  75 09				jne	loc_1923		; Jump if not equal
020A:C113  B2 32				mov	dl,32h			; '2'
020A:C115  C6 06 30B4 01			mov	byte ptr ds:[30B4h],1	; (0000:30B4=0)
020A:C11A  EB 0A				jmp	short loc_1924		; (C126)
020A:C11C			loc_1923:
020A:C11C  80 FC 00				cmp	ah,0
020A:C11F  75 05				jne	loc_1924		; Jump if not equal
020A:C121  C6 06 30B4 00			mov	byte ptr ds:[30B4h],0	; (0000:30B4=0)
020A:C126			loc_1924:
020A:C126  B0 60				mov	al,60h			; '`'
020A:C128  E9 F9B8				jmp	loc_1866		; (BAE3)
							                        ;* No entry point to code
020A:C12B  56					push	si
020A:C12C  BE 377A				mov	si,377Ah
020A:C12F  F6 C2 01				test	dl,1
020A:C132  74 03				jz	loc_1925		; Jump if zero
020A:C134  BE 3770				mov	si,3770h
020A:C137			loc_1925:
020A:C137  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C137  9A					db	9Ah
020A:C138  4160 14FC				dw	4160h, 14FCh
020A:C13C  5E					pop	si
020A:C13D  B0 60				mov	al,60h			; '`'
020A:C13F  E9 F9A1				jmp	loc_1866		; (BAE3)
							                        ;* No entry point to code
020A:C142  83 3E 30BC 00			cmp	word ptr ds:[30BCh],0	; (0000:30BC=3382h)
020A:C147  77 0C				ja	loc_1926		; Jump if above
020A:C149  C7 06 30BC 0001			mov	word ptr ds:[30BCh],1	; (0000:30BC=3382h)
020A:C14F  C7 06 30BE 0001			mov	word ptr ds:[30BEh],1	; (0000:30BE=0C3C0h)
020A:C155			loc_1926:
020A:C155  C6 06 307A 00			mov	byte ptr ds:[307Ah],0	; (0000:307A=0)
020A:C15A  56					push	si
020A:C15B  8B 0E 30BC				mov	cx,word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C15F  3C 52				cmp	al,52h			; 'R'
020A:C161  75 02				jne	loc_1927		; Jump if not equal
020A:C163  EB 70				jmp	short loc_1936		; (C1D5)
020A:C165			loc_1927:
020A:C165  83 F9 06				cmp	cx,6
020A:C168  76 03				jbe	loc_1928		; Jump if below or =
020A:C16A  B9 0006				mov	cx,6
020A:C16D			loc_1928:
020A:C16D  3C 51				cmp	al,51h			; 'Q'
020A:C16F  74 39				je	loc_1933		; Jump if equal
020A:C171  3C 53				cmp	al,53h			; 'S'
020A:C173  75 03				jne	loc_1929		; Jump if not equal
020A:C175  E9 0096				jmp	loc_1939		; (C20E)
020A:C178			loc_1929:
020A:C178  3C 54				cmp	al,54h			; 'T'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 397

020A:C17A  75 03				jne	loc_1930		; Jump if not equal
020A:C17C  E9 01BE				jmp	loc_1955		; (C33D)
020A:C17F			loc_1930:
020A:C17F  3C 55				cmp	al,55h			; 'U'
020A:C181  75 03				jne	loc_1931		; Jump if not equal
020A:C183  E9 01E3				jmp	loc_1956		; (C369)
020A:C186			loc_1931:
020A:C186  3C 56				cmp	al,56h			; 'V'
020A:C188  72 18				jb	loc_1932		; Jump if below
020A:C18A  E9 0277				jmp	loc_1962		; (C404)
							                        ;* No entry point to code
020A:C18D  56					push	si
020A:C18E  45					inc	bp
020A:C18F  8B 0E 30BE				mov	cx,word ptr ds:[30BEh]	; (0000:30BE=0C3C0h)
020A:C193  03 F1				add	si,cx
020A:C195  46					inc	si
020A:C196  8B 0E 4E12				mov	cx,word ptr ds:[4E12h]	; (0000:4E12=5300h)
020A:C19A  89 0E 30BC				mov	word ptr ds:[30BCh],cx	; (0000:30BC=3382h)
020A:C19E  01 0E 30BE				add	word ptr ds:[30BEh],cx	; (0000:30BE=0C3C0h)
020A:C1A2			loc_1932:
020A:C1A2  9A 14FC:4768		;*		call	far ptr sub_218		;*(14FC:4768)
020A:C1A2  9A					db	9Ah
020A:C1A3  4768 14FC				dw	4768h, 14FCh
020A:C1A7  E9 03D1				jmp	loc_1979		; (C57B)
020A:C1AA			loc_1933:
020A:C1AA  33 D2				xor	dx,dx			; Zero register

020A:C1AC			locloop_1934:
020A:C1AC  26: 8B 04				mov	ax,es:[si]
020A:C1AF  46					inc	si
020A:C1B0  46					inc	si
020A:C1B1  9A 14FC:5D28		;*		call	far ptr sub_233		;*(14FC:5D28)
020A:C1B1  9A					db	9Ah
020A:C1B2  5D28 14FC				dw	5D28h, 14FCh
020A:C1B6  83 C2 02				add	dx,2
020A:C1B9  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C1BD  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C1C1  74 0F				jz	loc_1935		; Jump if zero
020A:C1C3  83 F9 02				cmp	cx,2
020A:C1C6  74 0A				je	loc_1935		; Jump if equal
020A:C1C8  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:C1CD  45					inc	bp
020A:C1CE  45					inc	bp
020A:C1CF  49					dec	cx
020A:C1D0  E2 DA				loop	locloop_1934		; Loop if cx > 0

020A:C1D2			loc_1935:
020A:C1D2  E9 03A6				jmp	loc_1979		; (C57B)
020A:C1D5			loc_1936:
020A:C1D5  26: 8B 44 02				mov	ax,es:[si+2]
020A:C1D9  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C1D9  9A					db	9Ah
020A:C1DA  023C 14FC				dw	23Ch, 14FCh
020A:C1DE  4D					dec	bp
020A:C1DF  3E: 80 7E 00 48			cmp	byte ptr ds:[bp],48h	; 'H'
020A:C1E4  73 01				jae	loc_1937		; Jump if above or =
020A:C1E6  45					inc	bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 398

020A:C1E7			loc_1937:
020A:C1E7  26: 8B 04				mov	ax,es:[si]
020A:C1EA  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:C1EA  9A					db	9Ah
020A:C1EB  021C 14FC				dw	21Ch, 14FCh
020A:C1EF  A0 376F				mov	al,byte ptr ds:[376Fh]	; (0000:376F=41h)
020A:C1F2  3E: 88 46 00				mov	ds:[bp],al
020A:C1F6  83 3E 30BC 04			cmp	word ptr ds:[30BCh],4	; (0000:30BC=3382h)
020A:C1FB  73 09				jae	loc_1938		; Jump if above or =
020A:C1FD  C7 06 30BC 0000			mov	word ptr ds:[30BCh],0	; (0000:30BC=3382h)
020A:C203  E9 0375				jmp	loc_1979		; (C57B)
020A:C206			loc_1938:
020A:C206  83 2E 30BC 04			sub	word ptr ds:[30BCh],4	; (0000:30BC=3382h)
020A:C20B  E9 036D				jmp	loc_1979		; (C57B)
020A:C20E			loc_1939:
020A:C20E  52					push	dx
020A:C20F  56					push	si
020A:C210  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:C215  06					push	es
020A:C216  8B 36 344C				mov	si,word ptr ds:[344Ch]	; (0000:344C=0)
020A:C21A  A1 344A				mov	ax,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C21D  8E C0				mov	es,ax
020A:C21F  8B 16 30BC				mov	dx,word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C223  8B CD				mov	cx,bp
020A:C225  C7 06 30C2 0000			mov	word ptr ds:[30C2h],0	; (0000:30C2=8000h)
020A:C22B  B4 00				mov	ah,0
020A:C22D			loc_1940:
020A:C22D  26: 8A 04				mov	al,es:[si]
020A:C230  80 3E 53D9 01			cmp	byte ptr ds:[53D9h],1	; (0000:53D9=69h)
020A:C235  75 21				jne	loc_1941		; Jump if not equal
020A:C237  80 E4 EF				and	ah,0EFh
020A:C23A  83 FA 01				cmp	dx,1
020A:C23D  74 19				je	loc_1941		; Jump if equal
020A:C23F  50					push	ax
020A:C240  8A E0				mov	ah,al
020A:C242  26: 8A 44 01				mov	al,es:[si+1]
020A:C246  9A 14FC:38EC		;*		call	far ptr sub_195		;*(14FC:38EC)
020A:C246  9A					db	9Ah
020A:C247  38EC 14FC				dw	38ECh, 14FCh
020A:C24B  3D 0001				cmp	ax,1
020A:C24E  58					pop	ax
020A:C24F  72 07				jc	loc_1941		; Jump if carry Set
020A:C251  74 1D				jz	loc_1942		; Jump if zero
020A:C253  80 CC 10				or	ah,10h
020A:C256  EB 45				jmp	short loc_1946		; (C29D)
020A:C258			loc_1941:
020A:C258  3C FF				cmp	al,0FFh
020A:C25A  74 18				je	loc_1943		; Jump if equal
020A:C25C  3C 27				cmp	al,27h			; '''
020A:C25E  74 14				je	loc_1943		; Jump if equal
020A:C260  3C 7F				cmp	al,7Fh
020A:C262  74 10				je	loc_1943		; Jump if equal
020A:C264  F7 06 4E24 0080			test	word ptr ds:[4E24h],80h	; (0000:4E24=4F44h)
020A:C26A  74 04				jz	loc_1942		; Jump if zero
020A:C26C  3C 80				cmp	al,80h
020A:C26E  73 04				jae	loc_1943		; Jump if above or =
020A:C270			loc_1942:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 399

020A:C270  3C 20				cmp	al,20h			; ' '
020A:C272  73 29				jae	loc_1946		; Jump if above or =
020A:C274			loc_1943:
020A:C274  3B CD				cmp	cx,bp
020A:C276  74 12				je	loc_1945		; Jump if equal
020A:C278  F6 C4 01				test	ah,1
020A:C27B  75 06				jnz	loc_1944		; Jump if not zero
020A:C27D  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:C282  45					inc	bp
020A:C283			loc_1944:
020A:C283  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:C288  45					inc	bp
020A:C289  45					inc	bp
020A:C28A			loc_1945:
020A:C28A  9A 14FC:00E4		;*		call	far ptr sub_152		;*(14FC:00E4)
020A:C28A  9A					db	9Ah
020A:C28B  00E4 14FC				dw	0E4h, 14FCh
020A:C28F  80 CC 01				or	ah,1
020A:C292  3C 00				cmp	al,0
020A:C294  75 51				jne	loc_1951		; Jump if not equal
020A:C296  8B CD				mov	cx,bp
020A:C298  83 E9 21				sub	cx,21h
020A:C29B  EB 4A				jmp	short loc_1951		; (C2E7)
020A:C29D			loc_1946:
020A:C29D  F6 C4 01				test	ah,1
020A:C2A0  74 0C				jz	loc_1947		; Jump if zero
020A:C2A2  80 E4 FE				and	ah,0FEh
020A:C2A5  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:C2AA  45					inc	bp
020A:C2AB  45					inc	bp
020A:C2AC  EB 04				jmp	short loc_1948		; (C2B2)
020A:C2AE			loc_1947:
020A:C2AE  3B CD				cmp	cx,bp
020A:C2B0  75 06				jne	loc_1949		; Jump if not equal
020A:C2B2			loc_1948:
020A:C2B2  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:C2B7  45					inc	bp
020A:C2B8			loc_1949:
020A:C2B8  3E: 88 46 00				mov	ds:[bp],al
020A:C2BC  45					inc	bp
020A:C2BD  F6 C4 10				test	ah,10h
020A:C2C0  74 10				jz	loc_1950		; Jump if zero
020A:C2C2  46					inc	si
020A:C2C3  FF 06 30C2				inc	word ptr ds:[30C2h]	; (0000:30C2=8000h)
020A:C2C7  4A					dec	dx
020A:C2C8  26: 8A 04				mov	al,es:[si]
020A:C2CB  3E: 88 46 00				mov	ds:[bp],al
020A:C2CF  45					inc	bp
020A:C2D0  EB 15				jmp	short loc_1951		; (C2E7)
020A:C2D2			loc_1950:
020A:C2D2  3C 24				cmp	al,24h			; '$'
020A:C2D4  75 11				jne	loc_1951		; Jump if not equal
020A:C2D6  83 FA 01				cmp	dx,1
020A:C2D9  76 0C				jbe	loc_1951		; Jump if below or =
020A:C2DB  26: 80 7C 01 24			cmp	byte ptr es:[si+1],24h	; '$'
020A:C2E0  74 05				je	loc_1951		; Jump if equal
020A:C2E2  8B CD				mov	cx,bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 400

020A:C2E4  83 E9 21				sub	cx,21h
020A:C2E7			loc_1951:
020A:C2E7  46					inc	si
020A:C2E8  FF 06 30C2				inc	word ptr ds:[30C2h]	; (0000:30C2=8000h)
020A:C2EC  4A					dec	dx
020A:C2ED  74 0C				jz	loc_1952		; Jump if zero
020A:C2EF  8B DD				mov	bx,bp
020A:C2F1  2B D9				sub	bx,cx
020A:C2F3  83 FB 20				cmp	bx,20h
020A:C2F6  77 03				ja	loc_1952		; Jump if above
020A:C2F8  E9 FF32				jmp	loc_1940		; (C22D)
020A:C2FB			loc_1952:
020A:C2FB  F6 C4 01				test	ah,1
020A:C2FE  75 06				jnz	loc_1953		; Jump if not zero
020A:C300  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:C305  45					inc	bp
020A:C306			loc_1953:
020A:C306  A1 30C2				mov	ax,word ptr ds:[30C2h]	; (0000:30C2=8000h)
020A:C309  0629			data_760	dw	629h			; Data table (indexed access)
020A:C30B  BC 2E30				mov	sp,2E30h
020A:C30E  89 16 0092				mov	word ptr ds:[92h],dx	; (0000:0092=40Dh)
020A:C312  9C					pushf				; Push flags
020A:C313  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C318  5A					pop	dx
020A:C319  8E C2				mov	es,dx
020A:C31B  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C320  5A					pop	dx
020A:C321  75 0A				jnz	loc_1954		; Jump if not zero
020A:C323  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C328  74 03				je	loc_1954		; Jump if equal
020A:C32A  E8 B08F				call	sub_103			; (73BC)
020A:C32D			loc_1954:
020A:C32D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C332  9D					popf				; Pop flags
020A:C333  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C338  5E					pop	si
020A:C339  5A					pop	dx
020A:C33A  E9 023E				jmp	loc_1979		; (C57B)
020A:C33D			loc_1955:
020A:C33D  C7 06 30BC 0000			mov	word ptr ds:[30BCh],0	; (0000:30BC=3382h)
020A:C343  A1 30BE				mov	ax,word ptr ds:[30BEh]	; (0000:30BE=0C3C0h)
020A:C346  B3 00				mov	bl,0
020A:C348  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:C348  9A					db	9Ah
020A:C349  0288 14FC				dw	288h, 14FCh
020A:C34D  45					inc	bp
020A:C34E  56					push	si
020A:C34F  BE 37C3				mov	si,37C3h
020A:C352  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C352  9A					db	9Ah
020A:C353  4160 14FC				dw	4160h, 14FCh
020A:C357  5E					pop	si
020A:C358  8A26 9A04		data_761	dw	8A26h, 9A04h
020A:C35C  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
020A:C35E  FC					cld				; Clear direction
020A:C35F  14 3E				adc	al,3Eh			; '>'
020A:C361  C6 46 00 29				mov	byte ptr [bp],29h	; ')'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 401

020A:C365  45					inc	bp
020A:C366  E9 0212				jmp	loc_1979		; (C57B)
020A:C369			loc_1956:
020A:C369  C7 06 30BC 0000			mov	word ptr ds:[30BCh],0	; (0000:30BC=3382h)
020A:C36F  A1 30BE				mov	ax,word ptr ds:[30BEh]	; (0000:30BE=0C3C0h)
020A:C372  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:C374  B3 00				mov	bl,0
020A:C376  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:C376  9A					db	9Ah
020A:C377  0288 14FC				dw	288h, 14FCh
020A:C37B  45					inc	bp
020A:C37C  56					push	si
020A:C37D  BE 37C3				mov	si,37C3h
020A:C380  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C380  9A					db	9Ah
020A:C381  4160 14FC				dw	4160h, 14FCh
020A:C385  5E					pop	si
020A:C386  26: 8B 04				mov	ax,es:[si]
020A:C389  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C389  9A					db	9Ah
020A:C38A  023C 14FC				dw	23Ch, 14FCh
020A:C38E  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:C393  45					inc	bp
020A:C394  E9 01E4				jmp	loc_1979		; (C57B)
							                        ;* No entry point to code
020A:C397  C6 06 307A 00			mov	byte ptr ds:[307Ah],0	; (0000:307A=0)
020A:C39C  56					push	si
020A:C39D  83 2E 30BC 04			sub	word ptr ds:[30BCh],4	; (0000:30BC=3382h)
020A:C3A2  26: 8B 44 02				mov	ax,es:[si+2]
020A:C3A6  A3 40FD				mov	word ptr ds:[40FDh],ax	; (0000:40FD=0FA04h)
020A:C3A9  A9 FFF0				test	ax,0FFF0h
020A:C3AC  74 0F				jz	loc_1958		; Jump if zero
020A:C3AE			loc_1957:
020A:C3AE  26: 8B 44 02				mov	ax,es:[si+2]
020A:C3B2  26: 8B 1C				mov	bx,es:[si]
020A:C3B5  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:C3B5  9A					db	9Ah
020A:C3B6  039C 14FC				dw	39Ch, 14FCh
020A:C3BA  E9 01BE				jmp	loc_1979		; (C57B)
020A:C3BD			loc_1958:
020A:C3BD  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C3C1  F6 06 345D 40			test	byte ptr ds:[345Dh],40h	; (0000:345D=0) '@'
020A:C3C6  74 04				jz	loc_1959		; Jump if zero
020A:C3C8  8B 1E 345E				mov	bx,word ptr ds:[345Eh]	; (0000:345E=0)
020A:C3CC			loc_1959:
020A:C3CC  B1 0C				mov	cl,0Ch
020A:C3CE  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:C3D0  03 D8				add	bx,ax
020A:C3D2  72 DA				jc	loc_1957		; Jump if carry Set
020A:C3D4  80 FA 5E				cmp	dl,5Eh			; '^'
020A:C3D7  74 24				je	loc_1961		; Jump if equal
020A:C3D9  56					push	si
020A:C3DA  BE 37E1				mov	si,37E1h
020A:C3DD  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C3DD  9A					db	9Ah
020A:C3DE  4160 14FC				dw	4160h, 14FCh
020A:C3E2  5E					pop	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 402

020A:C3E3  8A 0E 309E				mov	cl,byte ptr ds:[309Eh]	; (0000:309E=0)
020A:C3E7  88 0E 47C2				mov	byte ptr ds:[47C2h],cl	; (0000:47C2=50h)
020A:C3EB  32 C9				xor	cl,cl			; Zero register
020A:C3ED  80 FA 5D				cmp	dl,5Dh			; ']'
020A:C3F0  74 07				je	loc_1960		; Jump if equal
020A:C3F2  C6 06 309E 4F			mov	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:C3F7  B1 02				mov	cl,2
020A:C3F9			loc_1960:
020A:C3F9  32 C0				xor	al,al			; Zero register
020A:C3FB  EB 6D				jmp	short loc_1968		; (C46A)
020A:C3FD			loc_1961:
020A:C3FD  8B CB				mov	cx,bx
020A:C3FF  32 C0				xor	al,al			; Zero register
020A:C401  E9 00FA				jmp	loc_1976		; (C4FE)
020A:C404			loc_1962:
020A:C404  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C408  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C40C  A8 01				test	al,1
020A:C40E  75 10				jnz	loc_1963		; Jump if not zero
020A:C410  26: 83 3C 00				cmp	word ptr es:[si],0
020A:C414  75 0A				jne	loc_1963		; Jump if not equal
020A:C416  33 C0				xor	ax,ax			; Zero register
020A:C418  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C418  9A					db	9Ah
020A:C419  023C 14FC				dw	23Ch, 14FCh
020A:C41D  E9 015B				jmp	loc_1979		; (C57B)
020A:C420			loc_1963:
020A:C420  3C 5A				cmp	al,5Ah			; 'Z'
020A:C422  72 03				jb	loc_1964		; Jump if below
020A:C424  E9 00B6				jmp	loc_1973		; (C4DD)
020A:C427			loc_1964:
020A:C427  56					push	si
020A:C428  BE 37E1				mov	si,37E1h
020A:C42B  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C42B  9A					db	9Ah
020A:C42C  4160 14FC				dw	4160h, 14FCh
020A:C430  5E					pop	si
020A:C431  8A 1E 309E				mov	bl,byte ptr ds:[309Eh]	; (0000:309E=0)
020A:C435  88 1E 47C2				mov	byte ptr ds:[47C2h],bl	; (0000:47C2=50h)
020A:C439  32 C9				xor	cl,cl			; Zero register
020A:C43B  A8 02				test	al,2
020A:C43D  74 07				jz	loc_1965		; Jump if zero
020A:C43F  C6 06 309E 4F			mov	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:C444  B1 02				mov	cl,2
020A:C446			loc_1965:
020A:C446  F6 06 345D 40			test	byte ptr ds:[345Dh],40h	; (0000:345D=0) '@'
020A:C44B  74 06				jz	loc_1966		; Jump if zero
020A:C44D  8B 1E 345E				mov	bx,word ptr ds:[345Eh]	; (0000:345E=0)
020A:C451  EB 04				jmp	short loc_1967		; (C457)
020A:C453			loc_1966:
020A:C453  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C457			loc_1967:
020A:C457  A8 01				test	al,1
020A:C459  74 0F				jz	loc_1968		; Jump if zero
020A:C45B  26: 8B 5C 02				mov	bx,es:[si+2]
020A:C45F  80 C9 01				or	cl,1
020A:C462  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 403

020A:C466  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C46A			loc_1968:
020A:C46A  50					push	ax
020A:C46B  26: 8B 04				mov	ax,es:[si]
020A:C46E  53					push	bx
020A:C46F  51					push	cx
020A:C470  C6 06 35F3 02			mov	byte ptr ds:[35F3h],2	; (0000:35F3=0)
020A:C475  E8 CB48				call	sub_118			; (8FC0)
020A:C478  80 3E 4E08 01			cmp	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:C47D  75 0F				jne	loc_1969		; Jump if not equal
020A:C47F  C6 06 4E08 00			mov	byte ptr ds:[4E08h],0	; (0000:4E08=45h)
020A:C484  C6 06 35DE 00			mov	byte ptr ds:[35DEh],0	; (0000:35DE=0)
020A:C489  C6 06 4E0A 01			mov	byte ptr ds:[4E0Ah],1	; (0000:4E0A=44h)
020A:C48E			loc_1969:
020A:C48E  80 3E 4E0A 01			cmp	byte ptr ds:[4E0Ah],1	; (0000:4E0A=44h)
020A:C493  75 0F				jne	loc_1970		; Jump if not equal
020A:C495  9A 14FC:45D4		;*		call	far ptr sub_213		;*(14FC:45D4)
020A:C495  9A					db	9Ah
020A:C496  45D4 14FC				dw	45D4h, 14FCh
020A:C49A  8B D8				mov	bx,ax
020A:C49C  A1 40FD				mov	ax,word ptr ds:[40FDh]	; (0000:40FD=0FA04h)
020A:C49F  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:C49F  9A					db	9Ah
020A:C4A0  039C 14FC				dw	39Ch, 14FCh
020A:C4A4			loc_1970:
020A:C4A4  59					pop	cx
020A:C4A5  5B					pop	bx
020A:C4A6  58					pop	ax
020A:C4A7  A8 01				test	al,1
020A:C4A9  74 29				jz	loc_1972		; Jump if zero
020A:C4AB  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:C4B0  45					inc	bp
020A:C4B1  45					inc	bp
020A:C4B2  80 3E 4E0A 01			cmp	byte ptr ds:[4E0Ah],1	; (0000:4E0A=44h)
020A:C4B7  75 0B				jne	loc_1971		; Jump if not equal
020A:C4B9  26: 8B 44 02				mov	ax,es:[si+2]
020A:C4BD  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C4BD  9A					db	9Ah
020A:C4BE  023C 14FC				dw	23Ch, 14FCh
020A:C4C2  EB 10				jmp	short loc_1972		; (C4D4)
020A:C4C4			loc_1971:
020A:C4C4  56					push	si
020A:C4C5  BE 37E9				mov	si,37E9h
020A:C4C8  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C4C8  9A					db	9Ah
020A:C4C9  4160 14FC				dw	4160h, 14FCh
020A:C4CD  5E					pop	si
020A:C4CE  26: 8B 04				mov	ax,es:[si]
020A:C4D1  E8 CAEC				call	sub_118			; (8FC0)
020A:C4D4			loc_1972:
020A:C4D4  A0 47C2				mov	al,byte ptr ds:[47C2h]	; (0000:47C2=50h)
020A:C4D7  A2 309E				mov	byte ptr ds:[309Eh],al	; (0000:309E=0)
020A:C4DA  E9 009E				jmp	loc_1979		; (C57B)
020A:C4DD			loc_1973:
020A:C4DD  F6 06 345D 40			test	byte ptr ds:[345Dh],40h	; (0000:345D=0) '@'
020A:C4E2  74 06				jz	loc_1974		; Jump if zero
020A:C4E4  8B 0E 345E				mov	cx,word ptr ds:[345Eh]	; (0000:345E=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 404

020A:C4E8  EB 04				jmp	short loc_1975		; (C4EE)
020A:C4EA			loc_1974:
020A:C4EA  8B 0E 344A				mov	cx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C4EE			loc_1975:
020A:C4EE  A8 01				test	al,1
020A:C4F0  74 0C				jz	loc_1976		; Jump if zero
020A:C4F2  26: 8B 4C 02				mov	cx,es:[si+2]
020A:C4F6  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C4FA  FF 0E 30BC				dec	word ptr ds:[30BCh]	; (0000:30BC=3382h)
020A:C4FE			loc_1976:
020A:C4FE  FF 36 40E9				push	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:C502  FF 36 361A				push	word ptr ds:[361Ah]	; (0000:361A=0)
020A:C506  8A 26 16AB				mov	ah,byte ptr ds:[16ABh]	; (0000:16AB=56h)
020A:C50A  50					push	ax
020A:C50B  C6 06 16AB 00			mov	byte ptr ds:[16ABh],0	; (0000:16AB=56h)
020A:C510  C6 06 3465 02			mov	byte ptr ds:[3465h],2	; (0000:3465=0)
020A:C515  8A 1E 362B				mov	bl,byte ptr ds:[362Bh]	; (0000:362B=0)
020A:C519  88 1E 47BA				mov	byte ptr ds:[47BAh],bl	; (0000:47BA=76h)
020A:C51D  C6 06 362B 90			mov	byte ptr ds:[362Bh],90h	; (0000:362B=0)
020A:C522  33 DB				xor	bx,bx			; Zero register
020A:C524  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:C528  89 0E 361A				mov	word ptr ds:[361Ah],cx	; (0000:361A=0)
020A:C52C  26: 8B 04				mov	ax,es:[si]
020A:C52F  E8 C3DE				call	sub_117			; (8910)
020A:C532  58					pop	ax
020A:C533  50					push	ax
020A:C534  A8 01				test	al,1
020A:C536  74 2B				jz	loc_1978		; Jump if zero
020A:C538  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:C53D  45					inc	bp
020A:C53E  45					inc	bp
020A:C53F  80 3E 4E0A 01			cmp	byte ptr ds:[4E0Ah],1	; (0000:4E0A=44h)
020A:C544  74 0F				je	loc_1977		; Jump if equal
020A:C546  26: 8B 04				mov	ax,es:[si]
020A:C549  33 DB				xor	bx,bx			; Zero register
020A:C54B  C6 06 3465 04			mov	byte ptr ds:[3465h],4	; (0000:3465=0)
020A:C550  E8 C3BD				call	sub_117			; (8910)
020A:C553  EB 0E				jmp	short loc_1978		; (C563)
020A:C555			loc_1977:
020A:C555  26: 8B 44 02				mov	ax,es:[si+2]
020A:C559  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C559  9A					db	9Ah
020A:C55A  023C 14FC				dw	23Ch, 14FCh
020A:C55E  C6 06 4E0A 00			mov	byte ptr ds:[4E0Ah],0	; (0000:4E0A=44h)
020A:C563			loc_1978:
020A:C563  58					pop	ax
020A:C564  88 26 16AB				mov	byte ptr ds:[16ABh],ah	; (0000:16AB=56h)
020A:C568  C6 06 3465 00			mov	byte ptr ds:[3465h],0	; (0000:3465=0)
020A:C56D  A0 47BA				mov	al,byte ptr ds:[47BAh]	; (0000:47BA=76h)
020A:C570  A2 362B				mov	byte ptr ds:[362Bh],al	; (0000:362B=0)
020A:C573  8F 06 361A				pop	word ptr ds:[361Ah]	; (0000:361A=0)
020A:C577  8F 06 40E9				pop	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:C57B			loc_1979:
020A:C57B  5E					pop	si
020A:C57C  E9 0F8E				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:C57F  9A 14FC:4664		;*		call	far ptr sub_216		;*(14FC:4664)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 405

020A:C57F  9A					db	9Ah
020A:C580  4664 14FC				dw	4664h, 14FCh
020A:C584  C6 06 3078 01			mov	byte ptr ds:[3078h],1	; (0000:3078=0)
020A:C589  56					push	si
020A:C58A  2C 02				sub	al,2
020A:C58C  32 E4				xor	ah,ah			; Zero register
020A:C58E  80 3E 30B9 01			cmp	byte ptr ds:[30B9h],1	; (0000:30B9=0DBh)
020A:C593  74 04				je	loc_1980		; Jump if equal
020A:C595  02 06 30B8				add	al,byte ptr ds:[30B8h]	; (0000:30B8=32h)
020A:C599			loc_1980:
020A:C599  03 F0				add	si,ax
020A:C59B  26: 8A 04				mov	al,es:[si]
020A:C59E  5E					pop	si
020A:C59F  A2 40FF				mov	byte ptr ds:[40FFh],al	; (0000:40FF=5)
020A:C5A2  C6 06 4100 00			mov	byte ptr ds:[4100h],0	; (0000:4100=0Dh)
020A:C5A7  C7 06 4101 0000			mov	word ptr ds:[4101h],0	; (0000:4101=1404h)
020A:C5AD  9A 14FC:00E4		;*		call	far ptr sub_152		;*(14FC:00E4)
020A:C5AD  9A					db	9Ah
020A:C5AE  00E4 14FC				dw	0E4h, 14FCh
020A:C5B2  80 3E 309E 56			cmp	byte ptr ds:[309Eh],56h	; (0000:309E=0) 'V'
020A:C5B7  74 2A				je	loc_1982		; Jump if equal
020A:C5B9  26: 80 3C B4				cmp	byte ptr es:[si],0B4h
020A:C5BD  75 07				jne	loc_1981		; Jump if not equal
020A:C5BF  26: 80 7C 02 CD			cmp	byte ptr es:[si+2],0CDh
020A:C5C4  74 1D				je	loc_1982		; Jump if equal
020A:C5C6			loc_1981:
020A:C5C6  3C 20				cmp	al,20h			; ' '
020A:C5C8  72 19				jb	loc_1982		; Jump if below
020A:C5CA  3C 7F				cmp	al,7Fh
020A:C5CC  73 15				jae	loc_1982		; Jump if above or =
020A:C5CE  55					push	bp
020A:C5CF  E8 A046				call	sub_79			; (6618)
020A:C5D2  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:C5D7  45					inc	bp
020A:C5D8  3E: 88 46 00				mov	ds:[bp],al
020A:C5DC  45					inc	bp
020A:C5DD  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:C5E2  5D					pop	bp
020A:C5E3			loc_1982:
020A:C5E3  E9 0F27				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:C5E6  C6 06 3078 01			mov	byte ptr ds:[3078h],1	; (0000:3078=0)
020A:C5EB  56					push	si
020A:C5EC  2C 0A				sub	al,0Ah
020A:C5EE  32 E4				xor	ah,ah			; Zero register
020A:C5F0  80 3E 30B9 01			cmp	byte ptr ds:[30B9h],1	; (0000:30B9=0DBh)
020A:C5F5  74 04				je	loc_1983		; Jump if equal
020A:C5F7  02 06 30B8				add	al,byte ptr ds:[30B8h]	; (0000:30B8=32h)
020A:C5FB			loc_1983:
020A:C5FB  03 F0				add	si,ax
020A:C5FD  26: 8A 04				mov	al,es:[si]
020A:C600  98					cbw				; Convrt byte to word
020A:C601  5E					pop	si
020A:C602  33 DB				xor	bx,bx			; Zero register
020A:C604  A9 8000				test	ax,8000h
020A:C607  74 03				jz	loc_1984		; Jump if zero
020A:C609  BB FFFF				mov	bx,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 406

020A:C60C			loc_1984:
020A:C60C  A3 40FF				mov	word ptr ds:[40FFh],ax	; (0000:40FF=0D05h)
020A:C60F  89 1E 4101				mov	word ptr ds:[4101h],bx	; (0000:4101=1404h)
020A:C613  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:C618  74 09				jz	loc_1985		; Jump if zero
020A:C61A  93					xchg	bx,ax
020A:C61B  9A 14FC:039C		;*		call	far ptr sub_160		;*(14FC:039C)
020A:C61B  9A					db	9Ah
020A:C61C  039C 14FC				dw	39Ch, 14FCh
020A:C620  E9 0EEA				jmp	loc_2165		; (D50D)
020A:C623			loc_1985:
020A:C623  E9 0280				jmp	loc_2013		; (C8A6)
							                        ;* No entry point to code
020A:C626  C6 06 3078 02			mov	byte ptr ds:[3078h],2	; (0000:3078=0)
020A:C62B  80 3E 309E 0B			cmp	byte ptr ds:[309Eh],0Bh	; (0000:309E=0)
020A:C630  74 1A				je	loc_1986		; Jump if equal
020A:C632  80 3E 309E C2			cmp	byte ptr ds:[309Eh],0C2h	; (0000:309E=0)
020A:C637  74 13				je	loc_1986		; Jump if equal
020A:C639  80 3E 309E 77			cmp	byte ptr ds:[309Eh],77h	; (0000:309E=0) 'w'
020A:C63E  74 0C				je	loc_1986		; Jump if equal
020A:C640  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:C645  74 05				jz	loc_1986		; Jump if zero
020A:C647  04 08				add	al,8
020A:C649  E9 F497				jmp	loc_1866		; (BAE3)
020A:C64C			loc_1986:
020A:C64C  9A 14FC:4664		;*		call	far ptr sub_216		;*(14FC:4664)
020A:C64C  9A					db	9Ah
020A:C64D  4664 14FC				dw	4664h, 14FCh
020A:C651  56					push	si
020A:C652  26: 8A 0C				mov	cl,es:[si]
020A:C655  2C 12				sub	al,12h
020A:C657  32 E4				xor	ah,ah			; Zero register
020A:C659  80 3E 30B9 01			cmp	byte ptr ds:[30B9h],1	; (0000:30B9=0DBh)
020A:C65E  74 04				je	loc_1987		; Jump if equal
020A:C660  02 06 30B8				add	al,byte ptr ds:[30B8h]	; (0000:30B8=32h)
020A:C664			loc_1987:
020A:C664  03 F0				add	si,ax
020A:C666  F6 06 4E10 01			test	byte ptr ds:[4E10h],1	; (0000:4E10=43h)
020A:C66B  74 25				jz	loc_1990		; Jump if zero
020A:C66D  26: 83 3C 7F				cmp	word ptr es:[si],7Fh
020A:C671  72 06				jb	loc_1988		; Jump if below
020A:C673  26: 83 3C 80				cmp	word ptr es:[si],0FF80h
020A:C677  72 19				jb	loc_1990		; Jump if below
020A:C679			loc_1988:
020A:C679  80 3E 14FA 02			cmp	byte ptr ds:[14FAh],2	; (0000:14FA=0E9h)
020A:C67E  75 07				jne	loc_1989		; Jump if not equal
020A:C680  C6 06 4E08 01			mov	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:C685  EB 0B				jmp	short loc_1990		; (C692)
020A:C687			loc_1989:
020A:C687  F6 06 4E0F 01			test	byte ptr ds:[4E0Fh],1	; (0000:4E0F=3Dh)
020A:C68C  75 04				jnz	loc_1990		; Jump if not zero
020A:C68E  FE 06 4E11				inc	byte ptr ds:[4E11h]	; (0000:4E11=3Ah)
020A:C692			loc_1990:
020A:C692  26: 8B 04				mov	ax,es:[si]
020A:C695  A3 40FF				mov	word ptr ds:[40FFh],ax	; (0000:40FF=0D05h)
020A:C698  C7 06 4101 0000			mov	word ptr ds:[4101h],0	; (0000:4101=1404h)
020A:C69E  F6 06 56C2 10			test	byte ptr ds:[56C2h],10h	; (0000:56C2=50h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 407

020A:C6A3  74 15				jz	loc_1991		; Jump if zero
020A:C6A5  9A 14FC:4E38		;*		call	far ptr sub_222		;*(14FC:4E38)
020A:C6A5  9A					db	9Ah
020A:C6A6  4E38 14FC				dw	4E38h, 14FCh
020A:C6AA  F6 06 56C2 20			test	byte ptr ds:[56C2h],20h	; (0000:56C2=50h) ' '
020A:C6AF  74 09				jz	loc_1991		; Jump if zero
020A:C6B1  80 26 56C2 DF			and	byte ptr ds:[56C2h],0DFh	; (0000:56C2=50h)
020A:C6B6  5E					pop	si
020A:C6B7  E9 0E53				jmp	loc_2165		; (D50D)
020A:C6BA			loc_1991:
020A:C6BA  9A 14FC:61FC		;*		call	far ptr sub_237		;*(14FC:61FC)
020A:C6BA  9A					db	9Ah
020A:C6BB  61FC 14FC				dw	61FCh, 14FCh
020A:C6BF  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:C6C4  75 77				jne	loc_1997		; Jump if not equal
020A:C6C6  80 3E 1504 00			cmp	byte ptr ds:[1504h],0	; (0000:1504=2Ah)
020A:C6CB  74 07				je	loc_1992		; Jump if equal
020A:C6CD  80 3E 327F 03			cmp	byte ptr ds:[327Fh],3	; (0000:327F=35h)
020A:C6D2  75 69				jne	loc_1997		; Jump if not equal
020A:C6D4			loc_1992:
020A:C6D4  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (0000:327E=0FDh)
020A:C6D9  75 03				jne	loc_1993		; Jump if not equal
020A:C6DB  E9 011E				jmp	loc_2004		; (C7FC)
020A:C6DE			loc_1993:
020A:C6DE  3D 0000				cmp	ax,0
020A:C6E1  74 5A				je	loc_1997		; Jump if equal
020A:C6E3  3D FFFF				cmp	ax,0FFFFh
020A:C6E6  74 55				je	loc_1997		; Jump if equal
020A:C6E8  80 E1 B8				and	cl,0B8h
020A:C6EB  80 F9 B8				cmp	cl,0B8h
020A:C6EE  75 4D				jne	loc_1997		; Jump if not equal
020A:C6F0			loc_1994:
020A:C6F0  5E					pop	si
020A:C6F1  56					push	si
020A:C6F2  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:C6F7  06					push	es
020A:C6F8  53					push	bx
020A:C6F9  8B DE				mov	bx,si
020A:C6FB  E8 A956				call	sub_93			; (7054)
020A:C6FE  BE 0000				mov	si,0
020A:C701  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (0000:3040=93h)
020A:C705  32 ED				xor	ch,ch			; Zero register

020A:C707			locloop_1995:
020A:C707  26: 39 04				cmp	es:[si],ax
020A:C70A  74 34				je	loc_1998		; Jump if equal
020A:C70C  83 C6 15				add	si,15h
020A:C70F  E2 F6				loop	locloop_1995		; Loop if cx > 0

020A:C711  5B					pop	bx
020A:C712  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C717  9C					pushf				; Push flags
020A:C718  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C71D  5A					pop	dx
020A:C71E  8E C2				mov	es,dx
020A:C720  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C725  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 408

020A:C726  75 0A				jnz	loc_1996		; Jump if not zero
020A:C728  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C72D  74 03				je	loc_1996		; Jump if equal
020A:C72F  E8 AC8A				call	sub_103			; (73BC)
020A:C732			loc_1996:
020A:C732  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C737  9D					popf				; Pop flags
020A:C738  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C73D			loc_1997:
020A:C73D  E9 0165				jmp	loc_2012		; (C8A5)
020A:C740			loc_1998:
020A:C740  80 3F B9				cmp	byte ptr [bx],0B9h
020A:C743  72 26				jb	loc_1999		; Jump if below
020A:C745  80 3F BF				cmp	byte ptr [bx],0BFh
020A:C748  77 21				ja	loc_1999		; Jump if above
020A:C74A  56					push	si
020A:C74B  BE 37E9				mov	si,37E9h
020A:C74E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C74E  9A					db	9Ah
020A:C74F  4160 14FC				dw	4160h, 14FCh
020A:C753  5E					pop	si
020A:C754  F7 06 13E6 0002			test	word ptr ds:[13E6h],2	; (0000:13E6=0)
020A:C75A  74 0F				jz	loc_1999		; Jump if zero
020A:C75C  56					push	si
020A:C75D  55					push	bp
020A:C75E  BE 37E9				mov	si,37E9h
020A:C761  BD 2D5E				mov	bp,2D5Eh
020A:C764  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C764  9A					db	9Ah
020A:C765  4160 14FC				dw	4160h, 14FCh
020A:C769  5D					pop	bp
020A:C76A  5E					pop	si
020A:C76B			loc_1999:
020A:C76B  26: 8A 4C 0A				mov	cl,es:[si+0Ah]
020A:C76F  26: 8B 5C 0C				mov	bx,es:[si+0Ch]
020A:C773  BE 37C9				mov	si,37C9h
020A:C776  80 E1 03				and	cl,3
020A:C779  80 F9 03				cmp	cl,3
020A:C77C  75 05				jne	loc_2000		; Jump if not equal
020A:C77E  BE 37D6				mov	si,37D6h
020A:C781  EB 3D				jmp	short loc_2002		; (C7C0)
020A:C783			loc_2000:
020A:C783  80 3E 327F 03			cmp	byte ptr ds:[327Fh],3	; (0000:327F=35h)
020A:C788  74 36				je	loc_2002		; Jump if equal
020A:C78A  80 3E 1504 00			cmp	byte ptr ds:[1504h],0	; (0000:1504=2Ah)
020A:C78F  75 2F				jne	loc_2002		; Jump if not equal
020A:C791  5B					pop	bx
020A:C792  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C797  9C					pushf				; Push flags
020A:C798  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C79D  5A					pop	dx
020A:C79E  8E C2				mov	es,dx
020A:C7A0  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C7A5  5A					pop	dx
020A:C7A6  75 0A				jnz	loc_2001		; Jump if not zero
020A:C7A8  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C7AD  74 03				je	loc_2001		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 409

020A:C7AF  E8 AC0A				call	sub_103			; (73BC)
020A:C7B2			loc_2001:
020A:C7B2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C7B7  9D					popf				; Pop flags
020A:C7B8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C7BD  E9 00E5				jmp	loc_2012		; (C8A5)
020A:C7C0			loc_2002:
020A:C7C0  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C7C0  9A					db	9Ah
020A:C7C1  4160 14FC				dw	4160h, 14FCh
020A:C7C5  8B C3				mov	ax,bx
020A:C7C7  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:C7C7  9A					db	9Ah
020A:C7C8  5778 14FC				dw	5778h, 14FCh
020A:C7CC  5B					pop	bx
020A:C7CD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C7D2  9C					pushf				; Push flags
020A:C7D3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C7D8  5A					pop	dx
020A:C7D9  8E C2				mov	es,dx
020A:C7DB  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C7E0  5A					pop	dx
020A:C7E1  75 0A				jnz	loc_2003		; Jump if not zero
020A:C7E3  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C7E8  74 03				je	loc_2003		; Jump if equal
020A:C7EA  E8 ABCF				call	sub_103			; (73BC)
020A:C7ED			loc_2003:
020A:C7ED  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C7F2  9D					popf				; Pop flags
020A:C7F3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C7F8  5E					pop	si
020A:C7F9  E9 0D11				jmp	loc_2165		; (D50D)
020A:C7FC			loc_2004:
020A:C7FC  80 FA 51				cmp	dl,51h			; 'Q'
020A:C7FF  75 04				jne	loc_2005		; Jump if not equal
020A:C801  33 D2				xor	dx,dx			; Zero register
020A:C803  EB 05				jmp	short loc_2006		; (C80A)
020A:C805			loc_2005:
020A:C805  80 EA 12				sub	dl,12h
020A:C808  32 F6				xor	dh,dh			; Zero register
020A:C80A			loc_2006:
020A:C80A  50					push	ax
020A:C80B  57					push	di
020A:C80C  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:C811  06					push	es
020A:C812  E8 A851				call	sub_97			; (7066)
020A:C815  A1 344C				mov	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:C818  03 C2				add	ax,dx
020A:C81A  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C81E  8A 16 4D4B				mov	dl,byte ptr ds:[4D4Bh]	; (0000:4D4B=41h)
020A:C822  52					push	dx
020A:C823  C6 06 4D4B 01			mov	byte ptr ds:[4D4Bh],1	; (0000:4D4B=41h)
020A:C828  BA 0040				mov	dx,40h
020A:C82B  E8 965E				call	sub_76			; (5E8C)
020A:C82E  5A					pop	dx
020A:C82F  88 16 4D4B				mov	byte ptr ds:[4D4Bh],dl	; (0000:4D4B=41h)
020A:C833  73 0A				jnc	loc_2007		; Jump if carry=0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 410

020A:C835  26: 8A 45 04				mov	al,es:[di+4]
020A:C839  24 5F				and	al,5Fh			; '_'
020A:C83B  3C 5F				cmp	al,5Fh			; '_'
020A:C83D  74 02				je	loc_2008		; Jump if equal
020A:C83F			loc_2007:
020A:C83F  EB 37				jmp	short loc_2010		; (C878)
020A:C841			loc_2008:
020A:C841  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020A:C846  75 30				jnz	loc_2010		; Jump if not zero
020A:C848  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C84D  9C					pushf				; Push flags
020A:C84E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C853  5A					pop	dx
020A:C854  8E C2				mov	es,dx
020A:C856  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C85B  5A					pop	dx
020A:C85C  75 0A				jnz	loc_2009		; Jump if not zero
020A:C85E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C863  74 03				je	loc_2009		; Jump if equal
020A:C865  E8 AB54				call	sub_103			; (73BC)
020A:C868			loc_2009:
020A:C868  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C86D  9D					popf				; Pop flags
020A:C86E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C873  5F					pop	di
020A:C874  58					pop	ax
020A:C875  E9 FE78				jmp	loc_1994		; (C6F0)
020A:C878			loc_2010:
020A:C878  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C87D  9C					pushf				; Push flags
020A:C87E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C883  5A					pop	dx
020A:C884  8E C2				mov	es,dx
020A:C886  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C88B  5A					pop	dx
020A:C88C  75 0A				jnz	loc_2011		; Jump if not zero
020A:C88E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C893  74 03				je	loc_2011		; Jump if equal
020A:C895  E8 AB24				call	sub_103			; (73BC)
020A:C898			loc_2011:
020A:C898  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C89D  9D					popf				; Pop flags
020A:C89E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C8A3  5F					pop	di
020A:C8A4  58					pop	ax
020A:C8A5			loc_2012:
020A:C8A5  5E					pop	si
020A:C8A6			loc_2013:
020A:C8A6  80 3E 345D 00			cmp	byte ptr ds:[345Dh],0	; (0000:345D=0)
020A:C8AB  75 08				jne	loc_2014		; Jump if not equal
020A:C8AD  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:C8AD  9A					db	9Ah
020A:C8AE  023C 14FC				dw	23Ch, 14FCh
020A:C8B2  E9 0C58				jmp	loc_2165		; (D50D)
020A:C8B5			loc_2014:
020A:C8B5  56					push	si
020A:C8B6  57					push	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 411

020A:C8B7  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:C8BC  06					push	es
020A:C8BD  E8 A79D				call	sub_95			; (705D)
020A:C8C0  B9 0024				mov	cx,24h
020A:C8C3  BE 2DAB				mov	si,2DABh
020A:C8C6  BF 2FFF				mov	di,2FFFh
020A:C8C9  FC					cld				; Clear direction
020A:C8CA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:C8CC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:C8D1  9C					pushf				; Push flags
020A:C8D2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:C8D7  5A					pop	dx
020A:C8D8  8E C2				mov	es,dx
020A:C8DA  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:C8DF  5A					pop	dx
020A:C8E0  75 0A				jnz	loc_2015		; Jump if not zero
020A:C8E2  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:C8E7  74 03				je	loc_2015		; Jump if equal
020A:C8E9  E8 AAD0				call	sub_103			; (73BC)
020A:C8EC			loc_2015:
020A:C8EC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:C8F1  9D					popf				; Pop flags
020A:C8F2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:C8F7  5F					pop	di
020A:C8F8  5E					pop	si
020A:C8F9  80 3E 345D 44			cmp	byte ptr ds:[345Dh],44h	; (0000:345D=0) 'D'
020A:C8FE  75 5E				jne	loc_2017		; Jump if not equal
020A:C900  C6 06 3465 02			mov	byte ptr ds:[3465h],2	; (0000:3465=0)
020A:C905  FF 36 40E9				push	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:C909  FF 36 361A				push	word ptr ds:[361Ah]	; (0000:361A=0)
020A:C90D  8A 1E 3047				mov	bl,byte ptr ds:[3047h]	; (0000:3047=31h)
020A:C911  53					push	bx
020A:C912  C6 06 3047 00			mov	byte ptr ds:[3047h],0	; (0000:3047=31h)
020A:C917  8A 1E 362B				mov	bl,byte ptr ds:[362Bh]	; (0000:362B=0)
020A:C91B  88 1E 47BA				mov	byte ptr ds:[47BAh],bl	; (0000:47BA=76h)
020A:C91F  C6 06 362B 90			mov	byte ptr ds:[362Bh],90h	; (0000:362B=0)
020A:C924  33 DB				xor	bx,bx			; Zero register
020A:C926  8B 0E 344A				mov	cx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C92A  83 3E 345E FF			cmp	word ptr ds:[345Eh],0FFFFh	; (0000:345E=0)
020A:C92F  74 04				je	loc_2016		; Jump if equal
020A:C931  8B 0E 345E				mov	cx,word ptr ds:[345Eh]	; (0000:345E=0)
020A:C935			loc_2016:
020A:C935  C6 06 30B6 00			mov	byte ptr ds:[30B6h],0	; (0000:30B6=1)
020A:C93A  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:C93E  89 0E 361A				mov	word ptr ds:[361Ah],cx	; (0000:361A=0)
020A:C942  E8 BFCB				call	sub_117			; (8910)
020A:C945  58					pop	ax
020A:C946  A2 3047				mov	byte ptr ds:[3047h],al	; (0000:3047=31h)
020A:C949  8F 06 361A				pop	word ptr ds:[361Ah]	; (0000:361A=0)
020A:C94D  8F 06 40E9				pop	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:C951  C6 06 3465 00			mov	byte ptr ds:[3465h],0	; (0000:3465=0)
020A:C956  A0 47BA				mov	al,byte ptr ds:[47BAh]	; (0000:47BA=76h)
020A:C959  A2 362B				mov	byte ptr ds:[362Bh],al	; (0000:362B=0)
020A:C95C  EB 46				jmp	short loc_2020		; (C9A4)
020A:C95E			loc_2017:
020A:C95E  56					push	si
020A:C95F  BE 37E1				mov	si,37E1h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 412

020A:C962  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C962  9A					db	9Ah
020A:C963  4160 14FC				dw	4160h, 14FCh
020A:C967  5E					pop	si
020A:C968  8A 2E 309E				mov	ch,byte ptr ds:[309Eh]	; (0000:309E=0)
020A:C96C  8A 0E 3459				mov	cl,byte ptr ds:[3459h]	; (0000:3459=0)
020A:C970  51					push	cx
020A:C971  C6 06 309E 00			mov	byte ptr ds:[309Eh],0	; (0000:309E=0)
020A:C976  80 3E 345D 40			cmp	byte ptr ds:[345Dh],40h	; (0000:345D=0) '@'
020A:C97B  75 05				jne	loc_2018		; Jump if not equal
020A:C97D  C6 06 309E 4F			mov	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:C982			loc_2018:
020A:C982  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:C986  83 3E 345E FF			cmp	word ptr ds:[345Eh],0FFFFh	; (0000:345E=0)
020A:C98B  74 04				je	loc_2019		; Jump if equal
020A:C98D  8B 1E 345E				mov	bx,word ptr ds:[345Eh]	; (0000:345E=0)
020A:C991			loc_2019:
020A:C991  B1 00				mov	cl,0
020A:C993  C6 06 35F3 02			mov	byte ptr ds:[35F3h],2	; (0000:35F3=0)
020A:C998  E8 C625				call	sub_118			; (8FC0)
020A:C99B  59					pop	cx
020A:C99C  88 0E 3459				mov	byte ptr ds:[3459h],cl	; (0000:3459=0)
020A:C9A0  88 2E 309E				mov	byte ptr ds:[309Eh],ch	; (0000:309E=0)
020A:C9A4			loc_2020:
020A:C9A4  81 FD 2DAB				cmp	bp,2DABh
020A:C9A8  72 1E				jb	loc_2023		; Jump if below
020A:C9AA  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:C9AF  45					inc	bp
020A:C9B0  56					push	si
020A:C9B1  BE 2FFF				mov	si,2FFFh
020A:C9B4  B9 0024				mov	cx,24h

020A:C9B7			locloop_2021:
020A:C9B7  8A 04				mov	al,[si]
020A:C9B9  3E: 88 46 00				mov	ds:[bp],al
020A:C9BD  46					inc	si
020A:C9BE  45					inc	bp
020A:C9BF  81 FD 2DCF				cmp	bp,2DCFh
020A:C9C3  73 02				jae	loc_2022		; Jump if above or =
020A:C9C5  E2 F0				loop	locloop_2021		; Loop if cx > 0

020A:C9C7			loc_2022:
020A:C9C7  5E					pop	si
020A:C9C8			loc_2023:
020A:C9C8  E9 0B42				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:C9CB  9A 14FC:469C		;*		call	far ptr sub_217		;*(14FC:469C)
020A:C9CB  9A					db	9Ah
020A:C9CC  469C 14FC				dw	469Ch, 14FCh
020A:C9D0  73 03				jnc	loc_2024		; Jump if carry=0
020A:C9D2  E9 FEE0				jmp	loc_2014		; (C8B5)
020A:C9D5			loc_2024:
020A:C9D5  E9 0B35				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:C9D8  8B 0E 361A				mov	cx,word ptr ds:[361Ah]	; (0000:361A=0)
020A:C9DC  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:C9E0  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 413

020A:C9E1  BE 385C				mov	si,385Ch
020A:C9E4  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:C9E4  9A					db	9Ah
020A:C9E5  4160 14FC				dw	4160h, 14FCh
020A:C9E9  C6 06 3465 03			mov	byte ptr ds:[3465h],3	; (0000:3465=0)
020A:C9EE  C6 06 16AC 01			mov	byte ptr ds:[16ACh],1	; (0000:16AC=57h)
020A:C9F3  5E					pop	si
020A:C9F4  56					push	si
020A:C9F5  C6 06 3078 01			mov	byte ptr ds:[3078h],1	; (0000:3078=0)
020A:C9FA  03 36 30BE				add	si,word ptr ds:[30BEh]	; (0000:30BE=0C3C0h)
020A:C9FE  4E					dec	si
020A:C9FF  9A 14FC:2C00		;*		call	far ptr sub_186		;*(14FC:2C00)
020A:C9FF  9A					db	9Ah
020A:CA00  2C00 14FC				dw	2C00h, 14FCh
020A:CA04  46					inc	si
020A:CA05  E9 00E9				jmp	loc_2035		; (CAF1)
							                        ;* No entry point to code
020A:CA08  8B 0E 361A				mov	cx,word ptr ds:[361Ah]	; (0000:361A=0)
020A:CA0C  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:CA10  C6 06 3078 01			mov	byte ptr ds:[3078h],1	; (0000:3078=0)
020A:CA15  3C 31				cmp	al,31h			; '1'
020A:CA17  75 03				jne	loc_2026		; Jump if not equal
020A:CA19			loc_2025:
020A:CA19  E9 0098				jmp	loc_2033		; (CAB4)
020A:CA1C			loc_2026:
020A:CA1C  3C 32				cmp	al,32h			; '2'
020A:CA1E  74 F9				je	loc_2025		; Jump if equal
020A:CA20  FE 06 3078				inc	byte ptr ds:[3078h]	; (0000:3078=0)
020A:CA24  56					push	si
020A:CA25  46					inc	si
020A:CA26  3C 35				cmp	al,35h			; '5'
020A:CA28  75 07				jne	loc_2027		; Jump if not equal
020A:CA2A  C6 06 30B6 00			mov	byte ptr ds:[30B6h],0	; (0000:30B6=1)
020A:CA2F  EB 06				jmp	short loc_2028		; (CA37)
020A:CA31			loc_2027:
020A:CA31  9A 14FC:2C00		;*		call	far ptr sub_186		;*(14FC:2C00)
020A:CA31  9A					db	9Ah
020A:CA32  2C00 14FC				dw	2C00h, 14FCh
020A:CA36  46					inc	si
020A:CA37			loc_2028:
020A:CA37  F6 06 56C2 01			test	byte ptr ds:[56C2h],1	; (0000:56C2=50h)
020A:CA3C  74 05				jz	loc_2029		; Jump if zero
020A:CA3E  9A 14FC:4D90		;*		call	far ptr sub_221		;*(14FC:4D90)
020A:CA3E  9A					db	9Ah
020A:CA3F  4D90 14FC				dw	4D90h, 14FCh
020A:CA43			loc_2029:
020A:CA43  26: 8B 04				mov	ax,es:[si]
020A:CA46  5E					pop	si
020A:CA47  32 DB				xor	bl,bl			; Zero register
020A:CA49  80 FA 36				cmp	dl,36h			; '6'
020A:CA4C  75 39				jne	loc_2031		; Jump if not equal
020A:CA4E  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CA52  80 E3 C7				and	bl,0C7h
020A:CA55  80 FB 06				cmp	bl,6
020A:CA58  74 2D				je	loc_2031		; Jump if equal
020A:CA5A  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CA5E  80 CB 08				or	bl,8
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 414

020A:CA61  F7 06 13E6 0008			test	word ptr ds:[13E6h],8	; (0000:13E6=0)
020A:CA67  75 1E				jnz	loc_2031		; Jump if not zero
020A:CA69  3D 007F				cmp	ax,7Fh
020A:CA6C  72 05				jb	loc_2030		; Jump if below
020A:CA6E  3D FF80				cmp	ax,0FF80h
020A:CA71  72 14				jb	loc_2031		; Jump if below
020A:CA73			loc_2030:
020A:CA73  26: 80 3C 8B				cmp	byte ptr es:[si],8Bh
020A:CA77  74 0E				je	loc_2031		; Jump if equal
020A:CA79  80 0E 4E10 40			or	byte ptr ds:[4E10h],40h	; (0000:4E10=43h) '@'
020A:CA7E  3D 0000				cmp	ax,0
020A:CA81  75 04				jne	loc_2031		; Jump if not equal
020A:CA83  FE 06 4E11				inc	byte ptr ds:[4E11h]	; (0000:4E11=3Ah)
020A:CA87			loc_2031:
020A:CA87  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:CA8C  74 23				jz	loc_2032		; Jump if zero
020A:CA8E  C6 06 3078 04			mov	byte ptr ds:[3078h],4	; (0000:3078=0)
020A:CA93  26: 8B 44 03				mov	ax,es:[si+3]
020A:CA97  3D 0000				cmp	ax,0
020A:CA9A  26: 8B 44 01				mov	ax,es:[si+1]
020A:CA9E  74 11				jz	loc_2032		; Jump if zero
020A:CAA0  26: 8B 44 03				mov	ax,es:[si+3]
020A:CAA4  51					push	cx
020A:CAA5  B1 0C				mov	cl,0Ch
020A:CAA7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:CAA9  59					pop	cx
020A:CAAA  A3 3450				mov	word ptr ds:[3450h],ax	; (0000:3450=0)
020A:CAAD  26: 8B 44 01				mov	ax,es:[si+1]
020A:CAB1			loc_2032:
020A:CAB1  E9 009A				jmp	loc_2040		; (CB4E)
020A:CAB4			loc_2033:
020A:CAB4  56					push	si
020A:CAB5  46					inc	si
020A:CAB6  3C 31				cmp	al,31h			; '1'
020A:CAB8  74 37				je	loc_2035		; Jump if equal
020A:CABA  9A 14FC:2C00		;*		call	far ptr sub_186		;*(14FC:2C00)
020A:CABA  9A					db	9Ah
020A:CABB  2C00 14FC				dw	2C00h, 14FCh
020A:CABF  9F					lahf				; Load ah from flags
020A:CAC0  46					inc	si
020A:CAC1  F6 06 4E04 10			test	byte ptr ds:[4E04h],10h	; (0000:4E04=53h)
020A:CAC6  75 73				jnz	loc_2038		; Jump if not zero
020A:CAC8  9E					sahf				; Store ah into flags
020A:CAC9  73 11				jnc	loc_2034		; Jump if carry=0
020A:CACB  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:CAD0  75 1F				jnz	loc_2035		; Jump if not zero
020A:CAD2  26: 8A 44 FF				mov	al,es:[si-1]
020A:CAD6  24 C6				and	al,0C6h
020A:CAD8  3C 42				cmp	al,42h			; 'B'
020A:CADA  75 15				jne	loc_2035		; Jump if not equal
020A:CADC			loc_2034:
020A:CADC  26: 80 3C 00				cmp	byte ptr es:[si],0
020A:CAE0  75 0F				jne	loc_2035		; Jump if not equal
020A:CAE2  C6 06 4E08 01			mov	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:CAE7  80 0E 3459 04			or	byte ptr ds:[3459h],4	; (0000:3459=0)
020A:CAEC  C6 06 5709 8D			mov	byte ptr ds:[5709h],8Dh	; (0000:5709=49h)
020A:CAF1			loc_2035:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 415

020A:CAF1  26: 8A 04				mov	al,es:[si]
020A:CAF4  5E					pop	si
020A:CAF5  80 0E 4E0F 02			or	byte ptr ds:[4E0Fh],2	; (0000:4E0F=3Dh)
020A:CAFA  32 DB				xor	bl,bl			; Zero register
020A:CAFC  80 FA 32				cmp	dl,32h			; '2'
020A:CAFF  75 07				jne	loc_2036		; Jump if not equal
020A:CB01  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CB05  80 CB 08				or	bl,8
020A:CB08			loc_2036:
020A:CB08  98					cbw				; Convrt byte to word
020A:CB09  C6 06 303E 01			mov	byte ptr ds:[303Eh],1	; (0000:303E=0C0h)
020A:CB0E  C6 06 306F 00			mov	byte ptr ds:[306Fh],0	; (0000:306F=4Fh)
020A:CB13  8A 3E 307E				mov	bh,byte ptr ds:[307Eh]	; (0000:307E=32h)
020A:CB17  50					push	ax
020A:CB18  E8 BDF5				call	sub_117			; (8910)
020A:CB1B  58					pop	ax
020A:CB1C  F6 C3 08				test	bl,8
020A:CB1F  75 13				jnz	loc_2037		; Jump if not zero
020A:CB21  3B 06 3048				cmp	ax,word ptr ds:[3048h]	; (0000:3048=100h)
020A:CB25  73 0D				jae	loc_2037		; Jump if above or =
020A:CB27  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:CB2B  3B 1E 40E9				cmp	bx,word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CB2F  75 03				jne	loc_2037		; Jump if not equal
020A:CB31  A3 3048				mov	word ptr ds:[3048h],ax	; (0000:3048=100h)
020A:CB34			loc_2037:
020A:CB34  80 26 4E0F FD			and	byte ptr ds:[4E0Fh],0FDh	; (0000:4E0F=3Dh)
020A:CB39  EB 41				jmp	short loc_2041		; (CB7C)
020A:CB3B			loc_2038:
020A:CB3B  26: 8A 04				mov	al,es:[si]
020A:CB3E  5E					pop	si
020A:CB3F  32 DB				xor	bl,bl			; Zero register
020A:CB41  80 FA 32				cmp	dl,32h			; '2'
020A:CB44  75 07				jne	loc_2039		; Jump if not equal
020A:CB46  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CB4A  80 CB 08				or	bl,8
020A:CB4D			loc_2039:
020A:CB4D  98					cbw				; Convrt byte to word
020A:CB4E			loc_2040:
020A:CB4E  C6 06 303E 01			mov	byte ptr ds:[303Eh],1	; (0000:303E=0C0h)
020A:CB53  F6 06 4E04 10			test	byte ptr ds:[4E04h],10h	; (0000:4E04=53h)
020A:CB58  75 77				jnz	loc_2045		; Jump if not zero
020A:CB5A  C6 06 306F 00			mov	byte ptr ds:[306Fh],0	; (0000:306F=4Fh)
020A:CB5F  50					push	ax
020A:CB60  E8 BDAD				call	sub_117			; (8910)
020A:CB63  58					pop	ax
020A:CB64  F6 C3 08				test	bl,8
020A:CB67  75 13				jnz	loc_2041		; Jump if not zero
020A:CB69  3B 06 3048				cmp	ax,word ptr ds:[3048h]	; (0000:3048=100h)
020A:CB6D  73 0D				jae	loc_2041		; Jump if above or =
020A:CB6F  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:CB73  3B 1E 40E9				cmp	bx,word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CB77  75 03				jne	loc_2041		; Jump if not equal
020A:CB79  A3 3048				mov	word ptr ds:[3048h],ax	; (0000:3048=100h)
020A:CB7C			loc_2041:
020A:CB7C  80 3E 4E07 01			cmp	byte ptr ds:[4E07h],1	; (0000:4E07=54h)
020A:CB81  74 3E				je	loc_2043		; Jump if equal
020A:CB83  F6 06 306F 02			test	byte ptr ds:[306Fh],2	; (0000:306F=4Fh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 416

020A:CB88  75 37				jnz	loc_2043		; Jump if not zero
020A:CB8A  A1 361A				mov	ax,word ptr ds:[361Ah]	; (0000:361A=0)
020A:CB8D  3B 06 40E9				cmp	ax,word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CB91  75 10				jne	loc_2042		; Jump if not equal
020A:CB93  3B 06 306A				cmp	ax,word ptr ds:[306Ah]	; (0000:306A=0)
020A:CB97  74 28				je	loc_2043		; Jump if equal
020A:CB99  C6 06 306F 01			mov	byte ptr ds:[306Fh],1	; (0000:306F=4Fh)
020A:CB9E  A3 306A				mov	word ptr ds:[306Ah],ax	; (0000:306A=0)
020A:CBA1  EB 1E				jmp	short loc_2043		; (CBC1)
020A:CBA3			loc_2042:
020A:CBA3  80 3E 303B 01			cmp	byte ptr ds:[303Bh],1	; (0000:303B=0DBh)
020A:CBA8  75 17				jne	loc_2043		; Jump if not equal
020A:CBAA  A1 3620				mov	ax,word ptr ds:[3620h]	; (0000:3620=0)
020A:CBAD  3B 06 40E9				cmp	ax,word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CBB1  75 0E				jne	loc_2043		; Jump if not equal
020A:CBB3  3B 06 306C				cmp	ax,word ptr ds:[306Ch]	; (0000:306C=0D74h)
020A:CBB7  74 08				je	loc_2043		; Jump if equal
020A:CBB9  C6 06 306F 04			mov	byte ptr ds:[306Fh],4	; (0000:306F=4Fh)
020A:CBBE  A3 306C				mov	word ptr ds:[306Ch],ax	; (0000:306C=0D74h)
020A:CBC1			loc_2043:
020A:CBC1  80 FA 32				cmp	dl,32h			; '2'
020A:CBC4  74 08				je	loc_2044		; Jump if equal
020A:CBC6  80 FA 36				cmp	dl,36h			; '6'
020A:CBC9  74 03				je	loc_2044		; Jump if equal
020A:CBCB  E9 093F				jmp	loc_2165		; (D50D)
020A:CBCE			loc_2044:
020A:CBCE  E9 012F				jmp	loc_2059		; (CD00)
020A:CBD1			loc_2045:
020A:CBD1  F6 06 4E04 0F			test	byte ptr ds:[4E04h],0Fh	; (0000:4E04=53h)
020A:CBD6  74 03				jz	loc_2046		; Jump if zero
020A:CBD8  E9 0090				jmp	loc_2053		; (CC6B)
020A:CBDB			loc_2046:
020A:CBDB  80 26 4E04 EF			and	byte ptr ds:[4E04h],0EFh	; (0000:4E04=53h)
020A:CBE0  80 FA 32				cmp	dl,32h			; '2'
020A:CBE3  74 05				je	loc_2047		; Jump if equal
020A:CBE5  80 FA 36				cmp	dl,36h			; '6'
020A:CBE8  75 4E				jne	loc_2052		; Jump if not equal
020A:CBEA			loc_2047:
020A:CBEA  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CBEE  80 E3 C7				and	bl,0C7h
020A:CBF1  80 FB 06				cmp	bl,6
020A:CBF4  74 42				je	loc_2052		; Jump if equal
020A:CBF6  80 E3 C0				and	bl,0C0h
020A:CBF9  80 FB 80				cmp	bl,80h
020A:CBFC  75 2A				jne	loc_2050		; Jump if not equal
020A:CBFE  80 3E 14FA 00			cmp	byte ptr ds:[14FAh],0	; (0000:14FA=0E9h)
020A:CC03  74 33				je	loc_2052		; Jump if equal
020A:CC05  26: 83 7C 02 7F			cmp	word ptr es:[si+2],7Fh
020A:CC0A  76 07				jbe	loc_2048		; Jump if below or =
020A:CC0C  26: 83 7C 02 80			cmp	word ptr es:[si+2],0FF80h
020A:CC11  72 25				jb	loc_2052		; Jump if below
020A:CC13			loc_2048:
020A:CC13  80 3E 14FA 01			cmp	byte ptr ds:[14FAh],1	; (0000:14FA=0E9h)
020A:CC18  74 07				je	loc_2049		; Jump if equal
020A:CC1A  C6 06 4E08 01			mov	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:CC1F  EB 17				jmp	short loc_2052		; (CC38)
020A:CC21			loc_2049:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 417

020A:CC21  C6 06 4E11 01			mov	byte ptr ds:[4E11h],1	; (0000:4E11=3Ah)
020A:CC26  EB 10				jmp	short loc_2052		; (CC38)
020A:CC28			loc_2050:
020A:CC28  C6 06 4E07 01			mov	byte ptr ds:[4E07h],1	; (0000:4E07=54h)
020A:CC2D			loc_2051:
020A:CC2D  80 26 4E10 FB			and	byte ptr ds:[4E10h],0FBh	; (0000:4E10=43h)
020A:CC32  A3 40F7				mov	word ptr ds:[40F7h],ax	; (0000:40F7=0FFFFh)
020A:CC35  E9 00C8				jmp	loc_2059		; (CD00)
020A:CC38			loc_2052:
020A:CC38  80 0E 4E10 10			or	byte ptr ds:[4E10h],10h	; (0000:4E10=43h)
020A:CC3D  9A 14FC:61FC		;*		call	far ptr sub_237		;*(14FC:61FC)
020A:CC3D  9A					db	9Ah
020A:CC3E  61FC 14FC				dw	61FCh, 14FCh
020A:CC42  56					push	si
020A:CC43  BE 3848				mov	si,3848h
020A:CC46  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:CC46  9A					db	9Ah
020A:CC47  4160 14FC				dw	4160h, 14FCh
020A:CC4B  5E					pop	si
020A:CC4C  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:CC4C  9A					db	9Ah
020A:CC4D  023C 14FC				dw	23Ch, 14FCh
020A:CC51  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:CC56  45					inc	bp
020A:CC57  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CC5B  80 E3 C0				and	bl,0C0h
020A:CC5E  80 FB 80				cmp	bl,80h
020A:CC61  C6 06 4E07 02			mov	byte ptr ds:[4E07h],2	; (0000:4E07=54h)
020A:CC66  74 C5				jz	loc_2051		; Jump if zero
020A:CC68  E9 08A2				jmp	loc_2165		; (D50D)
020A:CC6B			loc_2053:
020A:CC6B  8B 0E 344A				mov	cx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:CC6F  83 3E 4E02 FF			cmp	word ptr ds:[4E02h],0FFFFh	; (0000:4E02=65h)
020A:CC74  74 04				je	loc_2054		; Jump if equal
020A:CC76  8B 0E 4E02				mov	cx,word ptr ds:[4E02h]	; (0000:4E02=65h)
020A:CC7A			loc_2054:
020A:CC7A  80 3E 4E04 1A			cmp	byte ptr ds:[4E04h],1Ah	; (0000:4E04=53h)
020A:CC7F  75 25				jne	loc_2055		; Jump if not equal
020A:CC81  FF 36 40E9				push	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CC85  FF 36 361A				push	word ptr ds:[361Ah]	; (0000:361A=0)
020A:CC89  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:CC8D  89 0E 361A				mov	word ptr ds:[361Ah],cx	; (0000:361A=0)
020A:CC91  32 FF				xor	bh,bh			; Zero register
020A:CC93  E8 BC7A				call	sub_117			; (8910)
020A:CC96  8F 06 361A				pop	word ptr ds:[361Ah]	; (0000:361A=0)
020A:CC9A  8F 06 40E9				pop	word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CC9E  C6 06 3465 00			mov	byte ptr ds:[3465h],0	; (0000:3465=0)
020A:CCA3  E9 FF1B				jmp	loc_2043		; (CBC1)
020A:CCA6			loc_2055:
020A:CCA6  8B D9				mov	bx,cx
020A:CCA8  8A 0E 309E				mov	cl,byte ptr ds:[309Eh]	; (0000:309E=0)
020A:CCAC  51					push	cx
020A:CCAD  B1 02				mov	cl,2
020A:CCAF  80 3E 4E04 18			cmp	byte ptr ds:[4E04h],18h	; (0000:4E04=53h)
020A:CCB4  75 05				jne	loc_2056		; Jump if not equal
020A:CCB6  C6 06 309E 4F			mov	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:CCBB			loc_2056:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 418

020A:CCBB  E8 C302				call	sub_118			; (8FC0)
020A:CCBE  59					pop	cx
020A:CCBF  88 0E 309E				mov	byte ptr ds:[309Eh],cl	; (0000:309E=0)
020A:CCC3  E9 FEFB				jmp	loc_2043		; (CBC1)
							                        ;* No entry point to code
020A:CCC6  8B 0E 361A				mov	cx,word ptr ds:[361Ah]	; (0000:361A=0)
020A:CCCA  89 0E 40E9				mov	word ptr ds:[40E9h],cx	; (0000:40E9=101h)
020A:CCCE  F6 06 3458 80			test	byte ptr ds:[3458h],80h	; (0000:3458=0)
020A:CCD3  75 05				jnz	loc_2057		; Jump if not zero
020A:CCD5  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:CCD5  9A					db	9Ah
020A:CCD6  0924 14FC				dw	924h, 14FCh
020A:CCDA			loc_2057:
020A:CCDA  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:CCDF  74 05				jz	loc_2058		; Jump if zero
020A:CCE1  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:CCE1  9A					db	9Ah
020A:CCE2  4188 14FC				dw	4188h, 14FCh
020A:CCE6			loc_2058:
020A:CCE6  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CCEA  9A 14FC:6B40		;*		call	far ptr sub_240		;*(14FC:6B40)
020A:CCEA  9A					db	9Ah
020A:CCEB  6B40 14FC				dw	6B40h, 14FCh
020A:CCEF  C6 06 3630 01			mov	byte ptr ds:[3630h],1	; (0000:3630=0)
020A:CCF4  80 3E 362E 04			cmp	byte ptr ds:[362Eh],4	; (0000:362E=0)
020A:CCF9  75 05				jne	loc_2059		; Jump if not equal
020A:CCFB  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (0000:362E=0)
020A:CD00			loc_2059:
020A:CD00  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CD04  9A 14FC:4104		;*		call	far ptr sub_202		;*(14FC:4104)
020A:CD04  9A					db	9Ah
020A:CD05  4104 14FC				dw	4104h, 14FCh
020A:CD09  73 05				jnc	loc_2060		; Jump if carry=0
020A:CD0B  C6 06 3632 01			mov	byte ptr ds:[3632h],1	; (0000:3632=0)
020A:CD10			loc_2060:
020A:CD10  26: 8A 5C 01				mov	bl,es:[si+1]
020A:CD14			loc_2061:
020A:CD14  80 E3 C7				and	bl,0C7h
020A:CD17  80 FB 06				cmp	bl,6
020A:CD1A  75 03				jne	loc_2062		; Jump if not equal
020A:CD1C  E9 07EE				jmp	loc_2165		; (D50D)
020A:CD1F			loc_2062:
020A:CD1F  80 E3 07				and	bl,7
020A:CD22  B9 0008				mov	cx,8
020A:CD25  F6 C3 04				test	bl,4
020A:CD28  74 03				jz	loc_2063		; Jump if zero
020A:CD2A  B9 0005				mov	cx,5
020A:CD2D			loc_2063:
020A:CD2D  8A C3				mov	al,bl
020A:CD2F  24 03				and	al,3
020A:CD31  F6 E1				mul	cl			; ax = reg * al
020A:CD33  F6 C3 04				test	bl,4
020A:CD36  74 0B				jz	loc_2064		; Jump if zero
020A:CD38  51					push	cx
020A:CD39  B9 3711				mov	cx,3711h
020A:CD3C  81 E9 36F1				sub	cx,36F1h
020A:CD40  03 C1				add	ax,cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 419

020A:CD42  59					pop	cx
020A:CD43			loc_2064:
020A:CD43  53					push	bx
020A:CD44  8B D8				mov	bx,ax
020A:CD46  49					dec	cx

020A:CD47			locloop_2065:
020A:CD47  8A 87 36F1				mov	al,byte ptr ds:[36F1h][bx]	; (0000:36F1=0)
020A:CD4B  3E: 88 46 00				mov	ds:[bp],al
020A:CD4F  43					inc	bx
020A:CD50  45					inc	bp
020A:CD51  E2 F4				loop	locloop_2065		; Loop if cx > 0

020A:CD53  8A 87 36F1				mov	al,byte ptr ds:[36F1h][bx]	; (0000:36F1=0)
020A:CD57  A2 3631				mov	byte ptr ds:[3631h],al	; (0000:3631=0)
020A:CD5A  80 3E 4E07 02			cmp	byte ptr ds:[4E07h],2	; (0000:4E07=54h)
020A:CD5F  74 36				je	loc_2068		; Jump if equal
020A:CD61  80 FA 32				cmp	dl,32h			; '2'
020A:CD64  74 08				je	loc_2066		; Jump if equal
020A:CD66  80 FA 36				cmp	dl,36h			; '6'
020A:CD69  74 03				je	loc_2066		; Jump if equal
020A:CD6B  E9 0085				jmp	loc_2072		; (CDF3)
020A:CD6E			loc_2066:
020A:CD6E  80 3E 4E07 00			cmp	byte ptr ds:[4E07h],0	; (0000:4E07=54h)
020A:CD73  74 29				je	loc_2069		; Jump if equal
020A:CD75  4D					dec	bp
020A:CD76  3E: C6 46 00 2B			mov	byte ptr ds:[bp],2Bh	; '+'
020A:CD7B  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (0000:40F7=0FFFFh)
020A:CD7E  A9 8000				test	ax,8000h
020A:CD81  74 08				jz	loc_2067		; Jump if zero
020A:CD83  3E: C6 46 00 2D			mov	byte ptr ds:[bp],2Dh	; '-'
020A:CD88  F7 D0				not	ax
020A:CD8A  40					inc	ax
020A:CD8B			loc_2067:
020A:CD8B  45					inc	bp
020A:CD8C  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:CD8C  9A					db	9Ah
020A:CD8D  023C 14FC				dw	23Ch, 14FCh
020A:CD91  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:CD96  45					inc	bp
020A:CD97			loc_2068:
020A:CD97  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (0000:4E07=54h)
020A:CD9C  EB 55				jmp	short loc_2072		; (CDF3)
020A:CD9E			loc_2069:
020A:CD9E  F6 06 3631 01			test	byte ptr ds:[3631h],1	; (0000:3631=0)
020A:CDA3  74 07				jz	loc_2070		; Jump if zero
020A:CDA5  83 3E 40F7 00			cmp	word ptr ds:[40F7h],0	; (0000:40F7=0FFFFh)
020A:CDAA  74 47				je	loc_2072		; Jump if equal
020A:CDAC			loc_2070:
020A:CDAC  83 3E 30C9 00			cmp	word ptr ds:[30C9h],0	; (0000:30C9=8334h)
020A:CDB1  74 40				je	loc_2072		; Jump if equal
020A:CDB3  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:CDB8  06					push	es
020A:CDB9  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (0000:40E9=101h)
020A:CDBD  E8 A630				call	sub_104			; (73F0)
020A:CDC0  8B 1E 30C9				mov	bx,word ptr ds:[30C9h]	; (0000:30C9=8334h)
020A:CDC4  26: 80 0F 80				or	byte ptr es:[bx],80h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 420

020A:CDC8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:CDCD  9C					pushf				; Push flags
020A:CDCE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:CDD3  5A					pop	dx
020A:CDD4  8E C2				mov	es,dx
020A:CDD6  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:CDDB  5A					pop	dx
020A:CDDC  75 0A				jnz	loc_2071		; Jump if not zero
020A:CDDE  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:CDE3  74 03				je	loc_2071		; Jump if equal
020A:CDE5  E8 A5D4				call	sub_103			; (73BC)
020A:CDE8			loc_2071:
020A:CDE8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:CDED  9D					popf				; Pop flags
020A:CDEE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:CDF3			loc_2072:
020A:CDF3  5B					pop	bx
020A:CDF4  33 C0				xor	ax,ax			; Zero register
020A:CDF6  F6 06 3631 08			test	byte ptr ds:[3631h],8	; (0000:3631=0)
020A:CDFB  74 07				jz	loc_2073		; Jump if zero
020A:CDFD  E8 E7D0				call	sub_140			; (B5D0)
020A:CE00  03 06 360E				add	ax,word ptr ds:[360Eh]	; (0000:360E=0)
020A:CE04			loc_2073:
020A:CE04  F6 06 3631 04			test	byte ptr ds:[3631h],4	; (0000:3631=0)
020A:CE09  74 09				jz	loc_2074		; Jump if zero
020A:CE0B  E8 E7F6				call	sub_141			; (B604)
020A:CE0E  03 06 360A				add	ax,word ptr ds:[360Ah]	; (0000:360A=0)
020A:CE12  72 35				jc	loc_2078		; Jump if carry Set
020A:CE14			loc_2074:
020A:CE14  F6 06 3631 02			test	byte ptr ds:[3631h],2	; (0000:3631=0)
020A:CE19  74 09				jz	loc_2075		; Jump if zero
020A:CE1B  E8 E716				call	sub_139			; (B534)
020A:CE1E  03 06 35FE				add	ax,word ptr ds:[35FEh]	; (0000:35FE=0)
020A:CE22  72 25				jc	loc_2078		; Jump if carry Set
020A:CE24			loc_2075:
020A:CE24  F6 06 3631 01			test	byte ptr ds:[3631h],1	; (0000:3631=0)
020A:CE29  74 09				jz	loc_2076		; Jump if zero
020A:CE2B  E8 E832				call	sub_142			; (B660)
020A:CE2E  03 06 3612				add	ax,word ptr ds:[3612h]	; (0000:3612=0)
020A:CE32  72 15				jc	loc_2078		; Jump if carry Set
020A:CE34			loc_2076:
020A:CE34  80 FA 3D				cmp	dl,3Dh			; '='
020A:CE37  74 06				je	loc_2077		; Jump if equal
020A:CE39  03 06 40F7				add	ax,word ptr ds:[40F7h]	; (0000:40F7=0FFFFh)
020A:CE3D  72 0A				jc	loc_2078		; Jump if carry Set
020A:CE3F			loc_2077:
020A:CE3F  F6 C7 20				test	bh,20h			; ' '
020A:CE42  74 31				jz	loc_2081		; Jump if zero
020A:CE44  3D FFFD				cmp	ax,0FFFDh
020A:CE47  72 05				jb	loc_2079		; Jump if below
020A:CE49			loc_2078:
020A:CE49  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (0000:362E=0)
020A:CE4E			loc_2079:
020A:CE4E  83 3E 40E9 00			cmp	word ptr ds:[40E9h],0	; (0000:40E9=101h)
020A:CE53  74 20				je	loc_2081		; Jump if equal
020A:CE55  80 3E 309E 4F			cmp	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:CE5A  74 07				je	loc_2080		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 421

020A:CE5C  80 3E 309E 79			cmp	byte ptr ds:[309Eh],79h	; (0000:309E=0) 'y'
020A:CE61  75 12				jne	loc_2081		; Jump if not equal
020A:CE63			loc_2080:
020A:CE63  F7 06 4E22 0020			test	word ptr ds:[4E22h],20h	; (0000:4E22=4E49h)
020A:CE69  75 0A				jnz	loc_2081		; Jump if not zero
020A:CE6B  80 3E 4E08 00			cmp	byte ptr ds:[4E08h],0	; (0000:4E08=45h)
020A:CE70  75 03				jne	loc_2081		; Jump if not equal
020A:CE72  E8 A8AB				call	sub_109			; (7720)
020A:CE75			loc_2081:
020A:CE75  2E: 80 3E 8740 60			cmp	cs:data_723,60h		; (020A:8740=0EBh) '`'
020A:CE7B  75 02				jne	loc_2082		; Jump if not equal
020A:CE7D  32 F6				xor	dh,dh			; Zero register
020A:CE7F			loc_2082:
020A:CE7F  E9 068B				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:CE82  3C 40				cmp	al,40h			; '@'
020A:CE84  75 2B				jne	loc_2084		; Jump if not equal
020A:CE86  C6 06 35F3 01			mov	byte ptr ds:[35F3h],1	; (0000:35F3=0)
020A:CE8B  80 3E 309E 78			cmp	byte ptr ds:[309Eh],78h	; (0000:309E=0) 'x'
020A:CE90  74 15				je	loc_2083		; Jump if equal
020A:CE92  80 3E 309E F5			cmp	byte ptr ds:[309Eh],0F5h	; (0000:309E=0)
020A:CE97  74 0E				je	loc_2083		; Jump if equal
020A:CE99  F6 06 30A0 E0			test	byte ptr ds:[30A0h],0E0h	; (0000:30A0=0C0h)
020A:CE9E  74 11				jz	loc_2084		; Jump if zero
020A:CEA0  26: F6 44 01 80			test	byte ptr es:[si+1],80h
020A:CEA5  75 0A				jnz	loc_2084		; Jump if not zero
020A:CEA7			loc_2083:
020A:CEA7  56					push	si
020A:CEA8  BE 37EE				mov	si,37EEh
020A:CEAB  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:CEAB  9A					db	9Ah
020A:CEAC  4160 14FC				dw	4160h, 14FCh
020A:CEB0  5E					pop	si
020A:CEB1			loc_2084:
020A:CEB1  56					push	si
020A:CEB2  C6 06 307A 00			mov	byte ptr ds:[307Ah],0	; (0000:307A=0)
020A:CEB7  8A D0				mov	dl,al
020A:CEB9  46					inc	si
020A:CEBA  F6 C2 01				test	dl,1
020A:CEBD  74 06				jz	loc_2085		; Jump if zero
020A:CEBF  46					inc	si
020A:CEC0  C6 06 307A 01			mov	byte ptr ds:[307Ah],1	; (0000:307A=0)
020A:CEC5			loc_2085:
020A:CEC5  F6 06 56C2 01			test	byte ptr ds:[56C2h],1	; (0000:56C2=50h)
020A:CECA  74 05				jz	loc_2086		; Jump if zero
020A:CECC  9A 14FC:4D90		;*		call	far ptr sub_221		;*(14FC:4D90)
020A:CECC  9A					db	9Ah
020A:CECD  4D90 14FC				dw	4D90h, 14FCh
020A:CED1			loc_2086:
020A:CED1  FE 06 3078				inc	byte ptr ds:[3078h]	; (0000:3078=0)
020A:CED5  80 FA 41				cmp	dl,41h			; 'A'
020A:CED8  77 0F				ja	loc_2088		; Jump if above
020A:CEDA  26: 8A 04				mov	al,es:[si]
020A:CEDD  98					cbw				; Convrt byte to word
020A:CEDE  C6 06 35F3 01			mov	byte ptr ds:[35F3h],1	; (0000:35F3=0)
020A:CEE3  E9 0152				jmp	loc_2101		; (D038)
020A:CEE6			loc_2087:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 422

020A:CEE6  E9 01A0				jmp	loc_2107		; (D089)
020A:CEE9			loc_2088:
020A:CEE9  C6 06 35F3 02			mov	byte ptr ds:[35F3h],2	; (0000:35F3=0)
020A:CEEE  FE 06 3078				inc	byte ptr ds:[3078h]	; (0000:3078=0)
020A:CEF2  80 FA 47				cmp	dl,47h			; 'G'
020A:CEF5  77 EF				ja	loc_2087		; Jump if above
020A:CEF7  74 08				jz	loc_2089		; Jump if zero
020A:CEF9  80 FA 46				cmp	dl,46h			; 'F'
020A:CEFC  74 03				je	loc_2089		; Jump if equal
020A:CEFE  E9 00AF				jmp	loc_2096		; (CFB0)
020A:CF01			loc_2089:
020A:CF01  C6 06 35F3 02			mov	byte ptr ds:[35F3h],2	; (0000:35F3=0)
020A:CF06  F6 06 35EE 04			test	byte ptr ds:[35EEh],4	; (0000:35EE=0)
020A:CF0B  74 23				jz	loc_2090		; Jump if zero
020A:CF0D  C6 06 35F3 04			mov	byte ptr ds:[35F3h],4	; (0000:35F3=0)
020A:CF12  26: 8B 04				mov	ax,es:[si]
020A:CF15  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:CF18  26: 8B 44 02				mov	ax,es:[si+2]
020A:CF1C  A3 35F6				mov	word ptr ds:[35F6h],ax	; (0000:35F6=0)
020A:CF1F  80 06 3078 02			add	byte ptr ds:[3078h],2	; (0000:3078=0)
020A:CF24  3D 0001				cmp	ax,1
020A:CF27  72 07				jb	loc_2090		; Jump if below
020A:CF29  3D FFFF				cmp	ax,0FFFFh
020A:CF2C  74 02				je	loc_2090		; Jump if equal
020A:CF2E  EB 3C				jmp	short loc_2092		; (CF6C)
020A:CF30			loc_2090:
020A:CF30  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:CF34  26: 8B 04				mov	ax,es:[si]
020A:CF37  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:CF3A  5E					pop	si
020A:CF3B  56					push	si
020A:CF3C  8A 16 35F3				mov	dl,byte ptr ds:[35F3h]	; (0000:35F3=0)
020A:CF40  32 F6				xor	dh,dh			; Zero register
020A:CF42  03 C2				add	ax,dx
020A:CF44  40					inc	ax
020A:CF45  02 06 30B3				add	al,byte ptr ds:[30B3h]	; (0000:30B3=2Fh)
020A:CF49  80 D4 00				adc	ah,0
020A:CF4C  2E: 80 3E 8740 47			cmp	cs:data_723,47h		; (020A:8740=0EBh) 'G'
020A:CF52  75 01				jne	loc_2091		; Jump if not equal
020A:CF54  40					inc	ax
020A:CF55			loc_2091:
020A:CF55  8B D0				mov	dx,ax
020A:CF57  03 06 344C				add	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:CF5B  3B 06 3058				cmp	ax,word ptr ds:[3058h]	; (0000:3058=0B800h)
020A:CF5F  72 0B				jb	loc_2092		; Jump if below
020A:CF61  3B 06 305A				cmp	ax,word ptr ds:[305Ah]	; (0000:305A=1)
020A:CF65  77 05				ja	loc_2092		; Jump if above
020A:CF67  32 F6				xor	dh,dh			; Zero register
020A:CF69  E9 01FB				jmp	loc_2116		; (D167)
020A:CF6C			loc_2092:
020A:CF6C  F6 06 56C2 02			test	byte ptr ds:[56C2h],2	; (0000:56C2=50h)
020A:CF71  74 16				jz	loc_2094		; Jump if zero
020A:CF73  80 26 56C2 FD			and	byte ptr ds:[56C2h],0FDh	; (0000:56C2=50h)
020A:CF78  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:CF7D  75 08				jne	loc_2093		; Jump if not equal
020A:CF7F  BE 56C3				mov	si,56C3h
020A:CF82  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 423

020A:CF82  9A					db	9Ah
020A:CF83  4160 14FC				dw	4160h, 14FCh
020A:CF87			loc_2093:
020A:CF87  EB 21				jmp	short loc_2095		; (CFAA)
020A:CF89			loc_2094:
020A:CF89  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:CF8E  45					inc	bp
020A:CF8F  33 C0				xor	ax,ax			; Zero register
020A:CF91  A0 35F3				mov	al,byte ptr ds:[35F3h]	; (0000:35F3=0)
020A:CF94  40					inc	ax
020A:CF95  02 06 30B3				add	al,byte ptr ds:[30B3h]	; (0000:30B3=2Fh)
020A:CF99  80 D4 00				adc	ah,0
020A:CF9C  01 06 35F4				add	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:CFA0  83 16 35F6 00			adc	word ptr ds:[35F6h],0	; (0000:35F6=0)
020A:CFA5  9A 14FC:5964		;*		call	far ptr sub_230		;*(14FC:5964)
020A:CFA5  9A					db	9Ah
020A:CFA6  5964 14FC				dw	5964h, 14FCh
020A:CFAA			loc_2095:
020A:CFAA  5E					pop	si
020A:CFAB  33 D2				xor	dx,dx			; Zero register
020A:CFAD  E9 055D				jmp	loc_2165		; (D50D)
020A:CFB0			loc_2096:
020A:CFB0  80 FA 44				cmp	dl,44h			; 'D'
020A:CFB3  75 56				jne	loc_2100		; Jump if not equal
020A:CFB5  F6 06 35EE 05			test	byte ptr ds:[35EEh],5	; (0000:35EE=0)
020A:CFBA  74 4F				jz	loc_2100		; Jump if zero
020A:CFBC  C6 06 35F3 04			mov	byte ptr ds:[35F3h],4	; (0000:35F3=0)
020A:CFC1  C6 06 3078 04			mov	byte ptr ds:[3078h],4	; (0000:3078=0)
020A:CFC6  26: 8B 44 02				mov	ax,es:[si+2]
020A:CFCA  A3 35F6				mov	word ptr ds:[35F6h],ax	; (0000:35F6=0)
020A:CFCD  26: 8B 04				mov	ax,es:[si]
020A:CFD0  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:CFD3  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:CFD7  5E					pop	si
020A:CFD8  56					push	si
020A:CFD9  BA 0005				mov	dx,5
020A:CFDC  02 16 30B3				add	dl,byte ptr ds:[30B3h]	; (0000:30B3=2Fh)
020A:CFE0  03 C2				add	ax,dx
020A:CFE2  73 04				jnc	loc_2097		; Jump if carry=0
020A:CFE4  81 C3 1000				add	bx,1000h
020A:CFE8			loc_2097:
020A:CFE8  03 06 344C				add	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:CFEC  73 04				jnc	loc_2098		; Jump if carry=0
020A:CFEE  81 C3 1000				add	bx,1000h
020A:CFF2			loc_2098:
020A:CFF2  8B 16 35F6				mov	dx,word ptr ds:[35F6h]	; (0000:35F6=0)
020A:CFF6  B1 0C				mov	cl,0Ch
020A:CFF8  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:CFFA  03 DA				add	bx,dx
020A:CFFC  9A 14FC:5800		;*		call	far ptr sub_228		;*(14FC:5800)
020A:CFFC  9A					db	9Ah
020A:CFFD  5800 14FC				dw	5800h, 14FCh
020A:D001  73 03				jnc	loc_2099		; Jump if carry=0
020A:D003  E9 FF66				jmp	loc_2092		; (CF6C)
020A:D006			loc_2099:
020A:D006  32 F6				xor	dh,dh			; Zero register
020A:D008  E9 015C				jmp	loc_2116		; (D167)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 424

020A:D00B			loc_2100:
020A:D00B  C6 06 4701 01			mov	byte ptr ds:[4701h],1	; (0000:4701=65h)
020A:D010  26: 8B 04				mov	ax,es:[si]
020A:D013  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:D018  75 1E				jne	loc_2101		; Jump if not equal
020A:D01A  80 FA 44				cmp	dl,44h			; 'D'
020A:D01D  75 19				jne	loc_2101		; Jump if not equal
020A:D01F  F7 06 13E6 0004			test	word ptr ds:[13E6h],4	; (0000:13E6=0)
020A:D025  75 11				jnz	loc_2101		; Jump if not zero
020A:D027  3D FF80				cmp	ax,0FF80h
020A:D02A  72 0C				jb	loc_2101		; Jump if below
020A:D02C  80 3E 309E 4F			cmp	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:D031  74 05				je	loc_2101		; Jump if equal
020A:D033  80 0E 4E15 01			or	byte ptr ds:[4E15h],1	; (0000:4E15=53h)
020A:D038			loc_2101:
020A:D038  8B 1E 3052				mov	bx,word ptr ds:[3052h]	; (0000:3052=0C70Ch)
020A:D03C  80 FA 45				cmp	dl,45h			; 'E'
020A:D03F  73 05				jae	loc_2102		; Jump if above or =
020A:D041  80 FA 41				cmp	dl,41h			; 'A'
020A:D044  75 03				jne	loc_2103		; Jump if not equal
020A:D046			loc_2102:
020A:D046  E9 011E				jmp	loc_2116		; (D167)
020A:D049			loc_2103:
020A:D049  5E					pop	si
020A:D04A  56					push	si
020A:D04B  32 F6				xor	dh,dh			; Zero register
020A:D04D  8A 16 3078				mov	dl,byte ptr ds:[3078h]	; (0000:3078=0)
020A:D051  A3 35F4				mov	word ptr ds:[35F4h],ax	; (0000:35F4=0)
020A:D054  03 C2				add	ax,dx
020A:D056  40					inc	ax
020A:D057  02 06 30B3				add	al,byte ptr ds:[30B3h]	; (0000:30B3=2Fh)
020A:D05B  80 D4 00				adc	ah,0
020A:D05E  8B D0				mov	dx,ax
020A:D060  03 06 344C				add	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:D064  3B 06 3058				cmp	ax,word ptr ds:[3058h]	; (0000:3058=0B800h)
020A:D068  72 1C				jb	loc_2106		; Jump if below
020A:D06A  53					push	bx
020A:D06B  8B 1E 305A				mov	bx,word ptr ds:[305Ah]	; (0000:305A=1)
020A:D06F  83 FB F1				cmp	bx,0FFF1h
020A:D072  73 05				jae	loc_2104		; Jump if above or =
020A:D074  83 C3 0F				add	bx,0Fh
020A:D077  EB 03				jmp	short loc_2105		; (D07C)
020A:D079			loc_2104:
020A:D079  BB FFFF				mov	bx,0FFFFh
020A:D07C			loc_2105:
020A:D07C  3B C3				cmp	ax,bx
020A:D07E  5B					pop	bx
020A:D07F  77 05				ja	loc_2106		; Jump if above
020A:D081  32 F6				xor	dh,dh			; Zero register
020A:D083  E9 00E1				jmp	loc_2116		; (D167)
020A:D086			loc_2106:
020A:D086  E9 FEE3				jmp	loc_2092		; (CF6C)
020A:D089			loc_2107:
020A:D089  C6 06 3078 04			mov	byte ptr ds:[3078h],4	; (0000:3078=0)
020A:D08E  26: 8B 04				mov	ax,es:[si]
020A:D091  46					inc	si
020A:D092  46					inc	si
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 425

020A:D093  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:D098  74 17				jz	loc_2108		; Jump if zero
020A:D09A  80 06 3078 02			add	byte ptr ds:[3078h],2	; (0000:3078=0)
020A:D09F  46					inc	si
020A:D0A0  46					inc	si
020A:D0A1  26: 83 7C FE 00			cmp	word ptr es:[si-2],0
020A:D0A6  74 09				je	loc_2108		; Jump if equal
020A:D0A8  50					push	ax
020A:D0A9  B0 46				mov	al,46h			; 'F'
020A:D0AB  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D0AB  9A					db	9Ah
020A:D0AC  2280 14FC				dw	2280h, 14FCh
020A:D0B0  58					pop	ax
020A:D0B1			loc_2108:
020A:D0B1  26: 8B 1C				mov	bx,es:[si]
020A:D0B4  83 FB 6F				cmp	bx,6Fh
020A:D0B7  77 1F				ja	loc_2109		; Jump if above
020A:D0B9  51					push	cx
020A:D0BA  8B 0E 344C				mov	cx,word ptr ds:[344Ch]	; (0000:344C=0)
020A:D0BE  41					inc	cx
020A:D0BF  02 0E 3078				add	cl,byte ptr ds:[3078h]	; (0000:3078=0)
020A:D0C3  80 D5 00				adc	ch,0
020A:D0C6  3B C8				cmp	cx,ax
020A:D0C8  59					pop	cx
020A:D0C9  75 0D				jnz	loc_2109		; Jump if not zero
020A:D0CB  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:D0CF  50					push	ax
020A:D0D0  B0 47				mov	al,47h			; 'G'
020A:D0D2  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D0D2  9A					db	9Ah
020A:D0D3  2280 14FC				dw	2280h, 14FCh
020A:D0D7  58					pop	ax
020A:D0D8			loc_2109:
020A:D0D8  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (0000:2B36=2Eh)
020A:D0DD  75 7A				jne	loc_2115		; Jump if not equal
020A:D0DF  3D 000F				cmp	ax,0Fh
020A:D0E2  77 75				ja	loc_2115		; Jump if above
020A:D0E4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:D0E9  06					push	es
020A:D0EA  56					push	si
020A:D0EB  53					push	bx
020A:D0EC  50					push	ax
020A:D0ED  E8 9F64				call	sub_93			; (7054)
020A:D0F0  BE 0000				mov	si,0
020A:D0F3  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (0000:3040=93h)
020A:D0F7  32 ED				xor	ch,ch			; Zero register

020A:D0F9			locloop_2110:
020A:D0F9  26: 39 1C				cmp	es:[si],bx
020A:D0FC  75 0C				jne	loc_2111		; Jump if not equal
020A:D0FE  26: 39 44 02				cmp	es:[si+2],ax
020A:D102  77 06				ja	loc_2111		; Jump if above
020A:D104  26: 39 44 04				cmp	es:[si+4],ax
020A:D108  73 07				jae	loc_2112		; Jump if above or =
020A:D10A			loc_2111:
020A:D10A  83 C6 15				add	si,15h
020A:D10D  E2 EA				loop	locloop_2110		; Loop if cx > 0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 426


020A:D10F  EB 1A				jmp	short loc_2113		; (D12B)
020A:D111			loc_2112:
020A:D111  26: 8A 5C 0B				mov	bl,es:[si+0Bh]
020A:D115  80 E3 1E				and	bl,1Eh
020A:D118  D0 CB				ror	bl,1			; Rotate
020A:D11A  3A C3				cmp	al,bl
020A:D11C  77 0D				ja	loc_2113		; Jump if above
020A:D11E  D0 C0				rol	al,1			; Rotate
020A:D120  0C 20				or	al,20h			; ' '
020A:D122  26: 80 64 0B E1			and	byte ptr es:[si+0Bh],0E1h
020A:D127  26: 08 44 0B				or	es:[si+0Bh],al
020A:D12B			loc_2113:
020A:D12B  58					pop	ax
020A:D12C  5B					pop	bx
020A:D12D  5E					pop	si
020A:D12E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:D133  9C					pushf				; Push flags
020A:D134  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:D139  5A					pop	dx
020A:D13A  8E C2				mov	es,dx
020A:D13C  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:D141  5A					pop	dx
020A:D142  75 0A				jnz	loc_2114		; Jump if not zero
020A:D144  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:D149  74 03				je	loc_2114		; Jump if equal
020A:D14B  E8 A26E				call	sub_103			; (73BC)
020A:D14E			loc_2114:
020A:D14E  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:D153  9D					popf				; Pop flags
020A:D154  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:D159			loc_2115:
020A:D159  56					push	si
020A:D15A  BE 37B0				mov	si,37B0h
020A:D15D  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D15D  9A					db	9Ah
020A:D15E  4160 14FC				dw	4160h, 14FCh
020A:D162  5E					pop	si
020A:D163  B1 01				mov	cl,1
020A:D165  EB 02				jmp	short loc_2117		; (D169)
020A:D167			loc_2116:
020A:D167  B1 00				mov	cl,0
020A:D169			loc_2117:
020A:D169  80 3E 309E 2A			cmp	byte ptr ds:[309Eh],2Ah	; (0000:309E=0) '*'
020A:D16E  72 18				jb	loc_2119		; Jump if below
020A:D170  80 3E 309E 2C			cmp	byte ptr ds:[309Eh],2Ch	; (0000:309E=0) ','
020A:D175  76 0E				jbe	loc_2118		; Jump if below or =
020A:D177  80 3E 309E F2			cmp	byte ptr ds:[309Eh],0F2h	; (0000:309E=0)
020A:D17C  72 0A				jb	loc_2119		; Jump if below
020A:D17E  80 3E 309E F4			cmp	byte ptr ds:[309Eh],0F4h	; (0000:309E=0)
020A:D183  77 03				ja	loc_2119		; Jump if above
020A:D185			loc_2118:
020A:D185  80 C9 08				or	cl,8
020A:D188			loc_2119:
020A:D188  F6 06 56C2 02			test	byte ptr ds:[56C2h],2	; (0000:56C2=50h)
020A:D18D  74 16				jz	loc_2121		; Jump if zero
020A:D18F  80 26 56C2 FD			and	byte ptr ds:[56C2h],0FDh	; (0000:56C2=50h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 427

020A:D194  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:D199  75 08				jne	loc_2120		; Jump if not equal
020A:D19B  BE 56C3				mov	si,56C3h
020A:D19E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D19E  9A					db	9Ah
020A:D19F  4160 14FC				dw	4160h, 14FCh
020A:D1A3			loc_2120:
020A:D1A3  EB 68				jmp	short loc_2125		; (D20D)
020A:D1A5			loc_2121:
020A:D1A5  53					push	bx
020A:D1A6  E8 039F				call	sub_145			; (D548)
020A:D1A9  E8 BE14				call	sub_118			; (8FC0)
020A:D1AC  C6 06 4701 00			mov	byte ptr ds:[4701h],0	; (0000:4701=65h)
020A:D1B1  5B					pop	bx
020A:D1B2  3B 06 3048				cmp	ax,word ptr ds:[3048h]	; (0000:3048=100h)
020A:D1B6  73 11				jae	loc_2122		; Jump if above or =
020A:D1B8  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:D1BC  75 0B				jne	loc_2122		; Jump if not equal
020A:D1BE  81 3E 2CCA 00EB			cmp	word ptr ds:[2CCAh],0EBh	; (0000:2CCA=1FE9h)
020A:D1C4  74 03				je	loc_2122		; Jump if equal
020A:D1C6  A3 3048				mov	word ptr ds:[3048h],ax	; (0000:3048=100h)
020A:D1C9			loc_2122:
020A:D1C9  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:D1CE  75 40				jne	loc_2126		; Jump if not equal
020A:D1D0  80 3E 4E0A 01			cmp	byte ptr ds:[4E0Ah],1	; (0000:4E0A=44h)
020A:D1D5  75 39				jne	loc_2126		; Jump if not equal
020A:D1D7  80 3E 3078 02			cmp	byte ptr ds:[3078h],2	; (0000:3078=0)
020A:D1DC  75 2F				jne	loc_2125		; Jump if not equal
020A:D1DE  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (0000:40F7=0FFFFh)
020A:D1E1  2B 06 344C				sub	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:D1E5  48					dec	ax
020A:D1E6  2A 06 30B3				sub	al,byte ptr ds:[30B3h]	; (0000:30B3=2Fh)
020A:D1EA  80 DC 00				sbb	ah,0
020A:D1ED  2A 06 3078				sub	al,byte ptr ds:[3078h]	; (0000:3078=0)
020A:D1F1  80 DC 00				sbb	ah,0
020A:D1F4  A9 8000				test	ax,8000h
020A:D1F7  74 02				jz	loc_2123		; Jump if zero
020A:D1F9  F7 D0				not	ax
020A:D1FB			loc_2123:
020A:D1FB  3D 007F				cmp	ax,7Fh
020A:D1FE  76 03				jbe	loc_2124		; Jump if below or =
020A:D200  E9 0128				jmp	loc_2137		; (D32B)
020A:D203			loc_2124:
020A:D203  C6 06 35DE 01			mov	byte ptr ds:[35DEh],1	; (0000:35DE=0)
020A:D208  C6 06 4E08 01			mov	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:D20D			loc_2125:
020A:D20D  E9 011B				jmp	loc_2137		; (D32B)
020A:D210			loc_2126:
020A:D210  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:D215  06					push	es
020A:D216  8B 36 4E0D				mov	si,word ptr ds:[4E0Dh]	; (0000:4E0D=4556h)
020A:D21A  8B 1E 40F5				mov	bx,word ptr ds:[40F5h]	; (0000:40F5=0FFFFh)
020A:D21E  80 3E 309E 4F			cmp	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:D223  74 03				je	loc_2127		; Jump if equal
020A:D225  E9 0085				jmp	loc_2130		; (D2AD)
020A:D228			loc_2127:
020A:D228  E8 A2AD				call	sub_106			; (74D8)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 428

020A:D22B  26: F6 44 04 04			test	byte ptr es:[si+4],4
020A:D230  74 7E				jz	loc_2131		; Jump if zero
020A:D232  26: 8A 54 39				mov	dl,es:[si+39h]
020A:D236  50					push	ax
020A:D237  53					push	bx
020A:D238  51					push	cx
020A:D239  52					push	dx
020A:D23A  56					push	si
020A:D23B  57					push	di
020A:D23C  55					push	bp
020A:D23D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:D242  1E					push	ds
020A:D243  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:D248  06					push	es
020A:D249  9A 14FC:6CF0		;*		call	far ptr sub_243		;*(14FC:6CF0)
020A:D249  9A					db	9Ah
020A:D24A  6CF0 14FC				dw	6CF0h, 14FCh
020A:D24E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:D253  9C					pushf				; Push flags
020A:D254  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:D259  5A					pop	dx
020A:D25A  8E C2				mov	es,dx
020A:D25C  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:D261  5A					pop	dx
020A:D262  75 0A				jnz	loc_2128		; Jump if not zero
020A:D264  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:D269  74 03				je	loc_2128		; Jump if equal
020A:D26B  E8 A14E				call	sub_103			; (73BC)
020A:D26E			loc_2128:
020A:D26E  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:D273  9D					popf				; Pop flags
020A:D274  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:D279  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:D27E  9C					pushf				; Push flags
020A:D27F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:D284  5A					pop	dx
020A:D285  8E DA				mov	ds,dx
020A:D287  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:D28C  5A					pop	dx
020A:D28D  75 0A				jnz	loc_2129		; Jump if not zero
020A:D28F  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:D294  74 03				je	loc_2129		; Jump if equal
020A:D296  E8 A123				call	sub_103			; (73BC)
020A:D299			loc_2129:
020A:D299  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:D29E  9D					popf				; Pop flags
020A:D29F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:D2A4  5D					pop	bp
020A:D2A5  5F					pop	di
020A:D2A6  5E					pop	si
020A:D2A7  5A					pop	dx
020A:D2A8  59					pop	cx
020A:D2A9  5B					pop	bx
020A:D2AA  58					pop	ax
020A:D2AB  EB 03				jmp	short loc_2131		; (D2B0)
020A:D2AD			loc_2130:
020A:D2AD  E8 A1B4				call	sub_105			; (7464)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 429

020A:D2B0			loc_2131:
020A:D2B0  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:D2B5  75 49				jne	loc_2135		; Jump if not equal
020A:D2B7  26: F6 44 05 40			test	byte ptr es:[si+5],40h	; '@'
020A:D2BC  75 42				jnz	loc_2135		; Jump if not zero
020A:D2BE  26: 8B 04				mov	ax,es:[si]
020A:D2C1  3B 06 344A				cmp	ax,word ptr ds:[344Ah]	; (0000:344A=0)
020A:D2C5  77 0C				ja	loc_2132		; Jump if above
020A:D2C7  72 28				jc	loc_2134		; Jump if carry Set
020A:D2C9  26: 8B 44 02				mov	ax,es:[si+2]
020A:D2CD  3B 06 344C				cmp	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:D2D1  72 1E				jb	loc_2134		; Jump if below
020A:D2D3			loc_2132:
020A:D2D3  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (0000:2B3B=3Bh)
020A:D2D8  72 26				jb	loc_2135		; Jump if below
020A:D2DA  80 3E 309E 4F			cmp	byte ptr ds:[309Eh],4Fh	; (0000:309E=0) 'O'
020A:D2DF  74 09				je	loc_2133		; Jump if equal
020A:D2E1  26: F6 44 04 80			test	byte ptr es:[si+4],80h
020A:D2E6  74 09				jz	loc_2134		; Jump if zero
020A:D2E8  EB 16				jmp	short loc_2135		; (D300)
020A:D2EA			loc_2133:
020A:D2EA  26: F6 44 04 20			test	byte ptr es:[si+4],20h	; ' '
020A:D2EF  75 0F				jnz	loc_2135		; Jump if not zero
020A:D2F1			loc_2134:
020A:D2F1  C6 06 35DE 01			mov	byte ptr ds:[35DEh],1	; (0000:35DE=0)
020A:D2F6  C6 06 4E08 01			mov	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:D2FB  80 26 4E15 FE			and	byte ptr ds:[4E15h],0FEh	; (0000:4E15=53h)
020A:D300			loc_2135:
020A:D300  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:D305  9C					pushf				; Push flags
020A:D306  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:D30B  5A					pop	dx
020A:D30C  8E C2				mov	es,dx
020A:D30E  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:D313  5A					pop	dx
020A:D314  75 0A				jnz	loc_2136		; Jump if not zero
020A:D316  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:D31B  74 03				je	loc_2136		; Jump if equal
020A:D31D  E8 A09C				call	sub_103			; (73BC)
020A:D320			loc_2136:
020A:D320  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:D325  9D					popf				; Pop flags
020A:D326  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:D32B			loc_2137:
020A:D32B  2E: 80 3E 8740 48			cmp	cs:data_723,48h		; (020A:8740=0EBh) 'H'
020A:D331  75 13				jne	loc_2138		; Jump if not equal
020A:D333  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:D338  75 0C				jnz	loc_2138		; Jump if not zero
020A:D33A  80 3E 4E08 01			cmp	byte ptr ds:[4E08h],1	; (0000:4E08=45h)
020A:D33F  75 05				jne	loc_2138		; Jump if not equal
020A:D341  80 0E 4E0F 04			or	byte ptr ds:[4E0Fh],4	; (0000:4E0F=3Dh)
020A:D346			loc_2138:
020A:D346  5E					pop	si
020A:D347  E9 01C3				jmp	loc_2165		; (D50D)
020A:D34A			loc_2139:
020A:D34A  56					push	si
020A:D34B  57					push	di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 430

020A:D34C  E8 DB55				call	sub_132			; (AEA4)
020A:D34F  A0 35EE				mov	al,byte ptr ds:[35EEh]	; (0000:35EE=0)
020A:D352  24 07				and	al,7
020A:D354  F6 06 35EE 04			test	byte ptr ds:[35EEh],4	; (0000:35EE=0)
020A:D359  74 0A				jz	loc_2140		; Jump if zero
020A:D35B  3C 06				cmp	al,6
020A:D35D  74 10				je	loc_2141		; Jump if equal
020A:D35F  3C 07				cmp	al,7
020A:D361  74 0C				je	loc_2141		; Jump if equal
020A:D363  EB 0C				jmp	short loc_2142		; (D371)
020A:D365			loc_2140:
020A:D365  3C 00				cmp	al,0
020A:D367  74 06				je	loc_2141		; Jump if equal
020A:D369  3C 01				cmp	al,1
020A:D36B  74 02				je	loc_2141		; Jump if equal
020A:D36D  EB 02				jmp	short loc_2142		; (D371)
020A:D36F			loc_2141:
020A:D36F  EB 2E				jmp	short loc_2145		; (D39F)
020A:D371			loc_2142:
020A:D371  BE 377A				mov	si,377Ah
020A:D374  BF 381A				mov	di,381Ah
020A:D377  F6 C2 01				test	dl,1
020A:D37A  74 0D				jz	loc_2143		; Jump if zero
020A:D37C  BE 3770				mov	si,3770h
020A:D37F  F6 06 35EE 01			test	byte ptr ds:[35EEh],1	; (0000:35EE=0)
020A:D384  74 03				jz	loc_2143		; Jump if zero
020A:D386  BE 3784				mov	si,3784h
020A:D389			loc_2143:
020A:D389  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D38E  74 03				jz	loc_2144		; Jump if zero
020A:D390  BF 3829				mov	di,3829h
020A:D393			loc_2144:
020A:D393  57					push	di
020A:D394  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D394  9A					db	9Ah
020A:D395  4160 14FC				dw	4160h, 14FCh
020A:D399  5E					pop	si
020A:D39A  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D39A  9A					db	9Ah
020A:D39B  4160 14FC				dw	4160h, 14FCh
020A:D39F			loc_2145:
020A:D39F  5F					pop	di
020A:D3A0  5E					pop	si
020A:D3A1  E9 0169				jmp	loc_2165		; (D50D)
							                        ;* No entry point to code
020A:D3A4  80 3E 2B36 06			cmp	byte ptr ds:[2B36h],6	; (0000:2B36=2Eh)
020A:D3A9  72 0A				jb	loc_2146		; Jump if below
020A:D3AB  F6 06 35EE 07			test	byte ptr ds:[35EEh],7	; (0000:35EE=0)
020A:D3B0  75 03				jnz	loc_2146		; Jump if not zero
020A:D3B2  E8 E17F				call	sub_139			; (B534)
020A:D3B5			loc_2146:
020A:D3B5  EB 66				jmp	short loc_2150		; (D41D)
							                        ;* No entry point to code
020A:D3B7  80 FA 73				cmp	dl,73h			; 's'
020A:D3BA  75 0C				jne	loc_2147		; Jump if not equal
020A:D3BC  83 3E 360A FD			cmp	word ptr ds:[360Ah],0FFFDh	; (0000:360A=0)
020A:D3C1  72 05				jb	loc_2147		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 431

020A:D3C3  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (0000:362E=0)
020A:D3C8			loc_2147:
020A:D3C8  80 3E 2B36 06			cmp	byte ptr ds:[2B36h],6	; (0000:2B36=2Eh)
020A:D3CD  72 26				jb	loc_2148		; Jump if below
020A:D3CF  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D3D4  75 1F				jnz	loc_2148		; Jump if not zero
020A:D3D6  C7 06 4E62 FFFF			mov	word ptr ds:[4E62h],0FFFFh	; (0000:4E62=382Dh)
020A:D3DC  E8 E225				call	sub_141			; (B604)
020A:D3DF  80 FA 76				cmp	dl,76h			; 'v'
020A:D3E2  73 11				jae	loc_2148		; Jump if above or =
020A:D3E4  8A C2				mov	al,dl
020A:D3E6  0C 01				or	al,1
020A:D3E8  3C 73				cmp	al,73h			; 's'
020A:D3EA  74 09				je	loc_2148		; Jump if equal
020A:D3EC  A1 3618				mov	ax,word ptr ds:[3618h]	; (0000:3618=0)
020A:D3EF  A3 4E62				mov	word ptr ds:[4E62h],ax	; (0000:4E62=382Dh)
020A:D3F2  E8 E1DB				call	sub_140			; (B5D0)
020A:D3F5			loc_2148:
020A:D3F5  C7 06 4E62 FFFF			mov	word ptr ds:[4E62h],0FFFFh	; (0000:4E62=382Dh)
020A:D3FB  EB 20				jmp	short loc_2150		; (D41D)
							                        ;* No entry point to code
020A:D3FD  80 3E 2B36 06			cmp	byte ptr ds:[2B36h],6	; (0000:2B36=2Eh)
020A:D402  72 10				jb	loc_2149		; Jump if below
020A:D404  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D409  75 09				jnz	loc_2149		; Jump if not zero
020A:D40B  A1 3618				mov	ax,word ptr ds:[3618h]	; (0000:3618=0)
020A:D40E  A3 4E62				mov	word ptr ds:[4E62h],ax	; (0000:4E62=382Dh)
020A:D411  E8 E1BC				call	sub_140			; (B5D0)
020A:D414			loc_2149:
020A:D414  C7 06 4E62 FFFF			mov	word ptr ds:[4E62h],0FFFFh	; (0000:4E62=382Dh)
020A:D41A  E9 FF2D				jmp	loc_2139		; (D34A)
020A:D41D			loc_2150:
020A:D41D  E8 DA84				call	sub_132			; (AEA4)
020A:D420  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:D425  75 28				jnz	loc_2153		; Jump if not zero
020A:D427  A0 35EE				mov	al,byte ptr ds:[35EEh]	; (0000:35EE=0)
020A:D42A  24 07				and	al,7
020A:D42C  F6 06 35EE 04			test	byte ptr ds:[35EEh],4	; (0000:35EE=0)
020A:D431  74 0A				jz	loc_2151		; Jump if zero
020A:D433  3C 06				cmp	al,6
020A:D435  74 10				je	loc_2152		; Jump if equal
020A:D437  3C 07				cmp	al,7
020A:D439  74 0C				je	loc_2152		; Jump if equal
020A:D43B  EB 12				jmp	short loc_2153		; (D44F)
020A:D43D			loc_2151:
020A:D43D  3C 00				cmp	al,0
020A:D43F  74 06				je	loc_2152		; Jump if equal
020A:D441  3C 01				cmp	al,1
020A:D443  74 02				je	loc_2152		; Jump if equal
020A:D445  EB 08				jmp	short loc_2153		; (D44F)
020A:D447			loc_2152:
020A:D447  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:D44A  74 03				je	loc_2153		; Jump if equal
020A:D44C  E9 00BE				jmp	loc_2165		; (D50D)
020A:D44F			loc_2153:
020A:D44F  56					push	si
020A:D450  80 FA 6F				cmp	dl,6Fh			; 'o'
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 432

020A:D453  74 3B				je	loc_2156		; Jump if equal
020A:D455  80 FA 76				cmp	dl,76h			; 'v'
020A:D458  72 08				jb	loc_2154		; Jump if below
020A:D45A  BE 3810				mov	si,3810h
020A:D45D  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D45D  9A					db	9Ah
020A:D45E  4160 14FC				dw	4160h, 14FCh
020A:D462			loc_2154:
020A:D462  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:D462  9A					db	9Ah
020A:D463  0924 14FC				dw	924h, 14FCh
020A:D467  8A C2				mov	al,dl
020A:D469  0C 01				or	al,1
020A:D46B  3C 75				cmp	al,75h			; 'u'
020A:D46D  75 21				jne	loc_2156		; Jump if not equal
020A:D46F  BE 37FD				mov	si,37FDh
020A:D472  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D477  74 03				jz	loc_2155		; Jump if zero
020A:D479  BE 3806				mov	si,3806h
020A:D47C			loc_2155:
020A:D47C  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D47C  9A					db	9Ah
020A:D47D  4160 14FC				dw	4160h, 14FCh
020A:D481  F6 C7 80				test	bh,80h
020A:D484  74 0A				jz	loc_2156		; Jump if zero
020A:D486  C6 06 53E2 00			mov	byte ptr ds:[53E2h],0	; (0000:53E2=76h)
020A:D48B  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:D48B  9A					db	9Ah
020A:D48C  0924 14FC				dw	924h, 14FCh
020A:D490			loc_2156:
020A:D490  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:D495  74 05				jz	loc_2157		; Jump if zero
020A:D497  9A 14FC:4188		;*		call	far ptr sub_204		;*(14FC:4188)
020A:D497  9A					db	9Ah
020A:D498  4188 14FC				dw	4188h, 14FCh
020A:D49C			loc_2157:
020A:D49C  BE 383D				mov	si,383Dh
020A:D49F  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D4A4  74 03				jz	loc_2158		; Jump if zero
020A:D4A6  BE 3842				mov	si,3842h
020A:D4A9			loc_2158:
020A:D4A9  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:D4AC  74 43				je	loc_2162		; Jump if equal
020A:D4AE  BE 3832				mov	si,3832h
020A:D4B1  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D4B6  74 03				jz	loc_2159		; Jump if zero
020A:D4B8  BE 3837				mov	si,3837h
020A:D4BB			loc_2159:
020A:D4BB  8A C2				mov	al,dl
020A:D4BD  0C 01				or	al,1
020A:D4BF  3C 71				cmp	al,71h			; 'q'
020A:D4C1  75 2E				jne	loc_2162		; Jump if not equal
020A:D4C3  BE 3814				mov	si,3814h
020A:D4C6  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D4CB  74 03				jz	loc_2160		; Jump if zero
020A:D4CD  BE 3822				mov	si,3822h
020A:D4D0			loc_2160:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 433

020A:D4D0  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D4D0  9A					db	9Ah
020A:D4D1  4160 14FC				dw	4160h, 14FCh
020A:D4D5  BE 381A				mov	si,381Ah
020A:D4D8  F6 06 35EE 02			test	byte ptr ds:[35EEh],2	; (0000:35EE=0)
020A:D4DD  74 03				jz	loc_2161		; Jump if zero
020A:D4DF  BE 3829				mov	si,3829h
020A:D4E2			loc_2161:
020A:D4E2  F6 C7 80				test	bh,80h
020A:D4E5  74 0A				jz	loc_2162		; Jump if zero
020A:D4E7  C6 06 53E2 00			mov	byte ptr ds:[53E2h],0	; (0000:53E2=76h)
020A:D4EC  9A 14FC:0924		;*		call	far ptr sub_170		;*(14FC:0924)
020A:D4EC  9A					db	9Ah
020A:D4ED  0924 14FC				dw	924h, 14FCh
020A:D4F1			loc_2162:
020A:D4F1  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:D4F4  75 07				jne	loc_2163		; Jump if not equal
020A:D4F6  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (0000:35F0=0)
020A:D4FB  74 05				jz	loc_2164		; Jump if zero
020A:D4FD			loc_2163:
020A:D4FD  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D4FD  9A					db	9Ah
020A:D4FE  4160 14FC				dw	4160h, 14FCh
020A:D502			loc_2164:
020A:D502  5E					pop	si
020A:D503  B6 00				mov	dh,0
020A:D505  EB 06				jmp	short loc_2165		; (D50D)
							                        ;* No entry point to code
020A:D507  80 EA 04				sub	dl,4
020A:D50A  E9 E75B				jmp	loc_1868		; (BC68)
020A:D50D			loc_2165:
020A:D50D  C7 06 3450 FFFF			mov	word ptr ds:[3450h],0FFFFh	; (0000:3450=0)
020A:D513  C6 06 303E 00			mov	byte ptr ds:[303Eh],0	; (0000:303E=0C0h)
020A:D518  A0 3078				mov	al,byte ptr ds:[3078h]	; (0000:3078=0)
020A:D51B  C3					retn
							                        ;* No entry point to code
020A:D51C  9A 14FC:00B0		;*		call	far ptr sub_150		;*(14FC:00B0)
020A:D51C  9A					db	9Ah
020A:D51D  00B0 14FC				dw	0B0h, 14FCh
020A:D521  57					push	di
020A:D522  BF 2536				mov	di,2536h
020A:D525  89 1D				mov	[di],bx
020A:D527  5F					pop	di
020A:D528  55					push	bp
020A:D529  BD 253D				mov	bp,253Dh
020A:D52C  A1 344A				mov	ax,data_401		; (020A:344A=0CD01h)
020A:D52F  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D52F  9A					db	9Ah
020A:D530  021C 14FC				dw	21Ch, 14FCh
020A:D534  45					inc	bp
020A:D535  A1 344C				mov	ax,data_402		; (020A:344C=6C6h)
020A:D538  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D538  9A					db	9Ah
020A:D539  021C 14FC				dw	21Ch, 14FCh
020A:D53D  5D					pop	bp
020A:D53E  B0 30				mov	al,30h			; '0'
020A:D540  E8 8719				call	sub_69			; (5C5C)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 434

020A:D543  EB C8				jmp	short loc_2165		; (D50D)
020A:D545  87 DB				xchg	bx,bx
020A:D547  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_145		proc	near
020A:D548  80 3E 309E 78			cmp	byte ptr ds:[309Eh],78h	; (0000:309E=0) 'x'
020A:D54D  75 1A				jne	loc_2166		; Jump if not equal
020A:D54F  80 3E 2B36 04			cmp	byte ptr ds:[2B36h],4	; (0000:2B36=2Eh)
020A:D554  72 13				jb	loc_2166		; Jump if below
020A:D556  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (0000:2B3C=6)
020A:D55B  74 0C				je	loc_2166		; Jump if equal
020A:D55D  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (0000:344A=0)
020A:D561  75 09				jne	loc_2167		; Jump if not equal
020A:D563  3B 06 344C				cmp	ax,word ptr ds:[344Ch]	; (0000:344C=0)
020A:D567  72 03				jb	loc_2167		; Jump if below
020A:D569			loc_2166:
020A:D569  E9 00AB				jmp	loc_2173		; (D617)
020A:D56C			loc_2167:
020A:D56C  50					push	ax
020A:D56D  53					push	bx
020A:D56E  51					push	cx
020A:D56F  52					push	dx
020A:D570  57					push	di
020A:D571  C6 06 4D4B 01			mov	byte ptr ds:[4D4Bh],1	; (0000:4D4B=41h)
020A:D576  BA 0001				mov	dx,1
020A:D579  E8 8910				call	sub_76			; (5E8C)
020A:D57C  C6 06 4D4B 00			mov	byte ptr ds:[4D4Bh],0	; (0000:4D4B=41h)
020A:D581  8B CB				mov	cx,bx
020A:D583  8B D0				mov	dx,ax
020A:D585  73 43				jnc	loc_2171		; Jump if carry=0
020A:D587  26: 8B 0D				mov	cx,es:[di]
020A:D58A  26: 8B 55 02				mov	dx,es:[di+2]
020A:D58E			loc_2168:
020A:D58E  26: 8A 45 04				mov	al,es:[di+4]
020A:D592  24 5F				and	al,5Fh			; '_'
020A:D594  3C 5F				cmp	al,5Fh			; '_'
020A:D596  75 10				jne	loc_2169		; Jump if not equal
020A:D598  26: 80 7D 09 50			cmp	byte ptr es:[di+9],50h	; 'P'
020A:D59D  73 73				jae	loc_2172		; Jump if above or =
020A:D59F  26: 80 7D 09 07			cmp	byte ptr es:[di+9],7
020A:D5A4  75 02				jne	loc_2169		; Jump if not equal
020A:D5A6  74 70				jz	loc_2174		; Jump if zero
020A:D5A8			loc_2169:
020A:D5A8  BB 40C2				mov	bx,40C2h
020A:D5AB  26: 8A 45 05				mov	al,es:[di+5]
020A:D5AF  25 000F				and	ax,0Fh
020A:D5B2  D7					xlat				; al=[al+[bx]] table
020A:D5B3  0A C0				or	al,al			; Zero ?
020A:D5B5  75 04				jnz	loc_2170		; Jump if not zero
020A:D5B7  26: 8A 45 06				mov	al,es:[di+6]
020A:D5BB			loc_2170:
020A:D5BB  03 F8				add	di,ax
020A:D5BD  26: 39 0D				cmp	es:[di],cx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 435

020A:D5C0  75 08				jne	loc_2171		; Jump if not equal
020A:D5C2  26: 39 55 02				cmp	es:[di+2],dx
020A:D5C6  75 02				jne	loc_2171		; Jump if not equal
020A:D5C8  EB C4				jmp	short loc_2168		; (D58E)
020A:D5CA			loc_2171:
020A:D5CA  8B D9				mov	bx,cx
020A:D5CC  8B C2				mov	ax,dx
020A:D5CE  BF 532E				mov	di,532Eh
020A:D5D1  89 1D				mov	[di],bx
020A:D5D3  89 45 02				mov	[di+2],ax
020A:D5D6  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:D5DA  C6 45 05 02				mov	byte ptr [di+5],2
020A:D5DE  C6 45 06 00				mov	byte ptr [di+6],0
020A:D5E2  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:D5E7  C6 45 09 07				mov	byte ptr [di+9],7
020A:D5EB  A1 361A				mov	ax,word ptr ds:[361Ah]	; (0000:361A=0)
020A:D5EE  89 45 0A				mov	[di+0Ah],ax
020A:D5F1  A1 3618				mov	ax,word ptr ds:[3618h]	; (0000:3618=0)
020A:D5F4  89 45 0C				mov	[di+0Ch],ax
020A:D5F7  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (0000:35FA=0)
020A:D5FA  89 45 0E				mov	[di+0Eh],ax
020A:D5FD  A1 35FE				mov	ax,word ptr ds:[35FEh]	; (0000:35FE=0)
020A:D600  89 45 10				mov	[di+10h],ax
020A:D603  A1 360A				mov	ax,word ptr ds:[360Ah]	; (0000:360A=0)
020A:D606  89 45 12				mov	[di+12h],ax
020A:D609  A1 360E				mov	ax,word ptr ds:[360Eh]	; (0000:360E=0)
020A:D60C  89 45 14				mov	[di+14h],ax
020A:D60F  E8 AE8E				call	sub_114			; (84A0)
020A:D612			loc_2172:
020A:D612  5F					pop	di
020A:D613  5A					pop	dx
020A:D614  59					pop	cx
020A:D615  5B					pop	bx
020A:D616  58					pop	ax
020A:D617			loc_2173:
020A:D617  C3					retn
020A:D618			loc_2174:
020A:D618  A1 361A				mov	ax,word ptr ds:[361Ah]	; (0000:361A=0)
020A:D61B  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:D61F  A1 3618				mov	ax,word ptr ds:[3618h]	; (0000:3618=0)
020A:D622  26: 89 45 0C				mov	es:[di+0Ch],ax
020A:D626  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (0000:35FA=0)
020A:D629  26: 89 45 0E				mov	es:[di+0Eh],ax
020A:D62D  A1 35FE				mov	ax,word ptr ds:[35FEh]	; (0000:35FE=0)
020A:D630  26: 89 45 10				mov	es:[di+10h],ax
020A:D634  A1 360A				mov	ax,word ptr ds:[360Ah]	; (0000:360A=0)
020A:D637  26: 89 45 12				mov	es:[di+12h],ax
020A:D63B  A1 360E				mov	ax,word ptr ds:[360Eh]	; (0000:360E=0)
020A:D63E  26: 89 45 14				mov	es:[di+14h],ax
020A:D642  EB CE				jmp	short loc_2172		; (D612)
				sub_145		endp

020A:D644  EA 14FC:62D0		;*		jmp	far ptr loc_2617	;*(14FC:62D0)
020A:D644  EA					db	0EAh
020A:D645  62D0 14FC				dw	62D0h, 14FCh
							                        ;* No entry point to code
020A:D649  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 436

020A:D64A  00					db	0
020A:D64B  00					db	0
020A:D64C  00					db	0
020A:D64D  00 00				add	[bx+si],al
020A:D64F  00 1E F1E8				add	data_765,bl		; (020A:F1E8=36h)
020A:D653  99					cwd				; Word to double word
020A:D654  C6 06 5708 01			mov	data_671,1		; (020A:5708=8Bh)
020A:D659  B0 33				mov	al,33h			; '3'
020A:D65B  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D65B  9A					db	9Ah
020A:D65C  2280 14FC				dw	2280h, 14FCh
020A:D660  E8 99F1				call	sub_93			; (7054)
020A:D663  BF 0000				mov	di,0
020A:D666  A0 3040				mov	al,data_298		; (020A:3040=33h)
020A:D669			loc_2175:
020A:D669  50					push	ax
020A:D66A  BD 6B8D				mov	bp,6B8Dh
020A:D66D  B9 6BCD				mov	cx,6BCDh
020A:D670  2B CD				sub	cx,bp
020A:D672  D1 E9				shr	cx,1			; Shift w/zeros fill

020A:D674			locloop_2176:
020A:D674  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:D67A  45					inc	bp
020A:D67B  45					inc	bp
020A:D67C  E2 F6				loop	locloop_2176		; Loop if cx > 0

020A:D67E  BD 6B8D				mov	bp,6B8Dh
020A:D681  26: 8B 1D				mov	bx,es:[di]
020A:D684  26: 8B 45 02				mov	ax,es:[di+2]
020A:D688  E8 0FC9				call	sub_147			; (E654)
020A:D68B  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:D690  45					inc	bp
020A:D691  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D691  9A					db	9Ah
020A:D692  021C 14FC				dw	21Ch, 14FCh
020A:D696  BD 6B9A				mov	bp,6B9Ah
020A:D699  26: 8B 45 04				mov	ax,es:[di+4]
020A:D69D  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D69D  9A					db	9Ah
020A:D69E  021C 14FC				dw	21Ch, 14FCh
020A:D6A2  26: 8B 4D 0A				mov	cx,es:[di+0Ah]
020A:D6A6  80 F9 02				cmp	cl,2
020A:D6A9  74 1F				je	loc_2177		; Jump if equal
020A:D6AB  80 F9 03				cmp	cl,3
020A:D6AE  74 1A				je	loc_2177		; Jump if equal
020A:D6B0  BD 6BA2				mov	bp,6BA2h
020A:D6B3  26: 8B 5D 06				mov	bx,es:[di+6]
020A:D6B7  33 C0				xor	ax,ax			; Zero register
020A:D6B9  E8 0FF0				call	sub_148			; (E6AC)
020A:D6BC  BD 6BA9				mov	bp,6BA9h
020A:D6BF  26: 8B 5D 08				mov	bx,es:[di+8]
020A:D6C3  33 C0				xor	ax,ax			; Zero register
020A:D6C5  E8 0FE4				call	sub_148			; (E6AC)
020A:D6C8  EB 14				jmp	short loc_2178		; (D6DE)
020A:D6CA			loc_2177:
020A:D6CA  33 C0				xor	ax,ax			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 437

020A:D6CC  BD 6BA2				mov	bp,6BA2h
020A:D6CF  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D6CF  9A					db	9Ah
020A:D6D0  021C 14FC				dw	21Ch, 14FCh
020A:D6D4  33 C0				xor	ax,ax			; Zero register
020A:D6D6  BD 6BA9				mov	bp,6BA9h
020A:D6D9  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D6D9  9A					db	9Ah
020A:D6DA  021C 14FC				dw	21Ch, 14FCh
020A:D6DE			loc_2178:
020A:D6DE  26: 8B 4D 0A				mov	cx,es:[di+0Ah]
020A:D6E2  8A C1				mov	al,cl
020A:D6E4  B3 06				mov	bl,6
020A:D6E6  F6 E3				mul	bl			; ax = reg * al
020A:D6E8  BE 3B67				mov	si,3B67h
020A:D6EB  03 F0				add	si,ax
020A:D6ED  BD 6BB0				mov	bp,6BB0h
020A:D6F0  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D6F0  9A					db	9Ah
020A:D6F1  4160 14FC				dw	4160h, 14FCh
020A:D6F5  BD 6BB6				mov	bp,6BB6h
020A:D6F8  BE 3BB5				mov	si,3BB5h
020A:D6FB  26: F6 45 0E 01			test	byte ptr es:[di+0Eh],1
020A:D700  74 03				jz	loc_2179		; Jump if zero
020A:D702  BE 3BBB				mov	si,3BBBh
020A:D705			loc_2179:
020A:D705  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D705  9A					db	9Ah
020A:D706  4160 14FC				dw	4160h, 14FCh
020A:D70A  BD 6BBD				mov	bp,6BBDh
020A:D70D  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:D711  A9 8000				test	ax,8000h
020A:D714  74 0F				jz	loc_2180		; Jump if zero
020A:D716  3E: C6 46 00 23			mov	byte ptr ds:[bp],23h	; '#'
020A:D71B  45					inc	bp
020A:D71C  32 E4				xor	ah,ah			; Zero register
020A:D71E  32 DB				xor	bl,bl			; Zero register
020A:D720  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:D720  9A					db	9Ah
020A:D721  0288 14FC				dw	288h, 14FCh
020A:D725			loc_2180:
020A:D725  BD 6BC2				mov	bp,6BC2h
020A:D728  26: 8B 05				mov	ax,es:[di]
020A:D72B  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:D731  83 C5 02				add	bp,2
020A:D734  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D734  9A					db	9Ah
020A:D735  021C 14FC				dw	21Ch, 14FCh
020A:D739  83 3E 35E9 02			cmp	data_458,2		; (020A:35E9=3C21h)
020A:D73E  73 09				jae	loc_2181		; Jump if above or =
020A:D740  F6 06 35D3 40			test	data_442,40h		; (020A:35D3=0C6h) '@'
020A:D745  75 02				jnz	loc_2181		; Jump if not zero
020A:D747  EB 50				jmp	short loc_2182		; (D799)
020A:D749			loc_2181:
020A:D749  2E: 80 3E 38A0 00			cmp	cs:data_493,0		; (020A:38A0=75h)
020A:D74F  74 48				je	loc_2182		; Jump if equal
020A:D751  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 438

020A:D756  45					inc	bp
020A:D757  3E: C7 46 00 3A44			mov	word ptr ds:[bp],3A44h
020A:D75D  83 C5 02				add	bp,2
020A:D760  26: 8B 45 11				mov	ax,es:[di+11h]
020A:D764  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D764  9A					db	9Ah
020A:D765  021C 14FC				dw	21Ch, 14FCh
020A:D769  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:D76E  45					inc	bp
020A:D76F  3E: C7 46 00 3A4C			mov	word ptr ds:[bp],3A4Ch
020A:D775  83 C5 02				add	bp,2
020A:D778  26: 8B 45 13				mov	ax,es:[di+13h]
020A:D77C  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D77C  9A					db	9Ah
020A:D77D  021C 14FC				dw	21Ch, 14FCh
020A:D781  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:D786  45					inc	bp
020A:D787  3E: C7 46 00 3A53			mov	word ptr ds:[bp],3A53h
020A:D78D  83 C5 02				add	bp,2
020A:D790  26: 8B 45 0F				mov	ax,es:[di+0Fh]
020A:D794  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D794  9A					db	9Ah
020A:D795  021C 14FC				dw	21Ch, 14FCh
020A:D799			loc_2182:
020A:D799  B0 34				mov	al,34h			; '4'
020A:D79B  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D79B  9A					db	9Ah
020A:D79C  2280 14FC				dw	2280h, 14FCh
020A:D7A0  83 C7 15				add	di,15h
020A:D7A3  58					pop	ax
020A:D7A4  FE C8				dec	al
020A:D7A6  74 03				jz	loc_2183		; Jump if zero
020A:D7A8  E9 FEBE				jmp	loc_2175		; (D669)
020A:D7AB			loc_2183:
020A:D7AB  83 3E 35E9 02			cmp	data_458,2		; (020A:35E9=3C21h)
020A:D7B0  73 07				jae	loc_2184		; Jump if above or =
020A:D7B2  F6 06 35D3 40			test	data_442,40h		; (020A:35D3=0C6h) '@'
020A:D7B7  74 4B				jz	loc_2186		; Jump if zero
020A:D7B9			loc_2184:
020A:D7B9  8A 0E 79DC				mov	cl,byte ptr ds:[79DCh]	; (020A:79DC=34h)
020A:D7BD  0A C9				or	cl,cl			; Zero ?
020A:D7BF  74 43				jz	loc_2186		; Jump if zero
020A:D7C1  BD 7510				mov	bp,7510h
020A:D7C4  3E: C7 46 00 4D45			mov	word ptr ds:[bp],4D45h
020A:D7CA  3E: C7 46 02 2053			mov	word ptr ds:[bp+2],2053h
020A:D7D0  83 C5 04				add	bp,4
020A:D7D3  32 ED				xor	ch,ch			; Zero register
020A:D7D5  8B 3E 79DD				mov	di,data_715		; (020A:79DD=375h)

020A:D7D9			locloop_2185:
020A:D7D9  8B 85 7912				mov	ax,data_706[di]		; (020A:7912=50h)
020A:D7DD  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D7DD  9A					db	9Ah
020A:D7DE  021C 14FC				dw	21Ch, 14FCh
020A:D7E2  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:D7E7  45					inc	bp
020A:D7E8  83 C7 02				add	di,2
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 439

020A:D7EB  E2 EC				loop	locloop_2185		; Loop if cx > 0

020A:D7ED  3E: C7 46 00 3A45			mov	word ptr ds:[bp],3A45h
020A:D7F3  45					inc	bp
020A:D7F4  45					inc	bp
020A:D7F5  A1 79DF				mov	ax,data_716		; (020A:79DF=87E9h)
020A:D7F8  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:D7F8  9A					db	9Ah
020A:D7F9  021C 14FC				dw	21Ch, 14FCh
020A:D7FD  B0 4F				mov	al,4Fh			; 'O'
020A:D7FF  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D7FF  9A					db	9Ah
020A:D800  2280 14FC				dw	2280h, 14FCh
020A:D804			loc_2186:
020A:D804  C6 06 5708 00			mov	data_671,0		; (020A:5708=8Bh)
020A:D809  1F					pop	ds
020A:D80A  C3					retn
							                        ;* No entry point to code
020A:D80B  90					nop
020A:D80C  56					push	si
020A:D80D  1E					push	ds
020A:D80E  E8 9834				call	sub_91			; (7045)
020A:D811  B0 4D				mov	al,4Dh			; 'M'
020A:D813  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D813  9A					db	9Ah
020A:D814  2280 14FC				dw	2280h, 14FCh
020A:D818  E8 9839				call	sub_93			; (7054)
020A:D81B  BF 0000				mov	di,0
020A:D81E  83 C7 15				add	di,15h
020A:D821			loc_2187:
020A:D821  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:D825  74 02				je	loc_2188		; Jump if equal
020A:D827  EB 07				jmp	short loc_2189		; (D830)
020A:D829			loc_2188:
020A:D829  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:D82E  74 42				je	loc_2191		; Jump if equal
020A:D830			loc_2189:
020A:D830  B8 2020				mov	ax,2020h
020A:D833  A3 74B1				mov	word ptr ds:[74B1h],ax	; (020A:74B1=771Ch)
020A:D836  A3 74EB				mov	word ptr ds:[74EBh],ax	; (020A:74EB=0FB70h)
020A:D839  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:D83D  BD 74B0				mov	bp,74B0h
020A:D840  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:D840  9A					db	9Ah
020A:D841  5778 14FC				dw	5778h, 14FCh
020A:D845  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:D849  BD 74EA				mov	bp,74EAh
020A:D84C  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:D84C  9A					db	9Ah
020A:D84D  5778 14FC				dw	5778h, 14FCh
020A:D851  BE 3BB5				mov	si,3BB5h
020A:D854  26: F6 45 0E 01			test	byte ptr es:[di+0Eh],1
020A:D859  74 03				jz	loc_2190		; Jump if zero
020A:D85B  BE 3BBB				mov	si,3BBBh
020A:D85E			loc_2190:
020A:D85E  BD 74E0				mov	bp,74E0h
020A:D861  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 440

020A:D861  9A					db	9Ah
020A:D862  4160 14FC				dw	4160h, 14FCh
020A:D866  B0 4E				mov	al,4Eh			; 'N'
020A:D868  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D868  9A					db	9Ah
020A:D869  2280 14FC				dw	2280h, 14FCh
020A:D86D  83 C7 15				add	di,15h
020A:D870  EB AF				jmp	short loc_2187		; (D821)
020A:D872			loc_2191:
020A:D872  1F					pop	ds
020A:D873  5E					pop	si
020A:D874  C3					retn
							                        ;* No entry point to code
020A:D875  87 DB				xchg	bx,bx
020A:D877  90					nop
020A:D878  E8 97E2				call	sub_95			; (705D)
020A:D87B  A0 35E1				mov	al,data_451		; (020A:35E1=98h)
020A:D87E  A2 35E2				mov	data_452,al		; (020A:35E2=0)
020A:D881  C6 06 35E1 02			mov	data_451,2		; (020A:35E1=98h)
020A:D886  B0 3F				mov	al,3Fh			; '?'
020A:D888  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:D888  9A					db	9Ah
020A:D889  2280 14FC				dw	2280h, 14FCh
020A:D88D  E8 8E6C				call	sub_81			; (66FC)
020A:D890  BD 2D3B				mov	bp,2D3Bh
020A:D893  BE 3CE5				mov	si,3CE5h
020A:D896  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D896  9A					db	9Ah
020A:D897  4160 14FC				dw	4160h, 14FCh
020A:D89B  8B 16 4E22				mov	dx,data_591		; (020A:4E22=0EDA3h)
020A:D89F  B9 0010				mov	cx,10h
020A:D8A2  B0 41				mov	al,41h			; 'A'
020A:D8A4  B7 20				mov	bh,20h			; ' '

020A:D8A6			locloop_2192:
020A:D8A6  8A D8				mov	bl,al
020A:D8A8  D1 D2				rcl	dx,1			; Rotate thru carry
020A:D8AA  72 03				jc	loc_2193		; Jump if carry Set
020A:D8AC  80 C3 20				add	bl,20h			; ' '
020A:D8AF			loc_2193:
020A:D8AF  3E: 89 5E 00				mov	ds:[bp],bx
020A:D8B3  45					inc	bp
020A:D8B4  45					inc	bp
020A:D8B5  FE C0				inc	al
020A:D8B7  E2 ED				loop	locloop_2192		; Loop if cx > 0

020A:D8B9  8A 16 4E7F				mov	dl,data_633		; (020A:4E7F=0E8h)
020A:D8BD  D0 CA				ror	dl,1			; Rotate
020A:D8BF  D0 CA				ror	dl,1			; Rotate
020A:D8C1  B1 04				mov	cl,4
020A:D8C3  B0 51				mov	al,51h			; 'Q'
020A:D8C5  B7 20				mov	bh,20h			; ' '

020A:D8C7			locloop_2194:
020A:D8C7  8A D8				mov	bl,al
020A:D8C9  F6 C2 01				test	dl,1
020A:D8CC  75 03				jnz	loc_2195		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 441

020A:D8CE  80 C3 20				add	bl,20h			; ' '
020A:D8D1			loc_2195:
020A:D8D1  3E: 89 5E 00				mov	ds:[bp],bx
020A:D8D5  45					inc	bp
020A:D8D6  45					inc	bp
020A:D8D7  FE C0				inc	al
020A:D8D9  D0 C2				rol	dl,1			; Rotate
020A:D8DB  E2 EA				loop	locloop_2194		; Loop if cx > 0

020A:D8DD  8B 16 4E24				mov	dx,data_592		; (020A:4E24=0A107h)
020A:D8E1  B9 0006				mov	cx,6
020A:D8E4  B0 55				mov	al,55h			; 'U'
020A:D8E6  B7 20				mov	bh,20h			; ' '

020A:D8E8			locloop_2196:
020A:D8E8  8A D8				mov	bl,al
020A:D8EA  D0 D2				rcl	dl,1			; Rotate thru carry
020A:D8EC  72 03				jc	loc_2197		; Jump if carry Set
020A:D8EE  80 C3 20				add	bl,20h			; ' '
020A:D8F1			loc_2197:
020A:D8F1  3E: 89 5E 00				mov	ds:[bp],bx
020A:D8F5  45					inc	bp
020A:D8F6  45					inc	bp
020A:D8F7  FE C0				inc	al
020A:D8F9  E2 ED				loop	locloop_2196		; Loop if cx > 0

020A:D8FB  BA 2D1B				mov	dx,2D1Bh
020A:D8FE  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D8FE  9A					db	9Ah
020A:D8FF  233C 14FC				dw	233Ch, 14FCh
020A:D903  E8 8DF6				call	sub_81			; (66FC)
020A:D906  BD 2D3B				mov	bp,2D3Bh
020A:D909  BE 3CF9				mov	si,3CF9h
020A:D90C  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D90C  9A					db	9Ah
020A:D90D  4160 14FC				dw	4160h, 14FCh
020A:D911  A0 30A0				mov	al,data_348		; (020A:30A0=33h)
020A:D914  BE 3E98				mov	si,3E98h
020A:D917  A8 01				test	al,1
020A:D919  75 34				jnz	loc_2199		; Jump if not zero
020A:D91B  BE 3E9D				mov	si,3E9Dh
020A:D91E  A8 02				test	al,2
020A:D920  75 2D				jnz	loc_2199		; Jump if not zero
020A:D922  BE 3EA5				mov	si,3EA5h
020A:D925  A8 04				test	al,4
020A:D927  75 26				jnz	loc_2199		; Jump if not zero
020A:D929  BE 3EAB				mov	si,3EABh
020A:D92C  A8 10				test	al,10h
020A:D92E  75 15				jnz	loc_2198		; Jump if not zero
020A:D930  BE 3EAF				mov	si,3EAFh
020A:D933  A8 20				test	al,20h			; ' '
020A:D935  75 0E				jnz	loc_2198		; Jump if not zero
020A:D937  BE 3EB3				mov	si,3EB3h
020A:D93A  A8 40				test	al,40h			; '@'
020A:D93C  75 07				jnz	loc_2198		; Jump if not zero
020A:D93E  BE 3EB7				mov	si,3EB7h
020A:D941  A8 80				test	al,80h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 442

020A:D943  75 0A				jnz	loc_2199		; Jump if not zero
020A:D945			loc_2198:
020A:D945  A8 08				test	al,8
020A:D947  74 06				jz	loc_2199		; Jump if zero
020A:D949  3E: C6 46 00 50			mov	byte ptr ds:[bp],50h	; 'P'
020A:D94E  45					inc	bp
020A:D94F			loc_2199:
020A:D94F  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D94F  9A					db	9Ah
020A:D950  4160 14FC				dw	4160h, 14FCh
020A:D954  BA 2D1B				mov	dx,2D1Bh
020A:D957  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D957  9A					db	9Ah
020A:D958  233C 14FC				dw	233Ch, 14FCh
020A:D95C  F6 06 30B2 80			test	data_352,80h		; (020A:30B2=4Fh)
020A:D961  75 28				jnz	loc_2201		; Jump if not zero
020A:D963  E8 8D96				call	sub_81			; (66FC)
020A:D966  BD 2D3B				mov	bp,2D3Bh
020A:D969  BE 3DFE				mov	si,3DFEh
020A:D96C  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D96C  9A					db	9Ah
020A:D96D  4160 14FC				dw	4160h, 14FCh
020A:D971  BE 3EC2				mov	si,3EC2h
020A:D974  F6 06 30B0 1F			test	byte ptr ds:[30B0h],1Fh	; (020A:30B0=2Eh)
020A:D979  74 03				jz	loc_2200		; Jump if zero
020A:D97B  BE 3EBF				mov	si,3EBFh
020A:D97E			loc_2200:
020A:D97E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D97E  9A					db	9Ah
020A:D97F  4160 14FC				dw	4160h, 14FCh
020A:D983  BA 2D1B				mov	dx,2D1Bh
020A:D986  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D986  9A					db	9Ah
020A:D987  233C 14FC				dw	233Ch, 14FCh
020A:D98B			loc_2201:
020A:D98B  E8 8D6E				call	sub_81			; (66FC)
020A:D98E  BD 2D3B				mov	bp,2D3Bh
020A:D991  BE 3D0D				mov	si,3D0Dh
020A:D994  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D994  9A					db	9Ah
020A:D995  4160 14FC				dw	4160h, 14FCh
020A:D999  A1 3277				mov	ax,word ptr ds:[3277h]	; (020A:3277=5325h)
020A:D99C  3E: 89 46 00				mov	ds:[bp],ax
020A:D9A0  83 C5 02				add	bp,2
020A:D9A3  A0 3279				mov	al,data_378		; (020A:3279=52h)
020A:D9A6  3E: 88 46 00				mov	ds:[bp],al
020A:D9AA  BA 2D1B				mov	dx,2D1Bh
020A:D9AD  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D9AD  9A					db	9Ah
020A:D9AE  233C 14FC				dw	233Ch, 14FCh
020A:D9B2  80 3E 35DF 00			cmp	data_450,0		; (020A:35DF=80h)
020A:D9B7  75 16				jne	loc_2202		; Jump if not equal
020A:D9B9  E8 8D40				call	sub_81			; (66FC)
020A:D9BC  BD 2D3B				mov	bp,2D3Bh
020A:D9BF  BE 3E4E				mov	si,3E4Eh
020A:D9C2  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D9C2  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 443

020A:D9C3  4160 14FC				dw	4160h, 14FCh
020A:D9C7  BA 2D1B				mov	dx,2D1Bh
020A:D9CA  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D9CA  9A					db	9Ah
020A:D9CB  233C 14FC				dw	233Ch, 14FCh
020A:D9CF			loc_2202:
020A:D9CF  F6 06 35E3 01			test	data_453,1		; (020A:35E3=1)
020A:D9D4  74 16				jz	loc_2203		; Jump if zero
020A:D9D6  E8 8D23				call	sub_81			; (66FC)
020A:D9D9  BD 2D3B				mov	bp,2D3Bh
020A:D9DC  BE 3E73				mov	si,3E73h
020A:D9DF  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:D9DF  9A					db	9Ah
020A:D9E0  4160 14FC				dw	4160h, 14FCh
020A:D9E4  BA 2D1B				mov	dx,2D1Bh
020A:D9E7  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:D9E7  9A					db	9Ah
020A:D9E8  233C 14FC				dw	233Ch, 14FCh
020A:D9EC			loc_2203:
020A:D9EC  80 3E 3032 03			cmp	data_289,3		; (020A:3032=52h)
020A:D9F1  77 3D				ja	loc_2205		; Jump if above
020A:D9F3  80 3E 3032 00			cmp	data_289,0		; (020A:3032=52h)
020A:D9F8  74 36				je	loc_2205		; Jump if equal
020A:D9FA  E8 8CFF				call	sub_81			; (66FC)
020A:D9FD  BD 2D3B				mov	bp,2D3Bh
020A:DA00  BE 3DAE				mov	si,3DAEh
020A:DA03  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DA03  9A					db	9Ah
020A:DA04  4160 14FC				dw	4160h, 14FCh
020A:DA08  A0 3032				mov	al,data_289		; (020A:3032=52h)
020A:DA0B  BE 3F1D				mov	si,3F1Dh
020A:DA0E  3C 01				cmp	al,1
020A:DA10  74 11				je	loc_2204		; Jump if equal
020A:DA12  BE 3F26				mov	si,3F26h
020A:DA15  3C 02				cmp	al,2
020A:DA17  74 0A				je	loc_2204		; Jump if equal
020A:DA19  BE 3F22				mov	si,3F22h
020A:DA1C  3C 03				cmp	al,3
020A:DA1E  74 03				je	loc_2204		; Jump if equal
020A:DA20  BE 3FF1				mov	si,3FF1h
020A:DA23			loc_2204:
020A:DA23  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DA23  9A					db	9Ah
020A:DA24  4160 14FC				dw	4160h, 14FCh
020A:DA28  BA 2D1B				mov	dx,2D1Bh
020A:DA2B  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DA2B  9A					db	9Ah
020A:DA2C  233C 14FC				dw	233Ch, 14FCh
020A:DA30			loc_2205:
020A:DA30  E8 8CC9				call	sub_81			; (66FC)
020A:DA33  BD 2D3B				mov	bp,2D3Bh
020A:DA36  BE 3DC2				mov	si,3DC2h
020A:DA39  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DA39  9A					db	9Ah
020A:DA3A  4160 14FC				dw	4160h, 14FCh
020A:DA3E  A0 15D0				mov	al,data_161		; (020A:15D0=0)
020A:DA41  BE 3F2B				mov	si,3F2Bh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 444

020A:DA44  3C 00				cmp	al,0
020A:DA46  74 11				je	loc_2206		; Jump if equal
020A:DA48  BE 3F33				mov	si,3F33h
020A:DA4B  3C 01				cmp	al,1
020A:DA4D  74 0A				je	loc_2206		; Jump if equal
020A:DA4F  BE 3F3D				mov	si,3F3Dh
020A:DA52  3C 02				cmp	al,2
020A:DA54  74 03				je	loc_2206		; Jump if equal
020A:DA56  BE 3F4E				mov	si,3F4Eh
020A:DA59			loc_2206:
020A:DA59  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DA59  9A					db	9Ah
020A:DA5A  4160 14FC				dw	4160h, 14FCh
020A:DA5E  BA 2D1B				mov	dx,2D1Bh
020A:DA61  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DA61  9A					db	9Ah
020A:DA62  233C 14FC				dw	233Ch, 14FCh
020A:DA66  E8 8C93				call	sub_81			; (66FC)
020A:DA69  BD 2D3B				mov	bp,2D3Bh
020A:DA6C  BE 3DD6				mov	si,3DD6h
020A:DA6F  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DA6F  9A					db	9Ah
020A:DA70  4160 14FC				dw	4160h, 14FCh
020A:DA74  A0 16AB				mov	al,data_166		; (020A:16AB=41h)
020A:DA77  BE 3F66				mov	si,3F66h
020A:DA7A  3C 00				cmp	al,0
020A:DA7C  74 34				je	loc_2207		; Jump if equal
020A:DA7E  BE 3F6B				mov	si,3F6Bh
020A:DA81  3C 01				cmp	al,1
020A:DA83  74 2D				je	loc_2207		; Jump if equal
020A:DA85  BE 3F7B				mov	si,3F7Bh
020A:DA88  3C 02				cmp	al,2
020A:DA8A  74 26				je	loc_2207		; Jump if equal
020A:DA8C  BE 3FC9				mov	si,3FC9h
020A:DA8F  3C 03				cmp	al,3
020A:DA91  74 1F				je	loc_2207		; Jump if equal
020A:DA93  BE 3F90				mov	si,3F90h
020A:DA96  3C 04				cmp	al,4
020A:DA98  74 18				je	loc_2207		; Jump if equal
020A:DA9A  BE 3FB2				mov	si,3FB2h
020A:DA9D  3C 05				cmp	al,5
020A:DA9F  74 11				je	loc_2207		; Jump if equal
020A:DAA1  BE 3FA0				mov	si,3FA0h
020A:DAA4  3C 06				cmp	al,6
020A:DAA6  74 0A				je	loc_2207		; Jump if equal
020A:DAA8  BE 3F9C				mov	si,3F9Ch
020A:DAAB  3C 07				cmp	al,7
020A:DAAD  74 03				je	loc_2207		; Jump if equal
020A:DAAF  BE 3FF1				mov	si,3FF1h
020A:DAB2			loc_2207:
020A:DAB2  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DAB2  9A					db	9Ah
020A:DAB3  4160 14FC				dw	4160h, 14FCh
020A:DAB7  BA 2D1B				mov	dx,2D1Bh
020A:DABA  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DABA  9A					db	9Ah
020A:DABB  233C 14FC				dw	233Ch, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 445

020A:DABF  E8 8C3A				call	sub_81			; (66FC)
020A:DAC2  BD 2D3B				mov	bp,2D3Bh
020A:DAC5  BE 3E5F				mov	si,3E5Fh
020A:DAC8  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DAC8  9A					db	9Ah
020A:DAC9  4160 14FC				dw	4160h, 14FCh
020A:DACD  BE 3EC2				mov	si,3EC2h
020A:DAD0  F6 06 35E4 01			test	data_454,1		; (020A:35E4=74h)
020A:DAD5  74 0D				jz	loc_2208		; Jump if zero
020A:DAD7  BE 3EC6				mov	si,3EC6h
020A:DADA  F6 06 35E4 06			test	data_454,6		; (020A:35E4=74h)
020A:DADF  75 03				jnz	loc_2208		; Jump if not zero
020A:DAE1  BE 3ECA				mov	si,3ECAh
020A:DAE4			loc_2208:
020A:DAE4  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DAE4  9A					db	9Ah
020A:DAE5  4160 14FC				dw	4160h, 14FCh
020A:DAE9  BA 2D1B				mov	dx,2D1Bh
020A:DAEC  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DAEC  9A					db	9Ah
020A:DAED  233C 14FC				dw	233Ch, 14FCh
020A:DAF1  E8 8C08				call	sub_81			; (66FC)
020A:DAF4  BD 2D3B				mov	bp,2D3Bh
020A:DAF7  BE 3E84				mov	si,3E84h
020A:DAFA  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DAFA  9A					db	9Ah
020A:DAFB  4160 14FC				dw	4160h, 14FCh
020A:DAFF  BE 13E8				mov	si,13E8h
020A:DB02  A0 13E4				mov	al,data_154		; (020A:13E4=0)
020A:DB05  32 C9				xor	cl,cl			; Zero register
020A:DB07			loc_2209:
020A:DB07  3A 04				cmp	al,[si]
020A:DB09  74 0F				je	loc_2211		; Jump if equal
020A:DB0B  FE C1				inc	cl
020A:DB0D  80 F9 0D				cmp	cl,0Dh
020A:DB10  73 05				jae	loc_2210		; Jump if above or =
020A:DB12  83 C6 10				add	si,10h
020A:DB15  EB F0				jmp	short loc_2209		; (DB07)
020A:DB17			loc_2210:
020A:DB17  BE 13E8				mov	si,13E8h
020A:DB1A			loc_2211:
020A:DB1A  8D 4C 0B				lea	cx,[si+0Bh]		; Load effective addr
020A:DB1D  8D 74 01				lea	si,[si+1]		; Load effective addr
020A:DB20  2B CE				sub	cx,si
020A:DB22  FC					cld				; Clear direction

020A:DB23			locloop_2212:
020A:DB23  AC					lodsb				; String [si] to al
020A:DB24  3C 20				cmp	al,20h			; ' '
020A:DB26  74 07				je	loc_2213		; Jump if equal
020A:DB28  3E: 88 46 00				mov	ds:[bp],al
020A:DB2C  45					inc	bp
020A:DB2D  E2 F4				loop	locloop_2212		; Loop if cx > 0

020A:DB2F			loc_2213:
020A:DB2F  80 3E 14FA 00			cmp	data_157,0		; (020A:14FA=0)
020A:DB34  74 12				je	loc_2215		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 446

020A:DB36  BE 3FD7				mov	si,3FD7h
020A:DB39  80 3E 14FA 01			cmp	data_157,1		; (020A:14FA=0)
020A:DB3E  74 03				je	loc_2214		; Jump if equal
020A:DB40  BE 3FE4				mov	si,3FE4h
020A:DB43			loc_2214:
020A:DB43  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DB43  9A					db	9Ah
020A:DB44  4160 14FC				dw	4160h, 14FCh
020A:DB48			loc_2215:
020A:DB48  BA 2D1B				mov	dx,2D1Bh
020A:DB4B  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DB4B  9A					db	9Ah
020A:DB4C  233C 14FC				dw	233Ch, 14FCh
020A:DB50  80 3E 35E8 3B			cmp	data_457,3Bh		; (020A:35E8=0CDh) ';'
020A:DB55  75 07				jne	loc_2216		; Jump if not equal
020A:DB57  80 3E 35E2 02			cmp	data_452,2		; (020A:35E2=0)
020A:DB5C  74 44				je	loc_2218		; Jump if equal
020A:DB5E			loc_2216:
020A:DB5E  E8 8B9B				call	sub_81			; (66FC)
020A:DB61  BD 2D3B				mov	bp,2D3Bh
020A:DB64  BE 3DEA				mov	si,3DEAh
020A:DB67  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DB67  9A					db	9Ah
020A:DB68  4160 14FC				dw	4160h, 14FCh
020A:DB6C  32 E4				xor	ah,ah			; Zero register
020A:DB6E  8A DC				mov	bl,ah
020A:DB70  A0 35E8				mov	al,data_457		; (020A:35E8=0CDh)
020A:DB73  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:DB73  9A					db	9Ah
020A:DB74  0288 14FC				dw	288h, 14FCh
020A:DB78  80 3E 35E2 02			cmp	data_452,2		; (020A:35E2=0)
020A:DB7D  74 1B				je	loc_2217		; Jump if equal
020A:DB7F  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:DB84  45					inc	bp
020A:DB85  3E: C7 46 00 6320			mov	word ptr ds:[bp],6320h
020A:DB8B  83 C5 02				add	bp,2
020A:DB8E  32 E4				xor	ah,ah			; Zero register
020A:DB90  8A DC				mov	bl,ah
020A:DB92  A0 35E2				mov	al,data_452		; (020A:35E2=0)
020A:DB95  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:DB95  9A					db	9Ah
020A:DB96  0288 14FC				dw	288h, 14FCh
020A:DB9A			loc_2217:
020A:DB9A  BA 2D1B				mov	dx,2D1Bh
020A:DB9D  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DB9D  9A					db	9Ah
020A:DB9E  233C 14FC				dw	233Ch, 14FCh
020A:DBA2			loc_2218:
020A:DBA2  83 3E 3035 00			cmp	data_291,0		; (020A:3035=415Ch)
020A:DBA7  74 1E				je	loc_2219		; Jump if equal
020A:DBA9  E8 8B50				call	sub_81			; (66FC)
020A:DBAC  BD 2D3B				mov	bp,2D3Bh
020A:DBAF  BE 3E12				mov	si,3E12h
020A:DBB2  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DBB2  9A					db	9Ah
020A:DBB3  4160 14FC				dw	4160h, 14FCh
020A:DBB7  A1 3035				mov	ax,data_291		; (020A:3035=415Ch)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 447

020A:DBBA  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DBBA  9A					db	9Ah
020A:DBBB  021C 14FC				dw	21Ch, 14FCh
020A:DBBF  BA 2D1B				mov	dx,2D1Bh
020A:DBC2  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DBC2  9A					db	9Ah
020A:DBC3  233C 14FC				dw	233Ch, 14FCh
020A:DBC7			loc_2219:
020A:DBC7  80 3E 2BE6 00			cmp	data_253,0		; (020A:2BE6=72h)
020A:DBCC  75 03				jne	loc_2220		; Jump if not equal
020A:DBCE  E9 00BA				jmp	loc_2231		; (DC8B)
020A:DBD1			loc_2220:
020A:DBD1  E8 8B28				call	sub_81			; (66FC)
020A:DBD4  BD 2D3B				mov	bp,2D3Bh
020A:DBD7  BE 3E3A				mov	si,3E3Ah
020A:DBDA  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DBDA  9A					db	9Ah
020A:DBDB  4160 14FC				dw	4160h, 14FCh
020A:DBDF  33 FF				xor	di,di			; Zero register
020A:DBE1  EB 09				jmp	short loc_2222		; (DBEC)
020A:DBE3			loc_2221:
020A:DBE3  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:DBE9  83 C5 02				add	bp,2
020A:DBEC			loc_2222:
020A:DBEC  8B 85 2BE7				mov	ax,data_254[di]		; (020A:2BE7=4C00h)
020A:DBF0  8B 95 2BE9				mov	dx,data_255[di]		; (020A:2BE9=474Fh)
020A:DBF4  80 3E 2BE6 01			cmp	data_253,1		; (020A:2BE6=72h)
020A:DBF9  74 16				je	loc_2223		; Jump if equal
020A:DBFB  3E: C7 46 00 7856			mov	word ptr ds:[bp],7856h
020A:DC01  3E: C7 46 02 2044			mov	word ptr ds:[bp+2],2044h
020A:DC07  83 C5 04				add	bp,4
020A:DC0A  A1 2C0F				mov	ax,data_258		; (020A:2C0F=505Fh)
020A:DC0D  8B 16 2C11				mov	dx,data_259		; (020A:2C11=4F52h)
020A:DC11			loc_2223:
020A:DC11  3D 0000				cmp	ax,0
020A:DC14  74 0B				je	loc_2224		; Jump if equal
020A:DC16  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DC16  9A					db	9Ah
020A:DC17  021C 14FC				dw	21Ch, 14FCh
020A:DC1B  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:DC20  45					inc	bp
020A:DC21			loc_2224:
020A:DC21  8B C2				mov	ax,dx
020A:DC23  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DC23  9A					db	9Ah
020A:DC24  021C 14FC				dw	21Ch, 14FCh
020A:DC28  80 3E 2BE6 02			cmp	data_253,2		; (020A:2BE6=72h)
020A:DC2D  74 54				je	loc_2230		; Jump if equal
020A:DC2F  83 BD 2BEB 00			cmp	data_256[di],0		; (020A:2BEB=4E4Fh)
020A:DC34  75 07				jne	loc_2225		; Jump if not equal
020A:DC36  83 BD 2BED 00			cmp	data_257[di],0		; (020A:2BED=4553h)
020A:DC3B  74 28				je	loc_2227		; Jump if equal
020A:DC3D			loc_2225:
020A:DC3D  3E: C7 46 00 202C			mov	word ptr ds:[bp],202Ch
020A:DC43  83 C5 02				add	bp,2
020A:DC46  83 BD 2BEB 00			cmp	data_256[di],0		; (020A:2BEB=4E4Fh)
020A:DC4B  74 0F				je	loc_2226		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 448

020A:DC4D  8B 85 2BEB				mov	ax,data_256[di]		; (020A:2BEB=4E4Fh)
020A:DC51  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DC51  9A					db	9Ah
020A:DC52  021C 14FC				dw	21Ch, 14FCh
020A:DC56  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:DC5B  45					inc	bp
020A:DC5C			loc_2226:
020A:DC5C  8B 85 2BED				mov	ax,data_257[di]		; (020A:2BED=4553h)
020A:DC60  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DC60  9A					db	9Ah
020A:DC61  021C 14FC				dw	21Ch, 14FCh
020A:DC65			loc_2227:
020A:DC65  83 C7 08				add	di,8
020A:DC68  83 FF 20				cmp	di,20h
020A:DC6B  77 16				ja	loc_2230		; Jump if above
020A:DC6D  B9 0004				mov	cx,4
020A:DC70  33 DB				xor	bx,bx			; Zero register

020A:DC72			locloop_2228:
020A:DC72  83 B9 2BE7 00			cmp	data_254[bx+di],0	; (020A:2BE7=4C00h)
020A:DC77  75 07				jne	loc_2229		; Jump if not equal
020A:DC79  83 C3 02				add	bx,2
020A:DC7C  E2 F4				loop	locloop_2228		; Loop if cx > 0

020A:DC7E  EB 03				jmp	short loc_2230		; (DC83)
020A:DC80			loc_2229:
020A:DC80  E9 FF60				jmp	loc_2221		; (DBE3)
020A:DC83			loc_2230:
020A:DC83  BA 2D1B				mov	dx,2D1Bh
020A:DC86  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DC86  9A					db	9Ah
020A:DC87  233C 14FC				dw	233Ch, 14FCh
020A:DC8B			loc_2231:
020A:DC8B  BF 31F0				mov	di,31F0h
020A:DC8E  B0 2E				mov	al,2Eh			; '.'
020A:DC90  B9 0040				mov	cx,40h
020A:DC93  FC					cld				; Clear direction
020A:DC94  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:DC96  E3 30				jcxz	loc_2234		; Jump if cx=0
020A:DC98  8B 05				mov	ax,[di]
020A:DC9A  25 DFDF				and	ax,0DFDFh
020A:DC9D  3D 4544				cmp	ax,4544h
020A:DCA0  74 26				je	loc_2234		; Jump if equal
020A:DCA2  E8 8A57				call	sub_81			; (66FC)
020A:DCA5  BD 2D3B				mov	bp,2D3Bh
020A:DCA8  BE 3D86				mov	si,3D86h
020A:DCAB  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DCAB  9A					db	9Ah
020A:DCAC  4160 14FC				dw	4160h, 14FCh
020A:DCB0  BE 31F0				mov	si,31F0h
020A:DCB3  8B FD				mov	di,bp
020A:DCB5  B9 0040				mov	cx,40h

020A:DCB8			locloop_2232:
020A:DCB8  AC					lodsb				; String [si] to al
020A:DCB9  3C 00				cmp	al,0
020A:DCBB  74 03				je	loc_2233		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 449

020A:DCBD  AA					stosb				; Store al to es:[di]
020A:DCBE  E2 F8				loop	locloop_2232		; Loop if cx > 0

020A:DCC0			loc_2233:
020A:DCC0  BA 2D1B				mov	dx,2D1Bh
020A:DCC3  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DCC3  9A					db	9Ah
020A:DCC4  233C 14FC				dw	233Ch, 14FCh
020A:DCC8			loc_2234:
020A:DCC8  E8 8A31				call	sub_81			; (66FC)
020A:DCCB  BD 2D3B				mov	bp,2D3Bh
020A:DCCE  BE 3D4A				mov	si,3D4Ah
020A:DCD1  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DCD1  9A					db	9Ah
020A:DCD2  4160 14FC				dw	4160h, 14FCh
020A:DCD6  A0 327F				mov	al,byte ptr ds:[327Fh]	; (020A:327F=0)
020A:DCD9  BE 3ECF				mov	si,3ECFh
020A:DCDC  3C 01				cmp	al,1
020A:DCDE  74 34				je	loc_2235		; Jump if equal
020A:DCE0  BE 3ED8				mov	si,3ED8h
020A:DCE3  3C 02				cmp	al,2
020A:DCE5  74 2D				je	loc_2235		; Jump if equal
020A:DCE7  BE 3EDC				mov	si,3EDCh
020A:DCEA  3C 03				cmp	al,3
020A:DCEC  74 26				je	loc_2235		; Jump if equal
020A:DCEE  BE 3EE0				mov	si,3EE0h
020A:DCF1  3C 04				cmp	al,4
020A:DCF3  74 1F				je	loc_2235		; Jump if equal
020A:DCF5  BE 3EEB				mov	si,3EEBh
020A:DCF8  3C 05				cmp	al,5
020A:DCFA  74 18				je	loc_2235		; Jump if equal
020A:DCFC  BE 3EF9				mov	si,3EF9h
020A:DCFF  3C 06				cmp	al,6
020A:DD01  74 11				je	loc_2235		; Jump if equal
020A:DD03  BE 3F01				mov	si,3F01h
020A:DD06  3C 07				cmp	al,7
020A:DD08  74 0A				je	loc_2235		; Jump if equal
020A:DD0A  BE 3F09				mov	si,3F09h
020A:DD0D  3C 08				cmp	al,8
020A:DD0F  74 03				je	loc_2235		; Jump if equal
020A:DD11  BE 3F15				mov	si,3F15h
020A:DD14			loc_2235:
020A:DD14  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DD14  9A					db	9Ah
020A:DD15  4160 14FC				dw	4160h, 14FCh
020A:DD19  BA 2D1B				mov	dx,2D1Bh
020A:DD1C  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DD1C  9A					db	9Ah
020A:DD1D  233C 14FC				dw	233Ch, 14FCh
020A:DD21  E8 89D8				call	sub_81			; (66FC)
020A:DD24  BD 2D3B				mov	bp,2D3Bh
020A:DD27  BF 0378				mov	di,378h
020A:DD2A  B0 20				mov	al,20h			; ' '
020A:DD2C  B9 0020				mov	cx,20h
020A:DD2F  FC					cld				; Clear direction
020A:DD30  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:DD32  E3 1D				jcxz	loc_2236		; Jump if cx=0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 450

020A:DD34  BE 3D5E				mov	si,3D5Eh
020A:DD37  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DD37  9A					db	9Ah
020A:DD38  4160 14FC				dw	4160h, 14FCh
020A:DD3C  B9 0010				mov	cx,10h
020A:DD3F  BE 0378				mov	si,378h
020A:DD42  8B FD				mov	di,bp
020A:DD44  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:DD46  83 C5 20				add	bp,20h
020A:DD49  BA 2D1B				mov	dx,2D1Bh
020A:DD4C  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DD4C  9A					db	9Ah
020A:DD4D  233C 14FC				dw	233Ch, 14FCh
020A:DD51			loc_2236:
020A:DD51  E8 89A8				call	sub_81			; (66FC)
020A:DD54  BD 2D3B				mov	bp,2D3Bh
020A:DD57  BE 3D72				mov	si,3D72h
020A:DD5A  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DD5A  9A					db	9Ah
020A:DD5B  4160 14FC				dw	4160h, 14FCh
020A:DD5F  A0 30CE				mov	al,byte ptr data_369	; (020A:30CE='.JS;.JSE;.WSF;.W')
020A:DD62  04 41				add	al,41h			; 'A'
020A:DD64  3E: 88 46 00				mov	ds:[bp],al
020A:DD68  BA 2D1B				mov	dx,2D1Bh
020A:DD6B  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DD6B  9A					db	9Ah
020A:DD6C  233C 14FC				dw	233Ch, 14FCh
020A:DD70  E8 8989				call	sub_81			; (66FC)
020A:DD73  BD 2D3B				mov	bp,2D3Bh
020A:DD76  BE 3D9A				mov	si,3D9Ah
020A:DD79  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DD79  9A					db	9Ah
020A:DD7A  4160 14FC				dw	4160h, 14FCh
020A:DD7E  BE 3233				mov	si,3233h
020A:DD81  8B FD				mov	di,bp
020A:DD83  B9 0029				mov	cx,29h
020A:DD86  FC					cld				; Clear direction

020A:DD87			locloop_2237:
020A:DD87  AC					lodsb				; String [si] to al
020A:DD88  3C 00				cmp	al,0
020A:DD8A  74 03				je	loc_2238		; Jump if equal
020A:DD8C  AA					stosb				; Store al to es:[di]
020A:DD8D  E2 F8				loop	locloop_2237		; Loop if cx > 0

020A:DD8F			loc_2238:
020A:DD8F  B0 2E				mov	al,2Eh			; '.'
020A:DD91  8B FD				mov	di,bp
020A:DD93  B9 0029				mov	cx,29h
020A:DD96  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:DD98  BE 3277				mov	si,3277h
020A:DD9B  B9 0003				mov	cx,3
020A:DD9E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:DDA0  BA 2D1B				mov	dx,2D1Bh
020A:DDA3  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DDA3  9A					db	9Ah
020A:DDA4  233C 14FC				dw	233Ch, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 451

020A:DDA8  E8 8951				call	sub_81			; (66FC)
020A:DDAB  BD 2D3B				mov	bp,2D3Bh
020A:DDAE  BE 3D21				mov	si,3D21h
020A:DDB1  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DDB1  9A					db	9Ah
020A:DDB2  4160 14FC				dw	4160h, 14FCh
020A:DDB6  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:DDB9  D0 E8				shr	al,1			; Shift w/zeros fill
020A:DDBB  32 DB				xor	bl,bl			; Zero register
020A:DDBD  8A E3				mov	ah,bl
020A:DDBF  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:DDBF  9A					db	9Ah
020A:DDC0  0288 14FC				dw	288h, 14FCh
020A:DDC4  BA 2D1B				mov	dx,2D1Bh
020A:DDC7  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DDC7  9A					db	9Ah
020A:DDC8  233C 14FC				dw	233Ch, 14FCh
020A:DDCC  A0 4E7F				mov	al,data_633		; (020A:4E7F=0E8h)
020A:DDCF  24 07				and	al,7
020A:DDD1  3C 00				cmp	al,0
020A:DDD3  74 06				je	loc_2239		; Jump if equal
020A:DDD5  3C 07				cmp	al,7
020A:DDD7  74 02				je	loc_2239		; Jump if equal
020A:DDD9  EB 33				jmp	short loc_2242		; (DE0E)
020A:DDDB			loc_2239:
020A:DDDB  E8 891E				call	sub_81			; (66FC)
020A:DDDE  BD 2D3B				mov	bp,2D3Bh
020A:DDE1  BE 3D35				mov	si,3D35h
020A:DDE4  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DDE4  9A					db	9Ah
020A:DDE5  4160 14FC				dw	4160h, 14FCh
020A:DDE9  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:DDEC  D0 E8				shr	al,1			; Shift w/zeros fill
020A:DDEE  3C 05				cmp	al,5
020A:DDF0  72 0E				jb	loc_2240		; Jump if below
020A:DDF2  F6 06 4E7F 07			test	data_633,7		; (020A:4E7F=0E8h)
020A:DDF7  74 07				jz	loc_2240		; Jump if zero
020A:DDF9  3E: C6 46 00 4E			mov	byte ptr ds:[bp],4Eh	; 'N'
020A:DDFE  EB 06				jmp	short loc_2241		; (DE06)
020A:DE00			loc_2240:
020A:DE00  3E: C7 46 00 4646			mov	word ptr ds:[bp],4646h
020A:DE06			loc_2241:
020A:DE06  BA 2D1B				mov	dx,2D1Bh
020A:DE09  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DE09  9A					db	9Ah
020A:DE0A  233C 14FC				dw	233Ch, 14FCh
020A:DE0E			loc_2242:
020A:DE0E  E8 88EB				call	sub_81			; (66FC)
020A:DE11  BD 2D3B				mov	bp,2D3Bh
020A:DE14  BA 2D1B				mov	dx,2D1Bh
020A:DE17  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DE17  9A					db	9Ah
020A:DE18  233C 14FC				dw	233Ch, 14FCh
020A:DE1C  BD 2D3B				mov	bp,2D3Bh
020A:DE1F  BA 2D1B				mov	dx,2D1Bh
020A:DE22  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DE22  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 452

020A:DE23  233C 14FC				dw	233Ch, 14FCh
020A:DE27  A0 35E2				mov	al,data_452		; (020A:35E2=0)
020A:DE2A  A2 35E1				mov	data_451,al		; (020A:35E1=98h)
020A:DE2D  C3					retn
							                        ;* No entry point to code
020A:DE2E  87 DB				xchg	bx,bx
020A:DE30  50					push	ax
020A:DE31  53					push	bx
020A:DE32  51					push	cx
020A:DE33  52					push	dx
020A:DE34  56					push	si
020A:DE35  57					push	di
020A:DE36  55					push	bp
020A:DE37  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:DE3C  1E					push	ds
020A:DE3D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:DE42  06					push	es
020A:DE43  FC					cld				; Clear direction
020A:DE44  BF 0008				mov	di,8
020A:DE47			loc_2243:
020A:DE47  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:DE4C  72 03				jb	loc_2244		; Jump if below
020A:DE4E  E9 01CE				jmp	loc_2266		; (E01F)
020A:DE51			loc_2244:
020A:DE51  26: 8A 45 04				mov	al,es:[di+4]
020A:DE55  A8 60				test	al,60h			; '`'
020A:DE57  75 03				jnz	loc_2245		; Jump if not zero
020A:DE59  E9 01AB				jmp	loc_2264		; (E007)
020A:DE5C			loc_2245:
020A:DE5C  E8 889D				call	sub_81			; (66FC)
020A:DE5F  BD 2D3B				mov	bp,2D3Bh
020A:DE62  26: 8B 1D				mov	bx,es:[di]
020A:DE65  83 FB 00				cmp	bx,0
020A:DE68  75 63				jne	loc_2250		; Jump if not equal
020A:DE6A  26: 81 7D 02 03FF			cmp	word ptr es:[di+2],3FFh
020A:DE70  77 5B				ja	loc_2250		; Jump if above
020A:DE72  BE 38A2				mov	si,38A2h
020A:DE75  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DE75  9A					db	9Ah
020A:DE76  4160 14FC				dw	4160h, 14FCh
020A:DE7A  8B C5				mov	ax,bp
020A:DE7C  2D 2D3B				sub	ax,2D3Bh
020A:DE7F  3D 000D				cmp	ax,0Dh
020A:DE82  73 06				jae	loc_2246		; Jump if above or =
020A:DE84  BD 2D3B				mov	bp,2D3Bh
020A:DE87  83 C5 0C				add	bp,0Ch
020A:DE8A			loc_2246:
020A:DE8A  45					inc	bp
020A:DE8B  BB 0009				mov	bx,9
020A:DE8E  26: 8A 09				mov	cl,es:[bx+di]
020A:DE91  32 ED				xor	ch,ch			; Zero register

020A:DE93			locloop_2247:
020A:DE93  43					inc	bx
020A:DE94  26: 80 39 00				cmp	byte ptr es:[bx+di],0
020A:DE98  74 17				je	loc_2248		; Jump if equal
020A:DE9A  3E: C7 46 00 423F			mov	word ptr ds:[bp],423Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 453

020A:DEA0  83 C5 02				add	bp,2
020A:DEA3  26: 80 39 01				cmp	byte ptr es:[bx+di],1
020A:DEA7  74 13				je	loc_2249		; Jump if equal
020A:DEA9  3E: C6 46 FF 57			mov	byte ptr ds:[bp-1],57h	; 'W'
020A:DEAE  49					dec	cx
020A:DEAF  EB 0B				jmp	short loc_2249		; (DEBC)
020A:DEB1			loc_2248:
020A:DEB1  43					inc	bx
020A:DEB2  26: 8A 01				mov	al,es:[bx+di]
020A:DEB5  53					push	bx
020A:DEB6  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:DEB6  9A					db	9Ah
020A:DEB7  022C 14FC				dw	22Ch, 14FCh
020A:DEBB  5B					pop	bx
020A:DEBC			loc_2249:
020A:DEBC  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:DEC1  45					inc	bp
020A:DEC2  E2 CF				loop	locloop_2247		; Loop if cx > 0

020A:DEC4  3E: C6 46 FF 20			mov	byte ptr ds:[bp-1],20h	; ' '
020A:DEC9  45					inc	bp
020A:DECA  E9 0090				jmp	loc_2256		; (DF5D)
020A:DECD			loc_2250:
020A:DECD  E8 0784				call	sub_147			; (E654)
020A:DED0  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:DED5  45					inc	bp
020A:DED6  26: 8B 45 02				mov	ax,es:[di+2]
020A:DEDA  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:DEDA  9A					db	9Ah
020A:DEDB  021C 14FC				dw	21Ch, 14FCh
020A:DEDF  8B C5				mov	ax,bp
020A:DEE1  2D 2D3B				sub	ax,2D3Bh
020A:DEE4  3D 000D				cmp	ax,0Dh
020A:DEE7  73 06				jae	loc_2251		; Jump if above or =
020A:DEE9  BD 2D3B				mov	bp,2D3Bh
020A:DEEC  83 C5 0C				add	bp,0Ch
020A:DEEF			loc_2251:
020A:DEEF  45					inc	bp
020A:DEF0  BE 3879				mov	si,3879h
020A:DEF3  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DEF3  9A					db	9Ah
020A:DEF4  4160 14FC				dw	4160h, 14FCh
020A:DEF8  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020A:DEFD  74 08				jz	loc_2252		; Jump if zero
020A:DEFF  BE 38D8				mov	si,38D8h
020A:DF02  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DF02  9A					db	9Ah
020A:DF03  4160 14FC				dw	4160h, 14FCh
020A:DF07			loc_2252:
020A:DF07  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:DF0C  75 10				jnz	loc_2253		; Jump if not zero
020A:DF0E  26: 8A 45 32				mov	al,es:[di+32h]
020A:DF12  D0 C8				ror	al,1			; Rotate
020A:DF14  D0 C8				ror	al,1			; Rotate
020A:DF16  D0 C8				ror	al,1			; Rotate
020A:DF18  24 07				and	al,7
020A:DF1A  3C 07				cmp	al,7
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 454

020A:DF1C  75 08				jne	loc_2254		; Jump if not equal
020A:DF1E			loc_2253:
020A:DF1E  BE 38F1				mov	si,38F1h
020A:DF21  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DF21  9A					db	9Ah
020A:DF22  4160 14FC				dw	4160h, 14FCh
020A:DF26			loc_2254:
020A:DF26  26: F6 45 04 04			test	byte ptr es:[di+4],4
020A:DF2B  74 11				jz	loc_2255		; Jump if zero
020A:DF2D  BE 38FE				mov	si,38FEh
020A:DF30  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DF30  9A					db	9Ah
020A:DF31  4160 14FC				dw	4160h, 14FCh
020A:DF35  26: 8A 45 39				mov	al,es:[di+39h]
020A:DF39  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:DF39  9A					db	9Ah
020A:DF3A  022C 14FC				dw	22Ch, 14FCh
020A:DF3E			loc_2255:
020A:DF3E  26: 8A 45 05				mov	al,es:[di+5]
020A:DF42  24 03				and	al,3
020A:DF44  3C 03				cmp	al,3
020A:DF46  74 15				je	loc_2256		; Jump if equal
020A:DF48  26: 8A 45 06				mov	al,es:[di+6]
020A:DF4C  0A C0				or	al,al			; Zero ?
020A:DF4E  74 0D				jz	loc_2256		; Jump if zero
020A:DF50  BE 3903				mov	si,3903h
020A:DF53  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:DF53  9A					db	9Ah
020A:DF54  4160 14FC				dw	4160h, 14FCh
020A:DF58  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:DF58  9A					db	9Ah
020A:DF59  022C 14FC				dw	22Ch, 14FCh
020A:DF5D			loc_2256:
020A:DF5D  8B C5				mov	ax,bp
020A:DF5F  2D 2D3B				sub	ax,2D3Bh
020A:DF62  3D 0020				cmp	ax,20h
020A:DF65  73 06				jae	loc_2257		; Jump if above or =
020A:DF67  BD 2D3B				mov	bp,2D3Bh
020A:DF6A  83 C5 1F				add	bp,1Fh
020A:DF6D			loc_2257:
020A:DF6D  45					inc	bp
020A:DF6E  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:DF6E  9A					db	9Ah
020A:DF6F  55E4 14FC				dw	55E4h, 14FCh
020A:DF73  73 39				jnc	loc_2260		; Jump if carry=0
020A:DF75  B9 003B				mov	cx,3Bh
020A:DF78  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:DF78  9A					db	9Ah
020A:DF79  2D70 14FC				dw	2D70h, 14FCh
020A:DF7D  33 DB				xor	bx,bx			; Zero register
020A:DF7F  F6 06 15CF 80			test	data_160,80h		; (020A:15CF=0)
020A:DF84  74 03				jz	loc_2258		; Jump if zero
020A:DF86  BB 0012				mov	bx,12h
020A:DF89			loc_2258:
020A:DF89  8B C5				mov	ax,bp
020A:DF8B  2D 2D3B				sub	ax,2D3Bh
020A:DF8E  2B C3				sub	ax,bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 455

020A:DF90  3D 002F				cmp	ax,2Fh
020A:DF93  73 08				jae	loc_2259		; Jump if above or =
020A:DF95  BD 2D3B				mov	bp,2D3Bh
020A:DF98  83 C5 2E				add	bp,2Eh
020A:DF9B  03 EB				add	bp,bx
020A:DF9D			loc_2259:
020A:DF9D  45					inc	bp
020A:DF9E  8B F5				mov	si,bp
020A:DFA0  26: 8A 45 06				mov	al,es:[di+6]
020A:DFA4  BB 003B				mov	bx,3Bh
020A:DFA7  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:DFA7  9A					db	9Ah
020A:DFA8  42AC 14FC				dw	42ACh, 14FCh
020A:DFAC  EB 1E				jmp	short loc_2262		; (DFCC)
020A:DFAE			loc_2260:
020A:DFAE  BD 2D6A				mov	bp,2D6Ah
020A:DFB1  F6 06 15CF 80			test	data_160,80h		; (020A:15CF=0)
020A:DFB6  74 03				jz	loc_2261		; Jump if zero
020A:DFB8  83 C5 12				add	bp,12h
020A:DFBB			loc_2261:
020A:DFBB  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:DFC1  83 C5 02				add	bp,2
020A:DFC4  B9 003B				mov	cx,3Bh
020A:DFC7  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:DFC7  9A					db	9Ah
020A:DFC8  2D70 14FC				dw	2D70h, 14FCh
020A:DFCC			loc_2262:
020A:DFCC  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:DFD1  06					push	es
020A:DFD2  57					push	di
020A:DFD3  BA 2D1B				mov	dx,2D1Bh
020A:DFD6  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:DFD6  9A					db	9Ah
020A:DFD7  233C 14FC				dw	233Ch, 14FCh
020A:DFDB  5F					pop	di
020A:DFDC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:DFE1  9C					pushf				; Push flags
020A:DFE2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:DFE7  5A					pop	dx
020A:DFE8  8E C2				mov	es,dx
020A:DFEA  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:DFEF  5A					pop	dx
020A:DFF0  75 0A				jnz	loc_2263		; Jump if not zero
020A:DFF2  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:DFF7  74 03				je	loc_2263		; Jump if equal
020A:DFF9  E8 93C0				call	sub_103			; (73BC)
020A:DFFC			loc_2263:
020A:DFFC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E001  9D					popf				; Pop flags
020A:E002  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E007			loc_2264:
020A:E007  BB 40C2				mov	bx,40C2h
020A:E00A  26: 8A 45 05				mov	al,es:[di+5]
020A:E00E  25 000F				and	ax,0Fh
020A:E011  D7					xlat				; al=[al+[bx]] table
020A:E012  0A C0				or	al,al			; Zero ?
020A:E014  75 04				jnz	loc_2265		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 456

020A:E016  26: 8A 45 06				mov	al,es:[di+6]
020A:E01A			loc_2265:
020A:E01A  03 F8				add	di,ax
020A:E01C  E9 FE28				jmp	loc_2243		; (DE47)
020A:E01F			loc_2266:
020A:E01F  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E024  9C					pushf				; Push flags
020A:E025  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E02A  5A					pop	dx
020A:E02B  8E C2				mov	es,dx
020A:E02D  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E032  5A					pop	dx
020A:E033  75 0A				jnz	loc_2267		; Jump if not zero
020A:E035  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E03A  74 03				je	loc_2267		; Jump if equal
020A:E03C  E8 937D				call	sub_103			; (73BC)
020A:E03F			loc_2267:
020A:E03F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E044  9D					popf				; Pop flags
020A:E045  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E04A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E04F  9C					pushf				; Push flags
020A:E050  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E055  5A					pop	dx
020A:E056  8E DA				mov	ds,dx
020A:E058  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E05D  5A					pop	dx
020A:E05E  75 0A				jnz	loc_2268		; Jump if not zero
020A:E060  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E065  74 03				je	loc_2268		; Jump if equal
020A:E067  E8 9352				call	sub_103			; (73BC)
020A:E06A			loc_2268:
020A:E06A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E06F  9D					popf				; Pop flags
020A:E070  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E075  5D					pop	bp
020A:E076  5F					pop	di
020A:E077  5E					pop	si
020A:E078  5A					pop	dx
020A:E079  59					pop	cx
020A:E07A  5B					pop	bx
020A:E07B  58					pop	ax
020A:E07C  C3					retn
							                        ;* No entry point to code
020A:E07D  87 DB				xchg	bx,bx
020A:E07F  90					nop
020A:E080  50					push	ax
020A:E081  53					push	bx
020A:E082  51					push	cx
020A:E083  52					push	dx
020A:E084  56					push	si
020A:E085  57					push	di
020A:E086  55					push	bp
020A:E087  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E08C  1E					push	ds
020A:E08D  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E092  06					push	es
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 457

020A:E093  FC					cld				; Clear direction
020A:E094  BF 0008				mov	di,8
020A:E097			loc_2269:
020A:E097  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:E09C  72 03				jb	loc_2270		; Jump if below
020A:E09E  E9 02AC				jmp	loc_2305		; (E34D)
020A:E0A1			loc_2270:
020A:E0A1  26: 8A 45 04				mov	al,es:[di+4]
020A:E0A5  A8 40				test	al,40h			; '@'
020A:E0A7  75 03				jnz	loc_2271		; Jump if not zero
020A:E0A9  E9 0289				jmp	loc_2303		; (E335)
020A:E0AC			loc_2271:
020A:E0AC  26: F6 45 05 0F			test	byte ptr es:[di+5],0Fh
020A:E0B1  75 03				jnz	loc_2272		; Jump if not zero
020A:E0B3  E9 027F				jmp	loc_2303		; (E335)
020A:E0B6			loc_2272:
020A:E0B6  E8 8643				call	sub_81			; (66FC)
020A:E0B9  BD 2D3B				mov	bp,2D3Bh
020A:E0BC  26: 8B 1D				mov	bx,es:[di]
020A:E0BF  26: 8B 45 02				mov	ax,es:[di+2]
020A:E0C3  E8 058E				call	sub_147			; (E654)
020A:E0C6  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:E0CB  45					inc	bp
020A:E0CC  26: 8B 45 02				mov	ax,es:[di+2]
020A:E0D0  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E0D0  9A					db	9Ah
020A:E0D1  021C 14FC				dw	21Ch, 14FCh
020A:E0D5  26: 8A 45 04				mov	al,es:[di+4]
020A:E0D9  24 5F				and	al,5Fh			; '_'
020A:E0DB  3C 5F				cmp	al,5Fh			; '_'
020A:E0DD  75 02				jne	loc_2273		; Jump if not equal
020A:E0DF  EB 38				jmp	short loc_2275		; (E119)
020A:E0E1			loc_2273:
020A:E0E1  8B C5				mov	ax,bp
020A:E0E3  2D 2D3B				sub	ax,2D3Bh
020A:E0E6  3D 000D				cmp	ax,0Dh
020A:E0E9  73 06				jae	loc_2274		; Jump if above or =
020A:E0EB  BD 2D3B				mov	bp,2D3Bh
020A:E0EE  83 C5 0C				add	bp,0Ch
020A:E0F1			loc_2274:
020A:E0F1  45					inc	bp
020A:E0F2  BE 387D				mov	si,387Dh
020A:E0F5  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E0F5  9A					db	9Ah
020A:E0F6  4160 14FC				dw	4160h, 14FCh
020A:E0FA  26: 8A 45 05				mov	al,es:[di+5]
020A:E0FE  B1 04				mov	cl,4
020A:E100  D2 C8				ror	al,cl			; Rotate
020A:E102  25 0003				and	ax,3
020A:E105  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:E107  BB AD91				mov	bx,0AD91h
020A:E10A  03 D8				add	bx,ax
020A:E10C  2E: 8B 1F				mov	bx,cs:[bx]
020A:E10F  FF E3				jmp	bx			;*
							                        ;* No entry point to code
020A:E111  E4 AE				in	al,0AEh			; port 0AEh ??I/O Non-standard
020A:E113  DA					db	0DAh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 458

020A:E114  AE					scasb				; Scan es:[di] for al
020A:E115  D0 AE AEC6				shr	byte ptr [bp-513Ah],1	; Shift w/zeros fill
020A:E119			loc_2275:
020A:E119  8B C5				mov	ax,bp
020A:E11B  2D 2D3B				sub	ax,2D3Bh
020A:E11E  3D 000D				cmp	ax,0Dh
020A:E121  73 06				jae	loc_2276		; Jump if above or =
020A:E123  BD 2D3B				mov	bp,2D3Bh
020A:E126  83 C5 0C				add	bp,0Ch
020A:E129			loc_2276:
020A:E129  45					inc	bp
020A:E12A  BE 3881				mov	si,3881h
020A:E12D  26: 8A 5D 09				mov	bl,es:[di+9]
020A:E131  80 FB 14				cmp	bl,14h
020A:E134  74 14				je	loc_2278		; Jump if equal
020A:E136  80 FB 15				cmp	bl,15h
020A:E139  74 0A				je	loc_2277		; Jump if equal
020A:E13B  80 FB 18				cmp	bl,18h
020A:E13E  75 1B				jne	loc_2280		; Jump if not equal
020A:E140  BE 389A				mov	si,389Ah
020A:E143  EB 08				jmp	short loc_2279		; (E14D)
020A:E145			loc_2277:
020A:E145  BE 3891				mov	si,3891h
020A:E148  EB 03				jmp	short loc_2279		; (E14D)
020A:E14A			loc_2278:
020A:E14A  BE 3888				mov	si,3888h
020A:E14D			loc_2279:
020A:E14D  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E14D  9A					db	9Ah
020A:E14E  4160 14FC				dw	4160h, 14FCh
020A:E152  BD 2D3B				mov	bp,2D3Bh
020A:E155  83 C5 20				add	bp,20h
020A:E158  E9 0171				jmp	loc_2298		; (E2CC)
020A:E15B			loc_2280:
020A:E15B  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E15B  9A					db	9Ah
020A:E15C  4160 14FC				dw	4160h, 14FCh
020A:E160  26: 8A 45 09				mov	al,es:[di+9]
020A:E164  BE 51FD				mov	si,51FDh
020A:E167			loc_2281:
020A:E167  80 3C FF				cmp	byte ptr [si],0FFh
020A:E16A  74 1D				je	loc_2284		; Jump if equal
020A:E16C  3A 04				cmp	al,[si]
020A:E16E  74 05				je	loc_2282		; Jump if equal
020A:E170  83 C6 05				add	si,5
020A:E173  EB F2				jmp	short loc_2281		; (E167)
020A:E175			loc_2282:
020A:E175  56					push	si
020A:E176  8B 74 03				mov	si,[si+3]
020A:E179  83 FE 00				cmp	si,0
020A:E17C  74 05				je	loc_2283		; Jump if equal
020A:E17E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E17E  9A					db	9Ah
020A:E17F  4160 14FC				dw	4160h, 14FCh
020A:E183			loc_2283:
020A:E183  5E					pop	si
020A:E184  8B 5C 01				mov	bx,[si+1]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 459

020A:E187  FF E3				jmp	bx			;*Register jump
020A:E189			loc_2284:
020A:E189  BE 38C7				mov	si,38C7h
020A:E18C  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E18C  9A					db	9Ah
020A:E18D  4160 14FC				dw	4160h, 14FCh
020A:E191  E9 0117				jmp	loc_2295		; (E2AB)
020A:E194  E9 0114				jmp	loc_2295		; (E2AB)
020A:E197  E9 019B				jmp	loc_2303		; (E335)
							                        ;* No entry point to code
020A:E19A  26: 83 7D 0A FF			cmp	word ptr es:[di+0Ah],0FFFFh
020A:E19F  75 03				jne	loc_2285		; Jump if not equal
020A:E1A1  E9 0107				jmp	loc_2295		; (E2AB)
020A:E1A4			loc_2285:
020A:E1A4  45					inc	bp
020A:E1A5  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:E1A9  E8 0500				call	sub_148			; (E6AC)
020A:E1AC  E9 00FC				jmp	loc_2295		; (E2AB)
							                        ;* No entry point to code
020A:E1AF  45					inc	bp
020A:E1B0  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:E1B4  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:E1B8  9A 14FC:03CC		;*		call	far ptr sub_161		;*(14FC:03CC)
020A:E1B8  9A					db	9Ah
020A:E1B9  03CC 14FC				dw	3CCh, 14FCh
020A:E1BD  E9 00EB				jmp	loc_2295		; (E2AB)
							                        ;* No entry point to code
020A:E1C0  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:E1C4  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:E1C8  45					inc	bp
020A:E1C9  E8 0488				call	sub_147			; (E654)
020A:E1CC  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:E1D1  45					inc	bp
020A:E1D2  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:E1D6  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E1D6  9A					db	9Ah
020A:E1D7  021C 14FC				dw	21Ch, 14FCh
020A:E1DB  45					inc	bp
020A:E1DC  26: 8A 45 0E				mov	al,es:[di+0Eh]
020A:E1E0  32 E4				xor	ah,ah			; Zero register
020A:E1E2  9A 14FC:0338		;*		call	far ptr sub_159		;*(14FC:0338)
020A:E1E2  9A					db	9Ah
020A:E1E3  0338 14FC				dw	338h, 14FCh
020A:E1E7  E9 00C1				jmp	loc_2295		; (E2AB)
							                        ;* No entry point to code
020A:E1EA  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:E1EE  9A 14FC:0338		;*		call	far ptr sub_159		;*(14FC:0338)
020A:E1EE  9A					db	9Ah
020A:E1EF  0338 14FC				dw	338h, 14FCh
020A:E1F3  E9 00B5				jmp	loc_2295		; (E2AB)
							                        ;* No entry point to code
020A:E1F6  45					inc	bp
020A:E1F7  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020A:E1FB  B9 0010				mov	cx,10h
020A:E1FE  B0 41				mov	al,41h			; 'A'

020A:E200			locloop_2286:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 460

020A:E200  8A D8				mov	bl,al
020A:E202  26: D1 55 0A				rcl	word ptr es:[di+0Ah],1	; Rotate thru carry
020A:E206  73 05				jnc	loc_2287		; Jump if carry=0
020A:E208  3E: 88 5E 00				mov	ds:[bp],bl
020A:E20C  45					inc	bp
020A:E20D			loc_2287:
020A:E20D  80 C3 20				add	bl,20h			; ' '
020A:E210  26: D1 55 0D				rcl	word ptr es:[di+0Dh],1	; Rotate thru carry
020A:E214  72 05				jc	loc_2288		; Jump if carry Set
020A:E216  3E: 88 5E 00				mov	ds:[bp],bl
020A:E21A  45					inc	bp
020A:E21B			loc_2288:
020A:E21B  FE C0				inc	al
020A:E21D  E2 E1				loop	locloop_2286		; Loop if cx > 0

020A:E21F  B9 0006				mov	cx,6
020A:E222  B0 55				mov	al,55h			; 'U'

020A:E224			locloop_2289:
020A:E224  8A D8				mov	bl,al
020A:E226  26: D0 55 0C				rcl	byte ptr es:[di+0Ch],1	; Rotate thru carry
020A:E22A  73 05				jnc	loc_2290		; Jump if carry=0
020A:E22C  3E: 88 5E 00				mov	ds:[bp],bl
020A:E230  45					inc	bp
020A:E231			loc_2290:
020A:E231  80 C3 20				add	bl,20h			; ' '
020A:E234  26: D0 55 0F				rcl	byte ptr es:[di+0Fh],1	; Rotate thru carry
020A:E238  72 05				jc	loc_2291		; Jump if carry Set
020A:E23A  3E: 88 5E 00				mov	ds:[bp],bl
020A:E23E  45					inc	bp
020A:E23F			loc_2291:
020A:E23F  FE C0				inc	al
020A:E241  E2 E1				loop	locloop_2289		; Loop if cx > 0

020A:E243  E9 00B4				jmp	loc_2301		; (E2FA)
							                        ;* No entry point to code
020A:E246  BE 38D8				mov	si,38D8h
020A:E249  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E249  9A					db	9Ah
020A:E24A  4160 14FC				dw	4160h, 14FCh
020A:E24E  EB 14				jmp	short loc_2292		; (E264)
							                        ;* No entry point to code
020A:E250  BE 38DE				mov	si,38DEh
020A:E253  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E253  9A					db	9Ah
020A:E254  4160 14FC				dw	4160h, 14FCh
020A:E258  EB 0A				jmp	short loc_2292		; (E264)
							                        ;* No entry point to code
020A:E25A  BE 38EB				mov	si,38EBh
020A:E25D  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E25D  9A					db	9Ah
020A:E25E  4160 14FC				dw	4160h, 14FCh
020A:E262  EB 00				jmp	short loc_2292		; (E264)
020A:E264			loc_2292:
020A:E264  26: 8A 45 05				mov	al,es:[di+5]
020A:E268  24 03				and	al,3
020A:E26A  3C 03				cmp	al,3
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 461

020A:E26C  74 1D				je	loc_2293		; Jump if equal
020A:E26E  3C 00				cmp	al,0
020A:E270  74 19				je	loc_2293		; Jump if equal
020A:E272  26: 8A 45 06				mov	al,es:[di+6]
020A:E276  0A C0				or	al,al			; Zero ?
020A:E278  74 11				jz	loc_2293		; Jump if zero
020A:E27A  3C FE				cmp	al,0FEh
020A:E27C  73 0D				jae	loc_2293		; Jump if above or =
020A:E27E  BE 3903				mov	si,3903h
020A:E281  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E281  9A					db	9Ah
020A:E282  4160 14FC				dw	4160h, 14FCh
020A:E286  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:E286  9A					db	9Ah
020A:E287  022C 14FC				dw	22Ch, 14FCh
020A:E28B			loc_2293:
020A:E28B  8B C5				mov	ax,bp
020A:E28D  2D 2D3B				sub	ax,2D3Bh
020A:E290  3D 0020				cmp	ax,20h
020A:E293  73 06				jae	loc_2294		; Jump if above or =
020A:E295  BD 2D3B				mov	bp,2D3Bh
020A:E298  83 C5 1F				add	bp,1Fh
020A:E29B			loc_2294:
020A:E29B  45					inc	bp
020A:E29C  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:E29C  9A					db	9Ah
020A:E29D  55E4 14FC				dw	55E4h, 14FCh
020A:E2A1  73 39				jnc	loc_2299		; Jump if carry=0
020A:E2A3  B9 0007				mov	cx,7
020A:E2A6  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:E2A6  9A					db	9Ah
020A:E2A7  2D70 14FC				dw	2D70h, 14FCh
020A:E2AB			loc_2295:
020A:E2AB  33 DB				xor	bx,bx			; Zero register
020A:E2AD  F6 06 15CF 40			test	data_160,40h		; (020A:15CF=0) '@'
020A:E2B2  74 03				jz	loc_2296		; Jump if zero
020A:E2B4  BB 0012				mov	bx,12h
020A:E2B7			loc_2296:
020A:E2B7  8B C5				mov	ax,bp
020A:E2B9  2D 2D3B				sub	ax,2D3Bh
020A:E2BC  2B C3				sub	ax,bx
020A:E2BE  3D 002F				cmp	ax,2Fh
020A:E2C1  73 08				jae	loc_2297		; Jump if above or =
020A:E2C3  BD 2D3B				mov	bp,2D3Bh
020A:E2C6  83 C5 2E				add	bp,2Eh
020A:E2C9  03 EB				add	bp,bx
020A:E2CB			loc_2297:
020A:E2CB  45					inc	bp
020A:E2CC			loc_2298:
020A:E2CC  8B F5				mov	si,bp
020A:E2CE  26: 8A 45 06				mov	al,es:[di+6]
020A:E2D2  BB 0007				mov	bx,7
020A:E2D5  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:E2D5  9A					db	9Ah
020A:E2D6  42AC 14FC				dw	42ACh, 14FCh
020A:E2DA  EB 1E				jmp	short loc_2301		; (E2FA)
020A:E2DC			loc_2299:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 462

020A:E2DC  BD 2D6A				mov	bp,2D6Ah
020A:E2DF  F6 06 15CF 40			test	data_160,40h		; (020A:15CF=0) '@'
020A:E2E4  74 03				jz	loc_2300		; Jump if zero
020A:E2E6  83 C5 12				add	bp,12h
020A:E2E9			loc_2300:
020A:E2E9  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:E2EF  83 C5 02				add	bp,2
020A:E2F2  B9 0007				mov	cx,7
020A:E2F5  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:E2F5  9A					db	9Ah
020A:E2F6  2D70 14FC				dw	2D70h, 14FCh
020A:E2FA			loc_2301:
020A:E2FA  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E2FF  06					push	es
020A:E300  57					push	di
020A:E301  BA 2D1B				mov	dx,2D1Bh
020A:E304  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:E304  9A					db	9Ah
020A:E305  233C 14FC				dw	233Ch, 14FCh
020A:E309  5F					pop	di
020A:E30A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E30F  9C					pushf				; Push flags
020A:E310  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E315  5A					pop	dx
020A:E316  8E C2				mov	es,dx
020A:E318  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E31D  5A					pop	dx
020A:E31E  75 0A				jnz	loc_2302		; Jump if not zero
020A:E320  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E325  74 03				je	loc_2302		; Jump if equal
020A:E327  E8 9092				call	sub_103			; (73BC)
020A:E32A			loc_2302:
020A:E32A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E32F  9D					popf				; Pop flags
020A:E330  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E335			loc_2303:
020A:E335  BB 40C2				mov	bx,40C2h
020A:E338  26: 8A 45 05				mov	al,es:[di+5]
020A:E33C  25 000F				and	ax,0Fh
020A:E33F  D7					xlat				; al=[al+[bx]] table
020A:E340  0A C0				or	al,al			; Zero ?
020A:E342  75 04				jnz	loc_2304		; Jump if not zero
020A:E344  26: 8A 45 06				mov	al,es:[di+6]
020A:E348			loc_2304:
020A:E348  03 F8				add	di,ax
020A:E34A  E9 FD4A				jmp	loc_2269		; (E097)
020A:E34D			loc_2305:
020A:E34D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E352  9C					pushf				; Push flags
020A:E353  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E358  5A					pop	dx
020A:E359  8E C2				mov	es,dx
020A:E35B  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E360  5A					pop	dx
020A:E361  75 0A				jnz	loc_2306		; Jump if not zero
020A:E363  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E368  74 03				je	loc_2306		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 463

020A:E36A  E8 904F				call	sub_103			; (73BC)
020A:E36D			loc_2306:
020A:E36D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E372  9D					popf				; Pop flags
020A:E373  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E378  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E37D  9C					pushf				; Push flags
020A:E37E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E383  5A					pop	dx
020A:E384  8E DA				mov	ds,dx
020A:E386  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E38B  5A					pop	dx
020A:E38C  75 0A				jnz	loc_2307		; Jump if not zero
020A:E38E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E393  74 03				je	loc_2307		; Jump if equal
020A:E395  E8 9024				call	sub_103			; (73BC)
020A:E398			loc_2307:
020A:E398  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E39D  9D					popf				; Pop flags
020A:E39E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E3A3  5D					pop	bp
020A:E3A4  5F					pop	di
020A:E3A5  5E					pop	si
020A:E3A6  5A					pop	dx
020A:E3A7  59					pop	cx
020A:E3A8  5B					pop	bx
020A:E3A9  58					pop	ax
020A:E3AA  C3					retn
							                        ;* No entry point to code
020A:E3AB  90					nop
020A:E3AC  50					push	ax
020A:E3AD  53					push	bx
020A:E3AE  51					push	cx
020A:E3AF  52					push	dx
020A:E3B0  56					push	si
020A:E3B1  57					push	di
020A:E3B2  55					push	bp
020A:E3B3  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E3B8  1E					push	ds
020A:E3B9  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E3BE  06					push	es
020A:E3BF  FC					cld				; Clear direction
020A:E3C0  BF 0008				mov	di,8
020A:E3C3			loc_2308:
020A:E3C3  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:E3C8  72 03				jb	loc_2309		; Jump if below
020A:E3CA  E9 0227				jmp	loc_2336		; (E5F4)
020A:E3CD			loc_2309:
020A:E3CD  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:E3D2  75 08				jnz	loc_2310		; Jump if not zero
020A:E3D4  26: 8A 45 04				mov	al,es:[di+4]
020A:E3D8  A8 40				test	al,40h			; '@'
020A:E3DA  75 03				jnz	loc_2311		; Jump if not zero
020A:E3DC			loc_2310:
020A:E3DC  E9 01FB				jmp	loc_2334		; (E5DA)
020A:E3DF			loc_2311:
020A:E3DF  E8 831A				call	sub_81			; (66FC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 464

020A:E3E2  BD 2D3B				mov	bp,2D3Bh
020A:E3E5  26: 8B 1D				mov	bx,es:[di]
020A:E3E8  26: 8B 45 02				mov	ax,es:[di+2]
020A:E3EC  E8 0265				call	sub_147			; (E654)
020A:E3EF  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:E3F4  45					inc	bp
020A:E3F5  26: 8B 45 02				mov	ax,es:[di+2]
020A:E3F9  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E3F9  9A					db	9Ah
020A:E3FA  021C 14FC				dw	21Ch, 14FCh
020A:E3FE  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:E403  45					inc	bp
020A:E404  26: 8A 45 04				mov	al,es:[di+4]
020A:E408  24 3F				and	al,3Fh			; '?'
020A:E40A  BE 52D9				mov	si,52D9h
020A:E40D			loc_2312:
020A:E40D  80 3C FF				cmp	byte ptr [si],0FFh
020A:E410  74 2D				je	loc_2315		; Jump if equal
020A:E412  3A 04				cmp	al,[si]
020A:E414  74 05				je	loc_2313		; Jump if equal
020A:E416  83 C6 05				add	si,5
020A:E419  EB F2				jmp	short loc_2312		; (E40D)
020A:E41B			loc_2313:
020A:E41B  56					push	si
020A:E41C  8B C5				mov	ax,bp
020A:E41E  2D 2D3B				sub	ax,2D3Bh
020A:E421  3D 000D				cmp	ax,0Dh
020A:E424  73 06				jae	loc_2314		; Jump if above or =
020A:E426  BD 2D3B				mov	bp,2D3Bh
020A:E429  83 C5 0C				add	bp,0Ch
020A:E42C			loc_2314:
020A:E42C  45					inc	bp
020A:E42D  8B 74 03				mov	si,[si+3]
020A:E430  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E430  9A					db	9Ah
020A:E431  4160 14FC				dw	4160h, 14FCh
020A:E435  5E					pop	si
020A:E436  26: 8B 4D 08				mov	cx,es:[di+8]
020A:E43A  8B 5C 01				mov	bx,[si+1]
020A:E43D  FF E3				jmp	bx			;*Register jump
020A:E43F			loc_2315:
020A:E43F  BE 38C7				mov	si,38C7h
020A:E442  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E442  9A					db	9Ah
020A:E443  4160 14FC				dw	4160h, 14FCh
020A:E447  E9 0155				jmp	loc_2332		; (E59F)
							                        ;* No entry point to code
020A:E44A  83 F9 01				cmp	cx,1
020A:E44D  77 02				ja	loc_2316		; Jump if above
020A:E44F  33 C9				xor	cx,cx			; Zero register
020A:E451			loc_2316:
020A:E451  EB 18				jmp	short loc_2319		; (E46B)
							                        ;* No entry point to code
020A:E453  83 F9 02				cmp	cx,2
020A:E456  77 02				ja	loc_2317		; Jump if above
020A:E458  33 C9				xor	cx,cx			; Zero register
020A:E45A			loc_2317:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 465

020A:E45A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:E45C  EB 0D				jmp	short loc_2319		; (E46B)
							                        ;* No entry point to code
020A:E45E  83 F9 04				cmp	cx,4
020A:E461  77 02				ja	loc_2318		; Jump if above
020A:E463  33 C9				xor	cx,cx			; Zero register
020A:E465			loc_2318:
020A:E465  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:E467  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:E469  EB 00				jmp	short loc_2319		; (E46B)
020A:E46B			loc_2319:
020A:E46B  26: 8B 45 06				mov	ax,es:[di+6]
020A:E46F  A9 8000				test	ax,8000h
020A:E472  74 08				jz	loc_2320		; Jump if zero
020A:E474  BE 39DF				mov	si,39DFh
020A:E477  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E477  9A					db	9Ah
020A:E478  4160 14FC				dw	4160h, 14FCh
020A:E47C			loc_2320:
020A:E47C  A9 4000				test	ax,4000h
020A:E47F  74 08				jz	loc_2321		; Jump if zero
020A:E481  BE 38E5				mov	si,38E5h
020A:E484  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E484  9A					db	9Ah
020A:E485  4160 14FC				dw	4160h, 14FCh
020A:E489			loc_2321:
020A:E489  A9 2000				test	ax,2000h
020A:E48C  74 08				jz	loc_2322		; Jump if zero
020A:E48E  BE 39D7				mov	si,39D7h
020A:E491  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E491  9A					db	9Ah
020A:E492  4160 14FC				dw	4160h, 14FCh
020A:E496			loc_2322:
020A:E496  A9 0400				test	ax,400h
020A:E499  74 54				jz	loc_2324		; Jump if zero
020A:E49B  BE 3A99				mov	si,3A99h
020A:E49E  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E49E  9A					db	9Ah
020A:E49F  4160 14FC				dw	4160h, 14FCh
020A:E4A3  50					push	ax
020A:E4A4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E4A9  06					push	es
020A:E4AA  26: 8A 65 06				mov	ah,es:[di+6]
020A:E4AE  B0 15				mov	al,15h
020A:E4B0  F6 E4				mul	ah			; ax = reg * al
020A:E4B2  8B D8				mov	bx,ax
020A:E4B4  81 C3 0000				add	bx,0
020A:E4B8  E8 8B99				call	sub_93			; (7054)
020A:E4BB  26: 8B 1F				mov	bx,es:[bx]
020A:E4BE  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E4C3  9C					pushf				; Push flags
020A:E4C4  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E4C9  5A					pop	dx
020A:E4CA  8E C2				mov	es,dx
020A:E4CC  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E4D1  5A					pop	dx
020A:E4D2  75 0A				jnz	loc_2323		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 466

020A:E4D4  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E4D9  74 03				je	loc_2323		; Jump if equal
020A:E4DB  E8 8EDE				call	sub_103			; (73BC)
020A:E4DE			loc_2323:
020A:E4DE  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E4E3  9D					popf				; Pop flags
020A:E4E4  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E4E9  E8 01C0				call	sub_148			; (E6AC)
020A:E4EC  58					pop	ax
020A:E4ED  EB 2B				jmp	short loc_2325		; (E51A)
020A:E4EF			loc_2324:
020A:E4EF  26: 8A 45 05				mov	al,es:[di+5]
020A:E4F3  24 03				and	al,3
020A:E4F5  3C 03				cmp	al,3
020A:E4F7  74 21				je	loc_2325		; Jump if equal
020A:E4F9  3C 00				cmp	al,0
020A:E4FB  74 1D				je	loc_2325		; Jump if equal
020A:E4FD  26: 8B 45 06				mov	ax,es:[di+6]
020A:E501  A9 0400				test	ax,400h
020A:E504  75 14				jnz	loc_2325		; Jump if not zero
020A:E506  25 03FF				and	ax,3FFh
020A:E509  0B C0				or	ax,ax			; Zero ?
020A:E50B  74 0D				jz	loc_2325		; Jump if zero
020A:E50D  BE 3903				mov	si,3903h
020A:E510  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E510  9A					db	9Ah
020A:E511  4160 14FC				dw	4160h, 14FCh
020A:E515  9A 14FC:0338		;*		call	far ptr sub_159		;*(14FC:0338)
020A:E515  9A					db	9Ah
020A:E516  0338 14FC				dw	338h, 14FCh
020A:E51A			loc_2325:
020A:E51A  0B C9				or	cx,cx			; Zero ?
020A:E51C  74 12				jz	loc_2326		; Jump if zero
020A:E51E  BE 3A2F				mov	si,3A2Fh
020A:E521  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E521  9A					db	9Ah
020A:E522  4160 14FC				dw	4160h, 14FCh
020A:E526  45					inc	bp
020A:E527  8B C1				mov	ax,cx
020A:E529  9A 14FC:0338		;*		call	far ptr sub_159		;*(14FC:0338)
020A:E529  9A					db	9Ah
020A:E52A  0338 14FC				dw	338h, 14FCh
020A:E52E  EB 00				jmp	short loc_2326		; (E530)
020A:E530			loc_2326:
020A:E530  8B C5				mov	ax,bp
020A:E532  2D 2D3B				sub	ax,2D3Bh
020A:E535  3D 0020				cmp	ax,20h
020A:E538  73 06				jae	loc_2327		; Jump if above or =
020A:E53A  BD 2D3B				mov	bp,2D3Bh
020A:E53D  83 C5 1F				add	bp,1Fh
020A:E540			loc_2327:
020A:E540  45					inc	bp
020A:E541  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:E541  9A					db	9Ah
020A:E542  55E4 14FC				dw	55E4h, 14FCh
020A:E546  73 39				jnc	loc_2330		; Jump if carry=0
020A:E548  B9 000A				mov	cx,0Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 467

020A:E54B  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:E54B  9A					db	9Ah
020A:E54C  2D70 14FC				dw	2D70h, 14FCh
020A:E550  33 DB				xor	bx,bx			; Zero register
020A:E552  F6 06 15CF 20			test	data_160,20h		; (020A:15CF=0) ' '
020A:E557  74 03				jz	loc_2328		; Jump if zero
020A:E559  BB 0012				mov	bx,12h
020A:E55C			loc_2328:
020A:E55C  8B C5				mov	ax,bp
020A:E55E  2D 2D3B				sub	ax,2D3Bh
020A:E561  2B C3				sub	ax,bx
020A:E563  3D 002F				cmp	ax,2Fh
020A:E566  73 08				jae	loc_2329		; Jump if above or =
020A:E568  BD 2D3B				mov	bp,2D3Bh
020A:E56B  83 C5 2E				add	bp,2Eh
020A:E56E  03 EB				add	bp,bx
020A:E570			loc_2329:
020A:E570  45					inc	bp
020A:E571  8B F5				mov	si,bp
020A:E573  26: 8A 45 06				mov	al,es:[di+6]
020A:E577  BB 000A				mov	bx,0Ah
020A:E57A  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:E57A  9A					db	9Ah
020A:E57B  42AC 14FC				dw	42ACh, 14FCh
020A:E57F  EB 1E				jmp	short loc_2332		; (E59F)
020A:E581			loc_2330:
020A:E581  BD 2D6A				mov	bp,2D6Ah
020A:E584  F6 06 15CF 20			test	data_160,20h		; (020A:15CF=0) ' '
020A:E589  74 03				jz	loc_2331		; Jump if zero
020A:E58B  83 C5 12				add	bp,12h
020A:E58E			loc_2331:
020A:E58E  3E: C7 46 00 203B			mov	word ptr ds:[bp],203Bh
020A:E594  83 C5 02				add	bp,2
020A:E597  B9 000A				mov	cx,0Ah
020A:E59A  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:E59A  9A					db	9Ah
020A:E59B  2D70 14FC				dw	2D70h, 14FCh
020A:E59F			loc_2332:
020A:E59F  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E5A4  06					push	es
020A:E5A5  57					push	di
020A:E5A6  BA 2D1B				mov	dx,2D1Bh
020A:E5A9  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:E5A9  9A					db	9Ah
020A:E5AA  233C 14FC				dw	233Ch, 14FCh
020A:E5AE  5F					pop	di
020A:E5AF  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E5B4  9C					pushf				; Push flags
020A:E5B5  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E5BA  5A					pop	dx
020A:E5BB  8E C2				mov	es,dx
020A:E5BD  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E5C2  5A					pop	dx
020A:E5C3  75 0A				jnz	loc_2333		; Jump if not zero
020A:E5C5  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E5CA  74 03				je	loc_2333		; Jump if equal
020A:E5CC  E8 8DED				call	sub_103			; (73BC)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 468

020A:E5CF			loc_2333:
020A:E5CF  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E5D4  9D					popf				; Pop flags
020A:E5D5  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E5DA			loc_2334:
020A:E5DA  BB 40C2				mov	bx,40C2h
020A:E5DD  26: 8A 45 05				mov	al,es:[di+5]
020A:E5E1  25 000F				and	ax,0Fh
020A:E5E4  D7					xlat				; al=[al+[bx]] table
020A:E5E5  0A C0				or	al,al			; Zero ?
020A:E5E7  75 06				jnz	loc_2335		; Jump if not zero
020A:E5E9  26: 8B 45 06				mov	ax,es:[di+6]
020A:E5ED  32 E4				xor	ah,ah			; Zero register
020A:E5EF			loc_2335:
020A:E5EF  03 F8				add	di,ax
020A:E5F1  E9 FDCF				jmp	loc_2308		; (E3C3)
020A:E5F4			loc_2336:
020A:E5F4  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E5F9  9C					pushf				; Push flags
020A:E5FA  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E5FF  5A					pop	dx
020A:E600  8E C2				mov	es,dx
020A:E602  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E607  5A					pop	dx
020A:E608  75 0A				jnz	loc_2337		; Jump if not zero
020A:E60A  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E60F  74 03				je	loc_2337		; Jump if equal
020A:E611  E8 8DA8				call	sub_103			; (73BC)
020A:E614			loc_2337:
020A:E614  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E619  9D					popf				; Pop flags
020A:E61A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E61F  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E624  9C					pushf				; Push flags
020A:E625  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E62A  5A					pop	dx
020A:E62B  8E DA				mov	ds,dx
020A:E62D  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E632  5A					pop	dx
020A:E633  75 0A				jnz	loc_2338		; Jump if not zero
020A:E635  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E63A  74 03				je	loc_2338		; Jump if equal
020A:E63C  E8 8D7D				call	sub_103			; (73BC)
020A:E63F			loc_2338:
020A:E63F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E644  9D					popf				; Pop flags
020A:E645  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E64A  5D					pop	bp
020A:E64B  5F					pop	di
020A:E64C  5E					pop	si
020A:E64D  5A					pop	dx
020A:E64E  59					pop	cx
020A:E64F  5B					pop	bx
020A:E650  58					pop	ax
020A:E651  C3					retn
020A:E652  87 DB				xchg	bx,bx

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 469

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_147		proc	near
020A:E654  50					push	ax
020A:E655  53					push	bx
020A:E656  51					push	cx
020A:E657  56					push	si
020A:E658  8C C9				mov	cx,cs
020A:E65A  3B D9				cmp	bx,cx
020A:E65C  72 2B				jb	loc_2340		; Jump if below
020A:E65E  03 0E 2B3D				add	cx,data_244		; (020A:2B3D=7E45h)
020A:E662  3B D9				cmp	bx,cx
020A:E664  77 23				ja	loc_2340		; Jump if above
020A:E666  E8 81B7				call	sub_85			; (6820)
020A:E669  3D 0000				cmp	ax,0
020A:E66C  74 1B				je	loc_2340		; Jump if equal
020A:E66E  A9 8000				test	ax,8000h
020A:E671  74 07				jz	loc_2339		; Jump if zero
020A:E673  80 3E 5708 01			cmp	data_671,1		; (020A:5708=8Bh)
020A:E678  74 26				je	loc_2341		; Jump if equal
020A:E67A			loc_2339:
020A:E67A  BE 37C9				mov	si,37C9h
020A:E67D  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E67D  9A					db	9Ah
020A:E67E  4160 14FC				dw	4160h, 14FCh
020A:E682  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:E682  9A					db	9Ah
020A:E683  5778 14FC				dw	5778h, 14FCh
020A:E687  EB 1E				jmp	short loc_2342		; (E6A7)
020A:E689			loc_2340:
020A:E689  83 3E 3039 00			cmp	data_293,0		; (020A:3039=4E49h)
020A:E68E  74 10				je	loc_2341		; Jump if equal
020A:E690  3B 1E 3039				cmp	bx,data_293		; (020A:3039=4E49h)
020A:E694  75 0A				jne	loc_2341		; Jump if not equal
020A:E696  BE 37CE				mov	si,37CEh
020A:E699  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E699  9A					db	9Ah
020A:E69A  4160 14FC				dw	4160h, 14FCh
020A:E69E  EB 07				jmp	short loc_2342		; (E6A7)
020A:E6A0			loc_2341:
020A:E6A0  8B C3				mov	ax,bx
020A:E6A2  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E6A2  9A					db	9Ah
020A:E6A3  021C 14FC				dw	21Ch, 14FCh
020A:E6A7			loc_2342:
020A:E6A7  5E					pop	si
020A:E6A8  59					pop	cx
020A:E6A9  5B					pop	bx
020A:E6AA  58					pop	ax
020A:E6AB  C3					retn
				sub_147		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 470

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_148		proc	near
020A:E6AC  2E: C6 06 349C 01			mov	byte ptr cs:[349Ch],1	; (020A:349C=0EFh)
020A:E6B2  E8 FF9F				call	sub_147			; (E654)
020A:E6B5  2E: C6 06 349C 00			mov	byte ptr cs:[349Ch],0	; (020A:349C=0EFh)
020A:E6BB  C3					retn
				sub_148		endp

020A:E6BC  BF 0008				mov	di,8
020A:E6BF  8A D1				mov	dl,cl
020A:E6C1			loc_2343:
020A:E6C1  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:E6C6  72 03				jb	loc_2344		; Jump if below
020A:E6C8  E9 00DD				jmp	loc_2353		; (E7A8)
020A:E6CB			loc_2344:
020A:E6CB  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020A:E6D0  75 11				jnz	loc_2346		; Jump if not zero
020A:E6D2  26: F6 45 05 30			test	byte ptr es:[di+5],30h	; '0'
020A:E6D7  74 07				jz	loc_2345		; Jump if zero
020A:E6D9  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:E6D9  9A					db	9Ah
020A:E6DA  55E4 14FC				dw	55E4h, 14FCh
020A:E6DE  72 03				jc	loc_2346		; Jump if carry Set
020A:E6E0			loc_2345:
020A:E6E0  E9 00AD				jmp	loc_2351		; (E790)
020A:E6E3			loc_2346:
020A:E6E3  0A D2				or	dl,dl			; Zero ?
020A:E6E5  75 23				jnz	loc_2348		; Jump if not zero
020A:E6E7  B2 01				mov	dl,1
020A:E6E9  52					push	dx
020A:E6EA  A1 348C				mov	ax,word ptr ds:[348Ch]	; (020A:348C=0B6h)
020A:E6ED  33 D2				xor	dx,dx			; Zero register
020A:E6EF  8A 1E 35E8				mov	bl,data_457		; (020A:35E8=0CDh)
020A:E6F3  80 FB 00				cmp	bl,0
020A:E6F6  74 0A				je	loc_2347		; Jump if equal
020A:E6F8  32 FF				xor	bh,bh			; Zero register
020A:E6FA  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:E6FC  2B DA				sub	bx,dx
020A:E6FE  01 1E 348C				add	word ptr ds:[348Ch],bx	; (020A:348C=0B6h)
020A:E702			loc_2347:
020A:E702  5A					pop	dx
020A:E703  B0 23				mov	al,23h			; '#'
020A:E705  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:E705  9A					db	9Ah
020A:E706  2280 14FC				dw	2280h, 14FCh
020A:E70A			loc_2348:
020A:E70A  57					push	di
020A:E70B  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E710  06					push	es
020A:E711  E8 8949				call	sub_95			; (705D)
020A:E714  BF 64E7				mov	di,64E7h
020A:E717  B9 0020				mov	cx,20h
020A:E71A  B0 20				mov	al,20h			; ' '
020A:E71C  FC					cld				; Clear direction
020A:E71D  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:E71F  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 471

020A:E724  9C					pushf				; Push flags
020A:E725  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E72A  5A					pop	dx
020A:E72B  8E C2				mov	es,dx
020A:E72D  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E732  5A					pop	dx
020A:E733  75 0A				jnz	loc_2349		; Jump if not zero
020A:E735  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E73A  74 03				je	loc_2349		; Jump if equal
020A:E73C  E8 8C7D				call	sub_103			; (73BC)
020A:E73F			loc_2349:
020A:E73F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E744  9D					popf				; Pop flags
020A:E745  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E74A  5F					pop	di
020A:E74B  BD 64D4				mov	bp,64D4h
020A:E74E  26: 8B 05				mov	ax,es:[di]
020A:E751  9A 14FC:0118		;*		call	far ptr sub_153		;*(14FC:0118)
020A:E751  9A					db	9Ah
020A:E752  0118 14FC				dw	118h, 14FCh
020A:E756  26: 8B 45 02				mov	ax,es:[di+2]
020A:E75A  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E75A  9A					db	9Ah
020A:E75B  021C 14FC				dw	21Ch, 14FCh
020A:E75F  BD 64E0				mov	bp,64E0h
020A:E762  26: 8A 45 05				mov	al,es:[di+5]
020A:E766  24 30				and	al,30h			; '0'
020A:E768  BE 3866				mov	si,3866h
020A:E76B  3C 30				cmp	al,30h			; '0'
020A:E76D  74 0A				je	loc_2350		; Jump if equal
020A:E76F  BE 3874				mov	si,3874h
020A:E772  3C 10				cmp	al,10h
020A:E774  74 03				je	loc_2350		; Jump if equal
020A:E776  BE 386F				mov	si,386Fh
020A:E779			loc_2350:
020A:E779  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E779  9A					db	9Ah
020A:E77A  4160 14FC				dw	4160h, 14FCh
020A:E77E  BD 64E7				mov	bp,64E7h
020A:E781  B9 0007				mov	cx,7
020A:E784  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:E784  9A					db	9Ah
020A:E785  2D70 14FC				dw	2D70h, 14FCh
020A:E789  B0 24				mov	al,24h			; '$'
020A:E78B  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:E78B  9A					db	9Ah
020A:E78C  2280 14FC				dw	2280h, 14FCh
020A:E790			loc_2351:
020A:E790  BB 40C2				mov	bx,40C2h
020A:E793  26: 8A 45 05				mov	al,es:[di+5]
020A:E797  25 000F				and	ax,0Fh
020A:E79A  D7					xlat				; al=[al+[bx]] table
020A:E79B  0A C0				or	al,al			; Zero ?
020A:E79D  75 04				jnz	loc_2352		; Jump if not zero
020A:E79F  26: 8A 45 06				mov	al,es:[di+6]
020A:E7A3			loc_2352:
020A:E7A3  03 F8				add	di,ax
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 472

020A:E7A5  E9 FF19				jmp	loc_2343		; (E6C1)
020A:E7A8			loc_2353:
020A:E7A8  8A CA				mov	cl,dl
020A:E7AA  C3					retn
							                        ;* No entry point to code
020A:E7AB  90					nop
020A:E7AC  F6 06 16AB 02			test	data_166,2		; (020A:16AB=41h)
020A:E7B1  75 01				jnz	loc_2354		; Jump if not zero
020A:E7B3  C3					retn
020A:E7B4			loc_2354:
020A:E7B4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E7B9  06					push	es
020A:E7BA  A1 4E24				mov	ax,data_592		; (020A:4E24=0A107h)
020A:E7BD  50					push	ax
020A:E7BE  83 26 4E24 F7			and	data_592,0FFF7h		; (020A:4E24=0A107h)
020A:E7C3  33 DB				xor	bx,bx			; Zero register
020A:E7C5  B0 4A				mov	al,4Ah			; 'J'
020A:E7C7  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:E7C7  9A					db	9Ah
020A:E7C8  2280 14FC				dw	2280h, 14FCh
020A:E7CC  E8 7F2D				call	sub_81			; (66FC)
020A:E7CF  BD 2D3B				mov	bp,2D3Bh
020A:E7D2  83 C5 08				add	bp,8
020A:E7D5  E8 8891				call	sub_98			; (7069)
020A:E7D8  BE 5C10				mov	si,5C10h
020A:E7DB			loc_2355:
020A:E7DB  26: F6 44 02 04			test	byte ptr es:[si+2],4
020A:E7E0  75 03				jnz	loc_2356		; Jump if not zero
020A:E7E2  E9 009F				jmp	loc_2360		; (E884)
020A:E7E5			loc_2356:
020A:E7E5  56					push	si
020A:E7E6  BE 3C5D				mov	si,3C5Dh
020A:E7E9  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E7E9  9A					db	9Ah
020A:E7EA  4160 14FC				dw	4160h, 14FCh
020A:E7EE  5E					pop	si
020A:E7EF  26: 8B 04				mov	ax,es:[si]
020A:E7F2  55					push	bp
020A:E7F3  53					push	bx
020A:E7F4  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:E7F4  9A					db	9Ah
020A:E7F5  023C 14FC				dw	23Ch, 14FCh
020A:E7F9  5B					pop	bx
020A:E7FA  5D					pop	bp
020A:E7FB  83 C5 06				add	bp,6
020A:E7FE  3E: C7 46 00 203A			mov	word ptr ds:[bp],203Ah
020A:E804  45					inc	bp
020A:E805  45					inc	bp
020A:E806  26: F6 44 02 10			test	byte ptr es:[si+2],10h
020A:E80B  74 21				jz	loc_2357		; Jump if zero
020A:E80D  45					inc	bp
020A:E80E  3E: C7 46 00 6C61			mov	word ptr ds:[bp],6C61h
020A:E814  45					inc	bp
020A:E815  45					inc	bp
020A:E816  45					inc	bp
020A:E817  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:E81C  45					inc	bp
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 473

020A:E81D  45					inc	bp
020A:E81E  26: 8A 44 03				mov	al,es:[si+3]
020A:E822  9A 14FC:00E4		;*		call	far ptr sub_152		;*(14FC:00E4)
020A:E822  9A					db	9Ah
020A:E823  00E4 14FC				dw	0E4h, 14FCh
020A:E827  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:E82C  45					inc	bp
020A:E82D  45					inc	bp
020A:E82E			loc_2357:
020A:E82E  B9 0012				mov	cx,12h
020A:E831  8D 7C 04				lea	di,[si+4]		; Load effective addr

020A:E834			locloop_2358:
020A:E834  26: 8A 05				mov	al,es:[di]
020A:E837  2C 2A				sub	al,2Ah			; '*'
020A:E839  3E: 88 46 00				mov	ds:[bp],al
020A:E83D  47					inc	di
020A:E83E  45					inc	bp
020A:E83F  E2 F3				loop	locloop_2358		; Loop if cx > 0

020A:E841  BA 2D1B				mov	dx,2D1Bh
020A:E844  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E849  06					push	es
020A:E84A  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:E84A  9A					db	9Ah
020A:E84B  233C 14FC				dw	233Ch, 14FCh
020A:E84F  43					inc	bx
020A:E850  E8 7EA9				call	sub_81			; (66FC)
020A:E853  BD 2D3B				mov	bp,2D3Bh
020A:E856  83 C5 08				add	bp,8
020A:E859  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E85E  9C					pushf				; Push flags
020A:E85F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E864  5A					pop	dx
020A:E865  8E C2				mov	es,dx
020A:E867  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E86C  5A					pop	dx
020A:E86D  75 0A				jnz	loc_2359		; Jump if not zero
020A:E86F  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E874  74 03				je	loc_2359		; Jump if equal
020A:E876  E8 8B43				call	sub_103			; (73BC)
020A:E879			loc_2359:
020A:E879  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E87E  9D					popf				; Pop flags
020A:E87F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E884			loc_2360:
020A:E884  83 C6 16				add	si,16h
020A:E887  3B 36 540C				cmp	si,data_657		; (020A:540C=20FCh)
020A:E88B  73 03				jae	loc_2361		; Jump if above or =
020A:E88D  E9 FF4B				jmp	loc_2355		; (E7DB)
020A:E890			loc_2361:
020A:E890  83 3E 5408 00			cmp	data_655,0		; (020A:5408=0EBEFh)
020A:E895  74 17				je	loc_2362		; Jump if equal
020A:E897  E8 7E62				call	sub_81			; (66FC)
020A:E89A  BD 2D3B				mov	bp,2D3Bh
020A:E89D  83 C5 08				add	bp,8
020A:E8A0  A1 5408				mov	ax,data_655		; (020A:5408=0EBEFh)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 474

020A:E8A3  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:E8A3  9A					db	9Ah
020A:E8A4  0288 14FC				dw	288h, 14FCh
020A:E8A8  45					inc	bp
020A:E8A9  BE 3C6E				mov	si,3C6Eh
020A:E8AC  EB 08				jmp	short loc_2363		; (E8B6)
020A:E8AE			loc_2362:
020A:E8AE  83 FB 00				cmp	bx,0
020A:E8B1  75 41				jne	loc_2365		; Jump if not equal
020A:E8B3  BE 3C36				mov	si,3C36h
020A:E8B6			loc_2363:
020A:E8B6  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E8B6  9A					db	9Ah
020A:E8B7  4160 14FC				dw	4160h, 14FCh
020A:E8BB  BA 2D1B				mov	dx,2D1Bh
020A:E8BE  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E8C3  06					push	es
020A:E8C4  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:E8C4  9A					db	9Ah
020A:E8C5  233C 14FC				dw	233Ch, 14FCh
020A:E8C9  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:E8CE  9C					pushf				; Push flags
020A:E8CF  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:E8D4  5A					pop	dx
020A:E8D5  8E C2				mov	es,dx
020A:E8D7  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:E8DC  5A					pop	dx
020A:E8DD  75 0A				jnz	loc_2364		; Jump if not zero
020A:E8DF  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E8E4  74 03				je	loc_2364		; Jump if equal
020A:E8E6  E8 8AD3				call	sub_103			; (73BC)
020A:E8E9			loc_2364:
020A:E8E9  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E8EE  9D					popf				; Pop flags
020A:E8EF  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:E8F4			loc_2365:
020A:E8F4  58					pop	ax
020A:E8F5  A3 4E24				mov	data_592,ax		; (020A:4E24=0A107h)
020A:E8F8  2E: 89		data_763	db	89h
020A:E8FA  16					push	ss
020A:E8FB  92					xchg	dx,ax
020A:E8FC  00 9C 8F2E				add	data_728[si],bl		; (020A:8F2E=45h)
020A:E900  06					push	es
020A:E901  96					xchg	si,ax
020A:E902  00 5A 8E				add	[bp+si-72h],bl
020A:E905  C2 3B2E				retn	3B2Eh
							                        ;* No entry point to code
020A:E908  16					push	ss
020A:E909  A1 5A38				mov	ax,data_675		; (020A:5A38=5A5Eh)
020A:E90C  75 0A				jnz	loc_2366		; Jump if not zero
020A:E90E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:E913  74 03				je	loc_2366		; Jump if equal
020A:E915  E8 8AA4				call	sub_103			; (73BC)
020A:E918			loc_2366:
020A:E918  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:E91D  9D					popf				; Pop flags
020A:E91E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 475

020A:E923  C3					retn
							                        ;* No entry point to code
020A:E924  F6 06 16AB 02			test	data_166,2		; (020A:16AB=41h)
020A:E929  75 01				jnz	loc_2367		; Jump if not zero
020A:E92B  C3					retn
020A:E92C			loc_2367:
020A:E92C  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:E931  06					push	es
020A:E932  A1 4E24				mov	ax,data_592		; (020A:4E24=0A107h)
020A:E935  50					push	ax
020A:E936  83 26 4E24 F7			and	data_592,0FFF7h		; (020A:4E24=0A107h)
020A:E93B  33 DB				xor	bx,bx			; Zero register
020A:E93D  B0 4B				mov	al,4Bh			; 'K'
020A:E93F  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:E93F  9A					db	9Ah
020A:E940  2280 14FC				dw	2280h, 14FCh
020A:E944  E8 7DB5				call	sub_81			; (66FC)
020A:E947  BD 2D3B				mov	bp,2D3Bh
020A:E94A  83 C5 08				add	bp,8
020A:E94D  E8 870A				call	sub_94			; (705A)
020A:E950  BE 004C				mov	si,4Ch
020A:E953			loc_2368:
020A:E953  26: F6 44 03 01			test	byte ptr es:[si+3],1
020A:E958  75 03				jnz	loc_2369		; Jump if not zero
020A:E95A  E9 0100				jmp	loc_2378		; (EA5D)
020A:E95D			loc_2369:
020A:E95D  56					push	si
020A:E95E  BE 3C63				mov	si,3C63h
020A:E961  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:E961  9A					db	9Ah
020A:E962  4160 14FC				dw	4160h, 14FCh
020A:E966  5E					pop	si
020A:E967  26: 8A 04				mov	al,es:[si]
020A:E96A  55					push	bp
020A:E96B  53					push	bx
020A:E96C  32 E4				xor	ah,ah			; Zero register
020A:E96E  9A 14FC:023C		;*		call	far ptr sub_157		;*(14FC:023C)
020A:E96E  9A					db	9Ah
020A:E96F  023C 14FC				dw	23Ch, 14FCh
020A:E973  5B					pop	bx
020A:E974  5D					pop	bp
020A:E975  83 C5 04				add	bp,4
020A:E978  3E: C7 46 00 203A			mov	word ptr ds:[bp],203Ah
020A:E97E  45					inc	bp
020A:E97F  26: F6 44 03 C0			test	byte ptr es:[si+3],0C0h
020A:E984  74 7E				jz	loc_2375		; Jump if zero
020A:E986  26: F6 44 03 80			test	byte ptr es:[si+3],80h
020A:E98B  75 77				jnz	loc_2375		; Jump if not zero
020A:E98D  26: F6 44 02 80			test	byte ptr es:[si+2],80h
020A:E992  74 2F				jz	loc_2371		; Jump if zero
020A:E994  45					inc	bp
020A:E995  53					push	bx
020A:E996  45					inc	bp
020A:E997  3E: C7 46 00 6E66			mov	word ptr ds:[bp],6E66h
020A:E99D  3E: C6 46 02 3D			mov	byte ptr ds:[bp+2],3Dh	; '='
020A:E9A2  83 C5 03				add	bp,3
020A:E9A5  26: 8A 44 04				mov	al,es:[si+4]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 476

020A:E9A9  3C 00				cmp	al,0
020A:E9AB  74 05				je	loc_2370		; Jump if equal
020A:E9AD  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:E9AD  9A					db	9Ah
020A:E9AE  022C 14FC				dw	22Ch, 14FCh
020A:E9B2			loc_2370:
020A:E9B2  26: 8A 44 06				mov	al,es:[si+6]
020A:E9B6  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:E9B6  9A					db	9Ah
020A:E9B7  022C 14FC				dw	22Ch, 14FCh
020A:E9BB  26: 8A 44 05				mov	al,es:[si+5]
020A:E9BF  32 E4				xor	ah,ah			; Zero register
020A:E9C1  EB 2B				jmp	short loc_2372		; (E9EE)
020A:E9C3			loc_2371:
020A:E9C3  26: F6 44 03 10			test	byte ptr es:[si+3],10h
020A:E9C8  74 3A				jz	loc_2375		; Jump if zero
020A:E9CA  45					inc	bp
020A:E9CB  53					push	bx
020A:E9CC  26: 8B 44 04				mov	ax,es:[si+4]
020A:E9D0  45					inc	bp
020A:E9D1  3E: C6 46 00 61			mov	byte ptr ds:[bp],61h	; 'a'
020A:E9D6  3E: C7 46 01 3D68			mov	word ptr ds:[bp+1],3D68h
020A:E9DC  26: F6 44 03 20			test	byte ptr es:[si+3],20h	; ' '
020A:E9E1  74 12				jz	loc_2373		; Jump if zero
020A:E9E3  3E: C7 46 01 3D78			mov	word ptr ds:[bp+1],3D78h
020A:E9E9  83 C5 03				add	bp,3
020A:E9EC  86 C4				xchg	al,ah
020A:E9EE			loc_2372:
020A:E9EE  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:E9EE  9A					db	9Ah
020A:E9EF  021C 14FC				dw	21Ch, 14FCh
020A:E9F3  EB 08				jmp	short loc_2374		; (E9FD)
020A:E9F5			loc_2373:
020A:E9F5  83 C5 03				add	bp,3
020A:E9F8  9A 14FC:022C		;*		call	far ptr sub_156		;*(14FC:022C)
020A:E9F8  9A					db	9Ah
020A:E9F9  022C 14FC				dw	22Ch, 14FCh
020A:E9FD			loc_2374:
020A:E9FD  3E: C6 46 00 68			mov	byte ptr ds:[bp],68h	; 'h'
020A:EA02  45					inc	bp
020A:EA03  5B					pop	bx
020A:EA04			loc_2375:
020A:EA04  45					inc	bp
020A:EA05  B9 001E				mov	cx,1Eh
020A:EA08  8D 7C 08				lea	di,[si+8]		; Load effective addr

020A:EA0B			locloop_2376:
020A:EA0B  26: 8A 05				mov	al,es:[di]
020A:EA0E  2C 28				sub	al,28h			; '('
020A:EA10  3E: 88 46 00				mov	ds:[bp],al
020A:EA14  47					inc	di
020A:EA15  45					inc	bp
020A:EA16  E2 F3				loop	locloop_2376		; Loop if cx > 0

020A:EA18  BA 2D1B				mov	dx,2D1Bh
020A:EA1B  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:EA20  06					push	es
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 477

020A:EA21  53					push	bx
020A:EA22  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:EA22  9A					db	9Ah
020A:EA23  233C 14FC				dw	233Ch, 14FCh
020A:EA27  5B					pop	bx
020A:EA28  43					inc	bx
020A:EA29  E8 7CD0				call	sub_81			; (66FC)
020A:EA2C  BD 2D3B				mov	bp,2D3Bh
020A:EA2F  83 C5 08				add	bp,8
020A:EA32  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:EA37  9C					pushf				; Push flags
020A:EA38  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:EA3D  5A					pop	dx
020A:EA3E  8E C2				mov	es,dx
020A:EA40  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:EA45  5A					pop	dx
020A:EA46  75 0A				jnz	loc_2377		; Jump if not zero
020A:EA48  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:EA4D  74 03				je	loc_2377		; Jump if equal
020A:EA4F  E8 896A				call	sub_103			; (73BC)
020A:EA52			loc_2377:
020A:EA52  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:EA57  9D					popf				; Pop flags
020A:EA58  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:EA5D			loc_2378:
020A:EA5D  83 C6 26				add	si,26h
020A:EA60  3B 36 540A				cmp	si,data_656		; (020A:540A=8033h)
020A:EA64  73 03				jae	loc_2379		; Jump if above or =
020A:EA66  E9 FEEA				jmp	loc_2368		; (E953)
020A:EA69			loc_2379:
020A:EA69  83 3E 5406 00			cmp	data_654,0		; (020A:5406=0D1FBh)
020A:EA6E  74 17				je	loc_2380		; Jump if equal
020A:EA70  E8 7C89				call	sub_81			; (66FC)
020A:EA73  BD 2D3B				mov	bp,2D3Bh
020A:EA76  83 C5 08				add	bp,8
020A:EA79  A1 5406				mov	ax,data_654		; (020A:5406=0D1FBh)
020A:EA7C  9A 14FC:0288		;*		call	far ptr sub_158		;*(14FC:0288)
020A:EA7C  9A					db	9Ah
020A:EA7D  0288 14FC				dw	288h, 14FCh
020A:EA81  45					inc	bp
020A:EA82  BE 3CA9				mov	si,3CA9h
020A:EA85  EB 08				jmp	short loc_2381		; (EA8F)
020A:EA87			loc_2380:
020A:EA87  83 FB 00				cmp	bx,0
020A:EA8A  75 41				jne	loc_2383		; Jump if not equal
020A:EA8C  BE 3C49				mov	si,3C49h
020A:EA8F			loc_2381:
020A:EA8F  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:EA8F  9A					db	9Ah
020A:EA90  4160 14FC				dw	4160h, 14FCh
020A:EA94  BA 2D1B				mov	dx,2D1Bh
020A:EA97  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:EA9C  06					push	es
020A:EA9D  9A 14FC:233C		;*		call	far ptr sub_176		;*(14FC:233C)
020A:EA9D  9A					db	9Ah
020A:EA9E  233C 14FC				dw	233Ch, 14FCh
020A:EAA2  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 478

020A:EAA7  9C					pushf				; Push flags
020A:EAA8  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:EAAD  5A					pop	dx
020A:EAAE  8E C2				mov	es,dx
020A:EAB0  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:EAB5  5A					pop	dx
020A:EAB6  75 0A				jnz	loc_2382		; Jump if not zero
020A:EAB8  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:EABD  74 03				je	loc_2382		; Jump if equal
020A:EABF  E8 88FA				call	sub_103			; (73BC)
020A:EAC2			loc_2382:
020A:EAC2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:EAC7  9D					popf				; Pop flags
020A:EAC8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:EACD			loc_2383:
020A:EACD  58					pop	ax
020A:EACE  A3 4E24				mov	data_592,ax		; (020A:4E24=0A107h)
020A:EAD1  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:EAD6  9C					pushf				; Push flags
020A:EAD7  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:EADC  5A					pop	dx
020A:EADD  8E C2				mov	es,dx
020A:EADF  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:EAE4  5A					pop	dx
020A:EAE5  75 0A				jnz	loc_2384		; Jump if not zero
020A:EAE7  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:EAEC  74 03				je	loc_2384		; Jump if equal
020A:EAEE  E8 88CB				call	sub_103			; (73BC)
020A:EAF1			loc_2384:
020A:EAF1  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:EAF6  9D					popf				; Pop flags
020A:EAF7  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:EAFC  C3					retn
020A:EAFD  00 00				add	[bx+si],al
020A:EAFF  00 C6				add	dh,al
020A:EB01  06			data_764	db	6
020A:EB02  36					db	36h
020A:EB03  2B 02				sub	ax,[bp+si]
020A:EB05  A0 2B3B				mov	al,data_242		; (020A:2B3B=55h)
020A:EB08  D0 C8				ror	al,1			; Rotate
020A:EB0A  A2 2B37				mov	data_239,al		; (020A:2B37=5Ch)
020A:EB0D  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (020A:327F=0)
020A:EB12  77 06				ja	loc_2386		; Jump if above
020A:EB14  81 0E 4E22 0800			or	data_591,800h		; (020A:4E22=0EDA3h)
020A:EB1A			loc_2386:
020A:EB1A  B8 F8D2				mov	ax,0F8D2h
020A:EB1D  8E C0				mov	es,ax
020A:EB1F  26: A1 72D5				mov	ax,word ptr es:[72D5h]	; (F8D2:72D5=3230h)
020A:EB23  2E: 3B 06 004D			cmp	ax,word ptr cs:[4Dh]	; (020A:004D=5582h)
020A:EB28  75 14				jne	loc_2387		; Jump if not equal
020A:EB2A  26: A1 72D7				mov	ax,word ptr es:[72D7h]	; (F8D2:72D7=322Fh)
020A:EB2E  2E: 3B 06 004F			cmp	ax,word ptr cs:[4Fh]	; (020A:004F=0BF81h)
020A:EB33  75 09				jne	loc_2387		; Jump if not equal
020A:EB35  E8 8531				call	sub_98			; (7069)
020A:EB38  26: C6 06 3169 80			mov	byte ptr es:[3169h],80h	; (F8D2:3169=0E8h)
020A:EB3E			loc_2387:
020A:EB3E  C6 06 303F 00			mov	data_297,0		; (020A:303F=35h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 479

020A:EB43  B8 FFF0				mov	ax,0FFF0h
020A:EB46  39 06 3064				cmp	data_319,ax		; (020A:3064=776Fh)
020A:EB4A  76 03				jbe	loc_2388		; Jump if below or =
020A:EB4C  A3 3064				mov	data_319,ax		; (020A:3064=776Fh)
020A:EB4F			loc_2388:
020A:EB4F  A0 303F				mov	al,data_297		; (020A:303F=35h)
020A:EB52  E8 84FF				call	sub_93			; (7054)
020A:EB55  B3 15				mov	bl,15h
020A:EB57  F6 E3				mul	bl			; ax = reg * al
020A:EB59  05 0000				add	ax,0
020A:EB5C  8B F0				mov	si,ax
020A:EB5E  C7 06 18B3 2020			mov	data_179,2020h		; (020A:18B3=0)
020A:EB64  BD 18B2				mov	bp,18B2h
020A:EB67  8A 0E 35DF				mov	cl,data_450		; (020A:35DF=80h)
020A:EB6B  C6 06 35DF 00			mov	data_450,0		; (020A:35DF=80h)
020A:EB70  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020A:EB74  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:EB74  9A					db	9Ah
020A:EB75  5778 14FC				dw	5778h, 14FCh
020A:EB79  88 0E 35DF				mov	data_450,cl		; (020A:35DF=80h)
020A:EB7D  80 26 35EE FB			and	data_461,0FBh		; (020A:35EE=0B4h)
020A:EB82  26: F6 44 0E 01			test	byte ptr es:[si+0Eh],1
020A:EB87  74 05				jz	loc_2389		; Jump if zero
020A:EB89  80 0E 35EE 04			or	data_461,4		; (020A:35EE=0B4h)
020A:EB8E			loc_2389:
020A:EB8E  26: 8B 44 0F				mov	ax,es:[si+0Fh]
020A:EB92  2E: A3 38B9				mov	cs:data_506,ax		; (020A:38B9=3040h)
020A:EB96  26: 8B 44 11				mov	ax,es:[si+11h]
020A:EB9A  2E: A3 38B5				mov	cs:data_504,ax		; (020A:38B5=477h)
020A:EB9E  26: 8B 44 13				mov	ax,es:[si+13h]
020A:EBA2  2E: A3 38B7				mov	cs:data_505,ax		; (020A:38B7=6FEh)
020A:EBA6  B4 05				mov	ah,5
020A:EBA8  E8 6B11		;*		call	sub_58			;*(56BC)
020A:EBA8  E8 11 6B				db	0E8h, 11h, 6Bh
020A:EBAB  E8 677E				call	sub_48			; (532C)
020A:EBAE  E8 84A3				call	sub_93			; (7054)
020A:EBB1  9A 14FC:6BA4		;*		call	far ptr sub_242		;*(14FC:6BA4)
020A:EBB1  9A					db	9Ah
020A:EBB2  6BA4 14FC				dw	6BA4h, 14FCh
020A:EBB6  9A 14FC:01DC		;*		call	far ptr sub_154		;*(14FC:01DC)
020A:EBB6  9A					db	9Ah
020A:EBB7  01DC 14FC				dw	1DCh, 14FCh
020A:EBBB  C7 06 344E FFFF			mov	data_403,0FFFFh		; (020A:344E=2B36h)
020A:EBC1  E8 C29C				call	sub_131			; (AE60)
020A:EBC4  C6 06 35A0 00			mov	byte ptr ds:[35A0h],0	; (020A:35A0=1)
020A:EBC9  C6 06 309E 00			mov	data_346,0		; (020A:309E=65h)
020A:EBCE  C7 06 40ED FFFF			mov	data_519,0FFFFh		; (020A:40ED=744Fh)
020A:EBD4  B2 FF				mov	dl,0FFh
020A:EBD6  E8 3247		;*		call	sub_25			;*(1E20)
020A:EBD6  E8 47 32				db	0E8h, 47h, 32h
020A:EBD9  A1 3054				mov	ax,data_311		; (020A:3054=5345h)
020A:EBDC  A3 344C				mov	data_402,ax		; (020A:344C=6C6h)
020A:EBDF  A1 3052				mov	ax,data_310		; (020A:3052=434Fh)
020A:EBE2  A3 344A				mov	data_401,ax		; (020A:344A=0CD01h)
020A:EBE5  F6 06 3045 40			test	data_301,40h		; (020A:3045=0) '@'
020A:EBEA  74 03				jz	loc_2390		; Jump if zero
020A:EBEC  E9 07C3				jmp	loc_2491		; (F3B2)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 480

020A:EBEF			loc_2390:
020A:EBEF  2E: 80 3E 0098 01			cmp	byte ptr cs:[98h],1	; (020A:0098=0)
020A:EBF5  74 1D				je	loc_2391		; Jump if equal
020A:EBF7  B4 0B				mov	ah,0Bh
020A:EBF9  CD 21				int	21h			; DOS Services  ah=function 0Bh
										;  if keybd char available,al=FF
020A:EBFB  0A C0				or	al,al			; Zero ?
020A:EBFD  74 26				jz	loc_2393		; Jump if zero
020A:EBFF  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:EBFF  9A					db	9Ah
020A:EC00  0760 14FC				dw	760h, 14FCh
020A:EC04  3C 1B				cmp	al,1Bh
020A:EC06  74 0C				je	loc_2391		; Jump if equal
020A:EC08  0C 20				or	al,20h			; ' '
020A:EC0A  3C 71				cmp	al,71h			; 'q'
020A:EC0C  74 06				je	loc_2391		; Jump if equal
020A:EC0E  3C 6A				cmp	al,6Ah			; 'j'
020A:EC10  74 05				je	loc_2392		; Jump if equal
020A:EC12  EB 11				jmp	short loc_2393		; (EC25)
020A:EC14			loc_2391:
020A:EC14  E9 7FA3				jmp	loc_937			; (6BBA)
020A:EC17			loc_2392:
020A:EC17  A1 35E9				mov	ax,data_458		; (020A:35E9=3C21h)
020A:EC1A  8B 1E 35EB				mov	bx,data_459		; (020A:35EB=7500h)
020A:EC1E  A3 35EB				mov	data_459,ax		; (020A:35EB=7500h)
020A:EC21  89 1E 35E9				mov	data_458,bx		; (020A:35E9=3C21h)
020A:EC25			loc_2393:
020A:EC25  A1 4E20				mov	ax,word ptr ds:[4E20h]	; (020A:4E20=699h)
020A:EC28  21 06 4E22				and	data_591,ax		; (020A:4E22=0EDA3h)
020A:EC2C  C7 06 4E20 FFFF			mov	word ptr ds:[4E20h],0FFFFh	; (020A:4E20=699h)
020A:EC32  E8 6C27				call	sub_60			; (585C)
020A:EC35  9A 14FC:44F0		;*		call	far ptr sub_209		;*(14FC:44F0)
020A:EC35  9A					db	9Ah
020A:EC36  44F0 14FC				dw	44F0h, 14FCh
020A:EC3A  33 C0				xor	ax,ax			; Zero register
020A:EC3C  A2 4E04				mov	byte ptr ds:[4E04h],al	; (020A:4E04=27h)
020A:EC3F  A2 345D				mov	data_412,al		; (020A:345D=5)
020A:EC42  A2 30BB				mov	data_360,al		; (020A:30BB=42h)
020A:EC45  C6 06 30B8 00			mov	data_357,0		; (020A:30B8=45h)
020A:EC4A  A0 53D4				mov	al,data_647		; (020A:53D4=0C3h)
020A:EC4D  A2 53D5				mov	data_648,al		; (020A:53D5=51h)
020A:EC50  E8 70BD				call	sub_72			; (5D10)
020A:EC53  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:EC58  76 03				jbe	loc_2394		; Jump if below or =
020A:EC5A  E9 00CD				jmp	loc_2406		; (ED2A)
020A:EC5D			loc_2394:
020A:EC5D  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EC60  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EC64  C6 06 4D4B 01			mov	byte ptr ds:[4D4Bh],1	; (CD01:4D4B=6)
020A:EC69  BA 0001				mov	dx,1
020A:EC6C  E8 721D				call	sub_76			; (5E8C)
020A:EC6F  C6 06 4D4B 00			mov	byte ptr ds:[4D4Bh],0	; (CD01:4D4B=6)
020A:EC74  72 03				jc	loc_2395		; Jump if carry Set
020A:EC76  E9 00B1				jmp	loc_2406		; (ED2A)
020A:EC79			loc_2395:
020A:EC79  26: 8A 4D 04				mov	cl,es:[di+4]
020A:EC7D  80 E1 1F				and	cl,1Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 481

020A:EC80  80 F9 1F				cmp	cl,1Fh
020A:EC83  75 59				jne	loc_2402		; Jump if not equal
020A:EC85  E8 94F8				call	sub_113			; (8180)
020A:EC88  72 15				jc	loc_2398		; Jump if carry Set
020A:EC8A			loc_2396:
020A:EC8A  BB 40C2				mov	bx,40C2h
020A:EC8D  26: 8A 45 05				mov	al,es:[di+5]
020A:EC91  25 000F				and	ax,0Fh
020A:EC94  D7					xlat				; al=[al+[bx]] table
020A:EC95  0A C0				or	al,al			; Zero ?
020A:EC97  75 04				jnz	loc_2397		; Jump if not zero
020A:EC99  26: 8A 45 06				mov	al,es:[di+6]
020A:EC9D			loc_2397:
020A:EC9D  03 F8				add	di,ax
020A:EC9F			loc_2398:
020A:EC9F  8B 1E 40F5				mov	bx,word ptr ds:[40F5h]	; (CD01:40F5=0)
020A:ECA3  26: 3B 1D				cmp	bx,es:[di]
020A:ECA6  75 34				jne	loc_2401		; Jump if not equal
020A:ECA8  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (CD01:40F7=4B00h)
020A:ECAB  26: 3B 45 02				cmp	ax,es:[di+2]
020A:ECAF  75 2B				jne	loc_2401		; Jump if not equal
020A:ECB1  50					push	ax
020A:ECB2  53					push	bx
020A:ECB3  BB 40C2				mov	bx,40C2h
020A:ECB6  26: 8A 45 05				mov	al,es:[di+5]
020A:ECBA  25 000F				and	ax,0Fh
020A:ECBD  D7					xlat				; al=[al+[bx]] table
020A:ECBE  0A C0				or	al,al			; Zero ?
020A:ECC0  75 04				jnz	loc_2399		; Jump if not zero
020A:ECC2  26: 8A 45 06				mov	al,es:[di+6]
020A:ECC6			loc_2399:
020A:ECC6  8B E8				mov	bp,ax
020A:ECC8  5B					pop	bx
020A:ECC9  58					pop	ax
020A:ECCA  BA FFFF				mov	dx,0FFFFh
020A:ECCD  26: 3B 1B				cmp	bx,es:[bp+di]
020A:ECD0  75 04				jne	loc_2400		; Jump if not equal
020A:ECD2  26: 8B 53 02				mov	dx,es:[bp+di+2]
020A:ECD6			loc_2400:
020A:ECD6  89 16 4E89				mov	word ptr ds:[4E89h],dx	; (CD01:4E89=0C708h)
020A:ECDA  EB 9D				jmp	short loc_2395		; (EC79)
020A:ECDC			loc_2401:
020A:ECDC  EB 4C				jmp	short loc_2406		; (ED2A)
020A:ECDE			loc_2402:
020A:ECDE  57					push	di
020A:ECDF  06					push	es
020A:ECE0  26: F6 45 05 30			test	byte ptr es:[di+5],30h	; '0'
020A:ECE5  74 0C				jz	loc_2403		; Jump if zero
020A:ECE7  C6 06 309E 00			mov	byte ptr ds:[309Eh],0	; (CD01:309E=0)
020A:ECEC  B2 FF				mov	dl,0FFh
020A:ECEE  E8 312F		;*		call	sub_25			;*(1E20)
020A:ECEE  E8 2F 31				db	0E8h, 2Fh, 31h
020A:ECF1  EB 0A				jmp	short loc_2404		; (ECFD)
020A:ECF3			loc_2403:
020A:ECF3  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020A:ECF8  74 03				jz	loc_2404		; Jump if zero
020A:ECFA  E8 91EB				call	sub_111			; (7EE8)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 482

020A:ECFD			loc_2404:
020A:ECFD  26: 8B 05				mov	ax,es:[di]
020A:ED00  3B 06 304C				cmp	ax,word ptr ds:[304Ch]	; (CD01:304C=0)
020A:ED04  75 1F				jne	loc_2405		; Jump if not equal
020A:ED06  26: 8B 45 02				mov	ax,es:[di+2]
020A:ED0A  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (CD01:304E=0)
020A:ED0E  75 15				jne	loc_2405		; Jump if not equal
020A:ED10  F7 06 4E22 1000			test	word ptr ds:[4E22h],1000h	; (CD01:4E22=5804h)
020A:ED16  75 0D				jnz	loc_2405		; Jump if not zero
020A:ED18  A1 3039				mov	ax,word ptr ds:[3039h]	; (CD01:3039=0)
020A:ED1B  0B C0				or	ax,ax			; Zero ?
020A:ED1D  74 06				jz	loc_2405		; Jump if zero
020A:ED1F  A3 361A				mov	word ptr ds:[361Ah],ax	; (CD01:361A=0)
020A:ED22  A3 3618				mov	word ptr ds:[3618h],ax	; (CD01:3618=0)
020A:ED25			loc_2405:
020A:ED25  07					pop	es
020A:ED26  5F					pop	di
020A:ED27  E9 FF60				jmp	loc_2396		; (EC8A)
020A:ED2A			loc_2406:
020A:ED2A  C7 06 2B39 0011			mov	word ptr ds:[2B39h],11h	; (CD01:2B39=0)
020A:ED30  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:ED30  9A					db	9Ah
020A:ED31  2C58 14FC				dw	2C58h, 14FCh
020A:ED35  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:ED38  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:ED3C  BA 0002				mov	dx,2
020A:ED3F  E8 714A				call	sub_76			; (5E8C)
020A:ED42  9C					pushf				; Push flags
020A:ED43  80 3E 345C 01			cmp	byte ptr ds:[345Ch],1	; (CD01:345C=0)
020A:ED48  75 04				jne	loc_2407		; Jump if not equal
020A:ED4A  9D					popf				; Pop flags
020A:ED4B  E9 027F				jmp	loc_2446		; (EFCD)
020A:ED4E			loc_2407:
020A:ED4E  9D					popf				; Pop flags
020A:ED4F  73 77				jnc	loc_2414		; Jump if carry=0
020A:ED51  0B C0				or	ax,ax			; Zero ?
020A:ED53  74 16				jz	loc_2408		; Jump if zero
020A:ED55  48					dec	ax
020A:ED56  26: 03 45 08				add	ax,es:[di+8]
020A:ED5A  73 0F				jnc	loc_2408		; Jump if carry=0
020A:ED5C  40					inc	ax
020A:ED5D  26: 29 45 08				sub	es:[di+8],ax
020A:ED61  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:ED66  26: 80 4D 04 01			or	byte ptr es:[di+4],1
020A:ED6B			loc_2408:
020A:ED6B  26: 8B 45 08				mov	ax,es:[di+8]
020A:ED6F  A3 30BC				mov	word ptr ds:[30BCh],ax	; (CD01:30BC=0)
020A:ED72  A3 30BE				mov	word ptr ds:[30BEh],ax	; (CD01:30BE=0)
020A:ED75  26: 8A 55 04				mov	dl,es:[di+4]
020A:ED79  BF 50BA				mov	di,50BAh
020A:ED7C  80 E2 3F				and	dl,3Fh			; '?'
020A:ED7F  80 FA 00				cmp	dl,0
020A:ED82  74 31				je	loc_2411		; Jump if equal
020A:ED84  80 FA 01				cmp	dl,1
020A:ED87  74 31				je	loc_2412		; Jump if equal
020A:ED89  80 FA 02				cmp	dl,2
020A:ED8C  74 2F				je	loc_2413		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 483

020A:ED8E  80 FA 04				cmp	dl,4
020A:ED91  74 17				je	loc_2410		; Jump if equal
020A:ED93  F6 C2 10				test	dl,10h
020A:ED96  75 25				jnz	loc_2413		; Jump if not zero
020A:ED98  80 FA 21				cmp	dl,21h			; '!'
020A:ED9B  72 03				jb	loc_2409		; Jump if below
020A:ED9D  E9 0227				jmp	loc_2445		; (EFC7)
020A:EDA0			loc_2409:
020A:EDA0  80 FA 20				cmp	dl,20h			; ' '
020A:EDA3  75 15				jne	loc_2412		; Jump if not equal
020A:EDA5  BF 50CD				mov	di,50CDh
020A:EDA8  EB 10				jmp	short loc_2412		; (EDBA)
020A:EDAA			loc_2410:
020A:EDAA  A9 0003				test	ax,3
020A:EDAD  75 0B				jnz	loc_2412		; Jump if not zero
020A:EDAF  BF 518B				mov	di,518Bh
020A:EDB2  E9 045D				jmp	loc_2476		; (F212)
020A:EDB5			loc_2411:
020A:EDB5  3D 0002				cmp	ax,2
020A:EDB8  74 03				je	loc_2413		; Jump if equal
020A:EDBA			loc_2412:
020A:EDBA  E9 0455				jmp	loc_2476		; (F212)
020A:EDBD			loc_2413:
020A:EDBD  A9 0001				test	ax,1
020A:EDC0  75 F8				jnz	loc_2412		; Jump if not zero
020A:EDC2  BF 5106				mov	di,5106h
020A:EDC5  E9 044A				jmp	loc_2476		; (F212)
020A:EDC8			loc_2414:
020A:EDC8  83 3E 3056 00			cmp	word ptr ds:[3056h],0	; (CD01:3056=0)
020A:EDCD  75 03				jne	loc_2415		; Jump if not equal
020A:EDCF  E9 01AB				jmp	loc_2441		; (EF7D)
020A:EDD2			loc_2415:
020A:EDD2  8E 06 344A				mov	es,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EDD6  8B 3E 344C				mov	di,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EDDA  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:EDDE  75 03				jne	loc_2416		; Jump if not equal
020A:EDE0  E9 0165				jmp	loc_2438		; (EF48)
020A:EDE3			loc_2416:
020A:EDE3  8B 3E 344C				mov	di,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EDE7  8B 0E 3056				mov	cx,word ptr ds:[3056h]	; (CD01:3056=0)
020A:EDEB  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:EDF0  77 00				ja	$+2			; delay for I/O
020A:EDF2  2B CF				sub	cx,di
020A:EDF4  8B C1				mov	ax,cx
020A:EDF6  83 F9 FF				cmp	cx,0FFFFh
020A:EDF9  74 01				je	loc_2417		; Jump if equal
020A:EDFB  41					inc	cx
020A:EDFC			loc_2417:
020A:EDFC  83 F9 20				cmp	cx,20h
020A:EDFF  76 0F				jbe	loc_2418		; Jump if below or =
020A:EE01  8B D1				mov	dx,cx
020A:EE03  80 3E 53D9 00			cmp	byte ptr ds:[53D9h],0	; (CD01:53D9=50h)
020A:EE08  74 09				je	loc_2419		; Jump if equal
020A:EE0A  26: 80 3D 90				cmp	byte ptr es:[di],90h
020A:EE0E  75 03				jne	loc_2419		; Jump if not equal
020A:EE10			loc_2418:
020A:EE10  E9 0135				jmp	loc_2438		; (EF48)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 484

020A:EE13			loc_2419:
020A:EE13  BB 5413				mov	bx,5413h
020A:EE16  8B C1				mov	ax,cx
020A:EE18  03 06 344C				add	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EE1C  73 03				jnc	loc_2420		; Jump if carry=0
020A:EE1E  49					dec	cx
020A:EE1F  EB 05				jmp	short loc_2421		; (EE26)
020A:EE21			loc_2420:
020A:EE21  3D FFFF				cmp	ax,0FFFFh
020A:EE24  75 01				jne	loc_2422		; Jump if not equal
020A:EE26			loc_2421:
020A:EE26  49					dec	cx
020A:EE27			loc_2422:
020A:EE27  8B E9				mov	bp,cx
020A:EE29  26: 8A 15				mov	dl,es:[di]

020A:EE2C			locloop_2423:
020A:EE2C  26: 8B 05				mov	ax,es:[di]
020A:EE2F  0B C0				or	ax,ax			; Zero ?
020A:EE31  74 3B				jz	loc_2427		; Jump if zero
020A:EE33  3A C2				cmp	al,dl
020A:EE35  74 02				je	loc_2424		; Jump if equal
020A:EE37  32 D2				xor	dl,dl			; Zero register
020A:EE39			loc_2424:
020A:EE39  80 3E 53D9 00			cmp	byte ptr ds:[53D9h],0	; (CD01:53D9=50h)
020A:EE3E  74 26				je	loc_2425		; Jump if equal
020A:EE40  F7 06 4E22 0002			test	word ptr ds:[4E22h],2	; (CD01:4E22=5804h)
020A:EE46  74 1E				jz	loc_2425		; Jump if zero
020A:EE48  86 E0				xchg	ah,al
020A:EE4A  80 FC 00				cmp	ah,0
020A:EE4D  74 1F				je	loc_2427		; Jump if equal
020A:EE4F  9A 14FC:38EC		;*		call	far ptr sub_195		;*(14FC:38EC)
020A:EE4F  9A					db	9Ah
020A:EE50  38EC 14FC				dw	38ECh, 14FCh
020A:EE54  0B C0				or	ax,ax			; Zero ?
020A:EE56  74 16				jz	loc_2427		; Jump if zero
020A:EE58  03 F8				add	di,ax
020A:EE5A  48					dec	ax
020A:EE5B  2B C8				sub	cx,ax
020A:EE5D  83 F9 00				cmp	cx,0
020A:EE60  77 0A				ja	loc_2426		; Jump if above
020A:EE62  03 C8				add	cx,ax
020A:EE64  EB 08				jmp	short loc_2427		; (EE6E)
020A:EE66			loc_2425:
020A:EE66  D7					xlat				; al=[al+[bx]] table
020A:EE67  0A C0				or	al,al			; Zero ?
020A:EE69  75 03				jnz	loc_2427		; Jump if not zero
020A:EE6B  47					inc	di
020A:EE6C			loc_2426:
020A:EE6C  E2 BE				loop	locloop_2423		; Loop if cx > 0

020A:EE6E			loc_2427:
020A:EE6E  2B E9				sub	bp,cx
020A:EE70  83 FD 20				cmp	bp,20h
020A:EE73  77 03				ja	loc_2429		; Jump if above
020A:EE75			loc_2428:
020A:EE75  E9 00D0				jmp	loc_2438		; (EF48)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 485

020A:EE78			loc_2429:
020A:EE78  0A D2				or	dl,dl			; Zero ?
020A:EE7A  74 06				jz	loc_2430		; Jump if zero
020A:EE7C  81 FD 00A0				cmp	bp,0A0h
020A:EE80  77 F3				ja	loc_2428		; Jump if above
020A:EE82			loc_2430:
020A:EE82  80 3E 53D9 00			cmp	byte ptr ds:[53D9h],0	; (CD01:53D9=50h)
020A:EE87  75 08				jne	loc_2431		; Jump if not equal
020A:EE89  26: 80 7D FE 00			cmp	byte ptr es:[di-2],0
020A:EE8E  75 01				jne	loc_2431		; Jump if not equal
020A:EE90  4D					dec	bp
020A:EE91			loc_2431:
020A:EE91  8B D5				mov	dx,bp
020A:EE93  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:EE98  77 21				ja	loc_2432		; Jump if above
020A:EE9A  A1 3056				mov	ax,word ptr ds:[3056h]	; (CD01:3056=0)
020A:EE9D  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (CD01:4E89=0C708h)
020A:EEA1  76 18				jbe	loc_2432		; Jump if below or =
020A:EEA3  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EEA6  03 C2				add	ax,dx
020A:EEA8  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (CD01:4E89=0C708h)
020A:EEAC  76 0D				jbe	loc_2432		; Jump if below or =
020A:EEAE  83 FA 50				cmp	dx,50h
020A:EEB1  77 0A				ja	loc_2433		; Jump if above
020A:EEB3  8B 16 4E89				mov	dx,word ptr ds:[4E89h]	; (CD01:4E89=0C708h)
020A:EEB7  2B 16 344C				sub	dx,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EEBB			loc_2432:
020A:EEBB  EB 75				jmp	short loc_2437		; (EF32)
020A:EEBD			loc_2433:
020A:EEBD  2D 0028				sub	ax,28h
020A:EEC0  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (CD01:4E89=0C708h)
020A:EEC4  77 0A				ja	loc_2434		; Jump if above
020A:EEC6  8B 16 4E89				mov	dx,word ptr ds:[4E89h]	; (CD01:4E89=0C708h)
020A:EECA  2B 16 344C				sub	dx,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EECE  EB 62				jmp	short loc_2437		; (EF32)
020A:EED0			loc_2434:
020A:EED0  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:EED5  06					push	es
020A:EED6  52					push	dx
020A:EED7  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EEDB  BA 0001				mov	dx,1
020A:EEDE  E8 6FAB				call	sub_76			; (5E8C)
020A:EEE1  5A					pop	dx
020A:EEE2  26: 8B 05				mov	ax,es:[di]
020A:EEE5  3B 06 344A				cmp	ax,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EEE9  75 1C				jne	loc_2435		; Jump if not equal
020A:EEEB  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EEEE  03 C2				add	ax,dx
020A:EEF0  26: 3B 45 02				cmp	ax,es:[di+2]
020A:EEF4  76 11				jbe	loc_2435		; Jump if below or =
020A:EEF6  2D 0028				sub	ax,28h
020A:EEF9  26: 3B 45 02				cmp	ax,es:[di+2]
020A:EEFD  77 08				ja	loc_2435		; Jump if above
020A:EEFF  26: 8B 55 02				mov	dx,es:[di+2]
020A:EF03  2B 16 344C				sub	dx,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EF07			loc_2435:
020A:EF07  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 486

020A:EF0C  9C					pushf				; Push flags
020A:EF0D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:EF12  5A					pop	dx
020A:EF13  8E C2				mov	es,dx
020A:EF15  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:EF1A  5A					pop	dx
020A:EF1B  75 0A				jnz	loc_2436		; Jump if not zero
020A:EF1D  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:EF22  74 03				je	loc_2436		; Jump if equal
020A:EF24  E8 8495				call	sub_103			; (73BC)
020A:EF27			loc_2436:
020A:EF27  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:EF2C  9D					popf				; Pop flags
020A:EF2D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:EF32			loc_2437:
020A:EF32  BF 532E				mov	di,532Eh
020A:EF35  A1 344A				mov	ax,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EF38  89 05				mov	[di],ax
020A:EF3A  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EF3D  89 45 02				mov	[di+2],ax
020A:EF40  C6 45 04 20				mov	byte ptr [di+4],20h	; ' '
020A:EF44  8B DA				mov	bx,dx
020A:EF46  EB 4F				jmp	short loc_2443		; (EF97)
020A:EF48			loc_2438:
020A:EF48  8E 06 344A				mov	es,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EF4C  8B 3E 344C				mov	di,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:EF50  8B 0E 3056				mov	cx,word ptr ds:[3056h]	; (CD01:3056=0)
020A:EF54  2B CF				sub	cx,di
020A:EF56  83 F9 FE				cmp	cx,0FFFEh
020A:EF59  73 01				jae	loc_2439		; Jump if above or =
020A:EF5B  41					inc	cx
020A:EF5C			loc_2439:
020A:EF5C  8B D9				mov	bx,cx
020A:EF5E  26: 8A 05				mov	al,es:[di]
020A:EF61  FC					cld				; Clear direction
020A:EF62  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:EF64  9C					pushf				; Push flags
020A:EF65  2B D9				sub	bx,cx
020A:EF67  9D					popf				; Pop flags
020A:EF68  74 01				jz	loc_2440		; Jump if zero
020A:EF6A  4B					dec	bx
020A:EF6B			loc_2440:
020A:EF6B  83 FB 07				cmp	bx,7
020A:EF6E  73 0F				jae	loc_2442		; Jump if above or =
020A:EF70  BF 50BA				mov	di,50BAh
020A:EF73  80 3E 3044 02			cmp	byte ptr ds:[3044h],2	; (CD01:3044=0)
020A:EF78  72 03				jb	loc_2441		; Jump if below
020A:EF7A  E9 FE3D				jmp	loc_2412		; (EDBA)
020A:EF7D			loc_2441:
020A:EF7D  EB 4E				jmp	short loc_2446		; (EFCD)
020A:EF7F			loc_2442:
020A:EF7F  38 06 2CCA				cmp	byte ptr ds:[2CCAh],al	; (CD01:2CCA=0)
020A:EF83  75 48				jne	loc_2446		; Jump if not equal
020A:EF85  BF 532E				mov	di,532Eh
020A:EF88  A1 344A				mov	ax,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:EF8B  89 05				mov	[di],ax
020A:EF8D  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 487

020A:EF90  89 45 02				mov	[di+2],ax
020A:EF93  C6 45 04 21				mov	byte ptr [di+4],21h	; '!'
020A:EF97			loc_2443:
020A:EF97  C6 45 05 05				mov	byte ptr [di+5],5
020A:EF9B  F6 06 15D0 02			test	byte ptr ds:[15D0h],2	; (CD01:15D0=0)
020A:EFA0  74 04				jz	loc_2444		; Jump if zero
020A:EFA2  C6 45 05 04				mov	byte ptr [di+5],4
020A:EFA6			loc_2444:
020A:EFA6  89 5D 08				mov	[di+8],bx
020A:EFA9  C7 45 06 0000			mov	word ptr [di+6],0
020A:EFAE  8A 55 04				mov	dl,[di+4]
020A:EFB1  E8 94EC				call	sub_114			; (84A0)
020A:EFB4  89 1E 30BC				mov	word ptr ds:[30BCh],bx	; (CD01:30BC=0)
020A:EFB8  89 1E 30BE				mov	word ptr ds:[30BEh],bx	; (CD01:30BE=0)
020A:EFBC  80 FA 21				cmp	dl,21h			; '!'
020A:EFBF  74 06				je	loc_2445		; Jump if equal
020A:EFC1  BF 50CD				mov	di,50CDh
020A:EFC4  E9 024B				jmp	loc_2476		; (F212)
020A:EFC7			loc_2445:
020A:EFC7  BF 50E0				mov	di,50E0h
020A:EFCA  E9 0245				jmp	loc_2476		; (F212)
020A:EFCD			loc_2446:
020A:EFCD  C7 06 2B39 0012			mov	word ptr ds:[2B39h],12h	; (CD01:2B39=0)
020A:EFD3  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:EFD3  9A					db	9Ah
020A:EFD4  2C58 14FC				dw	2C58h, 14FCh
020A:EFD8  F6 06 35F0 7F			test	byte ptr ds:[35F0h],7Fh	; (CD01:35F0=0)
020A:EFDD  75 12				jnz	loc_2447		; Jump if not zero
020A:EFDF  BE 2CCA				mov	si,2CCAh
020A:EFE2  9A 14FC:5F4C		;*		call	far ptr sub_234		;*(14FC:5F4C)
020A:EFE2  9A					db	9Ah
020A:EFE3  5F4C 14FC				dw	5F4Ch, 14FCh
020A:EFE7  73 08				jnc	loc_2447		; Jump if carry=0
020A:EFE9  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (CD01:362E=0)
020A:EFEE  E9 0397				jmp	loc_2489		; (F388)
020A:EFF1			loc_2447:
020A:EFF1  E8 77B8				call	sub_83			; (67AC)
020A:EFF4  72 03				jc	loc_2448		; Jump if carry Set
020A:EFF6  E9 0107				jmp	loc_2464		; (F100)
020A:EFF9			loc_2448:
020A:EFF9  26: 8A 55 01				mov	dl,es:[di+1]
020A:EFFD  80 FA FF				cmp	dl,0FFh
020A:F000  74 32				je	loc_2449		; Jump if equal
020A:F002  86 C4				xchg	al,ah
020A:F004  8A D8				mov	bl,al
020A:F006  8A F2				mov	dh,dl
020A:F008  80 E6 07				and	dh,7
020A:F00B  80 FE 00				cmp	dh,0
020A:F00E  74 4F				je	loc_2452		; Jump if equal
020A:F010  80 FE 01				cmp	dh,1
020A:F013  74 52				je	loc_2453		; Jump if equal
020A:F015  80 FE 02				cmp	dh,2
020A:F018  74 55				je	loc_2454		; Jump if equal
020A:F01A  80 FE 03				cmp	dh,3
020A:F01D  74 15				je	loc_2449		; Jump if equal
020A:F01F  80 FE 04				cmp	dh,4
020A:F022  74 53				je	loc_2455		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 488

020A:F024  80 FE 05				cmp	dh,5
020A:F027  74 52				je	loc_2456		; Jump if equal
020A:F029  80 FE 06				cmp	dh,6
020A:F02C  74 6E				je	loc_2458		; Jump if equal
020A:F02E  BB 0005				mov	bx,5
020A:F031  E9 7AA4				jmp	loc_927			; (6AD8)
020A:F034			loc_2449:
020A:F034  26: 8A 45 0D				mov	al,es:[di+0Dh]
020A:F038  24 07				and	al,7
020A:F03A  08 06 30B2				or	byte ptr ds:[30B2h],al	; (CD01:30B2=0)
020A:F03E  22 06 30B0				and	al,byte ptr ds:[30B0h]	; (CD01:30B0=0)
020A:F042  75 0D				jnz	loc_2450		; Jump if not zero
020A:F044  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:F048  22 06 30A0				and	al,byte ptr ds:[30A0h]	; (CD01:30A0=0)
020A:F04C  75 03				jnz	loc_2450		; Jump if not zero
020A:F04E  E9 0095				jmp	loc_2463		; (F0E6)
020A:F051			loc_2450:
020A:F051  E8 BD0C				call	sub_130			; (AD60)
020A:F054  72 06				jc	loc_2451		; Jump if carry Set
020A:F056  E8 77A3				call	sub_84			; (67FC)
020A:F059  E9 010B				jmp	loc_2470		; (F167)
020A:F05C			loc_2451:
020A:F05C  E9 00A1				jmp	loc_2464		; (F100)
020A:F05F			loc_2452:
020A:F05F  80 E2 38				and	dl,38h			; '8'
020A:F062  80 E3 38				and	bl,38h			; '8'
020A:F065  EB 4A				jmp	short loc_2460		; (F0B1)
020A:F067			loc_2453:
020A:F067  80 E2 C0				and	dl,0C0h
020A:F06A  80 E3 C0				and	bl,0C0h
020A:F06D  EB 42				jmp	short loc_2460		; (F0B1)
020A:F06F			loc_2454:
020A:F06F  80 E2 F8				and	dl,0F8h
020A:F072  80 E3 F8				and	bl,0F8h
020A:F075  EB 3A				jmp	short loc_2460		; (F0B1)
020A:F077			loc_2455:
020A:F077  B2 0A				mov	dl,0Ah
020A:F079  EB 36				jmp	short loc_2460		; (F0B1)
020A:F07B			loc_2456:
020A:F07B  F6 C2 10				test	dl,10h
020A:F07E  74 09				jz	loc_2457		; Jump if zero
020A:F080  8A 44 02				mov	al,[si+2]
020A:F083  26: 3A 45 0B				cmp	al,es:[di+0Bh]
020A:F087  75 5D				jne	loc_2463		; Jump if not equal
020A:F089			loc_2457:
020A:F089  F6 C2 08				test	dl,8
020A:F08C  74 1A				jz	loc_2459		; Jump if zero
020A:F08E  80 E2 C0				and	dl,0C0h
020A:F091  8A 44 02				mov	al,[si+2]
020A:F094  24 C0				and	al,0C0h
020A:F096  3A C2				cmp	al,dl
020A:F098  75 4C				jne	loc_2463		; Jump if not equal
020A:F09A  EB 0C				jmp	short loc_2459		; (F0A8)
020A:F09C			loc_2458:
020A:F09C  80 E2 F8				and	dl,0F8h
020A:F09F  8A 44 02				mov	al,[si+2]
020A:F0A2  24 F8				and	al,0F8h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 489

020A:F0A4  3A C2				cmp	al,dl
020A:F0A6  75 3E				jne	loc_2463		; Jump if not equal
020A:F0A8			loc_2459:
020A:F0A8  C6 06 30B3 01			mov	byte ptr ds:[30B3h],1	; (CD01:30B3=0)
020A:F0AD  26: 8A 55 11				mov	dl,es:[di+11h]
020A:F0B1			loc_2460:
020A:F0B1  3A D3				cmp	dl,bl
020A:F0B3  75 31				jne	loc_2463		; Jump if not equal
020A:F0B5  26: 8A 45 0D				mov	al,es:[di+0Dh]
020A:F0B9  24 07				and	al,7
020A:F0BB  08 06 30B2				or	byte ptr ds:[30B2h],al	; (CD01:30B2=0)
020A:F0BF  22 06 30B0				and	al,byte ptr ds:[30B0h]	; (CD01:30B0=0)
020A:F0C3  75 15				jnz	loc_2461		; Jump if not zero
020A:F0C5  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:F0C9  22 06 30A0				and	al,byte ptr ds:[30A0h]	; (CD01:30A0=0)
020A:F0CD  74 17				jz	loc_2463		; Jump if zero
020A:F0CF  E8 BC8E				call	sub_130			; (AD60)
020A:F0D2  72 10				jc	loc_2462		; Jump if carry Set
020A:F0D4  E8 7725				call	sub_84			; (67FC)
020A:F0D7  E9 0089				jmp	loc_2469		; (F163)
020A:F0DA			loc_2461:
020A:F0DA  E8 BC83				call	sub_130			; (AD60)
020A:F0DD  72 05				jc	loc_2462		; Jump if carry Set
020A:F0DF  E8 771A				call	sub_84			; (67FC)
020A:F0E2  EB 7A				jmp	short loc_2468		; (F15E)
020A:F0E4			loc_2462:
020A:F0E4  EB 1A				jmp	short loc_2464		; (F100)
020A:F0E6			loc_2463:
020A:F0E6  32 C0				xor	al,al			; Zero register
020A:F0E8  A2 30B3				mov	byte ptr ds:[30B3h],al	; (CD01:30B3=0)
020A:F0EB  A2 30BB				mov	byte ptr ds:[30BBh],al	; (CD01:30BB=0)
020A:F0EE  B8 1324				mov	ax,1324h
020A:F0F1  2D 1310				sub	ax,1310h
020A:F0F4  03 F8				add	di,ax
020A:F0F6  8B 04				mov	ax,[si]
020A:F0F8  26: 3A 05				cmp	al,es:[di]
020A:F0FB  75 03				jne	loc_2464		; Jump if not equal
020A:F0FD  E9 FEF9				jmp	loc_2448		; (EFF9)
020A:F100			loc_2464:
020A:F100  F6 06 30B2 80			test	byte ptr ds:[30B2h],80h	; (CD01:30B2=0)
020A:F105  74 24				jz	loc_2466		; Jump if zero
020A:F107  F6 06 30B2 07			test	byte ptr ds:[30B2h],7	; (CD01:30B2=0)
020A:F10C  74 1D				jz	loc_2466		; Jump if zero
020A:F10E  FE 06 30B1				inc	byte ptr ds:[30B1h]	; (CD01:30B1=0)
020A:F112  80 3E 30B1 32			cmp	byte ptr ds:[30B1h],32h	; (CD01:30B1=0) '2'
020A:F117  72 0D				jb	loc_2465		; Jump if below
020A:F119  C6 06 30B0 01			mov	byte ptr ds:[30B0h],1	; (CD01:30B0=0)
020A:F11E  C6 06 30B2 00			mov	byte ptr ds:[30B2h],0	; (CD01:30B2=0)
020A:F123  E8 5121				call	sub_41			; (4247)
020A:F126			loc_2465:
020A:F126  80 26 30B2 F8			and	byte ptr ds:[30B2h],0F8h	; (CD01:30B2=0)
020A:F12B			loc_2466:
020A:F12B  F6 06 35F0 7F			test	byte ptr ds:[35F0h],7Fh	; (CD01:35F0=0)
020A:F130  74 24				jz	loc_2467		; Jump if zero
020A:F132  A1 35F1				mov	ax,word ptr ds:[35F1h]	; (CD01:35F1=0)
020A:F135  A3 344C				mov	word ptr ds:[344Ch],ax	; (CD01:344C=0)
020A:F138  C6 06 35F0 00			mov	byte ptr ds:[35F0h],0	; (CD01:35F0=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 490

020A:F13D  C6 06 3628 00			mov	byte ptr ds:[3628h],0	; (CD01:3628=0)
020A:F142  C7 06 35F1 FFFF			mov	word ptr ds:[35F1h],0FFFFh	; (CD01:35F1=0)
020A:F148  C7 06 3027 0000			mov	word ptr ds:[3027h],0	; (CD01:3027=0)
020A:F14E  C6 06 30B3 00			mov	byte ptr ds:[30B3h],0	; (CD01:30B3=0)
020A:F153  E8 6BBA				call	sub_72			; (5D10)
020A:F156			loc_2467:
020A:F156  E8 7F04				call	sub_95			; (705D)
020A:F159  BF 50BA				mov	di,50BAh
020A:F15C  EB 09				jmp	short loc_2470		; (F167)
020A:F15E			loc_2468:
020A:F15E  C6 06 30B3 00			mov	byte ptr ds:[30B3h],0	; (CD01:30B3=0)
020A:F163			loc_2469:
020A:F163  FE 06 307A				inc	byte ptr ds:[307Ah]	; (CD01:307A=0)
020A:F167			loc_2470:
020A:F167  C7 06 2B39 0013			mov	word ptr ds:[2B39h],13h	; (CD01:2B39=0)
020A:F16D  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F16D  9A					db	9Ah
020A:F16E  2C58 14FC				dw	2C58h, 14FCh
020A:F172  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F175  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:F179  0B DB				or	bx,bx			; Zero ?
020A:F17B  74 09				jz	loc_2471		; Jump if zero
020A:F17D  57					push	di
020A:F17E  BA 0004				mov	dx,4
020A:F181  E8 6D08				call	sub_76			; (5E8C)
020A:F184  72 03				jc	loc_2472		; Jump if carry Set
020A:F186			loc_2471:
020A:F186  E9 0088				jmp	loc_2475		; (F211)
020A:F189			loc_2472:
020A:F189  A1 40F1				mov	ax,word ptr ds:[40F1h]	; (CD01:40F1=12h)
020A:F18C  A3 40F3				mov	word ptr ds:[40F3h],ax	; (CD01:40F3=0C700h)
020A:F18F  A1 40EF				mov	ax,word ptr ds:[40EFh]	; (CD01:40EF=4600h)
020A:F192  A3 40F1				mov	word ptr ds:[40F1h],ax	; (CD01:40F1=12h)
020A:F195  A1 40ED				mov	ax,word ptr ds:[40EDh]	; (CD01:40ED=0)
020A:F198  A3 40EF				mov	word ptr ds:[40EFh],ax	; (CD01:40EF=4600h)
020A:F19B  26: 8B 45 02				mov	ax,es:[di+2]
020A:F19F  A3 40ED				mov	word ptr ds:[40EDh],ax	; (CD01:40ED=0)
020A:F1A2  26: 8A 45 04				mov	al,es:[di+4]
020A:F1A6  83 C7 09				add	di,9
020A:F1A9  24 07				and	al,7
020A:F1AB  75 55				jnz	loc_2473		; Jump if not zero
020A:F1AD  53					push	bx
020A:F1AE  51					push	cx
020A:F1AF  B9 35FA				mov	cx,35FAh
020A:F1B2  BB 361A				mov	bx,361Ah
020A:F1B5  2B D9				sub	bx,cx
020A:F1B7  03 DF				add	bx,di
020A:F1B9  A1 305C				mov	ax,word ptr ds:[305Ch]	; (CD01:305C=0)
020A:F1BC  26: 89 07				mov	es:[bx],ax
020A:F1BF  BB 3618				mov	bx,3618h
020A:F1C2  2B D9				sub	bx,cx
020A:F1C4  03 DF				add	bx,di
020A:F1C6  A1 305E				mov	ax,word ptr ds:[305Eh]	; (CD01:305E=0)
020A:F1C9  26: 89 07				mov	es:[bx],ax
020A:F1CC  BB 361C				mov	bx,361Ch
020A:F1CF  2B D9				sub	bx,cx
020A:F1D1  03 DF				add	bx,di
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 491

020A:F1D3  A1 3060				mov	ax,word ptr ds:[3060h]	; (CD01:3060=0)
020A:F1D6  26: 89 07				mov	es:[bx],ax
020A:F1D9  BB 361E				mov	bx,361Eh
020A:F1DC  2B D9				sub	bx,cx
020A:F1DE  03 DF				add	bx,di
020A:F1E0  A1 3062				mov	ax,word ptr ds:[3062h]	; (CD01:3062=0)
020A:F1E3  26: 89 07				mov	es:[bx],ax
020A:F1E6  BB 3620				mov	bx,3620h
020A:F1E9  2B D9				sub	bx,cx
020A:F1EB  03 DF				add	bx,di
020A:F1ED  A1 3066				mov	ax,word ptr ds:[3066h]	; (CD01:3066=0)
020A:F1F0  26: 89 07				mov	es:[bx],ax
020A:F1F3  BB 3616				mov	bx,3616h
020A:F1F6  2B D9				sub	bx,cx
020A:F1F8  03 DF				add	bx,di
020A:F1FA  A1 3064				mov	ax,word ptr ds:[3064h]	; (CD01:3064=0)
020A:F1FD  26: 89 07				mov	es:[bx],ax
020A:F200  59					pop	cx
020A:F201  5B					pop	bx
020A:F202			loc_2473:
020A:F202  BB 35FA				mov	bx,35FAh
020A:F205  B9 0029				mov	cx,29h

020A:F208			locloop_2474:
020A:F208  26: 8A 05				mov	al,es:[di]
020A:F20B  88 07				mov	[bx],al
020A:F20D  47					inc	di
020A:F20E  43					inc	bx
020A:F20F  E2 F7				loop	locloop_2474		; Loop if cx > 0

020A:F211			loc_2475:
020A:F211  5F					pop	di
020A:F212			loc_2476:
020A:F212  89 3E 30C6				mov	word ptr ds:[30C6h],di	; (CD01:30C6=0)
020A:F216  8A 45 0F				mov	al,[di+0Fh]
020A:F219  A2 309E				mov	byte ptr ds:[309Eh],al	; (CD01:309E=0)
020A:F21C  3C 25				cmp	al,25h			; '%'
020A:F21E  75 05				jne	loc_2477		; Jump if not equal
020A:F220  80 0E 4E04 10			or	byte ptr ds:[4E04h],10h	; (CD01:4E04=55h)
020A:F225			loc_2477:
020A:F225  8A 45 0C				mov	al,[di+0Ch]
020A:F228  A2 362F				mov	byte ptr ds:[362Fh],al	; (CD01:362F=0)
020A:F22B  8A 45 10				mov	al,[di+10h]
020A:F22E  A2 362E				mov	byte ptr ds:[362Eh],al	; (CD01:362E=0)
020A:F231  8A 45 0E				mov	al,[di+0Eh]
020A:F234  A2 362A				mov	byte ptr ds:[362Ah],al	; (CD01:362A=0)
020A:F237  C7 06 2B39 0014			mov	word ptr ds:[2B39h],14h	; (CD01:2B39=0)
020A:F23D  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F23D  9A					db	9Ah
020A:F23E  2C58 14FC				dw	2C58h, 14FCh
020A:F242  E8 7E18				call	sub_95			; (705D)
020A:F245  BE 2CCA				mov	si,2CCAh
020A:F248  80 3E 30B3 01			cmp	byte ptr ds:[30B3h],1	; (CD01:30B3=0)
020A:F24D  75 01				jne	loc_2478		; Jump if not equal
020A:F24F  46					inc	si
020A:F250			loc_2478:
020A:F250  80 3E 53D4 00			cmp	byte ptr ds:[53D4h],0	; (CD01:53D4=0E8h)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 492

020A:F255  74 11				je	loc_2479		; Jump if equal
020A:F257  FE 0E 53D5				dec	byte ptr ds:[53D5h]	; (CD01:53D5=0A3h)
020A:F25B  75 0B				jnz	loc_2479		; Jump if not zero
020A:F25D  8A 16 53D4				mov	dl,byte ptr ds:[53D4h]	; (CD01:53D4=0E8h)
020A:F261  88 16 53D5				mov	byte ptr ds:[53D5h],dl	; (CD01:53D5=0A3h)
020A:F265  E8 5D78				call	sub_44			; (4FE0)
020A:F268			loc_2479:
020A:F268  C6 06 362C 01			mov	byte ptr ds:[362Ch],1	; (CD01:362C=0)
020A:F26D  BD			data_769	db	0BDh
020A:F26E  63					db	63h
020A:F26F  2D 558A				sub	ax,558Ah
020A:F272  09 80 00FA				or	word ptr ds:[0FAh][bx+si],ax	; (CD01:00FA=0)
020A:F276  74 5B				jz	loc_2480		; Jump if zero
020A:F278  8A 7D 0D				mov	bh,[di+0Dh]
020A:F27B  C6 06 3458 00			mov	byte ptr ds:[3458h],0	; (CD01:3458=0)
020A:F280  57					push	di
020A:F281  8D 7D 09				lea	di,[di+9]		; Load effective addr
020A:F284  E8 C83D				call	sub_144			; (BAC4)
020A:F287  5F					pop	di
020A:F288  FE 06 362C				inc	byte ptr ds:[362Ch]	; (CD01:362C=0)
020A:F28C  A2 307B				mov	byte ptr ds:[307Bh],al	; (CD01:307B=0)
020A:F28F  80 3E 30BB 00			cmp	byte ptr ds:[30BBh],0	; (CD01:30BB=0)
020A:F294  75 3D				jne	loc_2480		; Jump if not equal
020A:F296  8A 55 0A				mov	dl,[di+0Ah]
020A:F299  80 FA 00				cmp	dl,0
020A:F29C  74 35				je	loc_2480		; Jump if equal
020A:F29E  02 D6				add	dl,dh
020A:F2A0  8A 7D 0D				mov	bh,[di+0Dh]
020A:F2A3  57					push	di
020A:F2A4  8D 7D 0A				lea	di,[di+0Ah]		; Load effective addr
020A:F2A7  E8 C81A				call	sub_144			; (BAC4)
020A:F2AA  5F					pop	di
020A:F2AB  FE 06 362C				inc	byte ptr ds:[362Ch]	; (CD01:362C=0)
020A:F2AF  A2 307C				mov	byte ptr ds:[307Ch],al	; (CD01:307C=0)
020A:F2B2  8A 55 0B				mov	dl,[di+0Bh]
020A:F2B5  80 FA 00				cmp	dl,0
020A:F2B8  74 19				je	loc_2480		; Jump if equal
020A:F2BA  02 D6				add	dl,dh
020A:F2BC  8A 7D 0D				mov	bh,[di+0Dh]
020A:F2BF  57					push	di
020A:F2C0  8D 7D 0B				lea	di,[di+0Bh]		; Load effective addr
020A:F2C3  02 16 30B4				add	dl,byte ptr ds:[30B4h]	; (CD01:30B4=0)
020A:F2C7  C6 06 30B4 00			mov	byte ptr ds:[30B4h],0	; (CD01:30B4=0)
020A:F2CC  E8 C7F5				call	sub_144			; (BAC4)
020A:F2CF  5F					pop	di
020A:F2D0  A2 307D				mov	byte ptr ds:[307Dh],al	; (CD01:307D=0)
020A:F2D3			loc_2480:
020A:F2D3  80 3E 30B3 01			cmp	byte ptr ds:[30B3h],1	; (CD01:30B3=0)
020A:F2D8  75 0A				jne	loc_2481		; Jump if not equal
020A:F2DA  4E					dec	si
020A:F2DB  FE 06 307A				inc	byte ptr ds:[307Ah]	; (CD01:307A=0)
020A:F2DF  C6 06 30B3 00			mov	byte ptr ds:[30B3h],0	; (CD01:30B3=0)
020A:F2E4			loc_2481:
020A:F2E4  A1 30BE				mov	ax,word ptr ds:[30BEh]	; (CD01:30BE=0)
020A:F2E7  3D 0000				cmp	ax,0
020A:F2EA  77 13				ja	loc_2482		; Jump if above
020A:F2EC  B8 0001				mov	ax,1
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 493

020A:F2EF  02 06 307A				add	al,byte ptr ds:[307Ah]	; (CD01:307A=0)
020A:F2F3  02 06 307B				add	al,byte ptr ds:[307Bh]	; (CD01:307B=0)
020A:F2F7  02 06 307C				add	al,byte ptr ds:[307Ch]	; (CD01:307C=0)
020A:F2FB  02 06 307D				add	al,byte ptr ds:[307Dh]	; (CD01:307D=0)
020A:F2FF			loc_2482:
020A:F2FF  C7 06 2B39 0015			mov	word ptr ds:[2B39h],15h	; (CD01:2B39=0)
020A:F305  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F305  9A					db	9Ah
020A:F306  2C58 14FC				dw	2C58h, 14FCh
020A:F30A  8B DE				mov	bx,si
020A:F30C  03 D8				add	bx,ax
020A:F30E  53					push	bx
020A:F30F  A3 3076				mov	word ptr ds:[3076h],ax	; (CD01:3076=0)
020A:F312  8B C8				mov	cx,ax
020A:F314  8A 16 362E				mov	dl,byte ptr ds:[362Eh]	; (CD01:362E=0)
020A:F318  E8 2B05		;*		call	sub_25			;*(1E20)
020A:F318  E8 05 2B				db	0E8h, 05h, 2Bh
020A:F31B  80 3E 309E 56			cmp	byte ptr ds:[309Eh],56h	; (CD01:309E=0) 'V'
020A:F320  75 2B				jne	loc_2485		; Jump if not equal
020A:F322  E8 8C1F				call	sub_112			; (7F44)
020A:F325  26: 80 7C 01 3F			cmp	byte ptr es:[si+1],3Fh	; '?'
020A:F32A  75 07				jne	loc_2483		; Jump if not equal
020A:F32C  83 06 3076 03			add	word ptr ds:[3076h],3	; (CD01:3076=0)
020A:F331  EB 1A				jmp	short loc_2485		; (F34D)
020A:F333			loc_2483:
020A:F333  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:F338  75 13				jne	loc_2485		; Jump if not equal
020A:F33A  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (CD01:327F=0)
020A:F33F  74 07				je	loc_2484		; Jump if equal
020A:F341  80 3E 327F 09			cmp	byte ptr ds:[327Fh],9	; (CD01:327F=0)
020A:F346  75 05				jne	loc_2485		; Jump if not equal
020A:F348			loc_2484:
020A:F348  83 06 3076 04			add	word ptr ds:[3076h],4	; (CD01:3076=0)
020A:F34D			loc_2485:
020A:F34D  C7 06 2B39 0018			mov	word ptr ds:[2B39h],18h	; (CD01:2B39=0)
020A:F353  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F353  9A					db	9Ah
020A:F354  2C58 14FC				dw	2C58h, 14FCh
020A:F358  5E					pop	si
020A:F359  80 3E 362E 05			cmp	byte ptr ds:[362Eh],5	; (CD01:362E=0)
020A:F35E  74 21				je	loc_2488		; Jump if equal
020A:F360  80 3E 362E 0D			cmp	byte ptr ds:[362Eh],0Dh	; (CD01:362E=0)
020A:F365  77 07				ja	loc_2486		; Jump if above
020A:F367  80 3E 362E 08			cmp	byte ptr ds:[362Eh],8	; (CD01:362E=0)
020A:F36C  77 13				ja	loc_2488		; Jump if above
020A:F36E			loc_2486:
020A:F36E  80 3E 362E 33			cmp	byte ptr ds:[362Eh],33h	; (CD01:362E=0) '3'
020A:F373  77 07				ja	loc_2487		; Jump if above
020A:F375  80 3E 362E 30			cmp	byte ptr ds:[362Eh],30h	; (CD01:362E=0) '0'
020A:F37A  73 05				jae	loc_2488		; Jump if above or =
020A:F37C			loc_2487:
020A:F37C  E8 BAE1				call	sub_131			; (AE60)
020A:F37F  EB 07				jmp	short loc_2489		; (F388)
020A:F381			loc_2488:
020A:F381  A0 2D25				mov	al,byte ptr ds:[2D25h]	; (CD01:2D25=0)
020A:F384  08 06 4D48				or	byte ptr ds:[4D48h],al	; (CD01:4D48=0D8h)
020A:F388			loc_2489:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 494

020A:F388  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F38B  03 06 3076				add	ax,word ptr ds:[3076h]	; (CD01:3076=0)
020A:F38F  72 21				jc	loc_2491		; Jump if carry Set
020A:F391  83 3E 3056 00			cmp	word ptr ds:[3056h],0	; (CD01:3056=0)
020A:F396  74 1A				je	loc_2491		; Jump if equal
020A:F398  3B 06 3056				cmp	ax,word ptr ds:[3056h]	; (CD01:3056=0)
020A:F39C  77 14				ja	loc_2491		; Jump if above
020A:F39E  75 06				jnz	loc_2490		; Jump if not zero
020A:F3A0  C7 06 3056 0000			mov	word ptr ds:[3056h],0	; (CD01:3056=0)
020A:F3A6			loc_2490:
020A:F3A6  A3 344C				mov	word ptr ds:[344Ch],ax	; (CD01:344C=0)
020A:F3A9  E8 7CB1				call	sub_95			; (705D)
020A:F3AC  E8 698D				call	sub_73			; (5D3C)
020A:F3AF  E9 F83D				jmp	loc_2390		; (EBEF)
020A:F3B2			loc_2491:
020A:F3B2  FE 06 303F				inc	byte ptr ds:[303Fh]	; (CD01:303F=0)
020A:F3B6  A0 303F				mov	al,byte ptr ds:[303Fh]	; (CD01:303F=0)
020A:F3B9  3A 06 3040				cmp	al,byte ptr ds:[3040h]	; (CD01:3040=0)
020A:F3BD  73 03				jae	loc_2492		; Jump if above or =
020A:F3BF  E9 F78D				jmp	loc_2388		; (EB4F)
020A:F3C2			loc_2492:
020A:F3C2  C7 06 2B39 0020			mov	word ptr ds:[2B39h],20h	; (CD01:2B39=0)
020A:F3C8  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F3C8  9A					db	9Ah
020A:F3C9  2C58 14FC				dw	2C58h, 14FCh
020A:F3CD  FE 06 2B36				inc	byte ptr ds:[2B36h]	; (CD01:2B36=0)
020A:F3D1  FE 0E 2B37				dec	byte ptr ds:[2B37h]	; (CD01:2B37=0)
020A:F3D5  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (CD01:2B40=0)
020A:F3DA  74 08				je	loc_2493		; Jump if equal
020A:F3DC  B4 25				mov	ah,25h			; '%'
020A:F3DE  E8 62DB		;*		call	sub_58			;*(56BC)
020A:F3DE  E8 DB 62				db	0E8h,0DBh, 62h
020A:F3E1  E8 5F48				call	sub_48			; (532C)
020A:F3E4			loc_2493:
020A:F3E4  F7 06 35E9 0200			test	word ptr ds:[35E9h],200h	; (CD01:35E9=0)
020A:F3EA  75 03				jnz	loc_2494		; Jump if not zero
020A:F3EC  E8 7291				call	sub_80			; (6680)
020A:F3EF			loc_2494:
020A:F3EF  E8 B8FE				call	sub_129			; (ACF0)
020A:F3F2  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (CD01:2B3B=0)
020A:F3F7  72 10				jb	loc_2495		; Jump if below
020A:F3F9  80 3E 2B37 02			cmp	byte ptr ds:[2B37h],2	; (CD01:2B37=0)
020A:F3FE  75 09				jne	loc_2495		; Jump if not equal
020A:F400  BA 8002				mov	dx,8002h
020A:F403  BB 5E70				mov	bx,5E70h
020A:F406  E8 3417		;*		call	sub_30			;*(2820)
020A:F406  E8 17 34				db	0E8h, 17h, 34h
020A:F409			loc_2495:
020A:F409  C7 06 2B39 0021			mov	word ptr ds:[2B39h],21h	; (CD01:2B39=0)
020A:F40F  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F40F  9A					db	9Ah
020A:F410  2C58 14FC				dw	2C58h, 14FCh
020A:F414  A0 2B36				mov	al,byte ptr ds:[2B36h]	; (CD01:2B36=0)
020A:F417  FE C0				inc	al
020A:F419  3A 06 2B3B				cmp	al,byte ptr ds:[2B3Bh]	; (CD01:2B3B=0)
020A:F41D  72 11				jb	loc_2496		; Jump if below
020A:F41F  B4 1F				mov	ah,1Fh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 495

020A:F421  E8 6298		;*		call	sub_58			;*(56BC)
020A:F421  E8 98 62				db	0E8h, 98h, 62h
020A:F424  E8 5F05				call	sub_48			; (532C)
020A:F427  BA 8007				mov	dx,8007h
020A:F42A  BB 6C50				mov	bx,6C50h
020A:F42D  E8 33F0		;*		call	sub_30			;*(2820)
020A:F42D  E8 F0 33				db	0E8h,0F0h, 33h
020A:F430			loc_2496:
020A:F430  E8 7C2A				call	sub_95			; (705D)
020A:F433  BF 06AE				mov	di,6AEh
020A:F436  B0 20				mov	al,20h			; ' '
020A:F438  B9 0005				mov	cx,5
020A:F43B  FC					cld				; Clear direction
020A:F43C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:F43E  BF 074E				mov	di,74Eh
020A:F441  B9 0005				mov	cx,5
020A:F444  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:F446  BF 06FE				mov	di,6FEh
020A:F449  B9 0005				mov	cx,5
020A:F44C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:F44E  E8 62BF				call	sub_59			; (5710)
020A:F451  C7 06 2B39 0022			mov	word ptr ds:[2B39h],22h	; (CD01:2B39=0)
020A:F457  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F457  9A					db	9Ah
020A:F458  2C58 14FC				dw	2C58h, 14FCh
020A:F45C  FE 06 2B36				inc	byte ptr ds:[2B36h]	; (CD01:2B36=0)
020A:F460  A1 4E1C				mov	ax,word ptr ds:[4E1Ch]	; (CD01:4E1C=0A126h)
020A:F463  A3 4E22				mov	word ptr ds:[4E22h],ax	; (CD01:4E22=5804h)
020A:F466  A1 4E1E				mov	ax,word ptr ds:[4E1Eh]	; (CD01:4E1E=86h)
020A:F469  A3 4E24				mov	word ptr ds:[4E24h],ax	; (CD01:4E24=5D07h)
020A:F46C  C6 06 303F 00			mov	byte ptr ds:[303Fh],0	; (CD01:303F=0)
020A:F471  8A 1E 2B36				mov	bl,byte ptr ds:[2B36h]	; (CD01:2B36=0)
020A:F475  3A 1E 2B3B				cmp	bl,byte ptr ds:[2B3Bh]	; (CD01:2B3B=0)
020A:F479  75 27				jne	loc_2497		; Jump if not equal
020A:F47B  C6 06 2B3C 01			mov	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F480  C6 06 306F 00			mov	byte ptr ds:[306Fh],0	; (CD01:306F=0)
020A:F485  BA 8002				mov	dx,8002h
020A:F488  BB 0810				mov	bx,810h
020A:F48B  E8 3392		;*		call	sub_30			;*(2820)
020A:F48B  E8 92 33				db	0E8h, 92h, 33h
020A:F48E  F7 06 35E9 0400			test	word ptr ds:[35E9h],400h	; (CD01:35E9=0)
020A:F494  75 0C				jnz	loc_2497		; Jump if not zero
020A:F496  BA 0002				mov	dx,2
020A:F499  BB 7278				mov	bx,7278h
020A:F49C  E8 3381		;*		call	sub_30			;*(2820)
020A:F49C  E8 81 33				db	0E8h, 81h, 33h
020A:F49F  E8 46BE		;*		call	sub_39			;*(3B60)
020A:F49F  E8 BE 46				db	0E8h,0BEh, 46h
020A:F4A2			loc_2497:
020A:F4A2  8A 1E 2B36				mov	bl,byte ptr ds:[2B36h]	; (CD01:2B36=0)
020A:F4A6  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:F4A8  80 C3 30				add	bl,30h			; '0'
020A:F4AB  88 1E 193F				mov	byte ptr ds:[193Fh],bl	; (CD01:193F=0)
020A:F4AF  C7 06 344E FFFF			mov	word ptr ds:[344Eh],0FFFFh	; (CD01:344E=0)
020A:F4B5  E8 5B28				call	sub_44			; (4FE0)
020A:F4B8  A0 303F				mov	al,byte ptr ds:[303Fh]	; (CD01:303F=0)
020A:F4BB  B1 15				mov	cl,15h
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 496

020A:F4BD  F6 E1				mul	cl			; ax = reg * al
020A:F4BF  BE 0000				mov	si,0
020A:F4C2  03 F0				add	si,ax
020A:F4C4  E8 7B8D				call	sub_93			; (7054)
020A:F4C7  C7 06 1947 2020			mov	word ptr ds:[1947h],2020h	; (CD01:1947=0)
020A:F4CD  BD 1946				mov	bp,1946h
020A:F4D0  8A 0E 35DF				mov	cl,byte ptr ds:[35DFh]	; (CD01:35DF=0)
020A:F4D4  C6 06 35DF 00			mov	byte ptr ds:[35DFh],0	; (CD01:35DF=0)
020A:F4D9  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020A:F4DD  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:F4DD  9A					db	9Ah
020A:F4DE  5778 14FC				dw	5778h, 14FCh
020A:F4E2  88 0E 35DF				mov	byte ptr ds:[35DFh],cl	; (CD01:35DF=0)
020A:F4E6  C7 06 5D09 2020			mov	word ptr ds:[5D09h],2020h	; (CD01:5D09=468Bh)
020A:F4EC  BD 5D08				mov	bp,5D08h
020A:F4EF  26: 8B 44 0C				mov	ax,es:[si+0Ch]
020A:F4F3  9A 14FC:5778		;*		call	far ptr sub_226		;*(14FC:5778)
020A:F4F3  9A					db	9Ah
020A:F4F4  5778 14FC				dw	5778h, 14FCh
020A:F4F8  A1 5D08				mov	ax,word ptr ds:[5D08h]	; (CD01:5D08=8BD8h)
020A:F4FB  8A 1E 5D0A				mov	bl,byte ptr ds:[5D0Ah]	; (CD01:5D0A=46h)
020A:F4FF  A3 5CF3				mov	word ptr ds:[5CF3h],ax	; (CD01:5CF3=0D68Bh)
020A:F502  88 1E 5CF5				mov	byte ptr ds:[5CF5h],bl	; (CD01:5CF5=0E8h)
020A:F506  A3 5D45				mov	word ptr ds:[5D45h],ax	; (CD01:5D45=50ECh)
020A:F509  88 1E 5D47				mov	byte ptr ds:[5D47h],bl	; (CD01:5D47=1Eh)
020A:F50D  A3 5E7A				mov	word ptr ds:[5E7Ah],ax	; (CD01:5E7A=0BF07h)
020A:F510  88 1E 5E7C				mov	byte ptr ds:[5E7Ch],bl	; (CD01:5E7C=95h)
020A:F514  A3 6738				mov	word ptr ds:[6738h],ax	; (CD01:6738=174h)
020A:F517  88 1E 673A				mov	byte ptr ds:[673Ah],bl	; (CD01:673A=40h)
020A:F51B  A3 6723				mov	word ptr ds:[6723h],ax	; (CD01:6723=6600h)
020A:F51E  88 1E 6725				mov	byte ptr ds:[6725h],bl	; (CD01:6725=9Dh)
020A:F522  F6 06 35E5 01			test	byte ptr ds:[35E5h],1	; (CD01:35E5=0)
020A:F527  74 30				jz	loc_2498		; Jump if zero
020A:F529  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (CD01:35E6=0)
020A:F52E  74 29				je	loc_2498		; Jump if equal
020A:F530  26: 8B 04				mov	ax,es:[si]
020A:F533  BD 5CFC				mov	bp,5CFCh
020A:F536  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020A:F53B  45					inc	bp
020A:F53C  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:F53C  9A					db	9Ah
020A:F53D  021C 14FC				dw	21Ch, 14FCh
020A:F541  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:F546  BD 672C				mov	bp,672Ch
020A:F549  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020A:F54E  45					inc	bp
020A:F54F  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:F54F  9A					db	9Ah
020A:F550  021C 14FC				dw	21Ch, 14FCh
020A:F554  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:F559			loc_2498:
020A:F559  80 26 35EE FB			and	byte ptr ds:[35EEh],0FBh	; (CD01:35EE=0)
020A:F55E  26: F6 44 0E 01			test	byte ptr es:[si+0Eh],1
020A:F563  74 05				jz	loc_2499		; Jump if zero
020A:F565  80 0E 35EE 04			or	byte ptr ds:[35EEh],4	; (CD01:35EE=0)
020A:F56A			loc_2499:
020A:F56A  26: 8B 44 0F				mov	ax,es:[si+0Fh]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 497

020A:F56E  2E: A3 38B9				mov	cs:data_506,ax		; (020A:38B9=3040h)
020A:F572  26: 8B 44 11				mov	ax,es:[si+11h]
020A:F576  2E: A3 38B5				mov	cs:data_504,ax		; (020A:38B5=477h)
020A:F57A  26: 8B 44 13				mov	ax,es:[si+13h]
020A:F57E  2E: A3 38B7				mov	cs:data_505,ax		; (020A:38B7=6FEh)
020A:F582  A0 53D4				mov	al,byte ptr ds:[53D4h]	; (CD01:53D4=0E8h)
020A:F585  A2 53D5				mov	byte ptr ds:[53D5h],al	; (CD01:53D5=0A3h)
020A:F588  B4 07				mov	ah,7
020A:F58A  E8 612F		;*		call	sub_58			;*(56BC)
020A:F58A  E8 2F 61				db	0E8h, 2Fh, 61h
020A:F58D  E8 5D9C				call	sub_48			; (532C)
020A:F590  E8 7ACA				call	sub_95			; (705D)
020A:F593  80 3E 303F 00			cmp	byte ptr ds:[303Fh],0	; (CD01:303F=0)
020A:F598  74 02				je	loc_2500		; Jump if equal
020A:F59A  EB 05				jmp	short loc_2501		; (F5A1)
020A:F59C			loc_2500:
020A:F59C  9A 14FC:6320		;*		call	far ptr sub_238		;*(14FC:6320)
020A:F59C  9A					db	9Ah
020A:F59D  6320 14FC				dw	6320h, 14FCh
020A:F5A1			loc_2501:
020A:F5A1  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F5A6  75 48				jne	loc_2506		; Jump if not equal
020A:F5A8  80 3E 303F 00			cmp	byte ptr ds:[303Fh],0	; (CD01:303F=0)
020A:F5AD  75 41				jne	loc_2506		; Jump if not equal
020A:F5AF  B4 3C				mov	ah,3Ch			; '<'
020A:F5B1  BA 3233				mov	dx,3233h
020A:F5B4  80 3E 3234 3A			cmp	byte ptr ds:[3234h],3Ah	; (CD01:3234=0) ':'
020A:F5B9  74 03				je	loc_2502		; Jump if equal
020A:F5BB  BA 3231				mov	dx,3231h
020A:F5BE			loc_2502:
020A:F5BE  B9 0000				mov	cx,0
020A:F5C1  CD 21				int	21h			; DOS Services  ah=function 3Ch
										;  create/truncate file @ ds:dx
020A:F5C3  73 03				jnc	loc_2503		; Jump if carry=0
020A:F5C5  E9 75A1				jmp	loc_933			; (6B69)
020A:F5C8			loc_2503:
020A:F5C8  A3 327B				mov	word ptr ds:[327Bh],ax	; (CD01:327B=0)
020A:F5CB  80 3E 439D 00			cmp	byte ptr ds:[439Dh],0	; (CD01:439D=0)
020A:F5D0  74 1E				je	loc_2506		; Jump if equal
020A:F5D2  B4 3D				mov	ah,3Dh			; '='
020A:F5D4  B0 00				mov	al,0
020A:F5D6  BA 43EA				mov	dx,43EAh
020A:F5D9  80 3E 43ED 3A			cmp	byte ptr ds:[43EDh],3Ah	; (CD01:43ED=0) ':'
020A:F5DE  75 03				jne	loc_2504		; Jump if not equal
020A:F5E0  BA 43EC				mov	dx,43ECh
020A:F5E3			loc_2504:
020A:F5E3  B9 0000				mov	cx,0
020A:F5E6  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:F5E8  73 03				jnc	loc_2505		; Jump if carry=0
020A:F5EA  E9 7586				jmp	loc_934			; (6B73)
020A:F5ED			loc_2505:
020A:F5ED  A3 4150				mov	word ptr ds:[4150h],ax	; (CD01:4150=1282h)
020A:F5F0			loc_2506:
020A:F5F0  E8 7A6A				call	sub_95			; (705D)
020A:F5F3  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F5F8  74 02				je	loc_2507		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 498

020A:F5FA  EB 05				jmp	short loc_2508		; (F601)
020A:F5FC			loc_2507:
020A:F5FC  9A 14FC:6420		;*		call	far ptr sub_239		;*(14FC:6420)
020A:F5FC  9A					db	9Ah
020A:F5FD  6420 14FC				dw	6420h, 14FCh
020A:F601			loc_2508:
020A:F601  C7 06 2B39 0023			mov	word ptr ds:[2B39h],23h	; (CD01:2B39=0)
020A:F607  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F607  9A					db	9Ah
020A:F608  2C58 14FC				dw	2C58h, 14FCh
020A:F60C  E8 7A45				call	sub_93			; (7054)
020A:F60F  9A 14FC:6BA4		;*		call	far ptr sub_242		;*(14FC:6BA4)
020A:F60F  9A					db	9Ah
020A:F610  6BA4 14FC				dw	6BA4h, 14FCh
020A:F614  9A 14FC:01DC		;*		call	far ptr sub_154		;*(14FC:01DC)
020A:F614  9A					db	9Ah
020A:F615  01DC 14FC				dw	1DCh, 14FCh
020A:F619  E8 7A41				call	sub_95			; (705D)
020A:F61C  33 C0				xor	ax,ax			; Zero register
020A:F61E  A3 307F				mov	word ptr ds:[307Fh],ax	; (CD01:307F=0)
020A:F621  A3 3081				mov	word ptr ds:[3081h],ax	; (CD01:3081=0)
020A:F624  A2 3083				mov	byte ptr ds:[3083h],al	; (CD01:3083=0)
020A:F627  A2 35A0				mov	byte ptr ds:[35A0h],al	; (CD01:35A0=0)
020A:F62A  A2 43A1				mov	byte ptr ds:[43A1h],al	; (CD01:43A1=0)
020A:F62D  A2 309E				mov	byte ptr ds:[309Eh],al	; (CD01:309E=0)
020A:F630  C7 06 40ED FFFF			mov	word ptr ds:[40EDh],0FFFFh	; (CD01:40ED=0)
020A:F636  C7 06 3447 FFFF			mov	word ptr ds:[3447h],0FFFFh	; (CD01:3447=0)
020A:F63C  B2 FF				mov	dl,0FFh
020A:F63E  E8 27DF		;*		call	sub_25			;*(1E20)
020A:F63E  E8 DF 27				db	0E8h,0DFh, 27h
020A:F641  C6 06 3459 00			mov	byte ptr ds:[3459h],0	; (CD01:3459=0)
020A:F646  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (CD01:327F=0)
020A:F64B  74 5B				je	loc_2511		; Jump if equal
020A:F64D  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:F652  74 54				je	loc_2511		; Jump if equal
020A:F654  77 3C				ja	loc_2509		; Jump if above
020A:F656  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F659  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:F65D  BA 0004				mov	dx,4
020A:F660  E8 6829				call	sub_76			; (5E8C)
020A:F663  72 43				jc	loc_2511		; Jump if carry Set
020A:F665  BA 0001				mov	dx,1
020A:F668  C6 06 4D4B 00			mov	byte ptr ds:[4D4Bh],0	; (CD01:4D4B=6)
020A:F66D  E8 681C				call	sub_76			; (5E8C)
020A:F670  72 36				jc	loc_2511		; Jump if carry Set
020A:F672  BA 0002				mov	dx,2
020A:F675  C6 06 5709 03			mov	byte ptr ds:[5709h],3	; (CD01:5709=6Bh)
020A:F67A  E8 680F				call	sub_76			; (5E8C)
020A:F67D  72 24				jc	loc_2510		; Jump if carry Set
020A:F67F  C6 06 5709 00			mov	byte ptr ds:[5709h],0	; (CD01:5709=6Bh)
020A:F684  9A 14FC:3820		;*		call	far ptr sub_194		;*(14FC:3820)
020A:F684  9A					db	9Ah
020A:F685  3820 14FC				dw	3820h, 14FCh
020A:F689  73 1D				jnc	loc_2511		; Jump if carry=0
020A:F68B  C6 06 5709 02			mov	byte ptr ds:[5709h],2	; (CD01:5709=6Bh)
020A:F690  EB 11				jmp	short loc_2510		; (F6A3)
020A:F692			loc_2509:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 499

020A:F692  C6 06 5709 01			mov	byte ptr ds:[5709h],1	; (CD01:5709=6Bh)
020A:F697  80 3E 3044 03			cmp	byte ptr ds:[3044h],3	; (CD01:3044=0)
020A:F69C  75 05				jne	loc_2510		; Jump if not equal
020A:F69E  C6 06 5709 0C			mov	byte ptr ds:[5709h],0Ch	; (CD01:5709=6Bh)
020A:F6A3			loc_2510:
020A:F6A3  C6 06 3459 05			mov	byte ptr ds:[3459h],5	; (CD01:3459=0)
020A:F6A8			loc_2511:
020A:F6A8  E8 B7B5				call	sub_131			; (AE60)
020A:F6AB  E8 BC76				call	sub_135			; (B324)
020A:F6AE  C6 06 30B8 00			mov	byte ptr ds:[30B8h],0	; (CD01:30B8=0)
020A:F6B3  F6 06 35F0 7F			test	byte ptr ds:[35F0h],7Fh	; (CD01:35F0=0)
020A:F6B8  75 18				jnz	loc_2512		; Jump if not zero
020A:F6BA  2E: C6 06 F26A 90			mov	byte ptr cs:[0F26Ah],90h	; (020A:F26A=2Ch)
020A:F6C0  2E: C6 06 F26B 90			mov	byte ptr cs:[0F26Bh],90h	; (020A:F26B=36h)
020A:F6C6  2E: C6 06 F26C 90			mov	byte ptr cs:[0F26Ch],90h	; (020A:F26C=1)
020A:F6CC  2E: C6 06 F26D 90			mov	cs:data_769,90h		; (020A:F26D=0BDh)
020A:F6D2			loc_2512:
020A:F6D2  9A 14FC:4498		;*		call	far ptr sub_207		;*(14FC:4498)
020A:F6D2  9A					db	9Ah
020A:F6D3  4498 14FC				dw	4498h, 14FCh
020A:F6D7  9A 14FC:4520		;*		call	far ptr sub_210		;*(14FC:4520)
020A:F6D7  9A					db	9Ah
020A:F6D8  4520 14FC				dw	4520h, 14FCh
020A:F6DC  9A 14FC:5CD4		;*		call	far ptr sub_232		;*(14FC:5CD4)
020A:F6DC  9A					db	9Ah
020A:F6DD  5CD4 14FC				dw	5CD4h, 14FCh
020A:F6E1  F6 06 3045 40			test	byte ptr ds:[3045h],40h	; (CD01:3045=0) '@'
020A:F6E6  74 03				jz	loc_2513		; Jump if zero
020A:F6E8  E9 2494		;*		jmp	loc_172			;*(1B7F)
020A:F6E8  E9 94 24				db	0E9h, 94h, 24h
020A:F6EB			loc_2513:
020A:F6EB  2E: 80 3E 0098 01			cmp	byte ptr cs:[98h],1	; (020A:0098=0)
020A:F6F1  74 1D				je	loc_2514		; Jump if equal
020A:F6F3  B4 0B				mov	ah,0Bh
020A:F6F5  CD 21				int	21h			; DOS Services  ah=function 0Bh
										;  if keybd char available,al=FF
020A:F6F7  0A C0				or	al,al			; Zero ?
020A:F6F9  74 26				jz	loc_2516		; Jump if zero
020A:F6FB  9A 14FC:0760		;*		call	far ptr sub_164		;*(14FC:0760)
020A:F6FB  9A					db	9Ah
020A:F6FC  0760 14FC				dw	760h, 14FCh
020A:F700  3C 1B				cmp	al,1Bh
020A:F702  74 0C				je	loc_2514		; Jump if equal
020A:F704  0C 20				or	al,20h			; ' '
020A:F706  3C 71				cmp	al,71h			; 'q'
020A:F708  74 06				je	loc_2514		; Jump if equal
020A:F70A  3C 6A				cmp	al,6Ah			; 'j'
020A:F70C  74 05				je	loc_2515		; Jump if equal
020A:F70E  EB 11				jmp	short loc_2516		; (F721)
020A:F710			loc_2514:
020A:F710  E9 749E				jmp	loc_936			; (6BB1)
020A:F713			loc_2515:
020A:F713  A1 35E9				mov	ax,word ptr ds:[35E9h]	; (CD01:35E9=0)
020A:F716  8B 1E 35EB				mov	bx,word ptr ds:[35EBh]	; (CD01:35EB=0)
020A:F71A  A3 35EB				mov	word ptr ds:[35EBh],ax	; (CD01:35EB=0)
020A:F71D  89 1E 35E9				mov	word ptr ds:[35E9h],bx	; (CD01:35E9=0)
020A:F721			loc_2516:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 500

020A:F721  A1 4E20				mov	ax,word ptr ds:[4E20h]	; (CD01:4E20=4689h)
020A:F724  21 06 4E22				and	word ptr ds:[4E22h],ax	; (CD01:4E22=5804h)
020A:F728  C7 06 4E20 FFFF			mov	word ptr ds:[4E20h],0FFFFh	; (CD01:4E20=4689h)
020A:F72E  9A 14FC:44F0		;*		call	far ptr sub_209		;*(14FC:44F0)
020A:F72E  9A					db	9Ah
020A:F72F  44F0 14FC				dw	44F0h, 14FCh
020A:F733  33 C0				xor	ax,ax			; Zero register
020A:F735  A2 309E				mov	byte ptr ds:[309Eh],al	; (CD01:309E=0)
020A:F738  A2 309F				mov	byte ptr ds:[309Fh],al	; (CD01:309F=0)
020A:F73B  A2 5709				mov	byte ptr ds:[5709h],al	; (CD01:5709=6Bh)
020A:F73E  A2 3460				mov	byte ptr ds:[3460h],al	; (CD01:3460=0)
020A:F741  A3 3461				mov	word ptr ds:[3461h],ax	; (CD01:3461=0)
020A:F744  A3 3463				mov	word ptr ds:[3463h],ax	; (CD01:3463=0)
020A:F747  80 3E 43A1 01			cmp	byte ptr ds:[43A1h],1	; (CD01:43A1=0)
020A:F74C  74 05				je	loc_2517		; Jump if equal
020A:F74E  C6 06 43A0 04			mov	byte ptr ds:[43A0h],4	; (CD01:43A0=0)
020A:F753			loc_2517:
020A:F753  F6 06 35F0 7F			test	byte ptr ds:[35F0h],7Fh	; (CD01:35F0=0)
020A:F758  75 1D				jnz	loc_2518		; Jump if not zero
020A:F75A  A2 4E04				mov	byte ptr ds:[4E04h],al	; (CD01:4E04=55h)
020A:F75D  A2 4D4C				mov	byte ptr ds:[4D4Ch],al	; (CD01:4D4C=14h)
020A:F760  A2 345D				mov	byte ptr ds:[345Dh],al	; (CD01:345D=0)
020A:F763  A2 35DE				mov	byte ptr ds:[35DEh],al	; (CD01:35DE=0)
020A:F766  A2 4E10				mov	byte ptr ds:[4E10h],al	; (CD01:4E10=0C7h)
020A:F769  A2 4E0F				mov	byte ptr ds:[4E0Fh],al	; (CD01:4E0F=8)
020A:F76C  A2 30BB				mov	byte ptr ds:[30BBh],al	; (CD01:30BB=0)
020A:F76F  A2 16AC				mov	byte ptr ds:[16ACh],al	; (CD01:16AC=0)
020A:F772  C6 06 30B8 00			mov	byte ptr ds:[30B8h],0	; (CD01:30B8=0)
020A:F777			loc_2518:
020A:F777  E8 6596				call	sub_72			; (5D10)
020A:F77A  80 3E 4E2C FE			cmp	byte ptr ds:[4E2Ch],0FEh	; (CD01:4E2C=0EAh)
020A:F77F  73 1B				jae	loc_2520		; Jump if above or =
020A:F781  33 DB				xor	bx,bx			; Zero register
020A:F783  FE 0E 4E2C				dec	byte ptr ds:[4E2Ch]	; (CD01:4E2C=0EAh)
020A:F787  74 0B				jz	loc_2519		; Jump if zero
020A:F789  78 11				js	loc_2520		; Jump if sign=1
020A:F78B  8A 26 4E28				mov	ah,byte ptr ds:[4E28h]	; (CD01:4E28=1Fh)
020A:F78F  88 26 2CCA				mov	byte ptr ds:[2CCAh],ah	; (CD01:2CCA=0)
020A:F793  43					inc	bx
020A:F794			loc_2519:
020A:F794  8A 26 4E29				mov	ah,byte ptr ds:[4E29h]	; (CD01:4E29=0E8h)
020A:F798  88 A7 2CCA				mov	byte ptr ds:[2CCAh][bx],ah	; (CD01:2CCA=0)
020A:F79C			loc_2520:
020A:F79C  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F7A1  75 25				jne	loc_2521		; Jump if not equal
020A:F7A3  BF 3280				mov	di,3280h
020A:F7A6  B0 20				mov	al,20h			; ' '
020A:F7A8  B9 2DD1				mov	cx,2DD1h
020A:F7AB  81 E9 2D1B				sub	cx,2D1Bh
020A:F7AF  FC					cld				; Clear direction
020A:F7B0  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:F7B2  E8 6F47				call	sub_81			; (66FC)
020A:F7B5  BD 2D1B				mov	bp,2D1Bh
020A:F7B8  BE 405B				mov	si,405Bh
020A:F7BB  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:F7BB  9A					db	9Ah
020A:F7BC  4160 14FC				dw	4160h, 14FCh
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 501

020A:F7C0  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F7C3  9A 14FC:021C		;*		call	far ptr sub_155		;*(14FC:021C)
020A:F7C3  9A					db	9Ah
020A:F7C4  021C 14FC				dw	21Ch, 14FCh
020A:F7C8			loc_2521:
020A:F7C8  E8 6091				call	sub_60			; (585C)
020A:F7CB  80 3E 4E2C 01			cmp	byte ptr ds:[4E2Ch],1	; (CD01:4E2C=0EAh)
020A:F7D0  75 03				jne	loc_2522		; Jump if not equal
020A:F7D2  E9 0CD8				jmp	$+0CDBh
020A:F7D5			loc_2522:
020A:F7D5  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:F7DA  76 03				jbe	loc_2523		; Jump if below or =
020A:F7DC  E9 03BD				jmp	loc_2561		; (FB9C)
020A:F7DF			loc_2523:
020A:F7DF  C7 06 2B39 0024			mov	word ptr ds:[2B39h],24h	; (CD01:2B39=0)
020A:F7E5  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:F7E5  9A					db	9Ah
020A:F7E6  2C58 14FC				dw	2C58h, 14FCh
020A:F7EA  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F7ED  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:F7F1  0B DB				or	bx,bx			; Zero ?
020A:F7F3  75 05				jnz	loc_2524		; Jump if not zero
020A:F7F5  3D 03FF				cmp	ax,3FFh
020A:F7F8  72 08				jb	loc_2525		; Jump if below
020A:F7FA			loc_2524:
020A:F7FA  BA 0004				mov	dx,4
020A:F7FD  E8 668C				call	sub_76			; (5E8C)
020A:F800  72 03				jc	loc_2526		; Jump if carry Set
020A:F802			loc_2525:
020A:F802  E9 0397				jmp	loc_2561		; (FB9C)
020A:F805			loc_2526:
020A:F805  9A 14FC:61C4		;*		call	far ptr sub_236		;*(14FC:61C4)
020A:F805  9A					db	9Ah
020A:F806  61C4 14FC				dw	61C4h, 14FCh
020A:F80A  80 0E 3083 10			or	byte ptr ds:[3083h],10h	; (CD01:3083=0)
020A:F80F  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F814  75 32				jne	loc_2528		; Jump if not equal
020A:F816  C6 06 345A 00			mov	byte ptr ds:[345Ah],0	; (CD01:345A=0)
020A:F81B  26: 8A 45 32				mov	al,es:[di+32h]
020A:F81F  A2 40E6				mov	byte ptr ds:[40E6h],al	; (CD01:40E6=0)
020A:F822  26: 8B 45 33				mov	ax,es:[di+33h]
020A:F826  A3 40E2				mov	word ptr ds:[40E2h],ax	; (CD01:40E2=0)
020A:F829  26: 8B 45 35				mov	ax,es:[di+35h]
020A:F82D  A3 40E4				mov	word ptr ds:[40E4h],ax	; (CD01:40E4=0C7h)
020A:F830  26: 8B 45 07				mov	ax,es:[di+7]
020A:F834  A3 40E7				mov	word ptr ds:[40E7h],ax	; (CD01:40E7=4100h)
020A:F837  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:F83C  75 03				jnz	loc_2527		; Jump if not zero
020A:F83E  E9 035B				jmp	loc_2561		; (FB9C)
020A:F841			loc_2527:
020A:F841  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:F846  EB 18				jmp	short loc_2529		; (F860)
020A:F848			loc_2528:
020A:F848  26: 80 65 32 FE			and	byte ptr es:[di+32h],0FEh
020A:F84D  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (CD01:2B3B=0)
020A:F852  72 0C				jb	loc_2529		; Jump if below
020A:F854  80 3E 2B37 02			cmp	byte ptr ds:[2B37h],2	; (CD01:2B37=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 502

020A:F859  75 05				jne	loc_2529		; Jump if not equal
020A:F85B  26: 80 4D 04 20			or	byte ptr es:[di+4],20h	; ' '
020A:F860			loc_2529:
020A:F860  C6 06 3459 00			mov	byte ptr ds:[3459h],0	; (CD01:3459=0)
020A:F865  33 C0				xor	ax,ax			; Zero register
020A:F867  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F86C  75 32				jne	loc_2532		; Jump if not equal
020A:F86E  26: 8A 45 06				mov	al,es:[di+6]
020A:F872  B4 16				mov	ah,16h
020A:F874  BB 003B				mov	bx,3Bh
020A:F877  BE 43A3				mov	si,43A3h
020A:F87A  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:F87A  9A					db	9Ah
020A:F87B  42AC 14FC				dw	42ACh, 14FCh
020A:F87F  72 1F				jc	loc_2532		; Jump if carry Set
020A:F881  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:F886  75 0F				jnz	loc_2530		; Jump if not zero
020A:F888  26: F6 45 05 01			test	byte ptr es:[di+5],1
020A:F88D  74 0C				jz	loc_2531		; Jump if zero
020A:F88F  26: F7 45 3B 8000			test	word ptr es:[di+3Bh],8000h
020A:F895  74 04				jz	loc_2531		; Jump if zero
020A:F897			loc_2530:
020A:F897  26: 8A 45 06				mov	al,es:[di+6]
020A:F89B			loc_2531:
020A:F89B  C6 06 43A0 06			mov	byte ptr ds:[43A0h],6	; (CD01:43A0=0)
020A:F8A0			loc_2532:
020A:F8A0  A3 439E				mov	word ptr ds:[439Eh],ax	; (CD01:439E=0)
020A:F8A3  57					push	di
020A:F8A4  26: 8A 45 04				mov	al,es:[di+4]
020A:F8A8  83 C7 09				add	di,9
020A:F8AB  24 07				and	al,7
020A:F8AD  75 51				jnz	loc_2533		; Jump if not zero
020A:F8AF  B9 35FA				mov	cx,35FAh
020A:F8B2  BB 361A				mov	bx,361Ah
020A:F8B5  2B D9				sub	bx,cx
020A:F8B7  03 DF				add	bx,di
020A:F8B9  A1 305C				mov	ax,word ptr ds:[305Ch]	; (CD01:305C=0)
020A:F8BC  26: 89 07				mov	es:[bx],ax
020A:F8BF  BB 3618				mov	bx,3618h
020A:F8C2  2B D9				sub	bx,cx
020A:F8C4  03 DF				add	bx,di
020A:F8C6  A1 305E				mov	ax,word ptr ds:[305Eh]	; (CD01:305E=0)
020A:F8C9  26: 89 07				mov	es:[bx],ax
020A:F8CC  BB 361C				mov	bx,361Ch
020A:F8CF  2B D9				sub	bx,cx
020A:F8D1  03 DF				add	bx,di
020A:F8D3  A1 3060				mov	ax,word ptr ds:[3060h]	; (CD01:3060=0)
020A:F8D6  26: 89 07				mov	es:[bx],ax
020A:F8D9  BB 361E				mov	bx,361Eh
020A:F8DC  2B D9				sub	bx,cx
020A:F8DE  03 DF				add	bx,di
020A:F8E0  A1 3062				mov	ax,word ptr ds:[3062h]	; (CD01:3062=0)
020A:F8E3  26: 89 07				mov	es:[bx],ax
020A:F8E6  BB 3620				mov	bx,3620h
020A:F8E9  2B D9				sub	bx,cx
020A:F8EB  03 DF				add	bx,di
020A:F8ED  A1 3066				mov	ax,word ptr ds:[3066h]	; (CD01:3066=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 503

020A:F8F0  26: 89 07				mov	es:[bx],ax
020A:F8F3  BB 3616				mov	bx,3616h
020A:F8F6  2B D9				sub	bx,cx
020A:F8F8  03 DF				add	bx,di
020A:F8FA  A1 3064				mov	ax,word ptr ds:[3064h]	; (CD01:3064=0)
020A:F8FD  26: 89 07				mov	es:[bx],ax
020A:F900			loc_2533:
020A:F900  BB 35FA				mov	bx,35FAh
020A:F903  B9 0029				mov	cx,29h

020A:F906			locloop_2534:
020A:F906  26: 8A 05				mov	al,es:[di]
020A:F909  88 07				mov	[bx],al
020A:F90B  47					inc	di
020A:F90C  43					inc	bx
020A:F90D  E2 F7				loop	locloop_2534		; Loop if cx > 0

020A:F90F  5F					pop	di
020A:F910  C6 06 35DD 09			mov	byte ptr ds:[35DDh],9	; (CD01:35DD=0)
020A:F915  80 3E 304B 01			cmp	byte ptr ds:[304Bh],1	; (CD01:304B=0)
020A:F91A  75 13				jne	loc_2535		; Jump if not equal
020A:F91C  C6 06 304B 00			mov	byte ptr ds:[304Bh],0	; (CD01:304B=0)
020A:F921  C6 06 35A0 00			mov	byte ptr ds:[35A0h],0	; (CD01:35A0=0)
020A:F926  B0 0E				mov	al,0Eh
020A:F928  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:F928  9A					db	9Ah
020A:F929  2280 14FC				dw	2280h, 14FCh
020A:F92D  EB 72				jmp	short loc_2539		; (F9A1)
020A:F92F			loc_2535:
020A:F92F  F6 06 35A0 04			test	byte ptr ds:[35A0h],4	; (CD01:35A0=0)
020A:F934  75 1A				jnz	loc_2537		; Jump if not zero
020A:F936  F6 06 35A0 01			test	byte ptr ds:[35A0h],1	; (CD01:35A0=0)
020A:F93B  74 64				jz	loc_2539		; Jump if zero
020A:F93D  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F940  3B 06 35A1				cmp	ax,word ptr ds:[35A1h]	; (CD01:35A1=0)
020A:F944  72 07				jb	loc_2536		; Jump if below
020A:F946  F6 06 35A0 02			test	byte ptr ds:[35A0h],2	; (CD01:35A0=0)
020A:F94B  75 03				jnz	loc_2537		; Jump if not zero
020A:F94D			loc_2536:
020A:F94D  E9 00AC				jmp	loc_2542		; (F9FC)
020A:F950			loc_2537:
020A:F950  52					push	dx
020A:F951  8A 16 309E				mov	dl,byte ptr ds:[309Eh]	; (CD01:309E=0)
020A:F955  52					push	dx
020A:F956  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:F95B  06					push	es
020A:F95C  57					push	di
020A:F95D  B2 FF				mov	dl,0FFh
020A:F95F  C6 06 309E 77			mov	byte ptr ds:[309Eh],77h	; (CD01:309E=0) 'w'
020A:F964  E8 24B9		;*		call	sub_25			;*(1E20)
020A:F964  E8 B9 24				db	0E8h,0B9h, 24h
020A:F967  5F					pop	di
020A:F968  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:F96D  9C					pushf				; Push flags
020A:F96E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:F973  5A					pop	dx
020A:F974  8E C2				mov	es,dx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 504

020A:F976  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:F97B  5A					pop	dx
020A:F97C  75 0A				jnz	loc_2538		; Jump if not zero
020A:F97E  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:F983  74 03				je	loc_2538		; Jump if equal
020A:F985  E8 7A34				call	sub_103			; (73BC)
020A:F988			loc_2538:
020A:F988  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:F98D  9D					popf				; Pop flags
020A:F98E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:F993  5A					pop	dx
020A:F994  88 16 309E				mov	byte ptr ds:[309Eh],dl	; (CD01:309E=0)
020A:F998  5A					pop	dx
020A:F999  C6 06 35A0 00			mov	byte ptr ds:[35A0h],0	; (CD01:35A0=0)
020A:F99E  E8 A893				call	sub_120			; (A234)
020A:F9A1			loc_2539:
020A:F9A1  A1 40F1				mov	ax,word ptr ds:[40F1h]	; (CD01:40F1=12h)
020A:F9A4  A3 40F3				mov	word ptr ds:[40F3h],ax	; (CD01:40F3=0C700h)
020A:F9A7  A1 40EF				mov	ax,word ptr ds:[40EFh]	; (CD01:40EF=4600h)
020A:F9AA  A3 40F1				mov	word ptr ds:[40F1h],ax	; (CD01:40F1=12h)
020A:F9AD  A1 40ED				mov	ax,word ptr ds:[40EDh]	; (CD01:40ED=0)
020A:F9B0  A3 40EF				mov	word ptr ds:[40EFh],ax	; (CD01:40EF=4600h)
020A:F9B3  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:F9B6  A3 35A1				mov	word ptr ds:[35A1h],ax	; (CD01:35A1=0)
020A:F9B9  A3 40ED				mov	word ptr ds:[40EDh],ax	; (CD01:40ED=0)
020A:F9BC  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:F9C1  75 4C				jne	loc_2543		; Jump if not equal
020A:F9C3  55					push	bp
020A:F9C4  BD 5A90				mov	bp,5A90h
020A:F9C7  26: 8A 45 05				mov	al,es:[di+5]
020A:F9CB  24 03				and	al,3
020A:F9CD  3C 01				cmp	al,1
020A:F9CF  75 1D				jne	loc_2540		; Jump if not equal
020A:F9D1  26: F7 45 3B 8000			test	word ptr es:[di+3Bh],8000h
020A:F9D7  74 15				jz	loc_2540		; Jump if zero
020A:F9D9  BE 403A				mov	si,403Ah
020A:F9DC  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:F9DC  9A					db	9Ah
020A:F9DD  4160 14FC				dw	4160h, 14FCh
020A:F9E1  BD 5A90				mov	bp,5A90h
020A:F9E4  B9 003B				mov	cx,3Bh
020A:F9E7  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:F9E7  9A					db	9Ah
020A:F9E8  2D70 14FC				dw	2D70h, 14FCh
020A:F9EC  EB 08				jmp	short loc_2541		; (F9F6)
020A:F9EE			loc_2540:
020A:F9EE  BE 4019				mov	si,4019h
020A:F9F1  9A 14FC:4160		;*		call	far ptr sub_203		;*(14FC:4160)
020A:F9F1  9A					db	9Ah
020A:F9F2  4160 14FC				dw	4160h, 14FCh
020A:F9F6			loc_2541:
020A:F9F6  5D					pop	bp
020A:F9F7  E8 3066		;*		call	sub_31			;*(2A60)
020A:F9F7  E8 66 30				db	0E8h, 66h, 30h
020A:F9FA  EB 1B				jmp	short loc_2544		; (FA17)
020A:F9FC			loc_2542:
020A:F9FC  A1 344A				mov	ax,word ptr ds:[344Ah]	; (CD01:344A=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 505

020A:F9FF  A3 3445				mov	word ptr ds:[3445h],ax	; (CD01:3445=0)
020A:FA02  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:FA05  A3 3447				mov	word ptr ds:[3447h],ax	; (CD01:3447=0)
020A:FA08  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:FA0D  74 08				je	loc_2544		; Jump if equal
020A:FA0F			loc_2543:
020A:FA0F  80 0E 35A0 01			or	byte ptr ds:[35A0h],1	; (CD01:35A0=0)
020A:FA14  E9 0185				jmp	loc_2561		; (FB9C)
020A:FA17			loc_2544:
020A:FA17  26: 8A 45 32				mov	al,es:[di+32h]
020A:FA1B  24 38				and	al,38h			; '8'
020A:FA1D  3C 38				cmp	al,38h			; '8'
020A:FA1F  75 08				jne	loc_2545		; Jump if not equal
020A:FA21  B8 001C				mov	ax,1Ch
020A:FA24  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FA24  9A					db	9Ah
020A:FA25  2280 14FC				dw	2280h, 14FCh
020A:FA29			loc_2545:
020A:FA29  55					push	bp
020A:FA2A  BD 32A0				mov	bp,32A0h
020A:FA2D  B9 003B				mov	cx,3Bh
020A:FA30  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:FA30  9A					db	9Ah
020A:FA31  2D70 14FC				dw	2D70h, 14FCh
020A:FA35  F6 06 35A0 01			test	byte ptr ds:[35A0h],1	; (CD01:35A0=0)
020A:FA3A  74 3A				jz	loc_2548		; Jump if zero
020A:FA3C  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FA41  80 3E 13E4 0C			cmp	byte ptr ds:[13E4h],0Ch	; (CD01:13E4=0)
020A:FA46  74 07				je	loc_2546		; Jump if equal
020A:FA48  80 3E 13E4 0B			cmp	byte ptr ds:[13E4h],0Bh	; (CD01:13E4=0)
020A:FA4D  75 05				jne	loc_2547		; Jump if not equal
020A:FA4F			loc_2546:
020A:FA4F  3E: C6 46 01 3A			mov	byte ptr ds:[bp+1],3Ah	; ':'
020A:FA54			loc_2547:
020A:FA54  FE 0E 43A0				dec	byte ptr ds:[43A0h]	; (CD01:43A0=0)
020A:FA58  E8 3005		;*		call	sub_31			;*(2A60)
020A:FA58  E8 05 30				db	0E8h, 05h, 30h
020A:FA5B  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:FA60  06					push	es
020A:FA61  57					push	di
020A:FA62  E8 75F8				call	sub_95			; (705D)
020A:FA65  B9 375A				mov	cx,375Ah
020A:FA68  81 E9 374D				sub	cx,374Dh
020A:FA6C  BF 32C0				mov	di,32C0h
020A:FA6F  B0 20				mov	al,20h			; ' '
020A:FA71  FC					cld				; Clear direction
020A:FA72  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:FA74  EB 6C				jmp	short loc_2554		; (FAE2)
020A:FA76			loc_2548:
020A:FA76  BD 3508				mov	bp,3508h
020A:FA79  B9 003B				mov	cx,3Bh
020A:FA7C  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:FA7C  9A					db	9Ah
020A:FA7D  2D70 14FC				dw	2D70h, 14FCh
020A:FA81  B9 3528				mov	cx,3528h
020A:FA84  2B CD				sub	cx,bp
020A:FA86  E3 0D				jcxz	loc_2550		; Jump if cx=0
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 506

020A:FA88  79 03				jns	locloop_2549		; Jump if not sign
020A:FA8A  B9 0002				mov	cx,2

020A:FA8D			locloop_2549:
020A:FA8D  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:FA92  45					inc	bp
020A:FA93  E2 F8				loop	locloop_2549		; Loop if cx > 0

020A:FA95			loc_2550:
020A:FA95  BE 3767				mov	si,3767h
020A:FA98  BD 3528				mov	bp,3528h
020A:FA9B  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020A:FAA0  74 01				je	loc_2551		; Jump if equal
020A:FAA2  45					inc	bp
020A:FAA3			loc_2551:
020A:FAA3  8A 04				mov	al,[si]
020A:FAA5  3E: 88 46 00				mov	ds:[bp],al
020A:FAA9  46					inc	si
020A:FAAA  45					inc	bp
020A:FAAB  81 FE 376C				cmp	si,376Ch
020A:FAAF  72 F2				jb	loc_2551		; Jump if below
020A:FAB1  5D					pop	bp
020A:FAB2  C6 06 35A0 01			mov	byte ptr ds:[35A0h],1	; (CD01:35A0=0)
020A:FAB7  B9 375A				mov	cx,375Ah
020A:FABA  81 E9 374D				sub	cx,374Dh
020A:FABE  BE 374D				mov	si,374Dh
020A:FAC1  26: F6 45 04 80			test	byte ptr es:[di+4],80h
020A:FAC6  74 03				jz	loc_2552		; Jump if zero
020A:FAC8  BE 375A				mov	si,375Ah
020A:FACB			loc_2552:
020A:FACB  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:FAD0  06					push	es
020A:FAD1  57					push	di
020A:FAD2  E8 7588				call	sub_95			; (705D)
020A:FAD5  BF 32C0				mov	di,32C0h
020A:FAD8  80 7D FF 20				cmp	byte ptr [di-1],20h	; ' '
020A:FADC  74 01				je	loc_2553		; Jump if equal
020A:FADE  47					inc	di
020A:FADF			loc_2553:
020A:FADF  FC					cld				; Clear direction
020A:FAE0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:FAE2			loc_2554:
020A:FAE2  E8 7578				call	sub_95			; (705D)
020A:FAE5  BE 32A0				mov	si,32A0h
020A:FAE8  BF 3424				mov	di,3424h
020A:FAEB  B9 0020				mov	cx,20h
020A:FAEE  FC					cld				; Clear direction

020A:FAEF			locloop_2555:
020A:FAEF  AC					lodsb				; String [si] to al
020A:FAF0  3C 20				cmp	al,20h			; ' '
020A:FAF2  74 07				je	loc_2556		; Jump if equal
020A:FAF4  3C 3A				cmp	al,3Ah			; ':'
020A:FAF6  74 03				je	loc_2556		; Jump if equal
020A:FAF8  AA					stosb				; Store al to es:[di]
020A:FAF9  E2 F4				loop	locloop_2555		; Loop if cx > 0

           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 507

020A:FAFB			loc_2556:
020A:FAFB  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:FAFE  BA 3280				mov	dx,3280h
020A:FB01  E8 31A0				call	sub_32			; (2CA4)
020A:FB04  80 0E 35A0 01			or	byte ptr ds:[35A0h],1	; (CD01:35A0=0)
020A:FB09  5F					pop	di
020A:FB0A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:FB0F  9C					pushf				; Push flags
020A:FB10  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:FB15  5A					pop	dx
020A:FB16  8E C2				mov	es,dx
020A:FB18  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:FB1D  5A					pop	dx
020A:FB1E  75 0A				jnz	loc_2557		; Jump if not zero
020A:FB20  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:FB25  74 03				je	loc_2557		; Jump if equal
020A:FB27  E8 7892				call	sub_103			; (73BC)
020A:FB2A			loc_2557:
020A:FB2A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:FB2F  9D					popf				; Pop flags
020A:FB30  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:FB35  BB 40C2				mov	bx,40C2h
020A:FB38  26: 8A 45 05				mov	al,es:[di+5]
020A:FB3C  25 000F				and	ax,0Fh
020A:FB3F  D7					xlat				; al=[al+[bx]] table
020A:FB40  0A C0				or	al,al			; Zero ?
020A:FB42  75 04				jnz	loc_2558		; Jump if not zero
020A:FB44  26: 8A 45 06				mov	al,es:[di+6]
020A:FB48			loc_2558:
020A:FB48  03 F8				add	di,ax
020A:FB4A  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:FB4E  26: 3B 1D				cmp	bx,es:[di]
020A:FB51  75 49				jne	loc_2561		; Jump if not equal
020A:FB53  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:FB56  26: 3B 45 02				cmp	ax,es:[di+2]
020A:FB5A  75 40				jne	loc_2561		; Jump if not equal
020A:FB5C  55					push	bp
020A:FB5D  BD 32A0				mov	bp,32A0h
020A:FB60  B9 003B				mov	cx,3Bh
020A:FB63  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:FB63  9A					db	9Ah
020A:FB64  2D70 14FC				dw	2D70h, 14FCh
020A:FB68  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FB6D  45					inc	bp
020A:FB6E  80 3E 13E4 0C			cmp	byte ptr ds:[13E4h],0Ch	; (CD01:13E4=0)
020A:FB73  74 07				je	loc_2559		; Jump if equal
020A:FB75  80 3E 13E4 0B			cmp	byte ptr ds:[13E4h],0Bh	; (CD01:13E4=0)
020A:FB7A  75 06				jne	loc_2560		; Jump if not equal
020A:FB7C			loc_2559:
020A:FB7C  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FB81  45					inc	bp
020A:FB82			loc_2560:
020A:FB82  E8 74D8				call	sub_95			; (705D)
020A:FB85  B9 3339				mov	cx,3339h
020A:FB88  2B CD				sub	cx,bp
020A:FB8A  8B FD				mov	di,bp
020A:FB8C  B0 20				mov	al,20h			; ' '
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 508

020A:FB8E  FC					cld				; Clear direction
020A:FB8F  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:FB91  BA 3280				mov	dx,3280h
020A:FB94  C6 06 43A0 04			mov	byte ptr ds:[43A0h],4	; (CD01:43A0=0)
020A:FB99  E8 3108				call	sub_32			; (2CA4)
020A:FB9C			loc_2561:
020A:FB9C  C7 06 2B39 0025			mov	word ptr ds:[2B39h],25h	; (CD01:2B39=0)
020A:FBA2  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:FBA2  9A					db	9Ah
020A:FBA3  2C58 14FC				dw	2C58h, 14FCh
020A:FBA7  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:FBAA  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:FBAE  BA 0001				mov	dx,1
020A:FBB1  C6 06 4D4B 01			mov	byte ptr ds:[4D4Bh],1	; (CD01:4D4B=6)
020A:FBB6  E8 62D3				call	sub_76			; (5E8C)
020A:FBB9  C6 06 4D4B 00			mov	byte ptr ds:[4D4Bh],0	; (CD01:4D4B=6)
020A:FBBE  72 08				jc	loc_2562		; Jump if carry Set
020A:FBC0  9A 14FC:2FC4		;*		call	far ptr sub_189		;*(14FC:2FC4)
020A:FBC0  9A					db	9Ah
020A:FBC1  2FC4 14FC				dw	2FC4h, 14FCh
020A:FBC5  E9 03FF				jmp	loc_2614		; (FFC7)
020A:FBC8			loc_2562:
020A:FBC8  26: 8A 4D 04				mov	cl,es:[di+4]
020A:FBCC  80 E1 1F				and	cl,1Fh
020A:FBCF  80 F9 1F				cmp	cl,1Fh
020A:FBD2  75 5A				jne	loc_2569		; Jump if not equal
020A:FBD4  E8 85A9				call	sub_113			; (8180)
020A:FBD7  72 15				jc	loc_2565		; Jump if carry Set
020A:FBD9			loc_2563:
020A:FBD9  BB 40C2				mov	bx,40C2h
020A:FBDC  26: 8A 45 05				mov	al,es:[di+5]
020A:FBE0  25 000F				and	ax,0Fh
020A:FBE3  D7					xlat				; al=[al+[bx]] table
020A:FBE4  0A C0				or	al,al			; Zero ?
020A:FBE6  75 04				jnz	loc_2564		; Jump if not zero
020A:FBE8  26: 8A 45 06				mov	al,es:[di+6]
020A:FBEC			loc_2564:
020A:FBEC  03 F8				add	di,ax
020A:FBEE			loc_2565:
020A:FBEE  8B 1E 40F5				mov	bx,word ptr ds:[40F5h]	; (CD01:40F5=0)
020A:FBF2  26: 3B 1D				cmp	bx,es:[di]
020A:FBF5  75 34				jne	loc_2568		; Jump if not equal
020A:FBF7  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (CD01:40F7=4B00h)
020A:FBFA  26: 3B 45 02				cmp	ax,es:[di+2]
020A:FBFE  75 2B				jne	loc_2568		; Jump if not equal
020A:FC00  50					push	ax
020A:FC01  53					push	bx
020A:FC02  BB 40C2				mov	bx,40C2h
020A:FC05  26: 8A 45 05				mov	al,es:[di+5]
020A:FC09  25 000F				and	ax,0Fh
020A:FC0C  D7					xlat				; al=[al+[bx]] table
020A:FC0D  0A C0				or	al,al			; Zero ?
020A:FC0F  75 04				jnz	loc_2566		; Jump if not zero
020A:FC11  26: 8A 45 06				mov	al,es:[di+6]
020A:FC15			loc_2566:
020A:FC15  8B E8				mov	bp,ax
020A:FC17  5B					pop	bx
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 509

020A:FC18  58					pop	ax
020A:FC19  BA FFFF				mov	dx,0FFFFh
020A:FC1C  26: 3B 1B				cmp	bx,es:[bp+di]
020A:FC1F  75 04				jne	loc_2567		; Jump if not equal
020A:FC21  26: 8B 53 02				mov	dx,es:[bp+di+2]
020A:FC25			loc_2567:
020A:FC25  89 16 4E89				mov	word ptr ds:[4E89h],dx	; (CD01:4E89=0C708h)
020A:FC29  EB 9D				jmp	short loc_2562		; (FBC8)
020A:FC2B			loc_2568:
020A:FC2B  E9 0399				jmp	loc_2614		; (FFC7)
020A:FC2E			loc_2569:
020A:FC2E  80 3E 3044 01			cmp	byte ptr ds:[3044h],1	; (CD01:3044=0)
020A:FC33  77 A4				ja	loc_2563		; Jump if above
020A:FC35  80 3E 2B36 06			cmp	byte ptr ds:[2B36h],6	; (CD01:2B36=0)
020A:FC3A  72 0A				jb	loc_2570		; Jump if below
020A:FC3C  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:FC41  74 03				jz	loc_2570		; Jump if zero
020A:FC43  E9 015A				jmp	loc_2586		; (FDA0)
020A:FC46			loc_2570:
020A:FC46  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:FC4B  75 16				jne	loc_2572		; Jump if not equal
020A:FC4D  C6 06 345A 00			mov	byte ptr ds:[345Ah],0	; (CD01:345A=0)
020A:FC52  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:FC57  75 03				jnz	loc_2571		; Jump if not zero
020A:FC59  E9 0361				jmp	loc_2613		; (FFBD)
020A:FC5C			loc_2571:
020A:FC5C  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:FC61  EB 13				jmp	short loc_2573		; (FC76)
020A:FC63			loc_2572:
020A:FC63  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (CD01:2B3B=0)
020A:FC68  72 0C				jb	loc_2573		; Jump if below
020A:FC6A  80 3E 2B37 02			cmp	byte ptr ds:[2B37h],2	; (CD01:2B37=0)
020A:FC6F  75 05				jne	loc_2573		; Jump if not equal
020A:FC71  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:FC76			loc_2573:
020A:FC76  80 0E 3083 10			or	byte ptr ds:[3083h],10h	; (CD01:3083=0)
020A:FC7B  C6 06 3459 00			mov	byte ptr ds:[3459h],0	; (CD01:3459=0)
020A:FC80  9A 14FC:4498		;*		call	far ptr sub_207		;*(14FC:4498)
020A:FC80  9A					db	9Ah
020A:FC81  4498 14FC				dw	4498h, 14FCh
020A:FC85  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:FC88  A3 3482				mov	word ptr ds:[3482h],ax	; (CD01:3482=0)
020A:FC8B  3B 06 3447				cmp	ax,word ptr ds:[3447h]	; (CD01:3447=0)
020A:FC8F  75 7E				jne	loc_2580		; Jump if not equal
020A:FC91  A1 344A				mov	ax,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:FC94  3B 06 3445				cmp	ax,word ptr ds:[3445h]	; (CD01:3445=0)
020A:FC98  75 75				jne	loc_2580		; Jump if not equal
020A:FC9A  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:FC9F  06					push	es
020A:FCA0  BE 3424				mov	si,3424h
020A:FCA3  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:FCA8  75 1F				jnz	loc_2574		; Jump if not zero
020A:FCAA  26: F6 45 05 01			test	byte ptr es:[di+5],1
020A:FCAF  74 33				jz	loc_2578		; Jump if zero
020A:FCB1  26: F7 45 07 8000			test	word ptr es:[di+7],8000h
020A:FCB7  74 2B				jz	loc_2578		; Jump if zero
020A:FCB9  26: 8B 45 07				mov	ax,es:[di+7]
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 510

020A:FCBD  57					push	di
020A:FCBE  E8 7A2B				call	sub_108			; (76EC)
020A:FCC1  B9 0020				mov	cx,20h
020A:FCC4  8B DF				mov	bx,di
020A:FCC6  5F					pop	di
020A:FCC7  EB 08				jmp	short loc_2575		; (FCD1)
020A:FCC9			loc_2574:
020A:FCC9  B9 000F				mov	cx,0Fh
020A:FCCC  8B DF				mov	bx,di
020A:FCCE  83 C3 07				add	bx,7
020A:FCD1			loc_2575:
020A:FCD1  FC					cld				; Clear direction

020A:FCD2			locloop_2576:
020A:FCD2  AC					lodsb				; String [si] to al
020A:FCD3  26: 3A 07				cmp	al,es:[bx]
020A:FCD6  75 0C				jne	loc_2578		; Jump if not equal
020A:FCD8  3C 20				cmp	al,20h			; ' '
020A:FCDA  74 03				je	loc_2577		; Jump if equal
020A:FCDC  43					inc	bx
020A:FCDD  E2 F3				loop	locloop_2576		; Loop if cx > 0

020A:FCDF			loc_2577:
020A:FCDF  C6 06 3449 01			mov	byte ptr ds:[3449h],1	; (CD01:3449=0)
020A:FCE4			loc_2578:
020A:FCE4  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:FCE9  9C					pushf				; Push flags
020A:FCEA  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:FCEF  5A					pop	dx
020A:FCF0  8E C2				mov	es,dx
020A:FCF2  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:FCF7  5A					pop	dx
020A:FCF8  75 0A				jnz	loc_2579		; Jump if not zero
020A:FCFA  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:FCFF  74 03				je	loc_2579		; Jump if equal
020A:FD01  E8 76B8				call	sub_103			; (73BC)
020A:FD04			loc_2579:
020A:FD04  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:FD09  9D					popf				; Pop flags
020A:FD0A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:FD0F			loc_2580:
020A:FD0F  89 3E 3484				mov	word ptr ds:[3484h],di	; (CD01:3484=0)
020A:FD13  89 3E 3486				mov	word ptr ds:[3486h],di	; (CD01:3486=0)
020A:FD17  80 3E 3449 01			cmp	byte ptr ds:[3449h],1	; (CD01:3449=0)
020A:FD1C  75 02				jne	loc_2581		; Jump if not equal
020A:FD1E  EB 6D				jmp	short loc_2584		; (FD8D)
020A:FD20			loc_2581:
020A:FD20  26: F6 45 05 30			test	byte ptr es:[di+5],30h	; '0'
020A:FD25  74 49				jz	loc_2582		; Jump if zero
020A:FD27  C6 06 309E 00			mov	byte ptr ds:[309Eh],0	; (CD01:309E=0)
020A:FD2C  B2 FF				mov	dl,0FFh
020A:FD2E  E8 20EF		;*		call	sub_25			;*(1E20)
020A:FD2E  E8 EF 20				db	0E8h,0EFh, 20h
020A:FD31  B8 FFFF				mov	ax,0FFFFh
020A:FD34  A3 3482				mov	word ptr ds:[3482h],ax	; (CD01:3482=0)
020A:FD37  A3 3476				mov	word ptr ds:[3476h],ax	; (CD01:3476=0)
020A:FD3A  A3 3478				mov	word ptr ds:[3478h],ax	; (CD01:3478=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 511

020A:FD3D  A3 346A				mov	word ptr ds:[346Ah],ax	; (CD01:346A=0)
020A:FD40  A3 346C				mov	word ptr ds:[346Ch],ax	; (CD01:346C=0)
020A:FD43  26: 8B 05				mov	ax,es:[di]
020A:FD46  3B 06 304C				cmp	ax,word ptr ds:[304Ch]	; (CD01:304C=0)
020A:FD4A  75 24				jne	loc_2582		; Jump if not equal
020A:FD4C  26: 8B 45 02				mov	ax,es:[di+2]
020A:FD50  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (CD01:304E=0)
020A:FD54  75 1A				jne	loc_2582		; Jump if not equal
020A:FD56  F7 06 4E22 1000			test	word ptr ds:[4E22h],1000h	; (CD01:4E22=5804h)
020A:FD5C  75 12				jnz	loc_2582		; Jump if not zero
020A:FD5E  A1 3039				mov	ax,word ptr ds:[3039h]	; (CD01:3039=0)
020A:FD61  0B C0				or	ax,ax			; Zero ?
020A:FD63  74 0B				jz	loc_2582		; Jump if zero
020A:FD65  A3 361A				mov	word ptr ds:[361Ah],ax	; (CD01:361A=0)
020A:FD68  A3 3618				mov	word ptr ds:[3618h],ax	; (CD01:3618=0)
020A:FD6B  C6 06 35DD 07			mov	byte ptr ds:[35DDh],7	; (CD01:35DD=0)
020A:FD70			loc_2582:
020A:FD70  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020A:FD75  74 16				jz	loc_2584		; Jump if zero
020A:FD77  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:FD7C  75 07				jnz	loc_2583		; Jump if not zero
020A:FD7E  B0 1B				mov	al,1Bh
020A:FD80  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FD80  9A					db	9Ah
020A:FD81  2280 14FC				dw	2280h, 14FCh
020A:FD85			loc_2583:
020A:FD85  E8 8160				call	sub_111			; (7EE8)
020A:FD88  C6 06 35DD 04			mov	byte ptr ds:[35DDh],4	; (CD01:35DD=0)
020A:FD8D			loc_2584:
020A:FD8D  9A 14FC:55E4		;*		call	far ptr sub_224		;*(14FC:55E4)
020A:FD8D  9A					db	9Ah
020A:FD8E  55E4 14FC				dw	55E4h, 14FCh
020A:FD92  73 05				jnc	loc_2585		; Jump if carry=0
020A:FD94  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (CD01:345C=0)
020A:FD99			loc_2585:
020A:FD99  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:FD9E  74 03				je	loc_2587		; Jump if equal
020A:FDA0			loc_2586:
020A:FDA0  E9 021A				jmp	loc_2613		; (FFBD)
020A:FDA3			loc_2587:
020A:FDA3  57					push	di
020A:FDA4  2E: FF 36 38A3			push	cs:data_495		; (020A:38A3=6C7h)
020A:FDA9  06					push	es
020A:FDAA  E8 72B0				call	sub_95			; (705D)
020A:FDAD  BF 3280				mov	di,3280h
020A:FDB0  B9 2DD1				mov	cx,2DD1h
020A:FDB3  81 E9 2D1B				sub	cx,2D1Bh
020A:FDB7  B0 20				mov	al,20h			; ' '
020A:FDB9  FC					cld				; Clear direction
020A:FDBA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:FDBC  BE 2D1B				mov	si,2D1Bh
020A:FDBF  BF 3280				mov	di,3280h
020A:FDC2  B9 0009				mov	cx,9
020A:FDC5  FC					cld				; Clear direction
020A:FDC6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:FDC8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:FDCD  9C					pushf				; Push flags
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 512

020A:FDCE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:FDD3  5A					pop	dx
020A:FDD4  8E C2				mov	es,dx
020A:FDD6  2E: 3B 16 38A1			cmp	dx,cs:data_494		; (020A:38A1=2619h)
020A:FDDB  5A					pop	dx
020A:FDDC  75 0A				jnz	loc_2588		; Jump if not zero
020A:FDDE  2E: 3B 16 38A3			cmp	dx,cs:data_495		; (020A:38A3=6C7h)
020A:FDE3  74 03				je	loc_2588		; Jump if equal
020A:FDE5  E8 75D4				call	sub_103			; (73BC)
020A:FDE8			loc_2588:
020A:FDE8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:FDED  9D					popf				; Pop flags
020A:FDEE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:FDF3  5F					pop	di
020A:FDF4  26: F6 45 06 FF			test	byte ptr es:[di+6],0FFh
020A:FDF9  74 07				jz	loc_2589		; Jump if zero
020A:FDFB  B0 03				mov	al,3
020A:FDFD  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FDFD  9A					db	9Ah
020A:FDFE  2280 14FC				dw	2280h, 14FCh
020A:FE02			loc_2589:
020A:FE02  33 C0				xor	ax,ax			; Zero register
020A:FE04  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (CD01:2B3C=0)
020A:FE09  75 32				jne	loc_2592		; Jump if not equal
020A:FE0B  26: 8A 45 06				mov	al,es:[di+6]
020A:FE0F  B4 11				mov	ah,11h
020A:FE11  BB 0007				mov	bx,7
020A:FE14  BE 43A3				mov	si,43A3h
020A:FE17  9A 14FC:42AC		;*		call	far ptr sub_206		;*(14FC:42AC)
020A:FE17  9A					db	9Ah
020A:FE18  42AC 14FC				dw	42ACh, 14FCh
020A:FE1C  72 1F				jc	loc_2592		; Jump if carry Set
020A:FE1E  26: F6 45 05 02			test	byte ptr es:[di+5],2
020A:FE23  75 0F				jnz	loc_2590		; Jump if not zero
020A:FE25  26: F6 45 05 01			test	byte ptr es:[di+5],1
020A:FE2A  74 0C				jz	loc_2591		; Jump if zero
020A:FE2C  26: F7 45 07 8000			test	word ptr es:[di+7],8000h
020A:FE32  74 04				jz	loc_2591		; Jump if zero
020A:FE34			loc_2590:
020A:FE34  26: 8A 45 06				mov	al,es:[di+6]
020A:FE38			loc_2591:
020A:FE38  C6 06 43A0 01			mov	byte ptr ds:[43A0h],1	; (CD01:43A0=0)
020A:FE3D			loc_2592:
020A:FE3D  A3 439E				mov	word ptr ds:[439Eh],ax	; (CD01:439E=0)
020A:FE40  80 3E 3449 01			cmp	byte ptr ds:[3449h],1	; (CD01:3449=0)
020A:FE45  75 12				jne	loc_2594		; Jump if not equal
020A:FE47  C6 06 3449 00			mov	byte ptr ds:[3449h],0	; (CD01:3449=0)
020A:FE4C  F6 06 4E7F 02			test	byte ptr ds:[4E7Fh],2	; (CD01:4E7F=8Bh)
020A:FE51  74 03				jz	loc_2593		; Jump if zero
020A:FE53  E9 015F				jmp	loc_2612		; (FFB5)
020A:FE56			loc_2593:
020A:FE56  E9 0164				jmp	loc_2613		; (FFBD)
020A:FE59			loc_2594:
020A:FE59  BD 32A0				mov	bp,32A0h
020A:FE5C  B9 0007				mov	cx,7
020A:FE5F  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:FE5F  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 513

020A:FE60  2D70 14FC				dw	2D70h, 14FCh
020A:FE64  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:FE69  75 0D				jnz	loc_2596		; Jump if not zero
020A:FE6B  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020A:FE70  74 03				jz	loc_2595		; Jump if zero
020A:FE72  E9 0085				jmp	loc_2602		; (FEFA)
020A:FE75			loc_2595:
020A:FE75  E9 0125				jmp	loc_2610		; (FF9D)
020A:FE78			loc_2596:
020A:FE78  80 3E 304B 01			cmp	byte ptr ds:[304Bh],1	; (CD01:304B=0)
020A:FE7D  75 26				jne	loc_2598		; Jump if not equal
020A:FE7F  26: 8B 05				mov	ax,es:[di]
020A:FE82  3B 06 304C				cmp	ax,word ptr ds:[304Ch]	; (CD01:304C=0)
020A:FE86  75 0A				jne	loc_2597		; Jump if not equal
020A:FE88  26: 8B 45 02				mov	ax,es:[di+2]
020A:FE8C  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (CD01:304E=0)
020A:FE90  74 13				je	loc_2598		; Jump if equal
020A:FE92			loc_2597:
020A:FE92  C6 06 304B 00			mov	byte ptr ds:[304Bh],0	; (CD01:304B=0)
020A:FE97  C6 06 35A0 00			mov	byte ptr ds:[35A0h],0	; (CD01:35A0=0)
020A:FE9C  B0 0E				mov	al,0Eh
020A:FE9E  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FE9E  9A					db	9Ah
020A:FE9F  2280 14FC				dw	2280h, 14FCh
020A:FEA3  EB 0F				jmp	short loc_2599		; (FEB4)
020A:FEA5			loc_2598:
020A:FEA5  F6 06 35A0 05			test	byte ptr ds:[35A0h],5	; (CD01:35A0=0)
020A:FEAA  74 08				jz	loc_2599		; Jump if zero
020A:FEAC  C6 06 35A0 00			mov	byte ptr ds:[35A0h],0	; (CD01:35A0=0)
020A:FEB1  E8 A380				call	sub_120			; (A234)
020A:FEB4			loc_2599:
020A:FEB4  26: F6 45 04 1F			test	byte ptr es:[di+4],1Fh
020A:FEB9  74 07				jz	loc_2600		; Jump if zero
020A:FEBB  B0 1B				mov	al,1Bh
020A:FEBD  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FEBD  9A					db	9Ah
020A:FEBE  2280 14FC				dw	2280h, 14FCh
020A:FEC2			loc_2600:
020A:FEC2  26: 8B 05				mov	ax,es:[di]
020A:FEC5  3B 06 304C				cmp	ax,word ptr ds:[304Ch]	; (CD01:304C=0)
020A:FEC9  75 2F				jne	loc_2602		; Jump if not equal
020A:FECB  26: 8B 45 02				mov	ax,es:[di+2]
020A:FECF  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (CD01:304E=0)
020A:FED3  75 25				jne	loc_2602		; Jump if not equal
020A:FED5  80 3E 4E06 01			cmp	byte ptr ds:[4E06h],1	; (CD01:4E06=0ECh)
020A:FEDA  74 03				je	loc_2601		; Jump if equal
020A:FEDC  E9 00BE				jmp	loc_2610		; (FF9D)
020A:FEDF			loc_2601:
020A:FEDF  C6 06 304B 01			mov	byte ptr ds:[304Bh],1	; (CD01:304B=0)
020A:FEE4  C6 06 4E06 00			mov	byte ptr ds:[4E06h],0	; (CD01:4E06=0ECh)
020A:FEE9  B0 10				mov	al,10h
020A:FEEB  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FEEB  9A					db	9Ah
020A:FEEC  2280 14FC				dw	2280h, 14FCh
020A:FEF0  B0 0D				mov	al,0Dh
020A:FEF2  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FEF2  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 514

020A:FEF3  2280 14FC				dw	2280h, 14FCh
020A:FEF7  E9 00A3				jmp	loc_2610		; (FF9D)
020A:FEFA			loc_2602:
020A:FEFA  26: 8A 4D 05				mov	cl,es:[di+5]
020A:FEFE  80 E1 03				and	cl,3
020A:FF01  80 F9 03				cmp	cl,3
020A:FF04  74 0F				je	loc_2603		; Jump if equal
020A:FF06  81 3E 439E 00FE			cmp	word ptr ds:[439Eh],0FEh	; (CD01:439E=0)
020A:FF0C  73 07				jae	loc_2603		; Jump if above or =
020A:FF0E  83 3E 439E 00			cmp	word ptr ds:[439Eh],0	; (CD01:439E=0)
020A:FF13  75 13				jne	loc_2604		; Jump if not equal
020A:FF15			loc_2603:
020A:FF15  B0 1A				mov	al,1Ah
020A:FF17  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FF17  9A					db	9Ah
020A:FF18  2280 14FC				dw	2280h, 14FCh
020A:FF1C  9A 14FC:3A40		;*		call	far ptr sub_196		;*(14FC:3A40)
020A:FF1C  9A					db	9Ah
020A:FF1D  3A40 14FC				dw	3A40h, 14FCh
020A:FF21  B0 29				mov	al,29h			; ')'
020A:FF23  9A 14FC:2280		;*		call	far ptr sub_175		;*(14FC:2280)
020A:FF23  9A					db	9Ah
020A:FF24  2280 14FC				dw	2280h, 14FCh
020A:FF28			loc_2604:
020A:FF28  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:FF2D  74 6E				jz	loc_2610		; Jump if zero
020A:FF2F  B9 3767				mov	cx,3767h
020A:FF32  81 E9 375A				sub	cx,375Ah
020A:FF36  BD 32C0				mov	bp,32C0h
020A:FF39  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020A:FF3E  74 01				je	loc_2605		; Jump if equal
020A:FF40  45					inc	bp
020A:FF41			loc_2605:
020A:FF41  BE 375A				mov	si,375Ah
020A:FF44  26: F6 45 05 10			test	byte ptr es:[di+5],10h
020A:FF49  75 03				jnz	locloop_2606		; Jump if not zero
020A:FF4B  BE 374D				mov	si,374Dh

020A:FF4E			locloop_2606:
020A:FF4E  8A 04				mov	al,[si]
020A:FF50  3E: 88 46 00				mov	ds:[bp],al
020A:FF54  46					inc	si
020A:FF55  45					inc	bp
020A:FF56  E2 F6				loop	locloop_2606		; Loop if cx > 0

020A:FF58  BD 3508				mov	bp,3508h
020A:FF5B  B9 0007				mov	cx,7
020A:FF5E  9A 14FC:2D70		;*		call	far ptr sub_188		;*(14FC:2D70)
020A:FF5E  9A					db	9Ah
020A:FF5F  2D70 14FC				dw	2D70h, 14FCh
020A:FF63  B9 3527				mov	cx,3527h
020A:FF66  2B CD				sub	cx,bp
020A:FF68  E3 0D				jcxz	loc_2608		; Jump if cx=0
020A:FF6A  79 03				jns	locloop_2607		; Jump if not sign
020A:FF6C  B9 0002				mov	cx,2

020A:FF6F			locloop_2607:
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 515

020A:FF6F  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:FF74  45					inc	bp
020A:FF75  E2 F8				loop	locloop_2607		; Loop if cx > 0

020A:FF77			loc_2608:
020A:FF77  BE 3767				mov	si,3767h
020A:FF7A  B9 376C				mov	cx,376Ch
020A:FF7D  81 E9 3767				sub	cx,3767h
020A:FF81  BD 3528				mov	bp,3528h
020A:FF84  3E: 80 7E FF 20			cmp	byte ptr ds:[bp-1],20h	; ' '
020A:FF89  74 01				je	locloop_2609		; Jump if equal
020A:FF8B  45					inc	bp

020A:FF8C			locloop_2609:
020A:FF8C  8A 04				mov	al,[si]
020A:FF8E  3E: 88 46 00				mov	ds:[bp],al
020A:FF92  46					inc	si
020A:FF93  45					inc	bp
020A:FF94  E2 F6				loop	locloop_2609		; Loop if cx > 0

020A:FF96  C6 06 35A0 04			mov	byte ptr ds:[35A0h],4	; (CD01:35A0=0)
020A:FF9B  EB 18				jmp	short loc_2612		; (FFB5)
020A:FF9D			loc_2610:
020A:FF9D  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:FFA2  80 3E 13E4 0C			cmp	byte ptr ds:[13E4h],0Ch	; (CD01:13E4=0)
020A:FFA7  74 07				je	loc_2611		; Jump if equal
020A:FFA9  80 3E 13E4 0B			cmp	byte ptr ds:[13E4h],0Bh	; (CD01:13E4=0)
020A:FFAE  75 05				jne	loc_2612		; Jump if not equal
020A:FFB0			loc_2611:
020A:FFB0  3E: C6 46 01 3A			mov	byte ptr ds:[bp+1],3Ah	; ':'
020A:FFB5			loc_2612:
020A:FFB5  BA 3280				mov	dx,3280h
020A:FFB8  9A 14FC:1F80		;*		call	far ptr sub_174		;*(14FC:1F80)
020A:FFB8  9A					db	9Ah
020A:FFB9  1F80 14FC				dw	1F80h, 14FCh
020A:FFBD			loc_2613:
020A:FFBD  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:FFC1  E8 74A0				call	sub_105			; (7464)
020A:FFC4  E9 FC12				jmp	loc_2563		; (FBD9)
020A:FFC7			loc_2614:
020A:FFC7  C7 06 2B39 0026			mov	word ptr ds:[2B39h],26h	; (CD01:2B39=0)
020A:FFCD  9A 14FC:2C58		;*		call	far ptr sub_187		;*(14FC:2C58)
020A:FFCD  9A					db	9Ah
020A:FFCE  2C58 14FC				dw	2C58h, 14FCh
020A:FFD2  E8 5DF7				call	sub_74			; (5DCC)
020A:FFD5  A1 344C				mov	ax,word ptr ds:[344Ch]	; (CD01:344C=0)
020A:FFD8  8B 1E 344A				mov	bx,word ptr ds:[344Ah]	; (CD01:344A=0)
020A:FFDC  BA 0002				mov	dx,2
020A:FFDF  E8 5EAA				call	sub_76			; (5E8C)
020A:FFE2  72 6A				jc	$+6Ch			; Jump if carry Set
020A:FFE4  83 3E 30C0 00			cmp	word ptr ds:[30C0h],0	; (CD01:30C0=0)
020A:FFE9  75 4D				jne	$+4Fh			; Jump if not equal
020A:FFEB  80 3E 3044 02			cmp	byte ptr ds:[3044h],2	; (CD01:3044=0)
020A:FFF0  73 40				jae	$+42h			; Jump if above or =
020A:FFF2  F6 06 3459 04			test	byte ptr ds:[3459h],4	; (CD01:3459=0)
020A:FFF7  75 23				jnz	$+25h			; Jump if not zero
020A:FFF9  83 3E 2CCA 00			cmp	word ptr ds:[2CCAh],0	; (CD01:2CCA=0)
           Temp.lst				Sourcer	v5.10   11-Sep-20  11:23 pm   Page 516

020A:FFFE  75 07				jne	$+9			; Jump if not equal

